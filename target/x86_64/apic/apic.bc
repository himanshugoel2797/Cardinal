; ModuleID = 'apic/apic.c'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-none--elf"

%struct.APIC_APLS_Data = type { i32*, i64 }

@apic_data = internal unnamed_addr global %struct.APIC_APLS_Data* null, align 8
@rollover_cnt = internal unnamed_addr global i32 0, align 4
@pit_ticks = internal global i32 0, align 4
@apic_timer_value = internal global i32 0, align 4

; Function Attrs: noredzone nounwind uwtable
define void @APIC_LockPIC() #0 {
  %1 = tail call i8 asm sideeffect "inb $1, $0", "={ax},{dx}N,~{dirflag},~{fpsr},~{flags}"(i16 33) #1, !srcloc !1
  %2 = tail call i8 asm sideeffect "inb $1, $0", "={ax},{dx}N,~{dirflag},~{fpsr},~{flags}"(i16 161) #1, !srcloc !1
  tail call void asm sideeffect "outb $1, $0", "{dx}N,{ax},~{dirflag},~{fpsr},~{flags}"(i16 32, i8 17) #1, !srcloc !2
  tail call void asm sideeffect "outb $1, $0", "{dx}N,{ax},~{dirflag},~{fpsr},~{flags}"(i16 160, i8 17) #1, !srcloc !2
  tail call void asm sideeffect "outb $1, $0", "{dx}N,{ax},~{dirflag},~{fpsr},~{flags}"(i16 33, i8 32) #1, !srcloc !2
  tail call void asm sideeffect "outb $1, $0", "{dx}N,{ax},~{dirflag},~{fpsr},~{flags}"(i16 161, i8 40) #1, !srcloc !2
  tail call void asm sideeffect "outb $1, $0", "{dx}N,{ax},~{dirflag},~{fpsr},~{flags}"(i16 33, i8 4) #1, !srcloc !2
  tail call void asm sideeffect "outb $1, $0", "{dx}N,{ax},~{dirflag},~{fpsr},~{flags}"(i16 161, i8 2) #1, !srcloc !2
  tail call void asm sideeffect "outb $1, $0", "{dx}N,{ax},~{dirflag},~{fpsr},~{flags}"(i16 33, i8 1) #1, !srcloc !2
  tail call void asm sideeffect "outb $1, $0", "{dx}N,{ax},~{dirflag},~{fpsr},~{flags}"(i16 161, i8 1) #1, !srcloc !2
  tail call void asm sideeffect "outb $1, $0", "{dx}N,{ax},~{dirflag},~{fpsr},~{flags}"(i16 33, i8 %1) #1, !srcloc !2
  tail call void asm sideeffect "outb $1, $0", "{dx}N,{ax},~{dirflag},~{fpsr},~{flags}"(i16 161, i8 %2) #1, !srcloc !2
  tail call void asm sideeffect "outb $1, $0", "{dx}N,{ax},~{dirflag},~{fpsr},~{flags}"(i16 33, i8 -1) #1, !srcloc !2
  tail call void asm sideeffect "outb $1, $0", "{dx}N,{ax},~{dirflag},~{fpsr},~{flags}"(i16 161, i8 -1) #1, !srcloc !2
  ret void
}

; Function Attrs: nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #1

; Function Attrs: nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #1

; Function Attrs: noredzone nounwind uwtable
define zeroext i8 @APIC_LocalInitialize() #0 {
  %h = alloca void (i32, i32)*, align 8
  %1 = bitcast void (i32, i32)** %h to i8*
  br label %9

; <label>:2                                       ; preds = %9
  %3 = call { i32, i32 } asm sideeffect "rdmsr", "={ax},={dx},{cx},~{dirflag},~{fpsr},~{flags}"(i32 27) #1, !srcloc !3
  %4 = extractvalue { i32, i32 } %3, 0
  %5 = extractvalue { i32, i32 } %3, 1
  %6 = zext i32 %4 to i64
  %7 = load %struct.APIC_APLS_Data*, %struct.APIC_APLS_Data** @apic_data, align 8, !tbaa !4
  %8 = icmp eq %struct.APIC_APLS_Data* %7, null
  br i1 %8, label %14, label %16

; <label>:9                                       ; preds = %9, %0
  %i.01 = phi i32 [ 32, %0 ], [ %13, %9 ]
  call void @llvm.lifetime.start(i64 8, i8* %1) #1
  store void (i32, i32)* null, void (i32, i32)** %h, align 8, !tbaa !4
  %10 = call i32 @GetInterruptHandler(i32 %i.01, void (i32, i32)** nonnull %h) #3
  %11 = load void (i32, i32)*, void (i32, i32)** %h, align 8, !tbaa !4
  %12 = call i32 @RegisterInterruptHandler(i32 %i.01, void (i32, i32)* %11) #3
  call void @llvm.lifetime.end(i64 8, i8* %1) #1
  %13 = add nuw nsw i32 %i.01, 1
  %exitcond = icmp eq i32 %13, 256
  br i1 %exitcond, label %2, label %9

; <label>:14                                      ; preds = %2
  %15 = call i8* @AllocateAPLSMemory(i64 16) #3
  store i8* %15, i8** bitcast (%struct.APIC_APLS_Data** @apic_data to i8**), align 8, !tbaa !4
  br label %16

; <label>:16                                      ; preds = %14, %2
  %17 = and i64 %6, 4294963200
  %18 = inttoptr i64 %17 to i8*
  %19 = call i8* @GetVirtualAddress(i32 1, i8* %18) #3
  %20 = bitcast i8* %19 to i32*
  %21 = load %struct.APIC_APLS_Data*, %struct.APIC_APLS_Data** @apic_data, align 8, !tbaa !4
  %22 = getelementptr inbounds %struct.APIC_APLS_Data, %struct.APIC_APLS_Data* %21, i64 0, i32 0
  store volatile i32* %20, i32** %22, align 8, !tbaa !8
  %23 = or i32 %4, 2048
  call void asm sideeffect "wrmsr", "{ax},{dx},{cx},~{dirflag},~{fpsr},~{flags}"(i32 %23, i32 %5, i32 27) #1, !srcloc !11
  %24 = load %struct.APIC_APLS_Data*, %struct.APIC_APLS_Data** @apic_data, align 8, !tbaa !4
  %25 = getelementptr inbounds %struct.APIC_APLS_Data, %struct.APIC_APLS_Data* %24, i64 0, i32 0
  %26 = load volatile i32*, i32** %25, align 8, !tbaa !8
  %27 = getelementptr inbounds i32, i32* %26, i64 32
  %28 = load volatile i32, i32* %27, align 4, !tbaa !12
  %29 = and i32 %28, -256
  %30 = load volatile i32*, i32** %25, align 8, !tbaa !8
  %31 = getelementptr inbounds i32, i32* %30, i64 32
  store volatile i32 %29, i32* %31, align 4, !tbaa !12
  %32 = load %struct.APIC_APLS_Data*, %struct.APIC_APLS_Data** @apic_data, align 8, !tbaa !4
  %33 = getelementptr inbounds %struct.APIC_APLS_Data, %struct.APIC_APLS_Data* %32, i64 0, i32 0
  %34 = load volatile i32*, i32** %33, align 8, !tbaa !8
  %35 = getelementptr inbounds i32, i32* %34, i64 60
  %36 = load volatile i32, i32* %35, align 4, !tbaa !12
  %37 = or i32 %36, 255
  %38 = load volatile i32*, i32** %33, align 8, !tbaa !8
  %39 = getelementptr inbounds i32, i32* %38, i64 60
  store volatile i32 %37, i32* %39, align 4, !tbaa !12
  %40 = load %struct.APIC_APLS_Data*, %struct.APIC_APLS_Data** @apic_data, align 8, !tbaa !4
  %41 = getelementptr inbounds %struct.APIC_APLS_Data, %struct.APIC_APLS_Data* %40, i64 0, i32 0
  %42 = load volatile i32*, i32** %41, align 8, !tbaa !8
  %43 = getelementptr inbounds i32, i32* %42, i64 60
  %44 = load volatile i32, i32* %43, align 4, !tbaa !12
  %45 = or i32 %44, 256
  %46 = load volatile i32*, i32** %41, align 8, !tbaa !8
  %47 = getelementptr inbounds i32, i32* %46, i64 60
  store volatile i32 %45, i32* %47, align 4, !tbaa !12
  ret i8 0
}

; Function Attrs: noredzone
declare i32 @GetInterruptHandler(i32, void (i32, i32)**) #2

; Function Attrs: noredzone
declare i32 @RegisterInterruptHandler(i32, void (i32, i32)*) #2

; Function Attrs: noredzone
declare i8* @AllocateAPLSMemory(i64) #2

; Function Attrs: noredzone
declare i8* @GetVirtualAddress(i32, i8*) #2

; Function Attrs: noredzone nounwind uwtable
define i32 @APIC_Read(i32 %reg) #0 {
  %div = lshr i32 %reg, 2
  %1 = zext i32 %div to i64
  %2 = load %struct.APIC_APLS_Data*, %struct.APIC_APLS_Data** @apic_data, align 8, !tbaa !4
  %3 = getelementptr inbounds %struct.APIC_APLS_Data, %struct.APIC_APLS_Data* %2, i64 0, i32 0
  %4 = load volatile i32*, i32** %3, align 8, !tbaa !8
  %5 = getelementptr inbounds i32, i32* %4, i64 %1
  %6 = load volatile i32, i32* %5, align 4, !tbaa !12
  ret i32 %6
}

; Function Attrs: noredzone nounwind uwtable
define void @APIC_Write(i32 %reg, i32 %val) #0 {
  %div = lshr i32 %reg, 2
  %1 = zext i32 %div to i64
  %2 = load %struct.APIC_APLS_Data*, %struct.APIC_APLS_Data** @apic_data, align 8, !tbaa !4
  %3 = getelementptr inbounds %struct.APIC_APLS_Data, %struct.APIC_APLS_Data* %2, i64 0, i32 0
  %4 = load volatile i32*, i32** %3, align 8, !tbaa !8
  %5 = getelementptr inbounds i32, i32* %4, i64 %1
  store volatile i32 %val, i32* %5, align 4, !tbaa !12
  ret void
}

; Function Attrs: noredzone nounwind uwtable
define void @APIC_SetEnableMode(i8 zeroext %enabled) #0 {
  %1 = load %struct.APIC_APLS_Data*, %struct.APIC_APLS_Data** @apic_data, align 8, !tbaa !4
  %2 = getelementptr inbounds %struct.APIC_APLS_Data, %struct.APIC_APLS_Data* %1, i64 0, i32 0
  %3 = load volatile i32*, i32** %2, align 8, !tbaa !8
  %4 = getelementptr inbounds i32, i32* %3, i64 60
  %5 = load volatile i32, i32* %4, align 4, !tbaa !12
  %6 = zext i8 %enabled to i32
  %7 = and i32 %6, 1
  %8 = sub nsw i32 0, %7
  %9 = xor i32 %5, %8
  %10 = and i32 %9, 256
  %11 = xor i32 %10, %5
  %12 = load volatile i32*, i32** %2, align 8, !tbaa !8
  %13 = getelementptr inbounds i32, i32* %12, i64 60
  store volatile i32 %11, i32* %13, align 4, !tbaa !12
  ret void
}

; Function Attrs: noredzone nounwind uwtable
define void @APIC_CallibrateTimer() #0 {
  store i32 0, i32* @rollover_cnt, align 4, !tbaa !12
  store volatile i32 -1, i32* @pit_ticks, align 4, !tbaa !12
  store volatile i32 0, i32* @apic_timer_value, align 4, !tbaa !12
  %1 = tail call i32 @RegisterInterruptHandler(i32 33, void (i32, i32)* nonnull @APIC_TimerCallibrateRollover) #3
  %2 = load %struct.APIC_APLS_Data*, %struct.APIC_APLS_Data** @apic_data, align 8, !tbaa !4
  %3 = getelementptr inbounds %struct.APIC_APLS_Data, %struct.APIC_APLS_Data* %2, i64 0, i32 0
  %4 = load volatile i32*, i32** %3, align 8, !tbaa !8
  %5 = getelementptr inbounds i32, i32* %4, i64 200
  %6 = load volatile i32, i32* %5, align 4, !tbaa !12
  %7 = or i32 %6, 33
  %8 = load volatile i32*, i32** %3, align 8, !tbaa !8
  %9 = getelementptr inbounds i32, i32* %8, i64 200
  store volatile i32 %7, i32* %9, align 4, !tbaa !12
  %10 = load %struct.APIC_APLS_Data*, %struct.APIC_APLS_Data** @apic_data, align 8, !tbaa !4
  %11 = getelementptr inbounds %struct.APIC_APLS_Data, %struct.APIC_APLS_Data* %10, i64 0, i32 0
  %12 = load volatile i32*, i32** %11, align 8, !tbaa !8
  %13 = getelementptr inbounds i32, i32* %12, i64 224
  store volatile i32 0, i32* %13, align 4, !tbaa !12
  %14 = load %struct.APIC_APLS_Data*, %struct.APIC_APLS_Data** @apic_data, align 8, !tbaa !4
  %15 = getelementptr inbounds %struct.APIC_APLS_Data, %struct.APIC_APLS_Data* %14, i64 0, i32 0
  %16 = load volatile i32*, i32** %15, align 8, !tbaa !8
  %17 = getelementptr inbounds i32, i32* %16, i64 248
  store volatile i32 3, i32* %17, align 4, !tbaa !12
  %18 = tail call i32 @RegisterInterruptHandler(i32 32, void (i32, i32)* nonnull @APIC_TimerCallibrate) #3
  %19 = load %struct.APIC_APLS_Data*, %struct.APIC_APLS_Data** @apic_data, align 8, !tbaa !4
  %20 = getelementptr inbounds %struct.APIC_APLS_Data, %struct.APIC_APLS_Data* %19, i64 0, i32 0
  %21 = load volatile i32*, i32** %20, align 8, !tbaa !8
  %22 = getelementptr inbounds i32, i32* %21, i64 224
  store volatile i32 -1, i32* %22, align 4, !tbaa !12
  %23 = load %struct.APIC_APLS_Data*, %struct.APIC_APLS_Data** @apic_data, align 8, !tbaa !4
  %24 = getelementptr inbounds %struct.APIC_APLS_Data, %struct.APIC_APLS_Data* %23, i64 0, i32 0
  %25 = load volatile i32*, i32** %24, align 8, !tbaa !8
  %26 = getelementptr inbounds i32, i32* %25, i64 200
  %27 = load volatile i32, i32* %26, align 4, !tbaa !12
  %28 = or i32 %27, 131072
  %29 = load volatile i32*, i32** %24, align 8, !tbaa !8
  %30 = getelementptr inbounds i32, i32* %29, i64 200
  store volatile i32 %28, i32* %30, align 4, !tbaa !12
  tail call void @PIT_SetEnableMode(i8 zeroext 1) #3
  %31 = load %struct.APIC_APLS_Data*, %struct.APIC_APLS_Data** @apic_data, align 8, !tbaa !4
  %32 = getelementptr inbounds %struct.APIC_APLS_Data, %struct.APIC_APLS_Data* %31, i64 0, i32 0
  %33 = load volatile i32*, i32** %32, align 8, !tbaa !8
  %34 = getelementptr inbounds i32, i32* %33, i64 200
  %35 = load volatile i32, i32* %34, align 4, !tbaa !12
  %36 = and i32 %35, -65537
  %37 = load volatile i32*, i32** %32, align 8, !tbaa !8
  %38 = getelementptr inbounds i32, i32* %37, i64 200
  store volatile i32 %36, i32* %38, align 4, !tbaa !12
  store volatile i32 0, i32* @pit_ticks, align 4, !tbaa !12
  br label %39

; <label>:39                                      ; preds = %39, %0
  %40 = load volatile i32, i32* @pit_ticks, align 4, !tbaa !12
  %41 = icmp slt i32 %40, 198
  br i1 %41, label %39, label %42

; <label>:42                                      ; preds = %39
  tail call void @PIT_SetEnableMode(i8 zeroext 0) #3
  %43 = load %struct.APIC_APLS_Data*, %struct.APIC_APLS_Data** @apic_data, align 8, !tbaa !4
  %44 = getelementptr inbounds %struct.APIC_APLS_Data, %struct.APIC_APLS_Data* %43, i64 0, i32 0
  %45 = load volatile i32*, i32** %44, align 8, !tbaa !8
  %46 = getelementptr inbounds i32, i32* %45, i64 200
  %47 = load volatile i32, i32* %46, align 4, !tbaa !12
  %48 = or i32 %47, 65536
  %49 = load volatile i32*, i32** %44, align 8, !tbaa !8
  %50 = getelementptr inbounds i32, i32* %49, i64 200
  store volatile i32 %48, i32* %50, align 4, !tbaa !12
  %51 = load i32, i32* @rollover_cnt, align 4, !tbaa !12
  %52 = load volatile i32, i32* @apic_timer_value, align 4, !tbaa !12
  %53 = xor i32 %52, -1
  %54 = sub i32 %53, %51
  %55 = zext i32 %54 to i64
  %56 = mul nuw nsw i64 %55, 19886
  %57 = udiv i64 %56, 198
  %58 = load %struct.APIC_APLS_Data*, %struct.APIC_APLS_Data** @apic_data, align 8, !tbaa !4
  %59 = getelementptr inbounds %struct.APIC_APLS_Data, %struct.APIC_APLS_Data* %58, i64 0, i32 1
  store volatile i64 %57, i64* %59, align 8, !tbaa !14
  ret void
}

; Function Attrs: noredzone nounwind uwtable
define internal void @APIC_TimerCallibrateRollover(i32 %int_no, i32 %err_code) #0 {
  %1 = icmp eq i32 %int_no, 33
  br i1 %1, label %2, label %5

; <label>:2                                       ; preds = %0
  %3 = load i32, i32* @rollover_cnt, align 4, !tbaa !12
  %4 = add i32 %3, 1
  store i32 %4, i32* @rollover_cnt, align 4, !tbaa !12
  br label %5

; <label>:5                                       ; preds = %2, %0
  ret void
}

; Function Attrs: noredzone nounwind uwtable
define void @APIC_SetVector(i32 %interrupt, i8 zeroext %vector) #0 {
  %interrupt.off = add i32 %interrupt, -800
  %1 = icmp ugt i32 %interrupt.off, 80
  br i1 %1, label %13, label %2

; <label>:2                                       ; preds = %0
  %div.i = lshr i32 %interrupt, 2
  %3 = zext i32 %div.i to i64
  %4 = load %struct.APIC_APLS_Data*, %struct.APIC_APLS_Data** @apic_data, align 8, !tbaa !4
  %5 = getelementptr inbounds %struct.APIC_APLS_Data, %struct.APIC_APLS_Data* %4, i64 0, i32 0
  %6 = load volatile i32*, i32** %5, align 8, !tbaa !8
  %7 = getelementptr inbounds i32, i32* %6, i64 %3
  %8 = load volatile i32, i32* %7, align 4, !tbaa !12
  %9 = zext i8 %vector to i32
  %10 = or i32 %8, %9
  %11 = load volatile i32*, i32** %5, align 8, !tbaa !8
  %12 = getelementptr inbounds i32, i32* %11, i64 %3
  store volatile i32 %10, i32* %12, align 4, !tbaa !12
  br label %13

; <label>:13                                      ; preds = %0, %2
  ret void
}

; Function Attrs: noredzone nounwind uwtable
define void @APIC_SetTimerValue(i32 %val) #0 {
  %1 = load %struct.APIC_APLS_Data*, %struct.APIC_APLS_Data** @apic_data, align 8, !tbaa !4
  %2 = getelementptr inbounds %struct.APIC_APLS_Data, %struct.APIC_APLS_Data* %1, i64 0, i32 0
  %3 = load volatile i32*, i32** %2, align 8, !tbaa !8
  %4 = getelementptr inbounds i32, i32* %3, i64 224
  store volatile i32 %val, i32* %4, align 4, !tbaa !12
  ret void
}

; Function Attrs: noredzone nounwind uwtable
define void @APIC_SetTimerDivisor(i8 zeroext %divisor) #0 {
  %1 = icmp ugt i8 %divisor, 16
  %div = lshr i8 %divisor, 4
  %div.divisor = select i1 %1, i8 %div, i8 %divisor
  %. = select i1 %1, i32 8, i32 0
  switch i8 %div.divisor, label %4 [
    i8 16, label %2
    i8 1, label %9
  ]

; <label>:2                                       ; preds = %0
  %3 = or i32 %., 3
  br label %9

; <label>:4                                       ; preds = %0
  %5 = zext i8 %div.divisor to i32
  %6 = lshr i32 %5, 2
  %7 = and i32 %6, 3
  %8 = or i32 %7, %.
  br label %9

; <label>:9                                       ; preds = %0, %4, %2
  %val.1 = phi i32 [ %3, %2 ], [ %8, %4 ], [ 11, %0 ]
  %10 = and i32 %val.1, 255
  %11 = load %struct.APIC_APLS_Data*, %struct.APIC_APLS_Data** @apic_data, align 8, !tbaa !4
  %12 = getelementptr inbounds %struct.APIC_APLS_Data, %struct.APIC_APLS_Data* %11, i64 0, i32 0
  %13 = load volatile i32*, i32** %12, align 8, !tbaa !8
  %14 = getelementptr inbounds i32, i32* %13, i64 248
  store volatile i32 %10, i32* %14, align 4, !tbaa !12
  ret void
}

; Function Attrs: noredzone nounwind uwtable
define internal void @APIC_TimerCallibrate(i32 %int_no, i32 %err_code) #0 {
  %1 = icmp eq i32 %int_no, 32
  br i1 %1, label %2, label %16

; <label>:2                                       ; preds = %0
  %3 = load volatile i32, i32* @pit_ticks, align 4, !tbaa !12
  %4 = icmp sgt i32 %3, -1
  br i1 %4, label %5, label %16

; <label>:5                                       ; preds = %2
  %6 = load volatile i32, i32* @pit_ticks, align 4, !tbaa !12
  %7 = add nsw i32 %6, 1
  store volatile i32 %7, i32* @pit_ticks, align 4, !tbaa !12
  %8 = load volatile i32, i32* @pit_ticks, align 4, !tbaa !12
  %9 = icmp eq i32 %8, 198
  br i1 %9, label %10, label %16

; <label>:10                                      ; preds = %5
  %11 = load %struct.APIC_APLS_Data*, %struct.APIC_APLS_Data** @apic_data, align 8, !tbaa !4
  %12 = getelementptr inbounds %struct.APIC_APLS_Data, %struct.APIC_APLS_Data* %11, i64 0, i32 0
  %13 = load volatile i32*, i32** %12, align 8, !tbaa !8
  %14 = getelementptr inbounds i32, i32* %13, i64 228
  %15 = load volatile i32, i32* %14, align 4, !tbaa !12
  store volatile i32 %15, i32* @apic_timer_value, align 4, !tbaa !12
  br label %16

; <label>:16                                      ; preds = %5, %10, %2, %0
  ret void
}

; Function Attrs: noredzone nounwind uwtable
define void @APIC_SetTimerMode(i8 zeroext %mode) #0 {
  %1 = load %struct.APIC_APLS_Data*, %struct.APIC_APLS_Data** @apic_data, align 8, !tbaa !4
  %2 = getelementptr inbounds %struct.APIC_APLS_Data, %struct.APIC_APLS_Data* %1, i64 0, i32 0
  %3 = load volatile i32*, i32** %2, align 8, !tbaa !8
  %4 = getelementptr inbounds i32, i32* %3, i64 200
  %5 = load volatile i32, i32* %4, align 4, !tbaa !12
  %6 = zext i8 %mode to i32
  %7 = shl nuw nsw i32 %6, 17
  %8 = and i32 %7, 393216
  %9 = or i32 %5, %8
  %10 = load volatile i32*, i32** %2, align 8, !tbaa !8
  %11 = getelementptr inbounds i32, i32* %10, i64 200
  store volatile i32 %9, i32* %11, align 4, !tbaa !12
  ret void
}

; Function Attrs: noredzone
declare void @PIT_SetEnableMode(i8 zeroext) #2

; Function Attrs: noredzone nounwind uwtable
define void @APIC_SetEnableInterrupt(i32 %interrupt, i32 %enableMode) #0 {
  %interrupt.off = add i32 %interrupt, -800
  %1 = icmp ugt i32 %interrupt.off, 80
  br i1 %1, label %17, label %2

; <label>:2                                       ; preds = %0
  %div.i = lshr i32 %interrupt, 2
  %3 = zext i32 %div.i to i64
  %4 = load %struct.APIC_APLS_Data*, %struct.APIC_APLS_Data** @apic_data, align 8, !tbaa !4
  %5 = getelementptr inbounds %struct.APIC_APLS_Data, %struct.APIC_APLS_Data* %4, i64 0, i32 0
  %6 = load volatile i32*, i32** %5, align 8, !tbaa !8
  %7 = getelementptr inbounds i32, i32* %6, i64 %3
  %8 = load volatile i32, i32* %7, align 4, !tbaa !12
  %9 = and i32 %enableMode, 1
  %10 = xor i32 %9, 1
  %11 = sub nsw i32 0, %10
  %12 = xor i32 %8, %11
  %13 = and i32 %12, 65536
  %14 = xor i32 %13, %8
  %15 = load volatile i32*, i32** %5, align 8, !tbaa !8
  %16 = getelementptr inbounds i32, i32* %15, i64 %3
  store volatile i32 %14, i32* %16, align 4, !tbaa !12
  br label %17

; <label>:17                                      ; preds = %0, %2
  ret void
}

; Function Attrs: noredzone nounwind uwtable
define i64 @APIC_GetTimerFrequency() #0 {
  %1 = load %struct.APIC_APLS_Data*, %struct.APIC_APLS_Data** @apic_data, align 8, !tbaa !4
  %2 = getelementptr inbounds %struct.APIC_APLS_Data, %struct.APIC_APLS_Data* %1, i64 0, i32 1
  %3 = load volatile i64, i64* %2, align 8, !tbaa !14
  ret i64 %3
}

; Function Attrs: noredzone nounwind uwtable
define void @APIC_SetDeliveryMode(i32 %interrupt, i8 zeroext %vector) #0 {
  %interrupt.off = add i32 %interrupt, -800
  %1 = icmp ugt i32 %interrupt.off, 64
  br i1 %1, label %15, label %2

; <label>:2                                       ; preds = %0
  %div.i = lshr i32 %interrupt, 2
  %3 = zext i32 %div.i to i64
  %4 = load %struct.APIC_APLS_Data*, %struct.APIC_APLS_Data** @apic_data, align 8, !tbaa !4
  %5 = getelementptr inbounds %struct.APIC_APLS_Data, %struct.APIC_APLS_Data* %4, i64 0, i32 0
  %6 = load volatile i32*, i32** %5, align 8, !tbaa !8
  %7 = getelementptr inbounds i32, i32* %6, i64 %3
  %8 = load volatile i32, i32* %7, align 4, !tbaa !12
  %9 = zext i8 %vector to i32
  %10 = shl nuw nsw i32 %9, 8
  %11 = and i32 %10, 1792
  %12 = or i32 %8, %11
  %13 = load volatile i32*, i32** %5, align 8, !tbaa !8
  %14 = getelementptr inbounds i32, i32* %13, i64 %3
  store volatile i32 %12, i32* %14, align 4, !tbaa !12
  br label %15

; <label>:15                                      ; preds = %0, %2
  ret void
}

; Function Attrs: noredzone nounwind uwtable
define void @APIC_SetTriggerMode(i32 %interrupt, i8 zeroext %vector) #0 {
  %interrupt.off = add i32 %interrupt, -848
  %1 = icmp ugt i32 %interrupt.off, 16
  br i1 %1, label %15, label %2

; <label>:2                                       ; preds = %0
  %div.i = lshr i32 %interrupt, 2
  %3 = zext i32 %div.i to i64
  %4 = load %struct.APIC_APLS_Data*, %struct.APIC_APLS_Data** @apic_data, align 8, !tbaa !4
  %5 = getelementptr inbounds %struct.APIC_APLS_Data, %struct.APIC_APLS_Data* %4, i64 0, i32 0
  %6 = load volatile i32*, i32** %5, align 8, !tbaa !8
  %7 = getelementptr inbounds i32, i32* %6, i64 %3
  %8 = load volatile i32, i32* %7, align 4, !tbaa !12
  %9 = zext i8 %vector to i32
  %10 = shl nuw nsw i32 %9, 15
  %11 = and i32 %10, 32768
  %12 = or i32 %8, %11
  %13 = load volatile i32*, i32** %5, align 8, !tbaa !8
  %14 = getelementptr inbounds i32, i32* %13, i64 %3
  store volatile i32 %12, i32* %14, align 4, !tbaa !12
  br label %15

; <label>:15                                      ; preds = %0, %2
  ret void
}

; Function Attrs: noredzone nounwind uwtable
define void @APIC_SetPolarity(i32 %interrupt, i8 zeroext %vector) #0 {
  %interrupt.off = add i32 %interrupt, -848
  %1 = icmp ugt i32 %interrupt.off, 16
  br i1 %1, label %15, label %2

; <label>:2                                       ; preds = %0
  %div.i = lshr i32 %interrupt, 2
  %3 = zext i32 %div.i to i64
  %4 = load %struct.APIC_APLS_Data*, %struct.APIC_APLS_Data** @apic_data, align 8, !tbaa !4
  %5 = getelementptr inbounds %struct.APIC_APLS_Data, %struct.APIC_APLS_Data* %4, i64 0, i32 0
  %6 = load volatile i32*, i32** %5, align 8, !tbaa !8
  %7 = getelementptr inbounds i32, i32* %6, i64 %3
  %8 = load volatile i32, i32* %7, align 4, !tbaa !12
  %9 = zext i8 %vector to i32
  %10 = shl nuw nsw i32 %9, 13
  %11 = and i32 %10, 8192
  %12 = or i32 %8, %11
  %13 = load volatile i32*, i32** %5, align 8, !tbaa !8
  %14 = getelementptr inbounds i32, i32* %13, i64 %3
  store volatile i32 %12, i32* %14, align 4, !tbaa !12
  br label %15

; <label>:15                                      ; preds = %0, %2
  ret void
}

; Function Attrs: noredzone nounwind uwtable
define i32 @APIC_GetTimerValue() #0 {
  %1 = load %struct.APIC_APLS_Data*, %struct.APIC_APLS_Data** @apic_data, align 8, !tbaa !4
  %2 = getelementptr inbounds %struct.APIC_APLS_Data, %struct.APIC_APLS_Data* %1, i64 0, i32 0
  %3 = load volatile i32*, i32** %2, align 8, !tbaa !8
  %4 = getelementptr inbounds i32, i32* %3, i64 228
  %5 = load volatile i32, i32* %4, align 4, !tbaa !12
  ret i32 %5
}

; Function Attrs: noredzone nounwind uwtable
define zeroext i8 @APIC_GetID() #0 {
  %1 = load %struct.APIC_APLS_Data*, %struct.APIC_APLS_Data** @apic_data, align 8, !tbaa !4
  %2 = getelementptr inbounds %struct.APIC_APLS_Data, %struct.APIC_APLS_Data* %1, i64 0, i32 0
  %3 = load volatile i32*, i32** %2, align 8, !tbaa !8
  %4 = getelementptr inbounds i32, i32* %3, i64 8
  %5 = load volatile i32, i32* %4, align 4, !tbaa !12
  %6 = trunc i32 %5 to i8
  ret i8 %6
}

; Function Attrs: noredzone nounwind uwtable
define void @APIC_SendEOI(i8 zeroext %int_num) #0 {
  %div = lshr i8 %int_num, 5
  %1 = zext i8 %div to i64
  %2 = shl nuw nsw i64 %1, 2
  %3 = or i64 %2, 64
  %4 = load %struct.APIC_APLS_Data*, %struct.APIC_APLS_Data** @apic_data, align 8, !tbaa !4
  %5 = getelementptr inbounds %struct.APIC_APLS_Data, %struct.APIC_APLS_Data* %4, i64 0, i32 0
  %6 = load volatile i32*, i32** %5, align 8, !tbaa !8
  %7 = getelementptr inbounds i32, i32* %6, i64 %3
  %8 = load volatile i32, i32* %7, align 4, !tbaa !12
  %9 = and i8 %int_num, 31
  %10 = zext i8 %9 to i32
  %11 = shl i32 1, %10
  %12 = and i32 %8, %11
  %13 = lshr i32 %12, %10
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %18, label %15

; <label>:15                                      ; preds = %0
  %16 = load volatile i32*, i32** %5, align 8, !tbaa !8
  %17 = getelementptr inbounds i32, i32* %16, i64 44
  store volatile i32 0, i32* %17, align 4, !tbaa !12
  br label %18

; <label>:18                                      ; preds = %0, %15
  ret void
}

; Function Attrs: noredzone nounwind uwtable
define void @APIC_SendIPI(i32 %dest, i8 zeroext %vector, i8 zeroext %delivery_mode) #0 {
  %1 = shl i32 %dest, 24
  %2 = zext i8 %delivery_mode to i32
  %3 = shl nuw nsw i32 %2, 8
  %4 = and i32 %3, 1792
  %5 = zext i8 %vector to i32
  %6 = or i32 %5, %4
  %7 = or i32 %6, 16384
  %8 = load %struct.APIC_APLS_Data*, %struct.APIC_APLS_Data** @apic_data, align 8, !tbaa !4
  %9 = getelementptr inbounds %struct.APIC_APLS_Data, %struct.APIC_APLS_Data* %8, i64 0, i32 0
  %10 = load volatile i32*, i32** %9, align 8, !tbaa !8
  %11 = getelementptr inbounds i32, i32* %10, i64 196
  store volatile i32 %1, i32* %11, align 4, !tbaa !12
  %12 = load %struct.APIC_APLS_Data*, %struct.APIC_APLS_Data** @apic_data, align 8, !tbaa !4
  %13 = getelementptr inbounds %struct.APIC_APLS_Data, %struct.APIC_APLS_Data* %12, i64 0, i32 0
  %14 = load volatile i32*, i32** %13, align 8, !tbaa !8
  %15 = getelementptr inbounds i32, i32* %14, i64 192
  store volatile i32 %7, i32* %15, align 4, !tbaa !12
  ret void
}

attributes #0 = { noredzone nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512pf,-avx512vl,-f16c,-fma,-fma4,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind }
attributes #2 = { noredzone "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512pf,-avx512vl,-f16c,-fma,-fma4,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin noredzone nounwind }

!llvm.ident = !{!0}

!0 = !{!"clang version 3.7.0 (tags/RELEASE_370/final)"}
!1 = !{i32 68437}
!2 = !{i32 68301}
!3 = !{i32 69375}
!4 = !{!5, !5, i64 0}
!5 = !{!"any pointer", !6, i64 0}
!6 = !{!"omnipotent char", !7, i64 0}
!7 = !{!"Simple C/C++ TBAA"}
!8 = !{!9, !5, i64 0}
!9 = !{!"APIC_APLS_Data", !5, i64 0, !10, i64 8}
!10 = !{!"long", !6, i64 0}
!11 = !{i32 69230}
!12 = !{!13, !13, i64 0}
!13 = !{!"int", !6, i64 0}
!14 = !{!9, !10, i64 8}
