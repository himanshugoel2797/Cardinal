; ModuleID = 'drivers/uhci/uhci.c'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-none--elf"

%struct.PCI_DeviceFuncs = type { i8, i8, i8, i16, i16, i32, i32, i32, i8, [6 x %struct.PCI_BAR], i8 }
%struct.PCI_BAR = type { i64, i32, i8 }

; Function Attrs: noredzone nounwind readonly uwtable
define zeroext i8 @UHCI_DetectController(%struct.PCI_DeviceFuncs* nocapture readonly %device) #0 {
  %1 = getelementptr inbounds %struct.PCI_DeviceFuncs, %struct.PCI_DeviceFuncs* %device, i64 0, i32 0
  %2 = load i8, i8* %1, align 1, !tbaa !1
  %3 = icmp eq i8 %2, 12
  br i1 %3, label %4, label %12

; <label>:4                                       ; preds = %0
  %5 = getelementptr inbounds %struct.PCI_DeviceFuncs, %struct.PCI_DeviceFuncs* %device, i64 0, i32 1
  %6 = load i8, i8* %5, align 1, !tbaa !7
  %7 = icmp eq i8 %6, 3
  br i1 %7, label %8, label %12

; <label>:8                                       ; preds = %4
  %9 = getelementptr inbounds %struct.PCI_DeviceFuncs, %struct.PCI_DeviceFuncs* %device, i64 0, i32 2
  %10 = load i8, i8* %9, align 1, !tbaa !8
  %11 = icmp eq i8 %10, 0
  br label %12

; <label>:12                                      ; preds = %8, %4, %0
  %13 = phi i1 [ false, %4 ], [ false, %0 ], [ %11, %8 ]
  %14 = zext i1 %13 to i8
  ret i8 %14
}

; Function Attrs: noredzone nounwind uwtable
define zeroext i8 @UHCI_InitializeController(%struct.PCI_DeviceFuncs* nocapture readonly %device) #1 {
  %1 = getelementptr inbounds %struct.PCI_DeviceFuncs, %struct.PCI_DeviceFuncs* %device, i64 0, i32 8
  %2 = load i8, i8* %1, align 1, !tbaa !9
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %.thread, label %.lr.ph.preheader

.lr.ph.preheader:                                 ; preds = %0
  %4 = zext i8 %2 to i64
  br label %.lr.ph

; <label>:5                                       ; preds = %.lr.ph
  %6 = icmp slt i64 %indvars.iv.next, %4
  br i1 %6, label %.lr.ph, label %.thread.loopexit

.lr.ph:                                           ; preds = %.lr.ph.preheader, %5
  %indvars.iv = phi i64 [ %indvars.iv.next, %5 ], [ 0, %.lr.ph.preheader ]
  %7 = getelementptr inbounds %struct.PCI_DeviceFuncs, %struct.PCI_DeviceFuncs* %device, i64 0, i32 9, i64 %indvars.iv, i32 1
  %8 = load i32, i32* %7, align 4, !tbaa !10
  %9 = icmp eq i32 %8, 32
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  br i1 %9, label %10, label %5

; <label>:10                                      ; preds = %.lr.ph
  %indvars.iv.lcssa = phi i64 [ %indvars.iv, %.lr.ph ]
  %11 = getelementptr inbounds %struct.PCI_DeviceFuncs, %struct.PCI_DeviceFuncs* %device, i64 0, i32 9, i64 %indvars.iv.lcssa, i32 0
  %12 = load i64, i64* %11, align 8, !tbaa !13
  %13 = getelementptr inbounds %struct.PCI_DeviceFuncs, %struct.PCI_DeviceFuncs* %device, i64 0, i32 9, i64 %indvars.iv.lcssa, i32 2
  %14 = load i8, i8* %13, align 1, !tbaa !14
  %15 = zext i8 %14 to i64
  %16 = and i64 %15, 1
  %17 = or i64 %16, %12
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %.thread, label %19

; <label>:19                                      ; preds = %10
  tail call void @USB_AddController(i32 0, i64 %17, i32 (i64, i32)* nonnull @UHCI_Read, void (i64, i32, i32)* nonnull @UHCI_Write) #4
  br label %.thread

.thread.loopexit:                                 ; preds = %5
  br label %.thread

.thread:                                          ; preds = %.thread.loopexit, %0, %10, %19
  %.0 = phi i8 [ 1, %19 ], [ 0, %10 ], [ 0, %0 ], [ 0, %.thread.loopexit ]
  ret i8 %.0
}

; Function Attrs: noredzone
declare void @USB_AddController(i32, i64, i32 (i64, i32)*, void (i64, i32, i32)*) #2

; Function Attrs: noredzone nounwind uwtable
define internal i32 @UHCI_Read(i64 %bar, i32 %offset) #1 {
  %1 = and i64 %bar, 1
  %2 = icmp eq i64 %1, 0
  br i1 %2, label %9, label %3

; <label>:3                                       ; preds = %0
  %4 = and i64 %bar, 65534
  %5 = zext i32 %offset to i64
  %6 = add nuw nsw i64 %5, %4
  %7 = trunc i64 %6 to i16
  %8 = tail call i32 asm sideeffect "inl $1, $0", "={ax},{dx}N,~{dirflag},~{fpsr},~{flags}"(i16 %7) #5, !srcloc !15
  br label %14

; <label>:9                                       ; preds = %0
  %10 = zext i32 %offset to i64
  %11 = add i64 %10, %bar
  %12 = inttoptr i64 %11 to i32*
  %13 = load i32, i32* %12, align 4, !tbaa !16
  br label %14

; <label>:14                                      ; preds = %9, %3
  %.0 = phi i32 [ %8, %3 ], [ %13, %9 ]
  ret i32 %.0
}

; Function Attrs: noredzone nounwind uwtable
define internal void @UHCI_Write(i64 %bar, i32 %offset, i32 %value) #1 {
  %1 = and i64 %bar, 1
  %2 = icmp eq i64 %1, 0
  br i1 %2, label %8, label %3

; <label>:3                                       ; preds = %0
  %4 = and i64 %bar, 65534
  %5 = zext i32 %offset to i64
  %6 = add nuw nsw i64 %5, %4
  %7 = trunc i64 %6 to i16
  tail call void asm sideeffect "outl $1, $0", "{dx}N,{ax},~{dirflag},~{fpsr},~{flags}"(i16 %7, i32 %value) #5, !srcloc !17
  br label %12

; <label>:8                                       ; preds = %0
  %9 = zext i32 %offset to i64
  %10 = add i64 %9, %bar
  %11 = inttoptr i64 %10 to i32*
  store i32 %value, i32* %11, align 4, !tbaa !16
  br label %12

; <label>:12                                      ; preds = %8, %3
  ret void
}

; Function Attrs: noredzone nounwind readnone uwtable
define void @UHCI_ActivationStateChange(i32 %state) #3 {
  ret void
}

attributes #0 = { noredzone nounwind readonly uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512pf,-avx512vl,-f16c,-fma,-fma4,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { noredzone nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512pf,-avx512vl,-f16c,-fma,-fma4,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noredzone "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512pf,-avx512vl,-f16c,-fma,-fma4,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noredzone nounwind readnone uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512pf,-avx512vl,-f16c,-fma,-fma4,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin noredzone nounwind }
attributes #5 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"clang version 3.7.0 (tags/RELEASE_370/final)"}
!1 = !{!2, !3, i64 0}
!2 = !{!"", !3, i64 0, !3, i64 1, !3, i64 2, !5, i64 4, !5, i64 6, !6, i64 8, !6, i64 12, !6, i64 16, !3, i64 20, !3, i64 24, !3, i64 120}
!3 = !{!"omnipotent char", !4, i64 0}
!4 = !{!"Simple C/C++ TBAA"}
!5 = !{!"short", !3, i64 0}
!6 = !{!"int", !3, i64 0}
!7 = !{!2, !3, i64 1}
!8 = !{!2, !3, i64 2}
!9 = !{!2, !3, i64 20}
!10 = !{!11, !6, i64 8}
!11 = !{!"PCI_BAR", !12, i64 0, !6, i64 8, !3, i64 12}
!12 = !{!"long", !3, i64 0}
!13 = !{!11, !12, i64 0}
!14 = !{!11, !3, i64 12}
!15 = !{i32 67007}
!16 = !{!6, !6, i64 0}
!17 = !{i32 66869}
