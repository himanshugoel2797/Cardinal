; ModuleID = 'smp/smp.c'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-none--elf"

@smp_coreCount = internal global i32 0, align 4
@smp_lock = internal global i32 0, align 4

; Function Attrs: noredzone nounwind uwtable
define void @SMP_IncrementCoreCount() #0 {
  %1 = load volatile i32, i32* @smp_coreCount, align 4, !tbaa !1
  %2 = add nsw i32 %1, 1
  store volatile i32 %2, i32* @smp_coreCount, align 4, !tbaa !1
  ret void
}

; Function Attrs: noredzone nounwind uwtable
define i32 @SMP_GetCoreCount() #0 {
  %1 = load volatile i32, i32* @smp_coreCount, align 4, !tbaa !1
  ret i32 %1
}

; Function Attrs: noredzone nounwind uwtable
define void @SMP_WaitForCoreCountIncrement() #0 {
  %curCC = alloca i32, align 4
  %1 = bitcast i32* %curCC to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1)
  %2 = load volatile i32, i32* @smp_coreCount, align 4, !tbaa !1
  store volatile i32 %2, i32* %curCC, align 4
  br label %3

; <label>:3                                       ; preds = %3, %0
  %4 = load volatile i32, i32* %curCC, align 4
  %5 = load volatile i32, i32* @smp_coreCount, align 4, !tbaa !1
  %6 = icmp eq i32 %4, %5
  br i1 %6, label %3, label %7

; <label>:7                                       ; preds = %3
  call void @llvm.lifetime.end(i64 4, i8* %1)
  ret void
}

; Function Attrs: nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #1

; Function Attrs: nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #1

; Function Attrs: noredzone nounwind uwtable
define void @SMP_LockTrampoline() #0 {
  tail call void asm sideeffect ".spin:\0A\09pause\0A\09testl $$1, ($0)\0A\09jnz .spin\0A\09lock btsl $$0, ($0)\0A\09jc .spin", "{ax},~{dirflag},~{fpsr},~{flags}"(i32* nonnull @smp_lock) #1, !srcloc !5
  ret void
}

; Function Attrs: noredzone nounwind uwtable
define void @SMP_UnlockTrampoline() #0 {
  tail call void asm sideeffect "movl $$0, ($0)", "{ax},~{dirflag},~{fpsr},~{flags}"(i32* nonnull @smp_lock) #1, !srcloc !6
  ret void
}

attributes #0 = { noredzone nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512pf,-avx512vl,-f16c,-fma,-fma4,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"clang version 3.7.0 (tags/RELEASE_370/final)"}
!1 = !{!2, !2, i64 0}
!2 = !{!"int", !3, i64 0}
!3 = !{!"omnipotent char", !4, i64 0}
!4 = !{!"Simple C/C++ TBAA"}
!5 = !{i32 452, i32 472, i32 492, i32 521, i32 545, i32 578}
!6 = !{i32 687}
