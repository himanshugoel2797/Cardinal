; ModuleID = 'hpet/hpet.c'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-none--elf"

%struct.HPET_Main = type { %struct.HPET_CapRegister, i64, %struct.HPET_ConfigRegister, i64, %struct.HPET_InterruptStatus, i64, i64, i64, %struct.HPET_Timer, %struct.HPET_Timer, %struct.HPET_Timer }
%struct.HPET_CapRegister = type { i8, i8, i16, i32 }
%struct.HPET_ConfigRegister = type { i64 }
%struct.HPET_InterruptStatus = type { i64 }
%struct.HPET_Timer = type { %struct.HPET_TimerConfigRegister, i64, i64, i64 }
%struct.HPET_TimerConfigRegister = type { i64 }

@.str = private unnamed_addr constant [5 x i8] c"HPET\00", align 1
@hpet_regs = internal unnamed_addr global %struct.HPET_Main* null, align 8

; Function Attrs: noredzone nounwind uwtable
define i32 @HPET_Initialize() #0 {
  %1 = tail call i8* @ACPITables_FindTable(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i32 0) #3
  %2 = icmp eq i8* %1, null
  br i1 %2, label %14, label %3

; <label>:3                                       ; preds = %0
  %4 = getelementptr inbounds i8, i8* %1, i64 44
  %5 = bitcast i8* %4 to i8**
  %6 = load i8*, i8** %5, align 1, !tbaa !1
  %7 = tail call i8* @GetVirtualAddress(i32 1, i8* %6) #3
  store i8* %7, i8** bitcast (%struct.HPET_Main** @hpet_regs to i8**), align 8, !tbaa !10
  %8 = getelementptr inbounds i8, i8* %7, i64 16
  %9 = bitcast i8* %8 to i64*
  %10 = load i64, i64* %9, align 1
  %11 = and i64 %10, -2
  store i64 %11, i64* %9, align 1
  %12 = load %struct.HPET_Main*, %struct.HPET_Main** @hpet_regs, align 8, !tbaa !10
  %13 = getelementptr inbounds %struct.HPET_Main, %struct.HPET_Main* %12, i64 0, i32 6
  store i64 0, i64* %13, align 1, !tbaa !12
  br label %14

; <label>:14                                      ; preds = %0, %3
  %.0 = phi i32 [ 0, %3 ], [ 1, %0 ]
  ret i32 %.0
}

; Function Attrs: noredzone
declare i8* @ACPITables_FindTable(i8*, i32) #1

; Function Attrs: noredzone
declare i8* @GetVirtualAddress(i32, i8*) #1

; Function Attrs: noredzone nounwind uwtable
define void @HPET_SetCounterEnableStatus(i8 zeroext %enableStatus) #0 {
  %1 = zext i8 %enableStatus to i64
  %2 = load %struct.HPET_Main*, %struct.HPET_Main** @hpet_regs, align 8, !tbaa !10
  %3 = getelementptr inbounds %struct.HPET_Main, %struct.HPET_Main* %2, i64 0, i32 2, i32 0
  %4 = load i64, i64* %3, align 1
  %5 = and i64 %1, 1
  %6 = and i64 %4, -2
  %7 = or i64 %6, %5
  store i64 %7, i64* %3, align 1
  ret void
}

; Function Attrs: noredzone nounwind uwtable
define void @HPET_SetCounterValue(i64 %val) #0 {
  %1 = load %struct.HPET_Main*, %struct.HPET_Main** @hpet_regs, align 8, !tbaa !10
  %2 = getelementptr inbounds %struct.HPET_Main, %struct.HPET_Main* %1, i64 0, i32 6
  store i64 %val, i64* %2, align 1, !tbaa !12
  ret void
}

; Function Attrs: noredzone nounwind readonly uwtable
define i64 @HPET_GetElapsedTime(i64 %diff) #2 {
  %1 = load %struct.HPET_Main*, %struct.HPET_Main** @hpet_regs, align 8, !tbaa !10
  %2 = getelementptr inbounds %struct.HPET_Main, %struct.HPET_Main* %1, i64 0, i32 0, i32 3
  %3 = load i32, i32* %2, align 1, !tbaa !19
  %4 = zext i32 %3 to i64
  %5 = mul i64 %4, %diff
  %6 = udiv i64 %5, 1000000
  ret i64 %6
}

; Function Attrs: noredzone nounwind readonly uwtable
define i64 @HPET_GetPeriod() #2 {
  %1 = load %struct.HPET_Main*, %struct.HPET_Main** @hpet_regs, align 8, !tbaa !10
  %2 = getelementptr inbounds %struct.HPET_Main, %struct.HPET_Main* %1, i64 0, i32 0, i32 3
  %3 = load i32, i32* %2, align 1, !tbaa !19
  %4 = udiv i32 %3, 1000000
  %5 = zext i32 %4 to i64
  ret i64 %5
}

; Function Attrs: noredzone nounwind readonly uwtable
define i64 @HPET_GetCounterValue() #2 {
  %1 = load %struct.HPET_Main*, %struct.HPET_Main** @hpet_regs, align 8, !tbaa !10
  %2 = getelementptr inbounds %struct.HPET_Main, %struct.HPET_Main* %1, i64 0, i32 6
  %3 = load i64, i64* %2, align 1, !tbaa !12
  ret i64 %3
}

attributes #0 = { noredzone nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512pf,-avx512vl,-f16c,-fma,-fma4,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { noredzone "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512pf,-avx512vl,-f16c,-fma,-fma4,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noredzone nounwind readonly uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512pf,-avx512vl,-f16c,-fma,-fma4,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin noredzone nounwind }

!llvm.ident = !{!0}

!0 = !{!"clang version 3.7.0 (tags/RELEASE_370/final)"}
!1 = !{!2, !9, i64 44}
!2 = !{!"", !3, i64 0, !4, i64 36, !4, i64 37, !4, i64 37, !4, i64 37, !4, i64 37, !7, i64 38, !8, i64 40, !4, i64 52, !7, i64 53, !4, i64 55}
!3 = !{!"", !4, i64 0, !6, i64 4, !4, i64 8, !4, i64 9, !4, i64 10, !4, i64 16, !6, i64 24, !6, i64 28, !6, i64 32}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
!6 = !{!"int", !4, i64 0}
!7 = !{!"short", !4, i64 0}
!8 = !{!"", !4, i64 0, !4, i64 1, !4, i64 2, !4, i64 3, !9, i64 4}
!9 = !{!"long", !4, i64 0}
!10 = !{!11, !11, i64 0}
!11 = !{!"any pointer", !4, i64 0}
!12 = !{!13, !9, i64 48}
!13 = !{!"", !14, i64 0, !9, i64 8, !15, i64 16, !9, i64 24, !16, i64 32, !9, i64 40, !9, i64 48, !9, i64 56, !17, i64 64, !17, i64 96, !17, i64 128}
!14 = !{!"", !4, i64 0, !4, i64 1, !4, i64 1, !4, i64 1, !4, i64 1, !7, i64 2, !6, i64 4}
!15 = !{!"", !9, i64 0, !9, i64 0, !9, i64 0}
!16 = !{!"", !9, i64 0, !9, i64 0, !9, i64 0, !9, i64 0}
!17 = !{!"", !18, i64 0, !9, i64 8, !9, i64 16, !9, i64 24}
!18 = !{!"", !9, i64 0, !9, i64 0, !9, i64 0, !9, i64 0, !9, i64 0, !9, i64 0, !9, i64 0, !9, i64 0, !9, i64 1, !9, i64 1, !9, i64 1, !9, i64 1, !9, i64 2, !9, i64 4}
!19 = !{!13, !6, i64 4}
