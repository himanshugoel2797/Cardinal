; ModuleID = 'pit/pit.c'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-none--elf"

@curFrequency = global i32 0, align 4
@pit_handlerMode = internal global i32 0, align 4
@pit_ticksToWait = internal global i32 0, align 4
@stop = internal global i32 0, align 4

; Function Attrs: noredzone nounwind uwtable
define void @PIT_SetFrequency(i8 zeroext %channel, i8 zeroext %access, i8 zeroext %mode, i8 zeroext %valType, i32 %frequency) #0 {
  %1 = udiv i32 1193180, %frequency
  %2 = udiv i32 1193180, %1
  store i32 %2, i32* @curFrequency, align 4, !tbaa !1
  %3 = and i8 %channel, 3
  %4 = and i8 %access, 3
  %5 = and i8 %valType, 1
  %6 = zext i8 %3 to i32
  %7 = shl i8 %channel, 6
  %8 = zext i8 %4 to i32
  %9 = shl nuw nsw i8 %4, 4
  %10 = or i8 %9, %7
  %11 = shl i8 %mode, 1
  %12 = and i8 %11, 14
  %13 = or i8 %10, %12
  %14 = or i8 %13, %5
  tail call void asm sideeffect "outb $1, $0", "{dx}N,{ax},~{dirflag},~{fpsr},~{flags}"(i16 67, i8 %14) #1, !srcloc !5
  %15 = and i32 %8, 1
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %21, label %17

; <label>:17                                      ; preds = %0
  %18 = trunc i32 %1 to i8
  %19 = or i32 %6, 64
  %20 = trunc i32 %19 to i16
  tail call void asm sideeffect "outb $1, $0", "{dx}N,{ax},~{dirflag},~{fpsr},~{flags}"(i16 %20, i8 %18) #1, !srcloc !5
  br label %21

; <label>:21                                      ; preds = %0, %17
  %22 = and i32 %8, 2
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %29, label %24

; <label>:24                                      ; preds = %21
  %25 = lshr i32 %1, 8
  %26 = trunc i32 %25 to i8
  %27 = or i32 %6, 64
  %28 = trunc i32 %27 to i16
  tail call void asm sideeffect "outb $1, $0", "{dx}N,{ax},~{dirflag},~{fpsr},~{flags}"(i16 %28, i8 %26) #1, !srcloc !5
  br label %29

; <label>:29                                      ; preds = %21, %24
  ret void
}

; Function Attrs: nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #1

; Function Attrs: nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #1

; Function Attrs: noredzone nounwind uwtable
define void @PIT_Sleep(i32 %interval) #0 {
  %handler = alloca void (i32, i32)*, align 8
  store volatile i32 1, i32* @pit_handlerMode, align 4, !tbaa !1
  tail call void @SetInterruptEnableMode(i32 32, i8 zeroext 0) #3
  %1 = bitcast void (i32, i32)** %handler to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1) #1
  store void (i32, i32)* null, void (i32, i32)** %handler, align 8, !tbaa !6
  %2 = call i32 @GetInterruptHandler(i32 32, void (i32, i32)** nonnull %handler) #3
  %3 = call i32 @RegisterInterruptHandler(i32 32, void (i32, i32)* nonnull @PIT_TempIntHandler) #3
  %4 = load i32, i32* @curFrequency, align 4, !tbaa !1
  %5 = mul i32 %4, %interval
  %6 = udiv i32 %5, 1000
  store volatile i32 %6, i32* @pit_ticksToWait, align 4, !tbaa !1
  call void @SetInterruptEnableMode(i32 32, i8 zeroext 1) #3
  store volatile i32 0, i32* @pit_handlerMode, align 4, !tbaa !1
  call void asm sideeffect "sti", "~{dirflag},~{fpsr},~{flags}"() #1, !srcloc !8
  store volatile i32 1, i32* @pit_handlerMode, align 4, !tbaa !1
  br label %8

.loopexit:                                        ; preds = %11
  %.continueSleep.0 = select i1 %10, i8 0, i8 %continueSleep.02
  %7 = icmp eq i8 %.continueSleep.0, 0
  store volatile i32 1, i32* @pit_handlerMode, align 4, !tbaa !1
  br i1 %7, label %13, label %8

; <label>:8                                       ; preds = %0, %.loopexit
  %continueSleep.02 = phi i8 [ 1, %0 ], [ %.continueSleep.0, %.loopexit ]
  %9 = load volatile i32, i32* @pit_ticksToWait, align 4, !tbaa !1
  %10 = icmp eq i32 %9, 0
  store volatile i32 0, i32* @pit_handlerMode, align 4, !tbaa !1
  br label %11

; <label>:11                                      ; preds = %11, %8
  %a.01 = phi i32 [ 0, %8 ], [ %12, %11 ]
  call void asm sideeffect "nop", "~{dirflag},~{fpsr},~{flags}"() #1, !srcloc !9
  call void asm sideeffect "nop", "~{dirflag},~{fpsr},~{flags}"() #1, !srcloc !10
  call void asm sideeffect "nop", "~{dirflag},~{fpsr},~{flags}"() #1, !srcloc !11
  call void asm sideeffect "nop", "~{dirflag},~{fpsr},~{flags}"() #1, !srcloc !12
  call void asm sideeffect "nop", "~{dirflag},~{fpsr},~{flags}"() #1, !srcloc !13
  %12 = add nuw nsw i32 %a.01, 1
  %exitcond = icmp eq i32 %12, 50
  br i1 %exitcond, label %.loopexit, label %11

; <label>:13                                      ; preds = %.loopexit
  call void @SetInterruptEnableMode(i32 32, i8 zeroext 0) #3
  %14 = load void (i32, i32)*, void (i32, i32)** %handler, align 8, !tbaa !6
  %15 = call i32 @RegisterInterruptHandler(i32 32, void (i32, i32)* %14) #3
  store volatile i32 1, i32* @stop, align 4, !tbaa !1
  call void @llvm.lifetime.end(i64 8, i8* %1) #1
  ret void
}

; Function Attrs: noredzone nounwind uwtable
define void @PIT_SetEnableMode(i8 zeroext %enabled) #0 {
  tail call void @SetInterruptEnableMode(i32 32, i8 zeroext %enabled) #3
  ret void
}

; Function Attrs: noredzone
declare i32 @GetInterruptHandler(i32, void (i32, i32)**) #2

; Function Attrs: noredzone
declare i32 @RegisterInterruptHandler(i32, void (i32, i32)*) #2

; Function Attrs: noredzone nounwind uwtable
define internal void @PIT_TempIntHandler(i32 %int_no, i32 %err_code) #0 {
  %1 = icmp eq i32 %int_no, 32
  br i1 %1, label %2, label %11

; <label>:2                                       ; preds = %0
  %3 = load volatile i32, i32* @pit_handlerMode, align 4, !tbaa !1
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %11

; <label>:5                                       ; preds = %2
  %6 = load volatile i32, i32* @pit_ticksToWait, align 4, !tbaa !1
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %11, label %8

; <label>:8                                       ; preds = %5
  %9 = load volatile i32, i32* @pit_ticksToWait, align 4, !tbaa !1
  %10 = add i32 %9, -1
  store volatile i32 %10, i32* @pit_ticksToWait, align 4, !tbaa !1
  br label %11

; <label>:11                                      ; preds = %5, %2, %8, %0
  ret void
}

; Function Attrs: noredzone
declare void @SetInterruptEnableMode(i32, i8 zeroext) #2

; Function Attrs: noredzone nounwind uwtable
define void @PIT_Initialize() #0 {
  store i32 19886, i32* @curFrequency, align 4, !tbaa !1
  tail call void asm sideeffect "outb $1, $0", "{dx}N,{ax},~{dirflag},~{fpsr},~{flags}"(i16 67, i8 52) #1, !srcloc !5
  tail call void asm sideeffect "outb $1, $0", "{dx}N,{ax},~{dirflag},~{fpsr},~{flags}"(i16 64, i8 60) #1, !srcloc !5
  tail call void asm sideeffect "outb $1, $0", "{dx}N,{ax},~{dirflag},~{fpsr},~{flags}"(i16 64, i8 0) #1, !srcloc !5
  ret void
}

attributes #0 = { noredzone nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512pf,-avx512vl,-f16c,-fma,-fma4,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind }
attributes #2 = { noredzone "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512pf,-avx512vl,-f16c,-fma,-fma4,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin noredzone nounwind }

!llvm.ident = !{!0}

!0 = !{!"clang version 3.7.0 (tags/RELEASE_370/final)"}
!1 = !{!2, !2, i64 0}
!2 = !{!"int", !3, i64 0}
!3 = !{!"omnipotent char", !4, i64 0}
!4 = !{!"Simple C/C++ TBAA"}
!5 = !{i32 50035}
!6 = !{!7, !7, i64 0}
!7 = !{!"any pointer", !3, i64 0}
!8 = !{i32 2190}
!9 = !{i32 2523}
!10 = !{i32 2561}
!11 = !{i32 2599}
!12 = !{i32 2637}
!13 = !{i32 2675}
