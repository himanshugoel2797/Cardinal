; ModuleID = 'syscalls/arch_prctl.c'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-none--elf"

; Function Attrs: noredzone nounwind uwtable
define i64 @ArchPrctl_Syscall(i64 %UNUSED_instruction_pointer, i64 %syscall_num, i64* nocapture readonly %syscall_params) #0 {
  %flags = alloca i32, align 4
  %flags1 = alloca i32, align 4
  %1 = icmp eq i64 %syscall_num, 158
  br i1 %1, label %2, label %49

; <label>:2                                       ; preds = %0
  %3 = getelementptr inbounds i64, i64* %syscall_params, i64 2
  %4 = load i64, i64* %3, align 8, !tbaa !1
  %5 = icmp eq i64 %4, 2
  br i1 %5, label %6, label %49

; <label>:6                                       ; preds = %2
  %7 = getelementptr inbounds i64, i64* %syscall_params, i64 1
  %8 = bitcast i64* %7 to i64**
  %9 = load i64*, i64** %8, align 8, !tbaa !7
  %10 = load i64, i64* %9, align 8, !tbaa !8
  switch i64 %10, label %49 [
    i64 4097, label %11
    i64 4098, label %15
    i64 4100, label %19
    i64 4099, label %34
  ]

; <label>:11                                      ; preds = %6
  %12 = getelementptr inbounds i64, i64* %9, i64 1
  %13 = bitcast i64* %12 to i8**
  %14 = load i8*, i8** %13, align 8, !tbaa !8
  tail call void @SetGSBase(i8* %14) #3
  br label %49

; <label>:15                                      ; preds = %6
  %16 = getelementptr inbounds i64, i64* %9, i64 1
  %17 = bitcast i64* %16 to i8**
  %18 = load i8*, i8** %17, align 8, !tbaa !8
  tail call void @SetFSBase(i8* %18) #3
  br label %49

; <label>:19                                      ; preds = %6
  %20 = bitcast i32* %flags to i8*
  call void @llvm.lifetime.start(i64 4, i8* %20) #1
  store i32 0, i32* %flags, align 4, !tbaa !9
  %21 = tail call i64 @GetActiveVirtualMemoryInstance() #3
  %22 = load i64*, i64** %8, align 8, !tbaa !7
  %23 = getelementptr inbounds i64, i64* %22, i64 1
  %24 = load i64, i64* %23, align 8, !tbaa !8
  call void @CheckAddressPermissions(i64 %21, i64 %24, i32* null, i32* nonnull %flags) #3
  %25 = load i32, i32* %flags, align 4, !tbaa !9
  %26 = icmp eq i32 %25, 13
  br i1 %26, label %.critedge, label %33

.critedge:                                        ; preds = %19
  %27 = load i64*, i64** %8, align 8, !tbaa !7
  %28 = getelementptr inbounds i64, i64* %27, i64 1
  %29 = bitcast i64* %28 to i64**
  %30 = load i64*, i64** %29, align 8, !tbaa !8
  %31 = call i8* @GetGSBase() #3
  %32 = ptrtoint i8* %31 to i64
  store i64 %32, i64* %30, align 8, !tbaa !8
  call void @llvm.lifetime.end(i64 4, i8* %20) #1
  br label %49

; <label>:33                                      ; preds = %19
  call void @llvm.lifetime.end(i64 4, i8* %20) #1
  br label %49

; <label>:34                                      ; preds = %6
  %35 = bitcast i32* %flags1 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %35) #1
  store i32 0, i32* %flags1, align 4, !tbaa !9
  %36 = tail call i64 @GetActiveVirtualMemoryInstance() #3
  %37 = load i64*, i64** %8, align 8, !tbaa !7
  %38 = getelementptr inbounds i64, i64* %37, i64 1
  %39 = load i64, i64* %38, align 8, !tbaa !8
  call void @CheckAddressPermissions(i64 %36, i64 %39, i32* null, i32* nonnull %flags1) #3
  %40 = load i32, i32* %flags1, align 4, !tbaa !9
  %41 = icmp eq i32 %40, 13
  br i1 %41, label %.critedge6, label %48

.critedge6:                                       ; preds = %34
  %42 = load i64*, i64** %8, align 8, !tbaa !7
  %43 = getelementptr inbounds i64, i64* %42, i64 1
  %44 = bitcast i64* %43 to i64**
  %45 = load i64*, i64** %44, align 8, !tbaa !8
  %46 = call i8* @GetFSBase() #3
  %47 = ptrtoint i8* %46 to i64
  store i64 %47, i64* %45, align 8, !tbaa !8
  call void @llvm.lifetime.end(i64 4, i8* %35) #1
  br label %49

; <label>:48                                      ; preds = %34
  call void @llvm.lifetime.end(i64 4, i8* %35) #1
  br label %49

; <label>:49                                      ; preds = %2, %33, %48, %.critedge6, %6, %.critedge, %15, %11, %0
  %.3 = phi i64 [ 38, %0 ], [ 22, %33 ], [ 22, %48 ], [ 22, %2 ], [ 0, %.critedge6 ], [ 0, %6 ], [ 0, %.critedge ], [ 0, %15 ], [ 0, %11 ]
  ret i64 %.3
}

; Function Attrs: nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #1

; Function Attrs: noredzone
declare void @SetGSBase(i8*) #2

; Function Attrs: noredzone
declare void @SetFSBase(i8*) #2

; Function Attrs: noredzone
declare void @CheckAddressPermissions(i64, i64, i32*, i32*) #2

; Function Attrs: noredzone
declare i64 @GetActiveVirtualMemoryInstance() #2

; Function Attrs: noredzone
declare i8* @GetGSBase() #2

; Function Attrs: nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #1

; Function Attrs: noredzone
declare i8* @GetFSBase() #2

attributes #0 = { noredzone nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512pf,-avx512vl,-f16c,-fma,-fma4,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind }
attributes #2 = { noredzone "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512pf,-avx512vl,-f16c,-fma,-fma4,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin noredzone nounwind }

!llvm.ident = !{!0}

!0 = !{!"clang version 3.7.0 (tags/RELEASE_370/final)"}
!1 = !{!2, !3, i64 16}
!2 = !{!"", !3, i64 0, !6, i64 8, !3, i64 16}
!3 = !{!"long", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
!6 = !{!"any pointer", !4, i64 0}
!7 = !{!2, !6, i64 8}
!8 = !{!3, !3, i64 0}
!9 = !{!4, !4, i64 0}
