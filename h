
build/DEBUG/kernel.bin:     file format elf64-x86-64


Disassembly of section .multiboot:

0000000000100000 <_bootstrap_region_start>:
  100000:	d6                   	(bad)  
  100001:	50                   	push   %rax
  100002:	52                   	push   %rdx
  100003:	e8 00 00 00 00       	callq  100008 <_bootstrap_region_start+0x8>
  100008:	60                   	(bad)  
  100009:	00 00                	add    %al,(%rax)
  10000b:	00 ca                	add    %cl,%dl
  10000d:	ae                   	scas   %es:(%rdi),%al
  10000e:	ad                   	lods   %ds:(%rsi),%eax
  10000f:	17                   	(bad)  
  100010:	03 00                	add    (%rax),%eax
  100012:	00 00                	add    %al,(%rax)
  100014:	0c 00                	or     $0x0,%al
  100016:	00 00                	add    %al,(%rax)
  100018:	8e 40 10             	mov    0x10(%rax),%es
  10001b:	00 00                	add    %al,(%rax)
  10001d:	00 00                	add    %al,(%rax)
  10001f:	00 01                	add    %al,(%rcx)
  100021:	00 00                	add    %al,(%rax)
  100023:	00 1c 00             	add    %bl,(%rax,%rax,1)
  100026:	00 00                	add    %al,(%rax)
  100028:	06                   	(bad)  
  100029:	00 00                	add    %al,(%rax)
  10002b:	00 08                	add    %cl,(%rax)
  10002d:	00 00                	add    %al,(%rax)
  10002f:	00 09                	add    %cl,(%rcx)
  100031:	00 00                	add    %al,(%rax)
  100033:	00 0e                	add    %cl,(%rsi)
  100035:	00 00                	add    %al,(%rax)
  100037:	00 0f                	add    %cl,(%rdi)
  100039:	00 00                	add    %al,(%rax)
  10003b:	00 00                	add    %al,(%rax)
  10003d:	00 00                	add    %al,(%rax)
  10003f:	00 05 00 00 00 14    	add    %al,0x14000000(%rip)        # 14100045 <_region_kernel_end_+0x13273165>
  100045:	00 00                	add    %al,(%rax)
  100047:	00 00                	add    %al,(%rax)
  100049:	04 00                	add    $0x0,%al
  10004b:	00 00                	add    %al,(%rax)
  10004d:	03 00                	add    (%rax),%eax
  10004f:	00 20                	add    %ah,(%rax)
	...
  100059:	00 00                	add    %al,(%rax)
  10005b:	00 08                	add    %cl,(%rax)
  10005d:	00 00                	add    %al,(%rax)
	...

0000000000100060 <multiboot_end>:
	...

0000000000104060 <stack_top>:
	...

0000000000104068 <temp_stor_magic>:
	...

0000000000104070 <gdt64>:
	...

0000000000104078 <.coded>:
  104078:	00 00                	add    %al,(%rax)
  10407a:	00 00                	add    %al,(%rax)
  10407c:	00 9a 20 00 00 00    	add    %bl,0x20(%rdx)

0000000000104080 <.datad>:
  104080:	00 00                	add    %al,(%rax)
  104082:	00 00                	add    %al,(%rax)
  104084:	00 92 00 00 17 00    	add    %dl,0x170000(%rdx)

0000000000104088 <.GDTPTR>:
  104088:	17                   	(bad)  
  104089:	00 70 40             	add    %dh,0x40(%rax)
  10408c:	10 00                	adc    %al,(%rax)

000000000010408e <_start>:
  10408e:	bf 00 10 00 00       	mov    $0x1000,%edi
  104093:	0f 22 df             	mov    %rdi,%cr3
  104096:	a3 68 40 10 00 89 1d 	movabs %eax,0x40601d8900104068
  10409d:	60 40 
  10409f:	10 00                	adc    %al,(%rax)
  1040a1:	b8 01 00 00 80       	mov    $0x80000001,%eax
  1040a6:	0f a2                	cpuid  
  1040a8:	f7 c2 00 00 00 20    	test   $0x20000000,%edx
  1040ae:	0f 84 75 01 00 00    	je     104229 <.Crash>
  1040b4:	31 c0                	xor    %eax,%eax
  1040b6:	b9 00 10 00 00       	mov    $0x1000,%ecx
  1040bb:	f3 ab                	rep stos %eax,%es:(%rdi)
  1040bd:	b9 00 10 00 00       	mov    $0x1000,%ecx
  1040c2:	f3 ab                	rep stos %eax,%es:(%rdi)
  1040c4:	0f 20 df             	mov    %cr3,%rdi
  1040c7:	c7 07 03 20 00 00    	movl   $0x2003,(%rdi)
  1040cd:	c7 87 f8 0f 00 00 03 	movl   $0x5003,0xff8(%rdi)
  1040d4:	50 00 00 
  1040d7:	81 c7 00 10 00 00    	add    $0x1000,%edi
  1040dd:	c7 07 03 30 00 00    	movl   $0x3003,(%rdi)
  1040e3:	81 c7 00 10 00 00    	add    $0x1000,%edi
  1040e9:	c7 07 03 40 00 00    	movl   $0x4003,(%rdi)
  1040ef:	81 c7 00 10 00 00    	add    $0x1000,%edi
  1040f5:	c7 87 e0 1f 00 00 00 	movl   $0x0,0x1fe0(%rdi)
  1040fc:	00 00 00 
  1040ff:	c7 87 e8 1f 00 00 00 	movl   $0x0,0x1fe8(%rdi)
  104106:	00 00 00 
  104109:	c7 87 f0 1f 00 00 00 	movl   $0x0,0x1ff0(%rdi)
  104110:	00 00 00 
  104113:	c7 87 f8 1f 00 00 00 	movl   $0x0,0x1ff8(%rdi)
  10411a:	00 00 00 
  10411d:	c7 87 c0 1f 00 00 03 	movl   $0x16003,0x1fc0(%rdi)
  104124:	60 01 00 
  104127:	c7 87 c8 1f 00 00 03 	movl   $0x17003,0x1fc8(%rdi)
  10412e:	70 01 00 
  104131:	c7 87 d0 1f 00 00 03 	movl   $0x18003,0x1fd0(%rdi)
  104138:	80 01 00 
  10413b:	c7 87 d8 1f 00 00 03 	movl   $0x19003,0x1fd8(%rdi)
  104142:	90 01 00 
  104145:	c7 87 e0 1f 00 00 03 	movl   $0x18003,0x1fe0(%rdi)
  10414c:	80 01 00 
  10414f:	c7 87 e8 1f 00 00 03 	movl   $0x19003,0x1fe8(%rdi)
  104156:	90 01 00 
  104159:	c7 87 f0 1f 00 00 03 	movl   $0x16003,0x1ff0(%rdi)
  104160:	60 01 00 
  104163:	c7 87 f8 1f 00 00 03 	movl   $0x17003,0x1ff8(%rdi)
  10416a:	70 01 00 
  10416d:	bf 00 60 01 00       	mov    $0x16000,%edi
  104172:	bb 8b 10 00 00       	mov    $0x108b,%ebx
  104177:	b9 00 08 00 00       	mov    $0x800,%ecx

000000000010417c <.SetGBEntry>:
  10417c:	89 1f                	mov    %ebx,(%rdi)
  10417e:	c7 47 04 00 00 00 00 	movl   $0x0,0x4(%rdi)
  104185:	81 c3 00 00 20 00    	add    $0x200000,%ebx
  10418b:	83 c7 08             	add    $0x8,%edi
  10418e:	e2 ec                	loop   10417c <.SetGBEntry>
  104190:	bf 00 40 00 00       	mov    $0x4000,%edi
  104195:	bb 03 00 00 00       	mov    $0x3,%ebx
  10419a:	b9 00 02 00 00       	mov    $0x200,%ecx

000000000010419f <.SetEntry>:
  10419f:	89 1f                	mov    %ebx,(%rdi)
  1041a1:	81 c3 00 10 00 00    	add    $0x1000,%ebx
  1041a7:	83 c7 08             	add    $0x8,%edi
  1041aa:	e2 f3                	loop   10419f <.SetEntry>
  1041ac:	0f 20 e0             	mov    %cr4,%rax
  1041af:	83 c8 20             	or     $0x20,%eax
  1041b2:	0f 22 e0             	mov    %rax,%cr4
  1041b5:	b9 80 00 00 c0       	mov    $0xc0000080,%ecx
  1041ba:	0f 32                	rdmsr  
  1041bc:	0d 00 01 00 00       	or     $0x100,%eax
  1041c1:	0f 30                	wrmsr  
  1041c3:	0f 20 c0             	mov    %cr0,%rax
  1041c6:	0d 00 00 01 80       	or     $0x80010000,%eax
  1041cb:	0f 22 c0             	mov    %rax,%cr0
  1041ce:	0f 01 15 88 40 10 00 	lgdt   0x104088(%rip)        # 20825d <_region_kernel_start_+0x825d>
  1041d5:	89 d3                	mov    %edx,%ebx
  1041d7:	ea                   	(bad)  
  1041d8:	de 41 10             	fiadd  0x10(%rcx)
  1041db:	00 08                	add    %cl,(%rax)
  1041dd:	00 66 b8             	add    %ah,-0x48(%rsi)
  1041e0:	10 00                	adc    %al,(%rax)
  1041e2:	66 8e d8             	mov    %ax,%ds
  1041e5:	66 8e c0             	mov    %ax,%es
  1041e8:	66 8e e0             	mov    %ax,%fs
  1041eb:	66 8e e8             	mov    %ax,%gs
  1041ee:	66 8e d0             	mov    %ax,%ss
  1041f1:	48 bc 00 00 00 00 fe 	movabs $0xfffffffe00000000,%rsp
  1041f8:	ff ff ff 
  1041fb:	48 bf 00 00 00 00 fe 	movabs $0xfffffffe00000000,%rdi
  104202:	ff ff ff 
  104205:	48 81 c4 60 40 10 00 	add    $0x104060,%rsp
  10420c:	48 8b 34 25 68 40 10 	mov    0x104068,%rsi
  104213:	00 
  104214:	48 03 3c 25 60 40 10 	add    0x104060,%rdi
  10421b:	00 
  10421c:	48 c7 c0 00 00 20 80 	mov    $0xffffffff80200000,%rax
  104223:	50                   	push   %rax
  104224:	c3                   	retq   
  104225:	fa                   	cli    
  104226:	f4                   	hlt    
  104227:	eb fe                	jmp    104227 <.SetEntry+0x88>

0000000000104229 <.Crash>:
  104229:	fb                   	sti    
  10422a:	cd 00                	int    $0x0
  10422c:	eb fb                	jmp    104229 <.Crash>

Disassembly of section .trampoline_code:

000000000000f000 <_trampoline_region_start>:
    f000:	fa                   	cli    
    f001:	66 b8 00 10          	mov    $0x1000,%ax
    f005:	00 00                	add    %al,(%rax)
    f007:	0f 22 d8             	mov    %rax,%cr3
    f00a:	0f 20 e0             	mov    %cr4,%rax
    f00d:	66 0d a0 00          	or     $0xa0,%ax
    f011:	00 00                	add    %al,(%rax)
    f013:	0f 22 e0             	mov    %rax,%cr4
    f016:	66 b9 80 00          	mov    $0x80,%cx
    f01a:	00 c0                	add    %al,%al
    f01c:	0f 32                	rdmsr  
    f01e:	66 0d 00 01          	or     $0x100,%ax
    f022:	00 00                	add    %al,(%rax)
    f024:	0f 30                	wrmsr  
    f026:	0f 20 c3             	mov    %cr0,%rbx
    f029:	66 81 cb 01 00       	or     $0x1,%bx
    f02e:	00 80 0f 22 c3 67    	add    %al,0x67c3220f(%rax)
    f034:	0f 01 15 8a f0 00 00 	lgdt   0xf08a(%rip)        # 1e0c5 <_trampoline_region_end+0xe035>
    f03b:	ea                   	(bad)  
    f03c:	40                   	rex
    f03d:	f0 08 00             	lock or %al,(%rax)

000000000000f040 <.tJmp>:
    f040:	66 b8 10 00          	mov    $0x10,%ax
    f044:	66 8e d8             	mov    %ax,%ds
    f047:	66 8e c0             	mov    %ax,%es
    f04a:	66 8e e0             	mov    %ax,%fs
    f04d:	66 8e e8             	mov    %ax,%gs
    f050:	66 8e d0             	mov    %ax,%ss
    f053:	48 bc 00 00 00 00 fe 	movabs $0xfffffffe00000000,%rsp
    f05a:	ff ff ff 
    f05d:	48 81 c4 90 00 01 00 	add    $0x10090,%rsp
    f064:	48 31 c0             	xor    %rax,%rax
    f067:	48 81 c0 d0 01 20 80 	add    $0xffffffff802001d0,%rax
    f06e:	50                   	push   %rax
    f06f:	c3                   	retq   
    f070:	fa                   	cli    
    f071:	f4                   	hlt    

000000000000f072 <gdt64d>:
	...

000000000000f07a <.coded>:
    f07a:	00 00                	add    %al,(%rax)
    f07c:	00 00                	add    %al,(%rax)
    f07e:	00 9a 20 00 00 00    	add    %bl,0x20(%rdx)

000000000000f082 <.datad>:
    f082:	00 00                	add    %al,(%rax)
    f084:	00 00                	add    %al,(%rax)
    f086:	00 92 00 00 17 00    	add    %dl,0x170000(%rdx)

000000000000f08a <.GDTPTRd>:
    f08a:	17                   	(bad)  
    f08b:	00 72 f0             	add    %dh,-0x10(%rdx)
	...

000000000000f090 <tramp_stack_bottom>:
	...

Disassembly of section .text:

ffffffff80200000 <bootstrap_kernel>:
ffffffff80200000:	55                   	push   %rbp
ffffffff80200001:	48 89 e5             	mov    %rsp,%rbp
ffffffff80200004:	48 83 ec 50          	sub    $0x50,%rsp
ffffffff80200008:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8020000c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff80200010:	e8 3b 4b 00 00       	callq  ffffffff80204b50 <VirtMemMan_InitializeBootstrap>
ffffffff80200015:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
ffffffff80200019:	e8 82 ab 00 00       	callq  ffffffff8020aba0 <ParseAndSaveBootInformation>
ffffffff8020001e:	e8 ad ae 00 00       	callq  ffffffff8020aed0 <GetBootInfo>
ffffffff80200023:	31 c9                	xor    %ecx,%ecx
ffffffff80200025:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff80200029:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8020002d:	48 8b 70 48          	mov    0x48(%rax),%rsi
ffffffff80200031:	31 ff                	xor    %edi,%edi
ffffffff80200033:	89 4d e0             	mov    %ecx,-0x20(%rbp)
ffffffff80200036:	e8 f5 1c 00 00       	callq  ffffffff80201d30 <GetVirtualAddress>
ffffffff8020003b:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
ffffffff8020003f:	48 89 46 48          	mov    %rax,0x48(%rsi)
ffffffff80200043:	48 81 7d f0 89 62 d7 	cmpq   $0x36d76289,-0x10(%rbp)
ffffffff8020004a:	36 
ffffffff8020004b:	74 12                	je     ffffffff8020005f <bootstrap_kernel+0x5f>
ffffffff8020004d:	b8 ff 00 00 00       	mov    $0xff,%eax
ffffffff80200052:	bf ff 00 00 00       	mov    $0xff,%edi
ffffffff80200057:	89 45 dc             	mov    %eax,-0x24(%rbp)
ffffffff8020005a:	e8 61 04 00 00       	callq  ffffffff802004c0 <bootstrap_kernel_panic>
ffffffff8020005f:	e8 7c 05 00 00       	callq  ffffffff802005e0 <GDT_Bootstrap>
ffffffff80200064:	e8 b7 0a 00 00       	callq  ffffffff80200b20 <IDT_Initialize>
ffffffff80200069:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%rbp)
ffffffff80200070:	83 7d e4 1f          	cmpl   $0x1f,-0x1c(%rbp)
ffffffff80200074:	7d 1f                	jge    ffffffff80200095 <bootstrap_kernel+0x95>
ffffffff80200076:	8b 45 e4             	mov    -0x1c(%rbp),%eax
ffffffff80200079:	88 c1                	mov    %al,%cl
ffffffff8020007b:	0f b6 f9             	movzbl %cl,%edi
ffffffff8020007e:	48 c7 c6 e0 03 20 80 	mov    $0xffffffff802003e0,%rsi
ffffffff80200085:	e8 b6 0f 00 00       	callq  ffffffff80201040 <IDT_RegisterHandler>
ffffffff8020008a:	8b 45 e4             	mov    -0x1c(%rbp),%eax
ffffffff8020008d:	83 c0 01             	add    $0x1,%eax
ffffffff80200090:	89 45 e4             	mov    %eax,-0x1c(%rbp)
ffffffff80200093:	eb db                	jmp    ffffffff80200070 <bootstrap_kernel+0x70>
ffffffff80200095:	e8 e6 11 00 00       	callq  ffffffff80201280 <FPU_Initialize>
ffffffff8020009a:	e8 e1 43 00 00       	callq  ffffffff80204480 <MemMan_Initialize>
ffffffff8020009f:	89 45 d8             	mov    %eax,-0x28(%rbp)
ffffffff802000a2:	e8 49 4b 00 00       	callq  ffffffff80204bf0 <VirtMemMan_Initialize>
ffffffff802000a7:	e8 64 1c 00 00       	callq  ffffffff80201d10 <MemoryHAL_Initialize>
ffffffff802000ac:	e8 ff 07 00 00       	callq  ffffffff802008b0 <GDT_InitializeMP>
ffffffff802000b1:	31 c0                	xor    %eax,%eax
ffffffff802000b3:	88 c1                	mov    %al,%cl
ffffffff802000b5:	89 45 d4             	mov    %eax,-0x2c(%rbp)
ffffffff802000b8:	88 c8                	mov    %cl,%al
ffffffff802000ba:	e8 11 08 00 00       	callq  ffffffff802008d0 <GDT_Initialize>
ffffffff802000bf:	ba 00 40 00 00       	mov    $0x4000,%edx
ffffffff802000c4:	89 d7                	mov    %edx,%edi
ffffffff802000c6:	e8 35 aa 00 00       	callq  ffffffff8020ab00 <bootstrap_malloc>
ffffffff802000cb:	48 05 80 3f 00 00    	add    $0x3f80,%rax
ffffffff802000d1:	48 89 c7             	mov    %rax,%rdi
ffffffff802000d4:	e8 57 09 00 00       	callq  ffffffff80200a30 <SetInterruptStack>
ffffffff802000d9:	ba 00 10 00 00       	mov    $0x1000,%edx
ffffffff802000de:	89 d0                	mov    %edx,%eax
ffffffff802000e0:	48 89 c7             	mov    %rax,%rdi
ffffffff802000e3:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
ffffffff802000e7:	e8 14 aa 00 00       	callq  ffffffff8020ab00 <bootstrap_malloc>
ffffffff802000ec:	ba 01 00 00 00       	mov    $0x1,%edx
ffffffff802000f1:	89 d7                	mov    %edx,%edi
ffffffff802000f3:	48 89 c6             	mov    %rax,%rsi
ffffffff802000f6:	89 55 c4             	mov    %edx,-0x3c(%rbp)
ffffffff802000f9:	e8 52 09 00 00       	callq  ffffffff80200a50 <GDT_SetIST>
ffffffff802000fe:	ba 08 00 00 00       	mov    $0x8,%edx
ffffffff80200103:	bf 8e 00 00 00       	mov    $0x8e,%edi
ffffffff80200108:	89 7d c0             	mov    %edi,-0x40(%rbp)
ffffffff8020010b:	89 d7                	mov    %edx,%edi
ffffffff8020010d:	89 d6                	mov    %edx,%esi
ffffffff8020010f:	44 8b 45 c0          	mov    -0x40(%rbp),%r8d
ffffffff80200113:	89 55 bc             	mov    %edx,-0x44(%rbp)
ffffffff80200116:	44 89 c2             	mov    %r8d,%edx
ffffffff80200119:	8b 4d c4             	mov    -0x3c(%rbp),%ecx
ffffffff8020011c:	e8 ef 0d 00 00       	callq  ffffffff80200f10 <IDT_ChangeEntry>
ffffffff80200121:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
ffffffff80200125:	e8 d6 a9 00 00       	callq  ffffffff8020ab00 <bootstrap_malloc>
ffffffff8020012a:	b9 02 00 00 00       	mov    $0x2,%ecx
ffffffff8020012f:	89 cf                	mov    %ecx,%edi
ffffffff80200131:	48 89 c6             	mov    %rax,%rsi
ffffffff80200134:	89 4d b8             	mov    %ecx,-0x48(%rbp)
ffffffff80200137:	e8 14 09 00 00       	callq  ffffffff80200a50 <GDT_SetIST>
ffffffff8020013c:	bf 12 00 00 00       	mov    $0x12,%edi
ffffffff80200141:	8b 75 bc             	mov    -0x44(%rbp),%esi
ffffffff80200144:	8b 55 c0             	mov    -0x40(%rbp),%edx
ffffffff80200147:	8b 4d b8             	mov    -0x48(%rbp),%ecx
ffffffff8020014a:	e8 c1 0d 00 00       	callq  ffffffff80200f10 <IDT_ChangeEntry>
ffffffff8020014f:	e8 8c ad 00 00       	callq  ffffffff8020aee0 <ACPITables_Initialize>
ffffffff80200154:	88 45 b7             	mov    %al,-0x49(%rbp)
ffffffff80200157:	e8 54 70 00 00       	callq  ffffffff802071b0 <SMP_IncrementCoreCount>
ffffffff8020015c:	e8 df 13 00 00       	callq  ffffffff80201540 <RTC_Initialize>
ffffffff80200161:	4c 8b 4d e8          	mov    -0x18(%rbp),%r9
ffffffff80200165:	49 8b 79 48          	mov    0x48(%r9),%rdi
ffffffff80200169:	e8 f2 1b 00 00       	callq  ffffffff80201d60 <GetPhysicalAddress>
ffffffff8020016e:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
ffffffff80200172:	48 89 47 48          	mov    %rax,0x48(%rdi)
ffffffff80200176:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8020017a:	48 8b 70 48          	mov    0x48(%rax),%rsi
ffffffff8020017e:	8b 7d b8             	mov    -0x48(%rbp),%edi
ffffffff80200181:	e8 aa 1b 00 00       	callq  ffffffff80201d30 <GetVirtualAddress>
ffffffff80200186:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
ffffffff8020018a:	48 89 46 48          	mov    %rax,0x48(%rsi)
ffffffff8020018e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80200192:	48 8b 70 30          	mov    0x30(%rax),%rsi
ffffffff80200196:	8b 7d d4             	mov    -0x2c(%rbp),%edi
ffffffff80200199:	e8 92 1b 00 00       	callq  ffffffff80201d30 <GetVirtualAddress>
ffffffff8020019e:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
ffffffff802001a2:	48 89 46 30          	mov    %rax,0x30(%rsi)
ffffffff802001a6:	c7 04 25 20 4c 28 80 	movl   $0x1,0xffffffff80284c20
ffffffff802001ad:	01 00 00 00 
ffffffff802001b1:	e8 7a 3e 00 00       	callq  ffffffff80204030 <APIC_Initialize>
ffffffff802001b6:	89 45 b0             	mov    %eax,-0x50(%rbp)
ffffffff802001b9:	e8 b2 81 00 00       	callq  ffffffff80208370 <kernel_main_init>
ffffffff802001be:	fa                   	cli    
ffffffff802001bf:	f4                   	hlt    
ffffffff802001c0:	48 83 c4 50          	add    $0x50,%rsp
ffffffff802001c4:	5d                   	pop    %rbp
ffffffff802001c5:	c3                   	retq   
ffffffff802001c6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff802001cd:	00 00 00 

ffffffff802001d0 <smp_bootstrap>:
ffffffff802001d0:	55                   	push   %rbp
ffffffff802001d1:	48 89 e5             	mov    %rsp,%rbp
ffffffff802001d4:	48 83 ec 60          	sub    $0x60,%rsp
ffffffff802001d8:	e8 33 70 00 00       	callq  ffffffff80207210 <SMP_LockTrampoline>
ffffffff802001dd:	b8 00 40 00 00       	mov    $0x4000,%eax
ffffffff802001e2:	89 c1                	mov    %eax,%ecx
ffffffff802001e4:	b8 00 40 00 00       	mov    $0x4000,%eax
ffffffff802001e9:	89 c7                	mov    %eax,%edi
ffffffff802001eb:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
ffffffff802001ef:	e8 0c a9 00 00       	callq  ffffffff8020ab00 <bootstrap_malloc>
ffffffff802001f4:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff802001f8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff802001fc:	48 05 00 40 00 00    	add    $0x4000,%rax
ffffffff80200202:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff80200206:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8020020a:	48 89 c4             	mov    %rax,%rsp
ffffffff8020020d:	e8 0e 09 00 00       	callq  ffffffff80200b20 <IDT_Initialize>
ffffffff80200212:	e8 69 10 00 00       	callq  ffffffff80201280 <FPU_Initialize>
ffffffff80200217:	e8 34 49 00 00       	callq  ffffffff80204b50 <VirtMemMan_InitializeBootstrap>
ffffffff8020021c:	e8 cf 49 00 00       	callq  ffffffff80204bf0 <VirtMemMan_Initialize>
ffffffff80200221:	31 d2                	xor    %edx,%edx
ffffffff80200223:	40 88 d6             	mov    %dl,%sil
ffffffff80200226:	40 88 f0             	mov    %sil,%al
ffffffff80200229:	e8 a2 06 00 00       	callq  ffffffff802008d0 <GDT_Initialize>
ffffffff8020022e:	ba 00 40 00 00       	mov    $0x4000,%edx
ffffffff80200233:	89 d1                	mov    %edx,%ecx
ffffffff80200235:	ba 00 40 00 00       	mov    $0x4000,%edx
ffffffff8020023a:	89 d7                	mov    %edx,%edi
ffffffff8020023c:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
ffffffff80200240:	e8 bb a8 00 00       	callq  ffffffff8020ab00 <bootstrap_malloc>
ffffffff80200245:	48 05 00 40 00 00    	add    $0x4000,%rax
ffffffff8020024b:	48 2d 80 00 00 00    	sub    $0x80,%rax
ffffffff80200251:	48 89 c7             	mov    %rax,%rdi
ffffffff80200254:	e8 d7 07 00 00       	callq  ffffffff80200a30 <SetInterruptStack>
ffffffff80200259:	ba 00 10 00 00       	mov    $0x1000,%edx
ffffffff8020025e:	89 d0                	mov    %edx,%eax
ffffffff80200260:	ba 00 10 00 00       	mov    $0x1000,%edx
ffffffff80200265:	89 d7                	mov    %edx,%edi
ffffffff80200267:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
ffffffff8020026b:	e8 90 a8 00 00       	callq  ffffffff8020ab00 <bootstrap_malloc>
ffffffff80200270:	ba 01 00 00 00       	mov    $0x1,%edx
ffffffff80200275:	bf 01 00 00 00       	mov    $0x1,%edi
ffffffff8020027a:	48 89 c6             	mov    %rax,%rsi
ffffffff8020027d:	89 55 d4             	mov    %edx,-0x2c(%rbp)
ffffffff80200280:	e8 cb 07 00 00       	callq  ffffffff80200a50 <GDT_SetIST>
ffffffff80200285:	ba 08 00 00 00       	mov    $0x8,%edx
ffffffff8020028a:	bf 8e 00 00 00       	mov    $0x8e,%edi
ffffffff8020028f:	41 b8 01 00 00 00    	mov    $0x1,%r8d
ffffffff80200295:	41 b9 08 00 00 00    	mov    $0x8,%r9d
ffffffff8020029b:	41 ba 8e 00 00 00    	mov    $0x8e,%r10d
ffffffff802002a1:	b9 01 00 00 00       	mov    $0x1,%ecx
ffffffff802002a6:	89 7d d0             	mov    %edi,-0x30(%rbp)
ffffffff802002a9:	44 89 cf             	mov    %r9d,%edi
ffffffff802002ac:	44 89 ce             	mov    %r9d,%esi
ffffffff802002af:	89 55 cc             	mov    %edx,-0x34(%rbp)
ffffffff802002b2:	44 89 d2             	mov    %r10d,%edx
ffffffff802002b5:	44 89 45 c8          	mov    %r8d,-0x38(%rbp)
ffffffff802002b9:	e8 52 0c 00 00       	callq  ffffffff80200f10 <IDT_ChangeEntry>
ffffffff802002be:	b9 00 10 00 00       	mov    $0x1000,%ecx
ffffffff802002c3:	89 c8                	mov    %ecx,%eax
ffffffff802002c5:	b9 00 10 00 00       	mov    $0x1000,%ecx
ffffffff802002ca:	89 cf                	mov    %ecx,%edi
ffffffff802002cc:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
ffffffff802002d0:	e8 2b a8 00 00       	callq  ffffffff8020ab00 <bootstrap_malloc>
ffffffff802002d5:	b9 02 00 00 00       	mov    $0x2,%ecx
ffffffff802002da:	bf 02 00 00 00       	mov    $0x2,%edi
ffffffff802002df:	48 89 c6             	mov    %rax,%rsi
ffffffff802002e2:	89 4d bc             	mov    %ecx,-0x44(%rbp)
ffffffff802002e5:	e8 66 07 00 00       	callq  ffffffff80200a50 <GDT_SetIST>
ffffffff802002ea:	b9 12 00 00 00       	mov    $0x12,%ecx
ffffffff802002ef:	ba 08 00 00 00       	mov    $0x8,%edx
ffffffff802002f4:	bf 8e 00 00 00       	mov    $0x8e,%edi
ffffffff802002f9:	41 b8 02 00 00 00    	mov    $0x2,%r8d
ffffffff802002ff:	41 b9 12 00 00 00    	mov    $0x12,%r9d
ffffffff80200305:	be 08 00 00 00       	mov    $0x8,%esi
ffffffff8020030a:	41 ba 8e 00 00 00    	mov    $0x8e,%r10d
ffffffff80200310:	41 bb 02 00 00 00    	mov    $0x2,%r11d
ffffffff80200316:	89 7d b8             	mov    %edi,-0x48(%rbp)
ffffffff80200319:	44 89 cf             	mov    %r9d,%edi
ffffffff8020031c:	89 55 b4             	mov    %edx,-0x4c(%rbp)
ffffffff8020031f:	44 89 d2             	mov    %r10d,%edx
ffffffff80200322:	89 4d b0             	mov    %ecx,-0x50(%rbp)
ffffffff80200325:	44 89 d9             	mov    %r11d,%ecx
ffffffff80200328:	44 89 45 ac          	mov    %r8d,-0x54(%rbp)
ffffffff8020032c:	e8 df 0b 00 00       	callq  ffffffff80200f10 <IDT_ChangeEntry>
ffffffff80200331:	e8 4a 2e 00 00       	callq  ffffffff80203180 <APIC_LocalInitialize>
ffffffff80200336:	fb                   	sti    
ffffffff80200337:	88 45 ab             	mov    %al,-0x55(%rbp)
ffffffff8020033a:	e8 61 30 00 00       	callq  ffffffff802033a0 <APIC_CallibrateTimer>
ffffffff8020033f:	fa                   	cli    
ffffffff80200340:	e8 6b 6e 00 00       	callq  ffffffff802071b0 <SMP_IncrementCoreCount>
ffffffff80200345:	e8 86 6e 00 00       	callq  ffffffff802071d0 <SMP_GetCoreCount>
ffffffff8020034a:	89 45 f4             	mov    %eax,-0xc(%rbp)
ffffffff8020034d:	e8 de 6e 00 00       	callq  ffffffff80207230 <SMP_UnlockTrampoline>
ffffffff80200352:	8b 04 25 20 4c 28 80 	mov    0xffffffff80284c20,%eax
ffffffff80200359:	83 f8 00             	cmp    $0x0,%eax
ffffffff8020035c:	74 02                	je     ffffffff80200360 <smp_bootstrap+0x190>
ffffffff8020035e:	eb f2                	jmp    ffffffff80200352 <smp_bootstrap+0x182>
ffffffff80200360:	8b 7d f4             	mov    -0xc(%rbp),%edi
ffffffff80200363:	48 c7 c6 b0 05 20 80 	mov    $0xffffffff802005b0,%rsi
ffffffff8020036a:	e8 31 83 00 00       	callq  ffffffff802086a0 <smp_core_main>
ffffffff8020036f:	eb fe                	jmp    ffffffff8020036f <smp_bootstrap+0x19f>
ffffffff80200371:	0f 1f 00             	nopl   (%rax)
ffffffff80200374:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8020037b:	00 00 00 
ffffffff8020037e:	66 90                	xchg   %ax,%ax

ffffffff80200380 <bootstrap_render>:
ffffffff80200380:	55                   	push   %rbp
ffffffff80200381:	48 89 e5             	mov    %rsp,%rbp
ffffffff80200384:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff80200388:	89 7d fc             	mov    %edi,-0x4(%rbp)
ffffffff8020038b:	e8 40 ab 00 00       	callq  ffffffff8020aed0 <GetBootInfo>
ffffffff80200390:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff80200394:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
ffffffff8020039b:	8b 45 ec             	mov    -0x14(%rbp),%eax
ffffffff8020039e:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
ffffffff802003a2:	8b 51 58             	mov    0x58(%rcx),%edx
ffffffff802003a5:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
ffffffff802003a9:	0f af 51 50          	imul   0x50(%rcx),%edx
ffffffff802003ad:	39 d0                	cmp    %edx,%eax
ffffffff802003af:	73 20                	jae    ffffffff802003d1 <bootstrap_render+0x51>
ffffffff802003b1:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff802003b4:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
ffffffff802003b8:	48 8b 49 48          	mov    0x48(%rcx),%rcx
ffffffff802003bc:	8b 55 ec             	mov    -0x14(%rbp),%edx
ffffffff802003bf:	89 d6                	mov    %edx,%esi
ffffffff802003c1:	48 01 f1             	add    %rsi,%rcx
ffffffff802003c4:	89 01                	mov    %eax,(%rcx)
ffffffff802003c6:	8b 45 ec             	mov    -0x14(%rbp),%eax
ffffffff802003c9:	83 c0 04             	add    $0x4,%eax
ffffffff802003cc:	89 45 ec             	mov    %eax,-0x14(%rbp)
ffffffff802003cf:	eb ca                	jmp    ffffffff8020039b <bootstrap_render+0x1b>
ffffffff802003d1:	48 83 c4 20          	add    $0x20,%rsp
ffffffff802003d5:	5d                   	pop    %rbp
ffffffff802003d6:	c3                   	retq   
ffffffff802003d7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff802003de:	00 00 

ffffffff802003e0 <bootstrap_pagefault_handler>:
ffffffff802003e0:	55                   	push   %rbp
ffffffff802003e1:	48 89 e5             	mov    %rsp,%rbp
ffffffff802003e4:	53                   	push   %rbx
ffffffff802003e5:	48 83 ec 28          	sub    $0x28,%rsp
ffffffff802003e9:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
ffffffff802003ed:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
ffffffff802003f1:	48 8b 87 80 00 00 00 	mov    0x80(%rdi),%rax
ffffffff802003f8:	48 c1 e0 04          	shl    $0x4,%rax
ffffffff802003fc:	48 89 87 80 00 00 00 	mov    %rax,0x80(%rdi)
ffffffff80200403:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80200407:	48 8b 80 80 00 00 00 	mov    0x80(%rax),%rax
ffffffff8020040e:	48 25 ff 00 00 00    	and    $0xff,%rax
ffffffff80200414:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
ffffffff80200418:	48 8b bf 80 00 00 00 	mov    0x80(%rdi),%rdi
ffffffff8020041f:	48 81 e7 00 ff 00 00 	and    $0xff00,%rdi
ffffffff80200426:	48 09 f8             	or     %rdi,%rax
ffffffff80200429:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
ffffffff8020042d:	48 8b bf 80 00 00 00 	mov    0x80(%rdi),%rdi
ffffffff80200434:	48 81 e7 00 00 ff 00 	and    $0xff0000,%rdi
ffffffff8020043b:	48 09 f8             	or     %rdi,%rax
ffffffff8020043e:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
ffffffff80200442:	48 8b bf 80 00 00 00 	mov    0x80(%rdi),%rdi
ffffffff80200449:	48 81 e7 00 00 00 ff 	and    $0xffffffffff000000,%rdi
ffffffff80200450:	48 09 f8             	or     %rdi,%rax
ffffffff80200453:	89 c1                	mov    %eax,%ecx
ffffffff80200455:	89 cf                	mov    %ecx,%edi
ffffffff80200457:	e8 24 ff ff ff       	callq  ffffffff80200380 <bootstrap_render>
ffffffff8020045c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80200460:	48 8b 80 90 00 00 00 	mov    0x90(%rax),%rax
ffffffff80200467:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff8020046b:	48 8b 92 80 00 00 00 	mov    0x80(%rdx),%rdx
ffffffff80200472:	48 c1 ea 04          	shr    $0x4,%rdx
ffffffff80200476:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
ffffffff8020047a:	48 8b 8e 88 00 00 00 	mov    0x88(%rsi),%rcx
ffffffff80200481:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff80200485:	48 89 55 e0          	mov    %rdx,-0x20(%rbp)
ffffffff80200489:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
ffffffff8020048d:	e8 5e cf 00 00       	callq  ffffffff8020d3f0 <GetCurrentThreadUID>
ffffffff80200492:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
ffffffff80200496:	48 8b 31             	mov    (%rcx),%rsi
ffffffff80200499:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
ffffffff8020049d:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
ffffffff802004a1:	48 89 c8             	mov    %rcx,%rax
ffffffff802004a4:	48 8b 5d e0          	mov    -0x20(%rbp),%rbx
ffffffff802004a8:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
ffffffff802004ac:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
ffffffff802004b0:	fa                   	cli    
ffffffff802004b1:	f4                   	hlt    
ffffffff802004b2:	48 83 c4 28          	add    $0x28,%rsp
ffffffff802004b6:	5b                   	pop    %rbx
ffffffff802004b7:	5d                   	pop    %rbp
ffffffff802004b8:	c3                   	retq   
ffffffff802004b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

ffffffff802004c0 <bootstrap_kernel_panic>:
ffffffff802004c0:	55                   	push   %rbp
ffffffff802004c1:	48 89 e5             	mov    %rsp,%rbp
ffffffff802004c4:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff802004c8:	40 88 f8             	mov    %dil,%al
ffffffff802004cb:	88 45 ff             	mov    %al,-0x1(%rbp)
ffffffff802004ce:	b8 ff 00 00 00       	mov    $0xff,%eax
ffffffff802004d3:	0f b6 4d ff          	movzbl -0x1(%rbp),%ecx
ffffffff802004d7:	29 c8                	sub    %ecx,%eax
ffffffff802004d9:	0d 00 00 ff 00       	or     $0xff0000,%eax
ffffffff802004de:	89 c7                	mov    %eax,%edi
ffffffff802004e0:	e8 9b fe ff ff       	callq  ffffffff80200380 <bootstrap_render>
ffffffff802004e5:	eb e7                	jmp    ffffffff802004ce <bootstrap_kernel_panic+0xe>
ffffffff802004e7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff802004ee:	00 00 

ffffffff802004f0 <setup_preemption>:
ffffffff802004f0:	55                   	push   %rbp
ffffffff802004f1:	48 89 e5             	mov    %rsp,%rbp
ffffffff802004f4:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff802004f8:	e8 33 32 00 00       	callq  ffffffff80203730 <APIC_GetTimerFrequency>
ffffffff802004fd:	b9 21 00 00 00       	mov    $0x21,%ecx
ffffffff80200502:	ba e8 03 00 00       	mov    $0x3e8,%edx
ffffffff80200507:	89 d6                	mov    %edx,%esi
ffffffff80200509:	31 d2                	xor    %edx,%edx
ffffffff8020050b:	48 f7 f6             	div    %rsi
ffffffff8020050e:	bf 21 00 00 00       	mov    $0x21,%edi
ffffffff80200513:	48 89 c6             	mov    %rax,%rsi
ffffffff80200516:	89 4d fc             	mov    %ecx,-0x4(%rbp)
ffffffff80200519:	e8 72 e1 00 00       	callq  ffffffff8020e690 <SetPeriodicPreemptVector>
ffffffff8020051e:	b9 20 03 00 00       	mov    $0x320,%ecx
ffffffff80200523:	bf 21 00 00 00       	mov    $0x21,%edi
ffffffff80200528:	41 b8 20 03 00 00    	mov    $0x320,%r8d
ffffffff8020052e:	be 21 00 00 00       	mov    $0x21,%esi
ffffffff80200533:	89 7d f8             	mov    %edi,-0x8(%rbp)
ffffffff80200536:	44 89 c7             	mov    %r8d,%edi
ffffffff80200539:	89 4d f4             	mov    %ecx,-0xc(%rbp)
ffffffff8020053c:	e8 bf 2f 00 00       	callq  ffffffff80203500 <APIC_SetVector>
ffffffff80200541:	e8 ea 31 00 00       	callq  ffffffff80203730 <APIC_GetTimerFrequency>
ffffffff80200546:	b9 e8 03 00 00       	mov    $0x3e8,%ecx
ffffffff8020054b:	41 89 c9             	mov    %ecx,%r9d
ffffffff8020054e:	31 c9                	xor    %ecx,%ecx
ffffffff80200550:	89 ca                	mov    %ecx,%edx
ffffffff80200552:	49 f7 f1             	div    %r9
ffffffff80200555:	89 c1                	mov    %eax,%ecx
ffffffff80200557:	89 cf                	mov    %ecx,%edi
ffffffff80200559:	e8 f2 2f 00 00       	callq  ffffffff80203550 <APIC_SetTimerValue>
ffffffff8020055e:	b9 01 00 00 00       	mov    $0x1,%ecx
ffffffff80200563:	bf 01 00 00 00       	mov    $0x1,%edi
ffffffff80200568:	89 4d f0             	mov    %ecx,-0x10(%rbp)
ffffffff8020056b:	e8 10 31 00 00       	callq  ffffffff80203680 <APIC_SetTimerMode>
ffffffff80200570:	fb                   	sti    
ffffffff80200571:	b9 20 03 00 00       	mov    $0x320,%ecx
ffffffff80200576:	be 01 00 00 00       	mov    $0x1,%esi
ffffffff8020057b:	bf 20 03 00 00       	mov    $0x320,%edi
ffffffff80200580:	41 b8 01 00 00 00    	mov    $0x1,%r8d
ffffffff80200586:	89 75 ec             	mov    %esi,-0x14(%rbp)
ffffffff80200589:	44 89 c6             	mov    %r8d,%esi
ffffffff8020058c:	89 4d e8             	mov    %ecx,-0x18(%rbp)
ffffffff8020058f:	e8 3c 31 00 00       	callq  ffffffff802036d0 <APIC_SetEnableInterrupt>
ffffffff80200594:	48 83 c4 20          	add    $0x20,%rsp
ffffffff80200598:	5d                   	pop    %rbp
ffffffff80200599:	c3                   	retq   
ffffffff8020059a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

ffffffff802005a0 <target_device_setup>:
ffffffff802005a0:	55                   	push   %rbp
ffffffff802005a1:	48 89 e5             	mov    %rsp,%rbp
ffffffff802005a4:	5d                   	pop    %rbp
ffffffff802005a5:	c3                   	retq   
ffffffff802005a6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff802005ad:	00 00 00 

ffffffff802005b0 <get_perf_counter>:
ffffffff802005b0:	55                   	push   %rbp
ffffffff802005b1:	48 89 e5             	mov    %rsp,%rbp
ffffffff802005b4:	31 c0                	xor    %eax,%eax
ffffffff802005b6:	5d                   	pop    %rbp
ffffffff802005b7:	c3                   	retq   
ffffffff802005b8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff802005bf:	00 

ffffffff802005c0 <smp_unlock_cores>:
ffffffff802005c0:	55                   	push   %rbp
ffffffff802005c1:	48 89 e5             	mov    %rsp,%rbp
ffffffff802005c4:	c7 04 25 20 4c 28 80 	movl   $0x0,0xffffffff80284c20
ffffffff802005cb:	00 00 00 00 
ffffffff802005cf:	5d                   	pop    %rbp
ffffffff802005d0:	c3                   	retq   
ffffffff802005d1:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff802005d8:	00 00 00 
ffffffff802005db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

ffffffff802005e0 <GDT_Bootstrap>:
ffffffff802005e0:	55                   	push   %rbp
ffffffff802005e1:	48 89 e5             	mov    %rsp,%rbp
ffffffff802005e4:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff802005e8:	fa                   	cli    
ffffffff802005e9:	b8 b2 00 00 00       	mov    $0xb2,%eax
ffffffff802005ee:	89 c7                	mov    %eax,%edi
ffffffff802005f0:	e8 0b a5 00 00       	callq  ffffffff8020ab00 <bootstrap_malloc>
ffffffff802005f5:	48 89 04 25 28 4c 28 	mov    %rax,0xffffffff80284c28
ffffffff802005fc:	80 
ffffffff802005fd:	48 83 c0 4a          	add    $0x4a,%rax
ffffffff80200601:	b9 68 00 00 00       	mov    $0x68,%ecx
ffffffff80200606:	89 ca                	mov    %ecx,%edx
ffffffff80200608:	31 c9                	xor    %ecx,%ecx
ffffffff8020060a:	48 89 c7             	mov    %rax,%rdi
ffffffff8020060d:	89 ce                	mov    %ecx,%esi
ffffffff8020060f:	89 4d fc             	mov    %ecx,-0x4(%rbp)
ffffffff80200612:	e8 49 81 00 00       	callq  ffffffff80208760 <memset>
ffffffff80200617:	48 8b 14 25 28 4c 28 	mov    0xffffffff80284c28,%rdx
ffffffff8020061e:	80 
ffffffff8020061f:	66 c7 82 b0 00 00 00 	movw   $0x68,0xb0(%rdx)
ffffffff80200626:	68 00 
ffffffff80200628:	48 8b 14 25 28 4c 28 	mov    0xffffffff80284c28,%rdx
ffffffff8020062f:	80 
ffffffff80200630:	66 c7 42 40 3f 00    	movw   $0x3f,0x40(%rdx)
ffffffff80200636:	48 8b 14 25 28 4c 28 	mov    0xffffffff80284c28,%rdx
ffffffff8020063d:	80 
ffffffff8020063e:	48 89 52 42          	mov    %rdx,0x42(%rdx)
ffffffff80200642:	8b 7d fc             	mov    -0x4(%rbp),%edi
ffffffff80200645:	8b 75 fc             	mov    -0x4(%rbp),%esi
ffffffff80200648:	8b 55 fc             	mov    -0x4(%rbp),%edx
ffffffff8020064b:	8b 4d fc             	mov    -0x4(%rbp),%ecx
ffffffff8020064e:	44 8b 45 fc          	mov    -0x4(%rbp),%r8d
ffffffff80200652:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff80200656:	e8 f5 00 00 00       	callq  ffffffff80200750 <GDT_SetEntry>
ffffffff8020065b:	bf 01 00 00 00       	mov    $0x1,%edi
ffffffff80200660:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
ffffffff80200665:	ba 9b 00 00 00       	mov    $0x9b,%edx
ffffffff8020066a:	be a0 00 00 00       	mov    $0xa0,%esi
ffffffff8020066f:	44 8b 45 fc          	mov    -0x4(%rbp),%r8d
ffffffff80200673:	89 75 ec             	mov    %esi,-0x14(%rbp)
ffffffff80200676:	44 89 c6             	mov    %r8d,%esi
ffffffff80200679:	89 55 e8             	mov    %edx,-0x18(%rbp)
ffffffff8020067c:	89 ca                	mov    %ecx,%edx
ffffffff8020067e:	44 8b 4d e8          	mov    -0x18(%rbp),%r9d
ffffffff80200682:	89 4d e4             	mov    %ecx,-0x1c(%rbp)
ffffffff80200685:	44 89 c9             	mov    %r9d,%ecx
ffffffff80200688:	44 8b 45 ec          	mov    -0x14(%rbp),%r8d
ffffffff8020068c:	e8 bf 00 00 00       	callq  ffffffff80200750 <GDT_SetEntry>
ffffffff80200691:	bf 02 00 00 00       	mov    $0x2,%edi
ffffffff80200696:	b9 93 00 00 00       	mov    $0x93,%ecx
ffffffff8020069b:	8b 75 fc             	mov    -0x4(%rbp),%esi
ffffffff8020069e:	8b 55 e4             	mov    -0x1c(%rbp),%edx
ffffffff802006a1:	44 8b 45 fc          	mov    -0x4(%rbp),%r8d
ffffffff802006a5:	e8 a6 00 00 00       	callq  ffffffff80200750 <GDT_SetEntry>
ffffffff802006aa:	bf 03 00 00 00       	mov    $0x3,%edi
ffffffff802006af:	b9 fb 00 00 00       	mov    $0xfb,%ecx
ffffffff802006b4:	41 b8 d0 00 00 00    	mov    $0xd0,%r8d
ffffffff802006ba:	8b 75 fc             	mov    -0x4(%rbp),%esi
ffffffff802006bd:	8b 55 e4             	mov    -0x1c(%rbp),%edx
ffffffff802006c0:	89 4d e0             	mov    %ecx,-0x20(%rbp)
ffffffff802006c3:	e8 88 00 00 00       	callq  ffffffff80200750 <GDT_SetEntry>
ffffffff802006c8:	bf 04 00 00 00       	mov    $0x4,%edi
ffffffff802006cd:	b9 f3 00 00 00       	mov    $0xf3,%ecx
ffffffff802006d2:	8b 75 fc             	mov    -0x4(%rbp),%esi
ffffffff802006d5:	8b 55 e4             	mov    -0x1c(%rbp),%edx
ffffffff802006d8:	44 8b 45 fc          	mov    -0x4(%rbp),%r8d
ffffffff802006dc:	e8 6f 00 00 00       	callq  ffffffff80200750 <GDT_SetEntry>
ffffffff802006e1:	bf 05 00 00 00       	mov    $0x5,%edi
ffffffff802006e6:	8b 75 fc             	mov    -0x4(%rbp),%esi
ffffffff802006e9:	8b 55 e4             	mov    -0x1c(%rbp),%edx
ffffffff802006ec:	8b 4d e0             	mov    -0x20(%rbp),%ecx
ffffffff802006ef:	44 8b 45 ec          	mov    -0x14(%rbp),%r8d
ffffffff802006f3:	e8 58 00 00 00       	callq  ffffffff80200750 <GDT_SetEntry>
ffffffff802006f8:	48 8b 04 25 28 4c 28 	mov    0xffffffff80284c28,%rax
ffffffff802006ff:	80 
ffffffff80200700:	48 83 c0 4a          	add    $0x4a,%rax
ffffffff80200704:	bf 06 00 00 00       	mov    $0x6,%edi
ffffffff80200709:	ba 68 00 00 00       	mov    $0x68,%edx
ffffffff8020070e:	b9 e9 00 00 00       	mov    $0xe9,%ecx
ffffffff80200713:	48 89 c6             	mov    %rax,%rsi
ffffffff80200716:	e8 05 01 00 00       	callq  ffffffff80200820 <GDT_SetTSS>
ffffffff8020071b:	48 8b 04 25 28 4c 28 	mov    0xffffffff80284c28,%rax
ffffffff80200722:	80 
ffffffff80200723:	48 83 c0 40          	add    $0x40,%rax
ffffffff80200727:	0f 01 10             	lgdt   (%rax)
ffffffff8020072a:	50                   	push   %rax
ffffffff8020072b:	48 c7 c0 34 07 20 80 	mov    $0xffffffff80200734,%rax
ffffffff80200732:	50                   	push   %rax
ffffffff80200733:	c3                   	retq   

ffffffff80200734 <flush_gdt_btstrp>:
ffffffff80200734:	66 b8 10 00          	mov    $0x10,%ax
ffffffff80200738:	8e d8                	mov    %eax,%ds
ffffffff8020073a:	8e c0                	mov    %eax,%es
ffffffff8020073c:	8e e0                	mov    %eax,%fs
ffffffff8020073e:	8e e8                	mov    %eax,%gs
ffffffff80200740:	8e d0                	mov    %eax,%ss
ffffffff80200742:	66 b8 33 00          	mov    $0x33,%ax
ffffffff80200746:	0f 00 d8             	ltr    %ax
ffffffff80200749:	58                   	pop    %rax
ffffffff8020074a:	48 83 c4 20          	add    $0x20,%rsp
ffffffff8020074e:	5d                   	pop    %rbp
ffffffff8020074f:	c3                   	retq   

ffffffff80200750 <GDT_SetEntry>:
ffffffff80200750:	55                   	push   %rbp
ffffffff80200751:	48 89 e5             	mov    %rsp,%rbp
ffffffff80200754:	53                   	push   %rbx
ffffffff80200755:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff80200759:	44 88 c0             	mov    %r8b,%al
ffffffff8020075c:	41 88 c9             	mov    %cl,%r9b
ffffffff8020075f:	89 7d f4             	mov    %edi,-0xc(%rbp)
ffffffff80200762:	89 75 f0             	mov    %esi,-0x10(%rbp)
ffffffff80200765:	89 55 ec             	mov    %edx,-0x14(%rbp)
ffffffff80200768:	44 88 4d eb          	mov    %r9b,-0x15(%rbp)
ffffffff8020076c:	88 45 ea             	mov    %al,-0x16(%rbp)
ffffffff8020076f:	66 44 8b 55 f0       	mov    -0x10(%rbp),%r10w
ffffffff80200774:	4c 63 5d f4          	movslq -0xc(%rbp),%r11
ffffffff80200778:	48 8b 1c 25 28 4c 28 	mov    0xffffffff80284c28,%rbx
ffffffff8020077f:	80 
ffffffff80200780:	66 46 89 54 db 02    	mov    %r10w,0x2(%rbx,%r11,8)
ffffffff80200786:	8a 45 f2             	mov    -0xe(%rbp),%al
ffffffff80200789:	4c 63 5d f4          	movslq -0xc(%rbp),%r11
ffffffff8020078d:	48 8b 1c 25 28 4c 28 	mov    0xffffffff80284c28,%rbx
ffffffff80200794:	80 
ffffffff80200795:	42 88 44 db 04       	mov    %al,0x4(%rbx,%r11,8)
ffffffff8020079a:	8a 45 f3             	mov    -0xd(%rbp),%al
ffffffff8020079d:	4c 63 5d f4          	movslq -0xc(%rbp),%r11
ffffffff802007a1:	48 8b 1c 25 28 4c 28 	mov    0xffffffff80284c28,%rbx
ffffffff802007a8:	80 
ffffffff802007a9:	42 88 44 db 07       	mov    %al,0x7(%rbx,%r11,8)
ffffffff802007ae:	66 44 8b 55 ec       	mov    -0x14(%rbp),%r10w
ffffffff802007b3:	4c 63 5d f4          	movslq -0xc(%rbp),%r11
ffffffff802007b7:	48 8b 1c 25 28 4c 28 	mov    0xffffffff80284c28,%rbx
ffffffff802007be:	80 
ffffffff802007bf:	66 46 89 14 db       	mov    %r10w,(%rbx,%r11,8)
ffffffff802007c4:	0f b7 4d ee          	movzwl -0x12(%rbp),%ecx
ffffffff802007c8:	83 e1 0f             	and    $0xf,%ecx
ffffffff802007cb:	88 c8                	mov    %cl,%al
ffffffff802007cd:	4c 63 5d f4          	movslq -0xc(%rbp),%r11
ffffffff802007d1:	48 8b 1c 25 28 4c 28 	mov    0xffffffff80284c28,%rbx
ffffffff802007d8:	80 
ffffffff802007d9:	42 88 44 db 06       	mov    %al,0x6(%rbx,%r11,8)
ffffffff802007de:	0f b6 4d ea          	movzbl -0x16(%rbp),%ecx
ffffffff802007e2:	81 e1 f0 00 00 00    	and    $0xf0,%ecx
ffffffff802007e8:	4c 63 5d f4          	movslq -0xc(%rbp),%r11
ffffffff802007ec:	48 8b 1c 25 28 4c 28 	mov    0xffffffff80284c28,%rbx
ffffffff802007f3:	80 
ffffffff802007f4:	42 0f b6 54 db 06    	movzbl 0x6(%rbx,%r11,8),%edx
ffffffff802007fa:	09 ca                	or     %ecx,%edx
ffffffff802007fc:	88 d0                	mov    %dl,%al
ffffffff802007fe:	42 88 44 db 06       	mov    %al,0x6(%rbx,%r11,8)
ffffffff80200803:	8a 45 eb             	mov    -0x15(%rbp),%al
ffffffff80200806:	4c 63 5d f4          	movslq -0xc(%rbp),%r11
ffffffff8020080a:	48 8b 1c 25 28 4c 28 	mov    0xffffffff80284c28,%rbx
ffffffff80200811:	80 
ffffffff80200812:	42 88 44 db 05       	mov    %al,0x5(%rbx,%r11,8)
ffffffff80200817:	48 83 c4 10          	add    $0x10,%rsp
ffffffff8020081b:	5b                   	pop    %rbx
ffffffff8020081c:	5d                   	pop    %rbp
ffffffff8020081d:	c3                   	retq   
ffffffff8020081e:	66 90                	xchg   %ax,%ax

ffffffff80200820 <GDT_SetTSS>:
ffffffff80200820:	55                   	push   %rbp
ffffffff80200821:	48 89 e5             	mov    %rsp,%rbp
ffffffff80200824:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff80200828:	88 c8                	mov    %cl,%al
ffffffff8020082a:	89 7d fc             	mov    %edi,-0x4(%rbp)
ffffffff8020082d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff80200831:	89 55 ec             	mov    %edx,-0x14(%rbp)
ffffffff80200834:	88 45 eb             	mov    %al,-0x15(%rbp)
ffffffff80200837:	8b 7d fc             	mov    -0x4(%rbp),%edi
ffffffff8020083a:	8b 75 f0             	mov    -0x10(%rbp),%esi
ffffffff8020083d:	8b 55 ec             	mov    -0x14(%rbp),%edx
ffffffff80200840:	0f b6 4d eb          	movzbl -0x15(%rbp),%ecx
ffffffff80200844:	45 31 c0             	xor    %r8d,%r8d
ffffffff80200847:	44 89 45 e4          	mov    %r8d,-0x1c(%rbp)
ffffffff8020084b:	e8 00 ff ff ff       	callq  ffffffff80200750 <GDT_SetEntry>
ffffffff80200850:	8b 4d fc             	mov    -0x4(%rbp),%ecx
ffffffff80200853:	ff c1                	inc    %ecx
ffffffff80200855:	89 cf                	mov    %ecx,%edi
ffffffff80200857:	8b 75 e4             	mov    -0x1c(%rbp),%esi
ffffffff8020085a:	8b 55 e4             	mov    -0x1c(%rbp),%edx
ffffffff8020085d:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
ffffffff80200860:	44 8b 45 e4          	mov    -0x1c(%rbp),%r8d
ffffffff80200864:	e8 e7 fe ff ff       	callq  ffffffff80200750 <GDT_SetEntry>
ffffffff80200869:	66 44 8b 4d f4       	mov    -0xc(%rbp),%r9w
ffffffff8020086e:	8b 4d fc             	mov    -0x4(%rbp),%ecx
ffffffff80200871:	ff c1                	inc    %ecx
ffffffff80200873:	4c 63 d1             	movslq %ecx,%r10
ffffffff80200876:	4c 8b 1c 25 28 4c 28 	mov    0xffffffff80284c28,%r11
ffffffff8020087d:	80 
ffffffff8020087e:	66 47 89 0c d3       	mov    %r9w,(%r11,%r10,8)
ffffffff80200883:	0f b7 4d f6          	movzwl -0xa(%rbp),%ecx
ffffffff80200887:	66 41 89 c9          	mov    %cx,%r9w
ffffffff8020088b:	8b 4d fc             	mov    -0x4(%rbp),%ecx
ffffffff8020088e:	ff c1                	inc    %ecx
ffffffff80200890:	4c 63 d1             	movslq %ecx,%r10
ffffffff80200893:	4c 8b 1c 25 28 4c 28 	mov    0xffffffff80284c28,%r11
ffffffff8020089a:	80 
ffffffff8020089b:	66 47 89 4c d3 02    	mov    %r9w,0x2(%r11,%r10,8)
ffffffff802008a1:	48 83 c4 20          	add    $0x20,%rsp
ffffffff802008a5:	5d                   	pop    %rbp
ffffffff802008a6:	c3                   	retq   
ffffffff802008a7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff802008ae:	00 00 

ffffffff802008b0 <GDT_InitializeMP>:
ffffffff802008b0:	55                   	push   %rbp
ffffffff802008b1:	48 89 e5             	mov    %rsp,%rbp
ffffffff802008b4:	b8 b2 00 00 00       	mov    $0xb2,%eax
ffffffff802008b9:	89 c7                	mov    %eax,%edi
ffffffff802008bb:	e8 90 1b 00 00       	callq  ffffffff80202450 <AllocateAPLSMemory>
ffffffff802008c0:	48 89 04 25 28 4c 28 	mov    %rax,0xffffffff80284c28
ffffffff802008c7:	80 
ffffffff802008c8:	5d                   	pop    %rbp
ffffffff802008c9:	c3                   	retq   
ffffffff802008ca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

ffffffff802008d0 <GDT_Initialize>:
ffffffff802008d0:	55                   	push   %rbp
ffffffff802008d1:	48 89 e5             	mov    %rsp,%rbp
ffffffff802008d4:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff802008d8:	fa                   	cli    
ffffffff802008d9:	48 8b 3c 25 28 4c 28 	mov    0xffffffff80284c28,%rdi
ffffffff802008e0:	80 
ffffffff802008e1:	b8 b2 00 00 00       	mov    $0xb2,%eax
ffffffff802008e6:	89 c2                	mov    %eax,%edx
ffffffff802008e8:	31 c0                	xor    %eax,%eax
ffffffff802008ea:	89 c6                	mov    %eax,%esi
ffffffff802008ec:	89 45 fc             	mov    %eax,-0x4(%rbp)
ffffffff802008ef:	e8 6c 7e 00 00       	callq  ffffffff80208760 <memset>
ffffffff802008f4:	48 8b 14 25 28 4c 28 	mov    0xffffffff80284c28,%rdx
ffffffff802008fb:	80 
ffffffff802008fc:	66 c7 82 b0 00 00 00 	movw   $0x68,0xb0(%rdx)
ffffffff80200903:	68 00 
ffffffff80200905:	48 8b 14 25 28 4c 28 	mov    0xffffffff80284c28,%rdx
ffffffff8020090c:	80 
ffffffff8020090d:	66 c7 42 40 3f 00    	movw   $0x3f,0x40(%rdx)
ffffffff80200913:	48 8b 14 25 28 4c 28 	mov    0xffffffff80284c28,%rdx
ffffffff8020091a:	80 
ffffffff8020091b:	48 89 52 42          	mov    %rdx,0x42(%rdx)
ffffffff8020091f:	8b 7d fc             	mov    -0x4(%rbp),%edi
ffffffff80200922:	8b 75 fc             	mov    -0x4(%rbp),%esi
ffffffff80200925:	8b 55 fc             	mov    -0x4(%rbp),%edx
ffffffff80200928:	8b 4d fc             	mov    -0x4(%rbp),%ecx
ffffffff8020092b:	44 8b 45 fc          	mov    -0x4(%rbp),%r8d
ffffffff8020092f:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff80200933:	e8 18 fe ff ff       	callq  ffffffff80200750 <GDT_SetEntry>
ffffffff80200938:	bf 01 00 00 00       	mov    $0x1,%edi
ffffffff8020093d:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
ffffffff80200942:	ba 9b 00 00 00       	mov    $0x9b,%edx
ffffffff80200947:	be a0 00 00 00       	mov    $0xa0,%esi
ffffffff8020094c:	44 8b 45 fc          	mov    -0x4(%rbp),%r8d
ffffffff80200950:	89 75 ec             	mov    %esi,-0x14(%rbp)
ffffffff80200953:	44 89 c6             	mov    %r8d,%esi
ffffffff80200956:	89 55 e8             	mov    %edx,-0x18(%rbp)
ffffffff80200959:	89 ca                	mov    %ecx,%edx
ffffffff8020095b:	44 8b 4d e8          	mov    -0x18(%rbp),%r9d
ffffffff8020095f:	89 4d e4             	mov    %ecx,-0x1c(%rbp)
ffffffff80200962:	44 89 c9             	mov    %r9d,%ecx
ffffffff80200965:	44 8b 45 ec          	mov    -0x14(%rbp),%r8d
ffffffff80200969:	e8 e2 fd ff ff       	callq  ffffffff80200750 <GDT_SetEntry>
ffffffff8020096e:	bf 02 00 00 00       	mov    $0x2,%edi
ffffffff80200973:	b9 93 00 00 00       	mov    $0x93,%ecx
ffffffff80200978:	8b 75 fc             	mov    -0x4(%rbp),%esi
ffffffff8020097b:	8b 55 e4             	mov    -0x1c(%rbp),%edx
ffffffff8020097e:	44 8b 45 fc          	mov    -0x4(%rbp),%r8d
ffffffff80200982:	e8 c9 fd ff ff       	callq  ffffffff80200750 <GDT_SetEntry>
ffffffff80200987:	bf 03 00 00 00       	mov    $0x3,%edi
ffffffff8020098c:	b9 fb 00 00 00       	mov    $0xfb,%ecx
ffffffff80200991:	41 b8 d0 00 00 00    	mov    $0xd0,%r8d
ffffffff80200997:	8b 75 fc             	mov    -0x4(%rbp),%esi
ffffffff8020099a:	8b 55 e4             	mov    -0x1c(%rbp),%edx
ffffffff8020099d:	89 4d e0             	mov    %ecx,-0x20(%rbp)
ffffffff802009a0:	e8 ab fd ff ff       	callq  ffffffff80200750 <GDT_SetEntry>
ffffffff802009a5:	bf 04 00 00 00       	mov    $0x4,%edi
ffffffff802009aa:	b9 f3 00 00 00       	mov    $0xf3,%ecx
ffffffff802009af:	8b 75 fc             	mov    -0x4(%rbp),%esi
ffffffff802009b2:	8b 55 e4             	mov    -0x1c(%rbp),%edx
ffffffff802009b5:	44 8b 45 fc          	mov    -0x4(%rbp),%r8d
ffffffff802009b9:	e8 92 fd ff ff       	callq  ffffffff80200750 <GDT_SetEntry>
ffffffff802009be:	bf 05 00 00 00       	mov    $0x5,%edi
ffffffff802009c3:	8b 75 fc             	mov    -0x4(%rbp),%esi
ffffffff802009c6:	8b 55 e4             	mov    -0x1c(%rbp),%edx
ffffffff802009c9:	8b 4d e0             	mov    -0x20(%rbp),%ecx
ffffffff802009cc:	44 8b 45 ec          	mov    -0x14(%rbp),%r8d
ffffffff802009d0:	e8 7b fd ff ff       	callq  ffffffff80200750 <GDT_SetEntry>
ffffffff802009d5:	48 8b 04 25 28 4c 28 	mov    0xffffffff80284c28,%rax
ffffffff802009dc:	80 
ffffffff802009dd:	48 83 c0 4a          	add    $0x4a,%rax
ffffffff802009e1:	bf 06 00 00 00       	mov    $0x6,%edi
ffffffff802009e6:	ba 68 00 00 00       	mov    $0x68,%edx
ffffffff802009eb:	b9 e9 00 00 00       	mov    $0xe9,%ecx
ffffffff802009f0:	48 89 c6             	mov    %rax,%rsi
ffffffff802009f3:	e8 28 fe ff ff       	callq  ffffffff80200820 <GDT_SetTSS>
ffffffff802009f8:	48 8b 04 25 28 4c 28 	mov    0xffffffff80284c28,%rax
ffffffff802009ff:	80 
ffffffff80200a00:	48 83 c0 40          	add    $0x40,%rax
ffffffff80200a04:	0f 01 10             	lgdt   (%rax)
ffffffff80200a07:	50                   	push   %rax
ffffffff80200a08:	48 c7 c0 11 0a 20 80 	mov    $0xffffffff80200a11,%rax
ffffffff80200a0f:	50                   	push   %rax
ffffffff80200a10:	c3                   	retq   

ffffffff80200a11 <flush>:
ffffffff80200a11:	66 b8 10 00          	mov    $0x10,%ax
ffffffff80200a15:	8e d8                	mov    %eax,%ds
ffffffff80200a17:	8e c0                	mov    %eax,%es
ffffffff80200a19:	8e e0                	mov    %eax,%fs
ffffffff80200a1b:	8e e8                	mov    %eax,%gs
ffffffff80200a1d:	8e d0                	mov    %eax,%ss
ffffffff80200a1f:	66 b8 33 00          	mov    $0x33,%ax
ffffffff80200a23:	0f 00 d8             	ltr    %ax
ffffffff80200a26:	58                   	pop    %rax
ffffffff80200a27:	48 83 c4 20          	add    $0x20,%rsp
ffffffff80200a2b:	5d                   	pop    %rbp
ffffffff80200a2c:	c3                   	retq   
ffffffff80200a2d:	0f 1f 00             	nopl   (%rax)

ffffffff80200a30 <SetInterruptStack>:
ffffffff80200a30:	55                   	push   %rbp
ffffffff80200a31:	48 89 e5             	mov    %rsp,%rbp
ffffffff80200a34:	50                   	push   %rax
ffffffff80200a35:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff80200a39:	48 8b 04 25 28 4c 28 	mov    0xffffffff80284c28,%rax
ffffffff80200a40:	80 
ffffffff80200a41:	48 89 78 4e          	mov    %rdi,0x4e(%rax)
ffffffff80200a45:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80200a49:	5d                   	pop    %rbp
ffffffff80200a4a:	c3                   	retq   
ffffffff80200a4b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

ffffffff80200a50 <GDT_SetIST>:
ffffffff80200a50:	55                   	push   %rbp
ffffffff80200a51:	48 89 e5             	mov    %rsp,%rbp
ffffffff80200a54:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff80200a58:	40 88 f8             	mov    %dil,%al
ffffffff80200a5b:	88 45 ff             	mov    %al,-0x1(%rbp)
ffffffff80200a5e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff80200a62:	0f b6 7d ff          	movzbl -0x1(%rbp),%edi
ffffffff80200a66:	ff cf                	dec    %edi
ffffffff80200a68:	89 fe                	mov    %edi,%esi
ffffffff80200a6a:	83 ef 06             	sub    $0x6,%edi
ffffffff80200a6d:	48 89 75 e8          	mov    %rsi,-0x18(%rbp)
ffffffff80200a71:	89 7d e4             	mov    %edi,-0x1c(%rbp)
ffffffff80200a74:	0f 87 98 00 00 00    	ja     ffffffff80200b12 <GDT_SetIST+0xc2>
ffffffff80200a7a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80200a7e:	48 8b 0c c5 00 f0 20 	mov    -0x7fdf1000(,%rax,8),%rcx
ffffffff80200a85:	80 
ffffffff80200a86:	ff e1                	jmpq   *%rcx
ffffffff80200a88:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80200a8c:	48 8b 0c 25 28 4c 28 	mov    0xffffffff80284c28,%rcx
ffffffff80200a93:	80 
ffffffff80200a94:	48 89 41 6e          	mov    %rax,0x6e(%rcx)
ffffffff80200a98:	eb 7a                	jmp    ffffffff80200b14 <GDT_SetIST+0xc4>
ffffffff80200a9a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80200a9e:	48 8b 0c 25 28 4c 28 	mov    0xffffffff80284c28,%rcx
ffffffff80200aa5:	80 
ffffffff80200aa6:	48 89 41 76          	mov    %rax,0x76(%rcx)
ffffffff80200aaa:	eb 68                	jmp    ffffffff80200b14 <GDT_SetIST+0xc4>
ffffffff80200aac:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80200ab0:	48 8b 0c 25 28 4c 28 	mov    0xffffffff80284c28,%rcx
ffffffff80200ab7:	80 
ffffffff80200ab8:	48 89 41 7e          	mov    %rax,0x7e(%rcx)
ffffffff80200abc:	eb 56                	jmp    ffffffff80200b14 <GDT_SetIST+0xc4>
ffffffff80200abe:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80200ac2:	48 8b 0c 25 28 4c 28 	mov    0xffffffff80284c28,%rcx
ffffffff80200ac9:	80 
ffffffff80200aca:	48 89 81 86 00 00 00 	mov    %rax,0x86(%rcx)
ffffffff80200ad1:	eb 41                	jmp    ffffffff80200b14 <GDT_SetIST+0xc4>
ffffffff80200ad3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80200ad7:	48 8b 0c 25 28 4c 28 	mov    0xffffffff80284c28,%rcx
ffffffff80200ade:	80 
ffffffff80200adf:	48 89 81 8e 00 00 00 	mov    %rax,0x8e(%rcx)
ffffffff80200ae6:	eb 2c                	jmp    ffffffff80200b14 <GDT_SetIST+0xc4>
ffffffff80200ae8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80200aec:	48 8b 0c 25 28 4c 28 	mov    0xffffffff80284c28,%rcx
ffffffff80200af3:	80 
ffffffff80200af4:	48 89 81 96 00 00 00 	mov    %rax,0x96(%rcx)
ffffffff80200afb:	eb 17                	jmp    ffffffff80200b14 <GDT_SetIST+0xc4>
ffffffff80200afd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80200b01:	48 8b 0c 25 28 4c 28 	mov    0xffffffff80284c28,%rcx
ffffffff80200b08:	80 
ffffffff80200b09:	48 89 81 9e 00 00 00 	mov    %rax,0x9e(%rcx)
ffffffff80200b10:	eb 02                	jmp    ffffffff80200b14 <GDT_SetIST+0xc4>
ffffffff80200b12:	eb 00                	jmp    ffffffff80200b14 <GDT_SetIST+0xc4>
ffffffff80200b14:	48 83 c4 20          	add    $0x20,%rsp
ffffffff80200b18:	5d                   	pop    %rbp
ffffffff80200b19:	c3                   	retq   
ffffffff80200b1a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

ffffffff80200b20 <IDT_Initialize>:
ffffffff80200b20:	55                   	push   %rbp
ffffffff80200b21:	48 89 e5             	mov    %rsp,%rbp
ffffffff80200b24:	48 83 ec 30          	sub    $0x30,%rsp
ffffffff80200b28:	66 c7 04 25 30 4c 28 	movw   $0xfff,0xffffffff80284c30
ffffffff80200b2f:	80 ff 0f 
ffffffff80200b32:	48 c7 04 25 32 4c 28 	movq   $0xffffffff80284c40,0xffffffff80284c32
ffffffff80200b39:	80 40 4c 28 80 
ffffffff80200b3e:	48 c7 45 f8 30 4c 28 	movq   $0xffffffff80284c30,-0x8(%rbp)
ffffffff80200b45:	80 
ffffffff80200b46:	fa                   	cli    
ffffffff80200b47:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80200b4b:	0f 01 18             	lidt   (%rax)
ffffffff80200b4e:	8a 0c 25 40 5c 28 80 	mov    0xffffffff80285c40,%cl
ffffffff80200b55:	80 f9 00             	cmp    $0x0,%cl
ffffffff80200b58:	0f 85 fe 00 00 00    	jne    ffffffff80200c5c <IDT_Initialize+0x13c>
ffffffff80200b5e:	c6 04 25 40 5c 28 80 	movb   $0x1,0xffffffff80285c40
ffffffff80200b65:	01 
ffffffff80200b66:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
ffffffff80200b6d:	81 7d f4 00 01 00 00 	cmpl   $0x100,-0xc(%rbp)
ffffffff80200b74:	7d 30                	jge    ffffffff80200ba6 <IDT_Initialize+0x86>
ffffffff80200b76:	31 c0                	xor    %eax,%eax
ffffffff80200b78:	89 c6                	mov    %eax,%esi
ffffffff80200b7a:	89 c7                	mov    %eax,%edi
ffffffff80200b7c:	89 c2                	mov    %eax,%edx
ffffffff80200b7e:	89 c1                	mov    %eax,%ecx
ffffffff80200b80:	41 89 c0             	mov    %eax,%r8d
ffffffff80200b83:	e8 e8 00 00 00       	callq  ffffffff80200c70 <IDT_SetEntry>
ffffffff80200b88:	48 63 75 f4          	movslq -0xc(%rbp),%rsi
ffffffff80200b8c:	48 8d 34 f5 50 5c 28 	lea    -0x7fd7a3b0(,%rsi,8),%rsi
ffffffff80200b93:	80 
ffffffff80200b94:	48 c7 06 00 00 00 00 	movq   $0x0,(%rsi)
ffffffff80200b9b:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff80200b9e:	83 c0 01             	add    $0x1,%eax
ffffffff80200ba1:	89 45 f4             	mov    %eax,-0xc(%rbp)
ffffffff80200ba4:	eb c7                	jmp    ffffffff80200b6d <IDT_Initialize+0x4d>
ffffffff80200ba6:	c7 45 f0 01 00 00 00 	movl   $0x1,-0x10(%rbp)
ffffffff80200bad:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
ffffffff80200bb4:	81 7d ec 00 01 00 00 	cmpl   $0x100,-0x14(%rbp)
ffffffff80200bbb:	0f 8d 99 00 00 00    	jge    ffffffff80200c5a <IDT_Initialize+0x13a>
ffffffff80200bc1:	83 7d ec 08          	cmpl   $0x8,-0x14(%rbp)
ffffffff80200bc5:	74 0c                	je     ffffffff80200bd3 <IDT_Initialize+0xb3>
ffffffff80200bc7:	83 7d ec 0a          	cmpl   $0xa,-0x14(%rbp)
ffffffff80200bcb:	7c 0d                	jl     ffffffff80200bda <IDT_Initialize+0xba>
ffffffff80200bcd:	83 7d ec 0e          	cmpl   $0xe,-0x14(%rbp)
ffffffff80200bd1:	7f 07                	jg     ffffffff80200bda <IDT_Initialize+0xba>
ffffffff80200bd3:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
ffffffff80200bda:	b8 08 00 00 00       	mov    $0x8,%eax
ffffffff80200bdf:	b9 8e 00 00 00       	mov    $0x8e,%ecx
ffffffff80200be4:	31 d2                	xor    %edx,%edx
ffffffff80200be6:	48 63 75 ec          	movslq -0x14(%rbp),%rsi
ffffffff80200bea:	89 f7                	mov    %esi,%edi
ffffffff80200bec:	48 c1 e6 05          	shl    $0x5,%rsi
ffffffff80200bf0:	48 8d b6 50 64 28 80 	lea    -0x7fd79bb0(%rsi),%rsi
ffffffff80200bf7:	44 0f b6 45 f0       	movzbl -0x10(%rbp),%r8d
ffffffff80200bfc:	41 88 f9             	mov    %dil,%r9b
ffffffff80200bff:	41 0f b6 f9          	movzbl %r9b,%edi
ffffffff80200c03:	89 7d e8             	mov    %edi,-0x18(%rbp)
ffffffff80200c06:	48 89 f7             	mov    %rsi,%rdi
ffffffff80200c09:	8b 75 e8             	mov    -0x18(%rbp),%esi
ffffffff80200c0c:	89 55 e4             	mov    %edx,-0x1c(%rbp)
ffffffff80200c0f:	44 89 c2             	mov    %r8d,%edx
ffffffff80200c12:	89 45 e0             	mov    %eax,-0x20(%rbp)
ffffffff80200c15:	89 4d dc             	mov    %ecx,-0x24(%rbp)
ffffffff80200c18:	e8 13 01 00 00       	callq  ffffffff80200d30 <IDT_FillSWInterruptHandler>
ffffffff80200c1d:	48 63 7d ec          	movslq -0x14(%rbp),%rdi
ffffffff80200c21:	41 88 f9             	mov    %dil,%r9b
ffffffff80200c24:	48 c1 e7 05          	shl    $0x5,%rdi
ffffffff80200c28:	48 8d b7 50 64 28 80 	lea    -0x7fd79bb0(%rdi),%rsi
ffffffff80200c2f:	41 0f b6 f9          	movzbl %r9b,%edi
ffffffff80200c33:	ba 08 00 00 00       	mov    $0x8,%edx
ffffffff80200c38:	b9 8e 00 00 00       	mov    $0x8e,%ecx
ffffffff80200c3d:	45 31 c0             	xor    %r8d,%r8d
ffffffff80200c40:	e8 2b 00 00 00       	callq  ffffffff80200c70 <IDT_SetEntry>
ffffffff80200c45:	c7 45 f0 01 00 00 00 	movl   $0x1,-0x10(%rbp)
ffffffff80200c4c:	8b 45 ec             	mov    -0x14(%rbp),%eax
ffffffff80200c4f:	83 c0 01             	add    $0x1,%eax
ffffffff80200c52:	89 45 ec             	mov    %eax,-0x14(%rbp)
ffffffff80200c55:	e9 5a ff ff ff       	jmpq   ffffffff80200bb4 <IDT_Initialize+0x94>
ffffffff80200c5a:	eb 00                	jmp    ffffffff80200c5c <IDT_Initialize+0x13c>
ffffffff80200c5c:	48 83 c4 30          	add    $0x30,%rsp
ffffffff80200c60:	5d                   	pop    %rbp
ffffffff80200c61:	c3                   	retq   
ffffffff80200c62:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff80200c66:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80200c6d:	00 00 00 

ffffffff80200c70 <IDT_SetEntry>:
ffffffff80200c70:	55                   	push   %rbp
ffffffff80200c71:	48 89 e5             	mov    %rsp,%rbp
ffffffff80200c74:	48 83 ec 18          	sub    $0x18,%rsp
ffffffff80200c78:	44 88 c0             	mov    %r8b,%al
ffffffff80200c7b:	41 88 c9             	mov    %cl,%r9b
ffffffff80200c7e:	66 41 89 d2          	mov    %dx,%r10w
ffffffff80200c82:	41 88 fb             	mov    %dil,%r11b
ffffffff80200c85:	44 88 5d ff          	mov    %r11b,-0x1(%rbp)
ffffffff80200c89:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff80200c8d:	66 44 89 55 ee       	mov    %r10w,-0x12(%rbp)
ffffffff80200c92:	44 88 4d ed          	mov    %r9b,-0x13(%rbp)
ffffffff80200c96:	88 45 ec             	mov    %al,-0x14(%rbp)
ffffffff80200c99:	66 44 8b 55 f0       	mov    -0x10(%rbp),%r10w
ffffffff80200c9e:	0f b6 4d ff          	movzbl -0x1(%rbp),%ecx
ffffffff80200ca2:	89 ce                	mov    %ecx,%esi
ffffffff80200ca4:	48 c1 e6 04          	shl    $0x4,%rsi
ffffffff80200ca8:	66 44 89 96 40 4c 28 	mov    %r10w,-0x7fd7b3c0(%rsi)
ffffffff80200caf:	80 
ffffffff80200cb0:	66 44 8b 55 f2       	mov    -0xe(%rbp),%r10w
ffffffff80200cb5:	0f b6 4d ff          	movzbl -0x1(%rbp),%ecx
ffffffff80200cb9:	89 ce                	mov    %ecx,%esi
ffffffff80200cbb:	48 c1 e6 04          	shl    $0x4,%rsi
ffffffff80200cbf:	66 44 89 96 46 4c 28 	mov    %r10w,-0x7fd7b3ba(%rsi)
ffffffff80200cc6:	80 
ffffffff80200cc7:	8b 4d f4             	mov    -0xc(%rbp),%ecx
ffffffff80200cca:	0f b6 55 ff          	movzbl -0x1(%rbp),%edx
ffffffff80200cce:	89 d6                	mov    %edx,%esi
ffffffff80200cd0:	48 c1 e6 04          	shl    $0x4,%rsi
ffffffff80200cd4:	89 8e 48 4c 28 80    	mov    %ecx,-0x7fd7b3b8(%rsi)
ffffffff80200cda:	8a 45 ed             	mov    -0x13(%rbp),%al
ffffffff80200cdd:	0f b6 4d ff          	movzbl -0x1(%rbp),%ecx
ffffffff80200ce1:	89 ce                	mov    %ecx,%esi
ffffffff80200ce3:	48 c1 e6 04          	shl    $0x4,%rsi
ffffffff80200ce7:	88 86 45 4c 28 80    	mov    %al,-0x7fd7b3bb(%rsi)
ffffffff80200ced:	0f b6 4d ec          	movzbl -0x14(%rbp),%ecx
ffffffff80200cf1:	83 e1 07             	and    $0x7,%ecx
ffffffff80200cf4:	88 c8                	mov    %cl,%al
ffffffff80200cf6:	0f b6 4d ff          	movzbl -0x1(%rbp),%ecx
ffffffff80200cfa:	89 ce                	mov    %ecx,%esi
ffffffff80200cfc:	48 c1 e6 04          	shl    $0x4,%rsi
ffffffff80200d00:	88 86 44 4c 28 80    	mov    %al,-0x7fd7b3bc(%rsi)
ffffffff80200d06:	0f b7 4d ee          	movzwl -0x12(%rbp),%ecx
ffffffff80200d0a:	66 41 89 ca          	mov    %cx,%r10w
ffffffff80200d0e:	0f b6 4d ff          	movzbl -0x1(%rbp),%ecx
ffffffff80200d12:	89 ce                	mov    %ecx,%esi
ffffffff80200d14:	48 c1 e6 04          	shl    $0x4,%rsi
ffffffff80200d18:	48 8d b6 40 4c 28 80 	lea    -0x7fd7b3c0(%rsi),%rsi
ffffffff80200d1f:	66 44 89 56 02       	mov    %r10w,0x2(%rsi)
ffffffff80200d24:	48 83 c4 18          	add    $0x18,%rsp
ffffffff80200d28:	5d                   	pop    %rbp
ffffffff80200d29:	c3                   	retq   
ffffffff80200d2a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

ffffffff80200d30 <IDT_FillSWInterruptHandler>:
ffffffff80200d30:	55                   	push   %rbp
ffffffff80200d31:	48 89 e5             	mov    %rsp,%rbp
ffffffff80200d34:	53                   	push   %rbx
ffffffff80200d35:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff80200d39:	88 d0                	mov    %dl,%al
ffffffff80200d3b:	40 88 f1             	mov    %sil,%cl
ffffffff80200d3e:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
ffffffff80200d42:	88 4d ef             	mov    %cl,-0x11(%rbp)
ffffffff80200d45:	88 45 ee             	mov    %al,-0x12(%rbp)
ffffffff80200d48:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%rbp)
ffffffff80200d4f:	80 7d ee 00          	cmpb   $0x0,-0x12(%rbp)
ffffffff80200d53:	74 30                	je     ffffffff80200d85 <IDT_FillSWInterruptHandler+0x55>
ffffffff80200d55:	8b 45 e8             	mov    -0x18(%rbp),%eax
ffffffff80200d58:	89 c1                	mov    %eax,%ecx
ffffffff80200d5a:	83 c1 01             	add    $0x1,%ecx
ffffffff80200d5d:	89 4d e8             	mov    %ecx,-0x18(%rbp)
ffffffff80200d60:	48 63 d0             	movslq %eax,%rdx
ffffffff80200d63:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
ffffffff80200d67:	c6 04 16 6a          	movb   $0x6a,(%rsi,%rdx,1)
ffffffff80200d6b:	40 8a 7d ee          	mov    -0x12(%rbp),%dil
ffffffff80200d6f:	8b 45 e8             	mov    -0x18(%rbp),%eax
ffffffff80200d72:	89 c1                	mov    %eax,%ecx
ffffffff80200d74:	83 c1 01             	add    $0x1,%ecx
ffffffff80200d77:	89 4d e8             	mov    %ecx,-0x18(%rbp)
ffffffff80200d7a:	48 63 d0             	movslq %eax,%rdx
ffffffff80200d7d:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
ffffffff80200d81:	40 88 3c 16          	mov    %dil,(%rsi,%rdx,1)
ffffffff80200d85:	48 63 45 e8          	movslq -0x18(%rbp),%rax
ffffffff80200d89:	89 c1                	mov    %eax,%ecx
ffffffff80200d8b:	ff c1                	inc    %ecx
ffffffff80200d8d:	89 4d e8             	mov    %ecx,-0x18(%rbp)
ffffffff80200d90:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff80200d94:	c6 04 02 6a          	movb   $0x6a,(%rdx,%rax,1)
ffffffff80200d98:	40 8a 75 ef          	mov    -0x11(%rbp),%sil
ffffffff80200d9c:	48 63 45 e8          	movslq -0x18(%rbp),%rax
ffffffff80200da0:	89 c1                	mov    %eax,%ecx
ffffffff80200da2:	ff c1                	inc    %ecx
ffffffff80200da4:	89 4d e8             	mov    %ecx,-0x18(%rbp)
ffffffff80200da7:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff80200dab:	40 88 34 02          	mov    %sil,(%rdx,%rax,1)
ffffffff80200daf:	48 63 45 e8          	movslq -0x18(%rbp),%rax
ffffffff80200db3:	89 c1                	mov    %eax,%ecx
ffffffff80200db5:	ff c1                	inc    %ecx
ffffffff80200db7:	89 4d e8             	mov    %ecx,-0x18(%rbp)
ffffffff80200dba:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff80200dbe:	c6 04 02 50          	movb   $0x50,(%rdx,%rax,1)
ffffffff80200dc2:	48 63 45 e8          	movslq -0x18(%rbp),%rax
ffffffff80200dc6:	89 c1                	mov    %eax,%ecx
ffffffff80200dc8:	ff c1                	inc    %ecx
ffffffff80200dca:	89 4d e8             	mov    %ecx,-0x18(%rbp)
ffffffff80200dcd:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff80200dd1:	c6 04 02 48          	movb   $0x48,(%rdx,%rax,1)
ffffffff80200dd5:	48 63 45 e8          	movslq -0x18(%rbp),%rax
ffffffff80200dd9:	89 c1                	mov    %eax,%ecx
ffffffff80200ddb:	ff c1                	inc    %ecx
ffffffff80200ddd:	89 4d e8             	mov    %ecx,-0x18(%rbp)
ffffffff80200de0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff80200de4:	c6 04 02 b8          	movb   $0xb8,(%rdx,%rax,1)
ffffffff80200de8:	48 63 45 e8          	movslq -0x18(%rbp),%rax
ffffffff80200dec:	89 c1                	mov    %eax,%ecx
ffffffff80200dee:	ff c1                	inc    %ecx
ffffffff80200df0:	89 4d e8             	mov    %ecx,-0x18(%rbp)
ffffffff80200df3:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff80200df7:	48 c7 c7 90 0f 20 80 	mov    $0xffffffff80200f90,%rdi
ffffffff80200dfe:	40 88 fe             	mov    %dil,%sil
ffffffff80200e01:	40 88 34 02          	mov    %sil,(%rdx,%rax,1)
ffffffff80200e05:	48 63 45 e8          	movslq -0x18(%rbp),%rax
ffffffff80200e09:	89 c1                	mov    %eax,%ecx
ffffffff80200e0b:	ff c1                	inc    %ecx
ffffffff80200e0d:	89 4d e8             	mov    %ecx,-0x18(%rbp)
ffffffff80200e10:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff80200e14:	48 89 fb             	mov    %rdi,%rbx
ffffffff80200e17:	88 f9                	mov    %bh,%cl
ffffffff80200e19:	88 0c 02             	mov    %cl,(%rdx,%rax,1)
ffffffff80200e1c:	48 63 45 e8          	movslq -0x18(%rbp),%rax
ffffffff80200e20:	41 89 c0             	mov    %eax,%r8d
ffffffff80200e23:	41 ff c0             	inc    %r8d
ffffffff80200e26:	44 89 45 e8          	mov    %r8d,-0x18(%rbp)
ffffffff80200e2a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff80200e2e:	48 89 fb             	mov    %rdi,%rbx
ffffffff80200e31:	48 c1 eb 10          	shr    $0x10,%rbx
ffffffff80200e35:	88 d9                	mov    %bl,%cl
ffffffff80200e37:	88 0c 02             	mov    %cl,(%rdx,%rax,1)
ffffffff80200e3a:	48 63 45 e8          	movslq -0x18(%rbp),%rax
ffffffff80200e3e:	41 89 c0             	mov    %eax,%r8d
ffffffff80200e41:	41 ff c0             	inc    %r8d
ffffffff80200e44:	44 89 45 e8          	mov    %r8d,-0x18(%rbp)
ffffffff80200e48:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff80200e4c:	48 89 fb             	mov    %rdi,%rbx
ffffffff80200e4f:	48 c1 eb 18          	shr    $0x18,%rbx
ffffffff80200e53:	88 d9                	mov    %bl,%cl
ffffffff80200e55:	88 0c 02             	mov    %cl,(%rdx,%rax,1)
ffffffff80200e58:	48 63 45 e8          	movslq -0x18(%rbp),%rax
ffffffff80200e5c:	41 89 c0             	mov    %eax,%r8d
ffffffff80200e5f:	41 ff c0             	inc    %r8d
ffffffff80200e62:	44 89 45 e8          	mov    %r8d,-0x18(%rbp)
ffffffff80200e66:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff80200e6a:	48 89 fb             	mov    %rdi,%rbx
ffffffff80200e6d:	48 c1 eb 20          	shr    $0x20,%rbx
ffffffff80200e71:	88 d9                	mov    %bl,%cl
ffffffff80200e73:	88 0c 02             	mov    %cl,(%rdx,%rax,1)
ffffffff80200e76:	48 63 45 e8          	movslq -0x18(%rbp),%rax
ffffffff80200e7a:	41 89 c0             	mov    %eax,%r8d
ffffffff80200e7d:	41 ff c0             	inc    %r8d
ffffffff80200e80:	44 89 45 e8          	mov    %r8d,-0x18(%rbp)
ffffffff80200e84:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff80200e88:	48 89 fb             	mov    %rdi,%rbx
ffffffff80200e8b:	48 c1 eb 28          	shr    $0x28,%rbx
ffffffff80200e8f:	88 d9                	mov    %bl,%cl
ffffffff80200e91:	88 0c 02             	mov    %cl,(%rdx,%rax,1)
ffffffff80200e94:	48 63 45 e8          	movslq -0x18(%rbp),%rax
ffffffff80200e98:	41 89 c0             	mov    %eax,%r8d
ffffffff80200e9b:	41 ff c0             	inc    %r8d
ffffffff80200e9e:	44 89 45 e8          	mov    %r8d,-0x18(%rbp)
ffffffff80200ea2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff80200ea6:	48 89 fb             	mov    %rdi,%rbx
ffffffff80200ea9:	48 c1 eb 30          	shr    $0x30,%rbx
ffffffff80200ead:	88 d9                	mov    %bl,%cl
ffffffff80200eaf:	88 0c 02             	mov    %cl,(%rdx,%rax,1)
ffffffff80200eb2:	48 63 45 e8          	movslq -0x18(%rbp),%rax
ffffffff80200eb6:	41 89 c0             	mov    %eax,%r8d
ffffffff80200eb9:	41 ff c0             	inc    %r8d
ffffffff80200ebc:	44 89 45 e8          	mov    %r8d,-0x18(%rbp)
ffffffff80200ec0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff80200ec4:	48 c1 ef 38          	shr    $0x38,%rdi
ffffffff80200ec8:	40 88 f9             	mov    %dil,%cl
ffffffff80200ecb:	88 0c 02             	mov    %cl,(%rdx,%rax,1)
ffffffff80200ece:	44 8b 45 e8          	mov    -0x18(%rbp),%r8d
ffffffff80200ed2:	45 89 c1             	mov    %r8d,%r9d
ffffffff80200ed5:	41 83 c1 01          	add    $0x1,%r9d
ffffffff80200ed9:	44 89 4d e8          	mov    %r9d,-0x18(%rbp)
ffffffff80200edd:	49 63 c0             	movslq %r8d,%rax
ffffffff80200ee0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff80200ee4:	c6 04 02 50          	movb   $0x50,(%rdx,%rax,1)
ffffffff80200ee8:	44 8b 45 e8          	mov    -0x18(%rbp),%r8d
ffffffff80200eec:	45 89 c1             	mov    %r8d,%r9d
ffffffff80200eef:	41 83 c1 01          	add    $0x1,%r9d
ffffffff80200ef3:	44 89 4d e8          	mov    %r9d,-0x18(%rbp)
ffffffff80200ef7:	49 63 c0             	movslq %r8d,%rax
ffffffff80200efa:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff80200efe:	c6 04 02 c3          	movb   $0xc3,(%rdx,%rax,1)
ffffffff80200f02:	48 83 c4 10          	add    $0x10,%rsp
ffffffff80200f06:	5b                   	pop    %rbx
ffffffff80200f07:	5d                   	pop    %rbp
ffffffff80200f08:	c3                   	retq   
ffffffff80200f09:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

ffffffff80200f10 <IDT_ChangeEntry>:
ffffffff80200f10:	55                   	push   %rbp
ffffffff80200f11:	48 89 e5             	mov    %rsp,%rbp
ffffffff80200f14:	48 83 ec 06          	sub    $0x6,%rsp
ffffffff80200f18:	88 c8                	mov    %cl,%al
ffffffff80200f1a:	41 88 d0             	mov    %dl,%r8b
ffffffff80200f1d:	66 41 89 f1          	mov    %si,%r9w
ffffffff80200f21:	41 88 fa             	mov    %dil,%r10b
ffffffff80200f24:	44 88 55 ff          	mov    %r10b,-0x1(%rbp)
ffffffff80200f28:	66 44 89 4d fc       	mov    %r9w,-0x4(%rbp)
ffffffff80200f2d:	44 88 45 fb          	mov    %r8b,-0x5(%rbp)
ffffffff80200f31:	88 45 fa             	mov    %al,-0x6(%rbp)
ffffffff80200f34:	8a 45 fb             	mov    -0x5(%rbp),%al
ffffffff80200f37:	0f b6 4d ff          	movzbl -0x1(%rbp),%ecx
ffffffff80200f3b:	41 89 cb             	mov    %ecx,%r11d
ffffffff80200f3e:	49 c1 e3 04          	shl    $0x4,%r11
ffffffff80200f42:	41 88 83 45 4c 28 80 	mov    %al,-0x7fd7b3bb(%r11)
ffffffff80200f49:	0f b6 4d fa          	movzbl -0x6(%rbp),%ecx
ffffffff80200f4d:	83 e1 07             	and    $0x7,%ecx
ffffffff80200f50:	88 c8                	mov    %cl,%al
ffffffff80200f52:	0f b6 4d ff          	movzbl -0x1(%rbp),%ecx
ffffffff80200f56:	41 89 cb             	mov    %ecx,%r11d
ffffffff80200f59:	49 c1 e3 04          	shl    $0x4,%r11
ffffffff80200f5d:	41 88 83 44 4c 28 80 	mov    %al,-0x7fd7b3bc(%r11)
ffffffff80200f64:	0f b7 4d fc          	movzwl -0x4(%rbp),%ecx
ffffffff80200f68:	66 41 89 c9          	mov    %cx,%r9w
ffffffff80200f6c:	0f b6 4d ff          	movzbl -0x1(%rbp),%ecx
ffffffff80200f70:	41 89 cb             	mov    %ecx,%r11d
ffffffff80200f73:	49 c1 e3 04          	shl    $0x4,%r11
ffffffff80200f77:	4d 8d 9b 40 4c 28 80 	lea    -0x7fd7b3c0(%r11),%r11
ffffffff80200f7e:	66 45 89 4b 02       	mov    %r9w,0x2(%r11)
ffffffff80200f83:	48 83 c4 06          	add    $0x6,%rsp
ffffffff80200f87:	5d                   	pop    %rbp
ffffffff80200f88:	c3                   	retq   
ffffffff80200f89:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

ffffffff80200f90 <IDT_DefaultHandler>:
ffffffff80200f90:	53                   	push   %rbx
ffffffff80200f91:	51                   	push   %rcx
ffffffff80200f92:	52                   	push   %rdx
ffffffff80200f93:	55                   	push   %rbp
ffffffff80200f94:	56                   	push   %rsi
ffffffff80200f95:	57                   	push   %rdi
ffffffff80200f96:	41 50                	push   %r8
ffffffff80200f98:	41 51                	push   %r9
ffffffff80200f9a:	41 52                	push   %r10
ffffffff80200f9c:	41 53                	push   %r11
ffffffff80200f9e:	41 54                	push   %r12
ffffffff80200fa0:	41 55                	push   %r13
ffffffff80200fa2:	41 56                	push   %r14
ffffffff80200fa4:	41 57                	push   %r15
ffffffff80200fa6:	48 89 e7             	mov    %rsp,%rdi
ffffffff80200fa9:	57                   	push   %rdi
ffffffff80200faa:	48 89 e7             	mov    %rsp,%rdi
ffffffff80200fad:	e8 1e 00 00 00       	callq  ffffffff80200fd0 <IDT_MainHandler>
ffffffff80200fb2:	5f                   	pop    %rdi
ffffffff80200fb3:	41 5f                	pop    %r15
ffffffff80200fb5:	41 5e                	pop    %r14
ffffffff80200fb7:	41 5d                	pop    %r13
ffffffff80200fb9:	41 5c                	pop    %r12
ffffffff80200fbb:	41 5b                	pop    %r11
ffffffff80200fbd:	41 5a                	pop    %r10
ffffffff80200fbf:	41 59                	pop    %r9
ffffffff80200fc1:	41 58                	pop    %r8
ffffffff80200fc3:	5f                   	pop    %rdi
ffffffff80200fc4:	5e                   	pop    %rsi
ffffffff80200fc5:	5d                   	pop    %rbp
ffffffff80200fc6:	5a                   	pop    %rdx
ffffffff80200fc7:	59                   	pop    %rcx
ffffffff80200fc8:	5b                   	pop    %rbx
ffffffff80200fc9:	58                   	pop    %rax
ffffffff80200fca:	48 83 c4 10          	add    $0x10,%rsp
ffffffff80200fce:	48 cf                	iretq  

ffffffff80200fd0 <IDT_MainHandler>:
ffffffff80200fd0:	55                   	push   %rbp
ffffffff80200fd1:	48 89 e5             	mov    %rsp,%rbp
ffffffff80200fd4:	53                   	push   %rbx
ffffffff80200fd5:	50                   	push   %rax
ffffffff80200fd6:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
ffffffff80200fda:	48 8b bf 80 00 00 00 	mov    0x80(%rdi),%rdi
ffffffff80200fe1:	48 8d 3c fd 50 5c 28 	lea    -0x7fd7a3b0(,%rdi,8),%rdi
ffffffff80200fe8:	80 
ffffffff80200fe9:	48 83 3f 00          	cmpq   $0x0,(%rdi)
ffffffff80200fed:	74 1e                	je     ffffffff8020100d <IDT_MainHandler+0x3d>
ffffffff80200fef:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80200ff3:	48 8b 80 80 00 00 00 	mov    0x80(%rax),%rax
ffffffff80200ffa:	48 8d 04 c5 50 5c 28 	lea    -0x7fd7a3b0(,%rax,8),%rax
ffffffff80201001:	80 
ffffffff80201002:	48 8b 00             	mov    (%rax),%rax
ffffffff80201005:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
ffffffff80201009:	ff d0                	callq  *%rax
ffffffff8020100b:	eb 22                	jmp    ffffffff8020102f <IDT_MainHandler+0x5f>
ffffffff8020100d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80201011:	48 8b 80 80 00 00 00 	mov    0x80(%rax),%rax
ffffffff80201018:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
ffffffff8020101c:	48 8b 99 88 00 00 00 	mov    0x88(%rcx),%rbx
ffffffff80201023:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
ffffffff80201027:	48 8b 89 90 00 00 00 	mov    0x90(%rcx),%rcx
ffffffff8020102e:	f4                   	hlt    
ffffffff8020102f:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80201033:	5b                   	pop    %rbx
ffffffff80201034:	5d                   	pop    %rbp
ffffffff80201035:	c3                   	retq   
ffffffff80201036:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8020103d:	00 00 00 

ffffffff80201040 <IDT_RegisterHandler>:
ffffffff80201040:	55                   	push   %rbp
ffffffff80201041:	48 89 e5             	mov    %rsp,%rbp
ffffffff80201044:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff80201048:	40 88 f8             	mov    %dil,%al
ffffffff8020104b:	88 45 ff             	mov    %al,-0x1(%rbp)
ffffffff8020104e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff80201052:	0f b6 7d ff          	movzbl -0x1(%rbp),%edi
ffffffff80201056:	89 f9                	mov    %edi,%ecx
ffffffff80201058:	48 8d 0c cd 50 5c 28 	lea    -0x7fd7a3b0(,%rcx,8),%rcx
ffffffff8020105f:	80 
ffffffff80201060:	48 89 31             	mov    %rsi,(%rcx)
ffffffff80201063:	48 83 c4 10          	add    $0x10,%rsp
ffffffff80201067:	5d                   	pop    %rbp
ffffffff80201068:	c3                   	retq   
ffffffff80201069:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

ffffffff80201070 <IDT_RaiseInterrupt>:
ffffffff80201070:	55                   	push   %rbp
ffffffff80201071:	48 89 e5             	mov    %rsp,%rbp
ffffffff80201074:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff80201078:	89 7d fc             	mov    %edi,-0x4(%rbp)
ffffffff8020107b:	81 7d fc 00 01 00 00 	cmpl   $0x100,-0x4(%rbp)
ffffffff80201082:	72 02                	jb     ffffffff80201086 <IDT_RaiseInterrupt+0x16>
ffffffff80201084:	eb 25                	jmp    ffffffff802010ab <IDT_RaiseInterrupt+0x3b>
ffffffff80201086:	c6 04 25 50 84 28 80 	movb   $0xcd,0xffffffff80288450
ffffffff8020108d:	cd 
ffffffff8020108e:	8a 45 fc             	mov    -0x4(%rbp),%al
ffffffff80201091:	88 04 25 51 84 28 80 	mov    %al,0xffffffff80288451
ffffffff80201098:	c6 04 25 52 84 28 80 	movb   $0xc3,0xffffffff80288452
ffffffff8020109f:	c3 
ffffffff802010a0:	48 c7 45 f0 50 84 28 	movq   $0xffffffff80288450,-0x10(%rbp)
ffffffff802010a7:	80 
ffffffff802010a8:	ff 55 f0             	callq  *-0x10(%rbp)
ffffffff802010ab:	48 83 c4 10          	add    $0x10,%rsp
ffffffff802010af:	5d                   	pop    %rbp
ffffffff802010b0:	c3                   	retq   
ffffffff802010b1:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff802010b8:	00 00 00 
ffffffff802010bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

ffffffff802010c0 <CPUID_RequestInfo>:
ffffffff802010c0:	55                   	push   %rbp
ffffffff802010c1:	48 89 e5             	mov    %rsp,%rbp
ffffffff802010c4:	53                   	push   %rbx
ffffffff802010c5:	50                   	push   %rax
ffffffff802010c6:	89 7d f4             	mov    %edi,-0xc(%rbp)
ffffffff802010c9:	89 75 f0             	mov    %esi,-0x10(%rbp)
ffffffff802010cc:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff802010cf:	89 f1                	mov    %esi,%ecx
ffffffff802010d1:	0f a2                	cpuid  
ffffffff802010d3:	89 45 f4             	mov    %eax,-0xc(%rbp)
ffffffff802010d6:	89 1c 25 54 84 28 80 	mov    %ebx,0xffffffff80288454
ffffffff802010dd:	89 4d f0             	mov    %ecx,-0x10(%rbp)
ffffffff802010e0:	89 14 25 58 84 28 80 	mov    %edx,0xffffffff80288458
ffffffff802010e7:	48 83 c4 08          	add    $0x8,%rsp
ffffffff802010eb:	5b                   	pop    %rbx
ffffffff802010ec:	5d                   	pop    %rbp
ffffffff802010ed:	c3                   	retq   
ffffffff802010ee:	66 90                	xchg   %ax,%ax

ffffffff802010f0 <CPUID_GetCacheLineSize>:
ffffffff802010f0:	55                   	push   %rbp
ffffffff802010f1:	48 89 e5             	mov    %rsp,%rbp
ffffffff802010f4:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff802010f8:	8b 04 25 5c 84 28 80 	mov    0xffffffff8028845c,%eax
ffffffff802010ff:	83 f8 00             	cmp    $0x0,%eax
ffffffff80201102:	75 1b                	jne    ffffffff8020111f <CPUID_GetCacheLineSize+0x2f>
ffffffff80201104:	bf 06 00 00 80       	mov    $0x80000006,%edi
ffffffff80201109:	31 f6                	xor    %esi,%esi
ffffffff8020110b:	e8 b0 ff ff ff       	callq  ffffffff802010c0 <CPUID_RequestInfo>
ffffffff80201110:	0f b6 34 25 60 84 28 	movzbl 0xffffffff80288460,%esi
ffffffff80201117:	80 
ffffffff80201118:	89 34 25 5c 84 28 80 	mov    %esi,0xffffffff8028845c
ffffffff8020111f:	8b 04 25 5c 84 28 80 	mov    0xffffffff8028845c,%eax
ffffffff80201126:	83 f8 00             	cmp    $0x0,%eax
ffffffff80201129:	75 09                	jne    ffffffff80201134 <CPUID_GetCacheLineSize+0x44>
ffffffff8020112b:	c7 45 fc 40 00 00 00 	movl   $0x40,-0x4(%rbp)
ffffffff80201132:	eb 0a                	jmp    ffffffff8020113e <CPUID_GetCacheLineSize+0x4e>
ffffffff80201134:	8b 04 25 5c 84 28 80 	mov    0xffffffff8028845c,%eax
ffffffff8020113b:	89 45 fc             	mov    %eax,-0x4(%rbp)
ffffffff8020113e:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff80201141:	48 83 c4 10          	add    $0x10,%rsp
ffffffff80201145:	5d                   	pop    %rbp
ffffffff80201146:	c3                   	retq   
ffffffff80201147:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff8020114e:	00 00 

ffffffff80201150 <CPUID_FeatureIsAvailable>:
ffffffff80201150:	55                   	push   %rbp
ffffffff80201151:	48 89 e5             	mov    %rsp,%rbp
ffffffff80201154:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff80201158:	89 7d f8             	mov    %edi,-0x8(%rbp)
ffffffff8020115b:	89 75 f4             	mov    %esi,-0xc(%rbp)
ffffffff8020115e:	8b 75 f8             	mov    -0x8(%rbp),%esi
ffffffff80201161:	89 f0                	mov    %esi,%eax
ffffffff80201163:	48 89 c1             	mov    %rax,%rcx
ffffffff80201166:	48 83 e9 03          	sub    $0x3,%rcx
ffffffff8020116a:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff8020116e:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
ffffffff80201172:	0f 87 82 00 00 00    	ja     ffffffff802011fa <CPUID_FeatureIsAvailable+0xaa>
ffffffff80201178:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8020117c:	48 8b 0c c5 38 f0 20 	mov    -0x7fdf0fc8(,%rax,8),%rcx
ffffffff80201183:	80 
ffffffff80201184:	ff e1                	jmpq   *%rcx
ffffffff80201186:	8b 04 25 64 84 28 80 	mov    0xffffffff80288464,%eax
ffffffff8020118d:	23 45 f4             	and    -0xc(%rbp),%eax
ffffffff80201190:	3b 45 f4             	cmp    -0xc(%rbp),%eax
ffffffff80201193:	0f 94 c1             	sete   %cl
ffffffff80201196:	80 e1 01             	and    $0x1,%cl
ffffffff80201199:	0f b6 c1             	movzbl %cl,%eax
ffffffff8020119c:	88 c1                	mov    %al,%cl
ffffffff8020119e:	88 4d ff             	mov    %cl,-0x1(%rbp)
ffffffff802011a1:	eb 5b                	jmp    ffffffff802011fe <CPUID_FeatureIsAvailable+0xae>
ffffffff802011a3:	8b 04 25 54 84 28 80 	mov    0xffffffff80288454,%eax
ffffffff802011aa:	23 45 f4             	and    -0xc(%rbp),%eax
ffffffff802011ad:	3b 45 f4             	cmp    -0xc(%rbp),%eax
ffffffff802011b0:	0f 94 c1             	sete   %cl
ffffffff802011b3:	80 e1 01             	and    $0x1,%cl
ffffffff802011b6:	0f b6 c1             	movzbl %cl,%eax
ffffffff802011b9:	88 c1                	mov    %al,%cl
ffffffff802011bb:	88 4d ff             	mov    %cl,-0x1(%rbp)
ffffffff802011be:	eb 3e                	jmp    ffffffff802011fe <CPUID_FeatureIsAvailable+0xae>
ffffffff802011c0:	8b 04 25 60 84 28 80 	mov    0xffffffff80288460,%eax
ffffffff802011c7:	23 45 f4             	and    -0xc(%rbp),%eax
ffffffff802011ca:	3b 45 f4             	cmp    -0xc(%rbp),%eax
ffffffff802011cd:	0f 94 c1             	sete   %cl
ffffffff802011d0:	80 e1 01             	and    $0x1,%cl
ffffffff802011d3:	0f b6 c1             	movzbl %cl,%eax
ffffffff802011d6:	88 c1                	mov    %al,%cl
ffffffff802011d8:	88 4d ff             	mov    %cl,-0x1(%rbp)
ffffffff802011db:	eb 21                	jmp    ffffffff802011fe <CPUID_FeatureIsAvailable+0xae>
ffffffff802011dd:	8b 04 25 58 84 28 80 	mov    0xffffffff80288458,%eax
ffffffff802011e4:	23 45 f4             	and    -0xc(%rbp),%eax
ffffffff802011e7:	3b 45 f4             	cmp    -0xc(%rbp),%eax
ffffffff802011ea:	0f 94 c1             	sete   %cl
ffffffff802011ed:	80 e1 01             	and    $0x1,%cl
ffffffff802011f0:	0f b6 c1             	movzbl %cl,%eax
ffffffff802011f3:	88 c1                	mov    %al,%cl
ffffffff802011f5:	88 4d ff             	mov    %cl,-0x1(%rbp)
ffffffff802011f8:	eb 04                	jmp    ffffffff802011fe <CPUID_FeatureIsAvailable+0xae>
ffffffff802011fa:	c6 45 ff 00          	movb   $0x0,-0x1(%rbp)
ffffffff802011fe:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
ffffffff80201202:	48 83 c4 20          	add    $0x20,%rsp
ffffffff80201206:	5d                   	pop    %rbp
ffffffff80201207:	c3                   	retq   
ffffffff80201208:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff8020120f:	00 

ffffffff80201210 <CPUID_GetValue>:
ffffffff80201210:	55                   	push   %rbp
ffffffff80201211:	48 89 e5             	mov    %rsp,%rbp
ffffffff80201214:	48 83 ec 18          	sub    $0x18,%rsp
ffffffff80201218:	89 7d f8             	mov    %edi,-0x8(%rbp)
ffffffff8020121b:	8b 7d f8             	mov    -0x8(%rbp),%edi
ffffffff8020121e:	89 f8                	mov    %edi,%eax
ffffffff80201220:	48 89 c1             	mov    %rax,%rcx
ffffffff80201223:	48 83 e9 03          	sub    $0x3,%rcx
ffffffff80201227:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff8020122b:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
ffffffff8020122f:	77 3e                	ja     ffffffff8020126f <CPUID_GetValue+0x5f>
ffffffff80201231:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80201235:	48 8b 0c c5 58 f0 20 	mov    -0x7fdf0fa8(,%rax,8),%rcx
ffffffff8020123c:	80 
ffffffff8020123d:	ff e1                	jmpq   *%rcx
ffffffff8020123f:	8b 04 25 64 84 28 80 	mov    0xffffffff80288464,%eax
ffffffff80201246:	89 45 fc             	mov    %eax,-0x4(%rbp)
ffffffff80201249:	eb 2b                	jmp    ffffffff80201276 <CPUID_GetValue+0x66>
ffffffff8020124b:	8b 04 25 54 84 28 80 	mov    0xffffffff80288454,%eax
ffffffff80201252:	89 45 fc             	mov    %eax,-0x4(%rbp)
ffffffff80201255:	eb 1f                	jmp    ffffffff80201276 <CPUID_GetValue+0x66>
ffffffff80201257:	8b 04 25 60 84 28 80 	mov    0xffffffff80288460,%eax
ffffffff8020125e:	89 45 fc             	mov    %eax,-0x4(%rbp)
ffffffff80201261:	eb 13                	jmp    ffffffff80201276 <CPUID_GetValue+0x66>
ffffffff80201263:	8b 04 25 58 84 28 80 	mov    0xffffffff80288458,%eax
ffffffff8020126a:	89 45 fc             	mov    %eax,-0x4(%rbp)
ffffffff8020126d:	eb 07                	jmp    ffffffff80201276 <CPUID_GetValue+0x66>
ffffffff8020126f:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
ffffffff80201276:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff80201279:	48 83 c4 18          	add    $0x18,%rsp
ffffffff8020127d:	5d                   	pop    %rbp
ffffffff8020127e:	c3                   	retq   
ffffffff8020127f:	90                   	nop

ffffffff80201280 <FPU_Initialize>:
ffffffff80201280:	55                   	push   %rbp
ffffffff80201281:	48 89 e5             	mov    %rsp,%rbp
ffffffff80201284:	48 83 ec 50          	sub    $0x50,%rsp
ffffffff80201288:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff8020128d:	31 c9                	xor    %ecx,%ecx
ffffffff8020128f:	bf 01 00 00 00       	mov    $0x1,%edi
ffffffff80201294:	31 f6                	xor    %esi,%esi
ffffffff80201296:	89 45 f4             	mov    %eax,-0xc(%rbp)
ffffffff80201299:	89 4d f0             	mov    %ecx,-0x10(%rbp)
ffffffff8020129c:	e8 1f fe ff ff       	callq  ffffffff802010c0 <CPUID_RequestInfo>
ffffffff802012a1:	b8 03 00 00 00       	mov    $0x3,%eax
ffffffff802012a6:	b9 01 00 00 00       	mov    $0x1,%ecx
ffffffff802012ab:	bf 03 00 00 00       	mov    $0x3,%edi
ffffffff802012b0:	be 01 00 00 00       	mov    $0x1,%esi
ffffffff802012b5:	89 45 ec             	mov    %eax,-0x14(%rbp)
ffffffff802012b8:	89 4d e8             	mov    %ecx,-0x18(%rbp)
ffffffff802012bb:	e8 90 fe ff ff       	callq  ffffffff80201150 <CPUID_FeatureIsAvailable>
ffffffff802012c0:	3c 00                	cmp    $0x0,%al
ffffffff802012c2:	75 12                	jne    ffffffff802012d6 <FPU_Initialize+0x56>
ffffffff802012c4:	b8 ff 00 00 00       	mov    $0xff,%eax
ffffffff802012c9:	bf ff 00 00 00       	mov    $0xff,%edi
ffffffff802012ce:	89 45 e4             	mov    %eax,-0x1c(%rbp)
ffffffff802012d1:	e8 ea f1 ff ff       	callq  ffffffff802004c0 <bootstrap_kernel_panic>
ffffffff802012d6:	b8 03 00 00 00       	mov    $0x3,%eax
ffffffff802012db:	b9 00 00 00 02       	mov    $0x2000000,%ecx
ffffffff802012e0:	bf 03 00 00 00       	mov    $0x3,%edi
ffffffff802012e5:	be 00 00 00 02       	mov    $0x2000000,%esi
ffffffff802012ea:	89 45 e0             	mov    %eax,-0x20(%rbp)
ffffffff802012ed:	89 4d dc             	mov    %ecx,-0x24(%rbp)
ffffffff802012f0:	e8 5b fe ff ff       	callq  ffffffff80201150 <CPUID_FeatureIsAvailable>
ffffffff802012f5:	3c 00                	cmp    $0x0,%al
ffffffff802012f7:	75 12                	jne    ffffffff8020130b <FPU_Initialize+0x8b>
ffffffff802012f9:	b8 ff 00 00 00       	mov    $0xff,%eax
ffffffff802012fe:	bf ff 00 00 00       	mov    $0xff,%edi
ffffffff80201303:	89 45 d8             	mov    %eax,-0x28(%rbp)
ffffffff80201306:	e8 b5 f1 ff ff       	callq  ffffffff802004c0 <bootstrap_kernel_panic>
ffffffff8020130b:	b8 03 00 00 00       	mov    $0x3,%eax
ffffffff80201310:	b9 00 00 00 01       	mov    $0x1000000,%ecx
ffffffff80201315:	bf 03 00 00 00       	mov    $0x3,%edi
ffffffff8020131a:	be 00 00 00 01       	mov    $0x1000000,%esi
ffffffff8020131f:	89 45 d4             	mov    %eax,-0x2c(%rbp)
ffffffff80201322:	89 4d d0             	mov    %ecx,-0x30(%rbp)
ffffffff80201325:	e8 26 fe ff ff       	callq  ffffffff80201150 <CPUID_FeatureIsAvailable>
ffffffff8020132a:	3c 00                	cmp    $0x0,%al
ffffffff8020132c:	75 12                	jne    ffffffff80201340 <FPU_Initialize+0xc0>
ffffffff8020132e:	b8 ff 00 00 00       	mov    $0xff,%eax
ffffffff80201333:	bf ff 00 00 00       	mov    $0xff,%edi
ffffffff80201338:	89 45 cc             	mov    %eax,-0x34(%rbp)
ffffffff8020133b:	e8 80 f1 ff ff       	callq  ffffffff802004c0 <bootstrap_kernel_panic>
ffffffff80201340:	bf 02 00 00 00       	mov    $0x2,%edi
ffffffff80201345:	be 00 00 00 04       	mov    $0x4000000,%esi
ffffffff8020134a:	e8 01 fe ff ff       	callq  ffffffff80201150 <CPUID_FeatureIsAvailable>
ffffffff8020134f:	88 04 25 68 84 28 80 	mov    %al,0xffffffff80288468
ffffffff80201356:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
ffffffff8020135d:	00 
ffffffff8020135e:	0f 20 c1             	mov    %cr0,%rcx
ffffffff80201361:	48 89 4d f8          	mov    %rcx,-0x8(%rbp)
ffffffff80201365:	48 83 e1 fb          	and    $0xfffffffffffffffb,%rcx
ffffffff80201369:	48 89 4d f8          	mov    %rcx,-0x8(%rbp)
ffffffff8020136d:	48 89 ca             	mov    %rcx,%rdx
ffffffff80201370:	48 83 ca 20          	or     $0x20,%rdx
ffffffff80201374:	48 89 55 f8          	mov    %rdx,-0x8(%rbp)
ffffffff80201378:	48 83 c9 22          	or     $0x22,%rcx
ffffffff8020137c:	48 89 4d f8          	mov    %rcx,-0x8(%rbp)
ffffffff80201380:	0f 22 c1             	mov    %rcx,%cr0
ffffffff80201383:	0f 20 e1             	mov    %cr4,%rcx
ffffffff80201386:	48 89 4d f8          	mov    %rcx,-0x8(%rbp)
ffffffff8020138a:	8a 45 f9             	mov    -0x7(%rbp),%al
ffffffff8020138d:	41 88 c0             	mov    %al,%r8b
ffffffff80201390:	41 80 c8 02          	or     $0x2,%r8b
ffffffff80201394:	44 88 45 f9          	mov    %r8b,-0x7(%rbp)
ffffffff80201398:	0c 06                	or     $0x6,%al
ffffffff8020139a:	88 45 f9             	mov    %al,-0x7(%rbp)
ffffffff8020139d:	8a 04 25 68 84 28 80 	mov    0xffffffff80288468,%al
ffffffff802013a4:	3c 00                	cmp    $0x0,%al
ffffffff802013a6:	74 0e                	je     ffffffff802013b6 <FPU_Initialize+0x136>
ffffffff802013a8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff802013ac:	48 0d 00 00 04 00    	or     $0x40000,%rax
ffffffff802013b2:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff802013b6:	48 c7 c6 70 14 20 80 	mov    $0xffffffff80201470,%rsi
ffffffff802013bd:	bf 10 00 00 00       	mov    $0x10,%edi
ffffffff802013c2:	e8 19 16 00 00       	callq  ffffffff802029e0 <RegisterInterruptHandler>
ffffffff802013c7:	48 c7 c6 a0 14 20 80 	mov    $0xffffffff802014a0,%rsi
ffffffff802013ce:	bf 13 00 00 00       	mov    $0x13,%edi
ffffffff802013d3:	89 45 c8             	mov    %eax,-0x38(%rbp)
ffffffff802013d6:	e8 05 16 00 00       	callq  ffffffff802029e0 <RegisterInterruptHandler>
ffffffff802013db:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
ffffffff802013df:	0f 22 e6             	mov    %rsi,%cr4
ffffffff802013e2:	db e3                	fninit 
ffffffff802013e4:	8a 0c 25 68 84 28 80 	mov    0xffffffff80288468,%cl
ffffffff802013eb:	80 f9 00             	cmp    $0x0,%cl
ffffffff802013ee:	89 45 c4             	mov    %eax,-0x3c(%rbp)
ffffffff802013f1:	74 5d                	je     ffffffff80201450 <FPU_Initialize+0x1d0>
ffffffff802013f3:	b8 0d 00 00 00       	mov    $0xd,%eax
ffffffff802013f8:	31 c9                	xor    %ecx,%ecx
ffffffff802013fa:	89 c7                	mov    %eax,%edi
ffffffff802013fc:	89 ce                	mov    %ecx,%esi
ffffffff802013fe:	89 45 c0             	mov    %eax,-0x40(%rbp)
ffffffff80201401:	89 4d bc             	mov    %ecx,-0x44(%rbp)
ffffffff80201404:	e8 b7 fc ff ff       	callq  ffffffff802010c0 <CPUID_RequestInfo>
ffffffff80201409:	bf 03 00 00 00       	mov    $0x3,%edi
ffffffff8020140e:	e8 fd fd ff ff       	callq  ffffffff80201210 <CPUID_GetValue>
ffffffff80201413:	8b 7d bc             	mov    -0x44(%rbp),%edi
ffffffff80201416:	89 45 b8             	mov    %eax,-0x48(%rbp)
ffffffff80201419:	e8 f2 fd ff ff       	callq  ffffffff80201210 <CPUID_GetValue>
ffffffff8020141e:	8b 55 b8             	mov    -0x48(%rbp),%edx
ffffffff80201421:	8b 4d bc             	mov    -0x44(%rbp),%ecx
ffffffff80201424:	0f 01 d1             	xsetbv 
ffffffff80201427:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff8020142c:	8b 7d c0             	mov    -0x40(%rbp),%edi
ffffffff8020142f:	89 c6                	mov    %eax,%esi
ffffffff80201431:	89 45 b4             	mov    %eax,-0x4c(%rbp)
ffffffff80201434:	e8 87 fc ff ff       	callq  ffffffff802010c0 <CPUID_RequestInfo>
ffffffff80201439:	8b 7d b4             	mov    -0x4c(%rbp),%edi
ffffffff8020143c:	e8 cf fd ff ff       	callq  ffffffff80201210 <CPUID_GetValue>
ffffffff80201441:	89 c0                	mov    %eax,%eax
ffffffff80201443:	41 89 c0             	mov    %eax,%r8d
ffffffff80201446:	4c 89 04 25 70 84 28 	mov    %r8,0xffffffff80288470
ffffffff8020144d:	80 
ffffffff8020144e:	eb 0c                	jmp    ffffffff8020145c <FPU_Initialize+0x1dc>
ffffffff80201450:	48 c7 04 25 70 84 28 	movq   $0x400,0xffffffff80288470
ffffffff80201457:	80 00 04 00 00 
ffffffff8020145c:	48 83 c4 50          	add    $0x50,%rsp
ffffffff80201460:	5d                   	pop    %rbp
ffffffff80201461:	c3                   	retq   
ffffffff80201462:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff80201466:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8020146d:	00 00 00 

ffffffff80201470 <FPU_X87Exception>:
ffffffff80201470:	55                   	push   %rbp
ffffffff80201471:	48 89 e5             	mov    %rsp,%rbp
ffffffff80201474:	50                   	push   %rax
ffffffff80201475:	89 7d fc             	mov    %edi,-0x4(%rbp)
ffffffff80201478:	89 75 f8             	mov    %esi,-0x8(%rbp)
ffffffff8020147b:	83 7d fc 10          	cmpl   $0x10,-0x4(%rbp)
ffffffff8020147f:	74 02                	je     ffffffff80201483 <FPU_X87Exception+0x13>
ffffffff80201481:	eb 11                	jmp    ffffffff80201494 <FPU_X87Exception+0x24>
ffffffff80201483:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
ffffffff8020148a:	b8 b5 00 0b 00       	mov    $0xb00b5,%eax
ffffffff8020148f:	fa                   	cli    
ffffffff80201490:	48 89 c0             	mov    %rax,%rax
ffffffff80201493:	f4                   	hlt    
ffffffff80201494:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80201498:	5d                   	pop    %rbp
ffffffff80201499:	c3                   	retq   
ffffffff8020149a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

ffffffff802014a0 <FPU_SIMDException>:
ffffffff802014a0:	55                   	push   %rbp
ffffffff802014a1:	48 89 e5             	mov    %rsp,%rbp
ffffffff802014a4:	50                   	push   %rax
ffffffff802014a5:	89 7d fc             	mov    %edi,-0x4(%rbp)
ffffffff802014a8:	89 75 f8             	mov    %esi,-0x8(%rbp)
ffffffff802014ab:	83 7d fc 13          	cmpl   $0x13,-0x4(%rbp)
ffffffff802014af:	74 02                	je     ffffffff802014b3 <FPU_SIMDException+0x13>
ffffffff802014b1:	eb 11                	jmp    ffffffff802014c4 <FPU_SIMDException+0x24>
ffffffff802014b3:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
ffffffff802014ba:	b8 e5 b1 00 0b       	mov    $0xb00b1e5,%eax
ffffffff802014bf:	fa                   	cli    
ffffffff802014c0:	48 89 c0             	mov    %rax,%rax
ffffffff802014c3:	f4                   	hlt    
ffffffff802014c4:	48 83 c4 08          	add    $0x8,%rsp
ffffffff802014c8:	5d                   	pop    %rbp
ffffffff802014c9:	c3                   	retq   
ffffffff802014ca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

ffffffff802014d0 <GetFPUStateSize>:
ffffffff802014d0:	55                   	push   %rbp
ffffffff802014d1:	48 89 e5             	mov    %rsp,%rbp
ffffffff802014d4:	48 8b 04 25 70 84 28 	mov    0xffffffff80288470,%rax
ffffffff802014db:	80 
ffffffff802014dc:	5d                   	pop    %rbp
ffffffff802014dd:	c3                   	retq   
ffffffff802014de:	66 90                	xchg   %ax,%ax

ffffffff802014e0 <SaveFPUState>:
ffffffff802014e0:	55                   	push   %rbp
ffffffff802014e1:	48 89 e5             	mov    %rsp,%rbp
ffffffff802014e4:	50                   	push   %rax
ffffffff802014e5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff802014e9:	8a 04 25 68 84 28 80 	mov    0xffffffff80288468,%al
ffffffff802014f0:	3c 00                	cmp    $0x0,%al
ffffffff802014f2:	74 0a                	je     ffffffff802014fe <SaveFPUState+0x1e>
ffffffff802014f4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff802014f8:	48 0f ae 20          	xsave64 (%rax)
ffffffff802014fc:	eb 08                	jmp    ffffffff80201506 <SaveFPUState+0x26>
ffffffff802014fe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80201502:	48 0f ae 00          	fxsave64 (%rax)
ffffffff80201506:	48 83 c4 08          	add    $0x8,%rsp
ffffffff8020150a:	5d                   	pop    %rbp
ffffffff8020150b:	c3                   	retq   
ffffffff8020150c:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff80201510 <RestoreFPUState>:
ffffffff80201510:	55                   	push   %rbp
ffffffff80201511:	48 89 e5             	mov    %rsp,%rbp
ffffffff80201514:	50                   	push   %rax
ffffffff80201515:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff80201519:	8a 04 25 68 84 28 80 	mov    0xffffffff80288468,%al
ffffffff80201520:	3c 00                	cmp    $0x0,%al
ffffffff80201522:	74 0a                	je     ffffffff8020152e <RestoreFPUState+0x1e>
ffffffff80201524:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80201528:	48 0f ae 28          	xrstor64 (%rax)
ffffffff8020152c:	eb 08                	jmp    ffffffff80201536 <RestoreFPUState+0x26>
ffffffff8020152e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80201532:	48 0f ae 08          	fxrstor64 (%rax)
ffffffff80201536:	48 83 c4 08          	add    $0x8,%rsp
ffffffff8020153a:	5d                   	pop    %rbp
ffffffff8020153b:	c3                   	retq   
ffffffff8020153c:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff80201540 <RTC_Initialize>:
ffffffff80201540:	55                   	push   %rbp
ffffffff80201541:	48 89 e5             	mov    %rsp,%rbp
ffffffff80201544:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff80201548:	48 c7 c7 c0 1c 21 80 	mov    $0xffffffff80211cc0,%rdi
ffffffff8020154f:	31 f6                	xor    %esi,%esi
ffffffff80201551:	e8 da 9a 00 00       	callq  ffffffff8020b030 <ACPITables_FindTable>
ffffffff80201556:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff8020155a:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
ffffffff8020155f:	74 0f                	je     ffffffff80201570 <RTC_Initialize+0x30>
ffffffff80201561:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80201565:	0f b6 48 6c          	movzbl 0x6c(%rax),%ecx
ffffffff80201569:	89 0c 25 78 84 28 80 	mov    %ecx,0xffffffff80288478
ffffffff80201570:	48 83 c4 10          	add    $0x10,%rsp
ffffffff80201574:	5d                   	pop    %rbp
ffffffff80201575:	c3                   	retq   
ffffffff80201576:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8020157d:	00 00 00 

ffffffff80201580 <RTC_SelectRegister>:
ffffffff80201580:	55                   	push   %rbp
ffffffff80201581:	48 89 e5             	mov    %rsp,%rbp
ffffffff80201584:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff80201588:	40 88 f0             	mov    %sil,%al
ffffffff8020158b:	40 88 f9             	mov    %dil,%cl
ffffffff8020158e:	be 70 00 00 00       	mov    $0x70,%esi
ffffffff80201593:	88 4d ff             	mov    %cl,-0x1(%rbp)
ffffffff80201596:	88 45 fe             	mov    %al,-0x2(%rbp)
ffffffff80201599:	0f b6 7d ff          	movzbl -0x1(%rbp),%edi
ffffffff8020159d:	c1 e7 07             	shl    $0x7,%edi
ffffffff802015a0:	0f b6 55 fe          	movzbl -0x2(%rbp),%edx
ffffffff802015a4:	09 d7                	or     %edx,%edi
ffffffff802015a6:	40 88 f8             	mov    %dil,%al
ffffffff802015a9:	0f b6 d0             	movzbl %al,%edx
ffffffff802015ac:	bf 70 00 00 00       	mov    $0x70,%edi
ffffffff802015b1:	89 75 f8             	mov    %esi,-0x8(%rbp)
ffffffff802015b4:	89 d6                	mov    %edx,%esi
ffffffff802015b6:	e8 05 24 00 00       	callq  ffffffff802039c0 <outb>
ffffffff802015bb:	48 83 c4 10          	add    $0x10,%rsp
ffffffff802015bf:	5d                   	pop    %rbp
ffffffff802015c0:	c3                   	retq   
ffffffff802015c1:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff802015c6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff802015cd:	00 00 00 

ffffffff802015d0 <RTC_SetRegister>:
ffffffff802015d0:	55                   	push   %rbp
ffffffff802015d1:	48 89 e5             	mov    %rsp,%rbp
ffffffff802015d4:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff802015d8:	88 d0                	mov    %dl,%al
ffffffff802015da:	40 88 f1             	mov    %sil,%cl
ffffffff802015dd:	41 88 f8             	mov    %dil,%r8b
ffffffff802015e0:	44 88 45 ff          	mov    %r8b,-0x1(%rbp)
ffffffff802015e4:	88 4d fe             	mov    %cl,-0x2(%rbp)
ffffffff802015e7:	88 45 fd             	mov    %al,-0x3(%rbp)
ffffffff802015ea:	8a 45 fe             	mov    -0x2(%rbp),%al
ffffffff802015ed:	8a 4d fd             	mov    -0x3(%rbp),%cl
ffffffff802015f0:	0f b6 f8             	movzbl %al,%edi
ffffffff802015f3:	0f b6 f1             	movzbl %cl,%esi
ffffffff802015f6:	e8 85 ff ff ff       	callq  ffffffff80201580 <RTC_SelectRegister>
ffffffff802015fb:	ba 71 00 00 00       	mov    $0x71,%edx
ffffffff80201600:	8a 45 ff             	mov    -0x1(%rbp),%al
ffffffff80201603:	0f b6 f0             	movzbl %al,%esi
ffffffff80201606:	bf 71 00 00 00       	mov    $0x71,%edi
ffffffff8020160b:	89 55 f8             	mov    %edx,-0x8(%rbp)
ffffffff8020160e:	e8 ad 23 00 00       	callq  ffffffff802039c0 <outb>
ffffffff80201613:	48 83 c4 10          	add    $0x10,%rsp
ffffffff80201617:	5d                   	pop    %rbp
ffffffff80201618:	c3                   	retq   
ffffffff80201619:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

ffffffff80201620 <RTC_GetRegister>:
ffffffff80201620:	55                   	push   %rbp
ffffffff80201621:	48 89 e5             	mov    %rsp,%rbp
ffffffff80201624:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff80201628:	40 88 f0             	mov    %sil,%al
ffffffff8020162b:	40 88 f9             	mov    %dil,%cl
ffffffff8020162e:	88 4d ff             	mov    %cl,-0x1(%rbp)
ffffffff80201631:	88 45 fe             	mov    %al,-0x2(%rbp)
ffffffff80201634:	8a 45 ff             	mov    -0x1(%rbp),%al
ffffffff80201637:	8a 4d fe             	mov    -0x2(%rbp),%cl
ffffffff8020163a:	0f b6 f8             	movzbl %al,%edi
ffffffff8020163d:	0f b6 f1             	movzbl %cl,%esi
ffffffff80201640:	e8 3b ff ff ff       	callq  ffffffff80201580 <RTC_SelectRegister>
ffffffff80201645:	be 71 00 00 00       	mov    $0x71,%esi
ffffffff8020164a:	bf 71 00 00 00       	mov    $0x71,%edi
ffffffff8020164f:	89 75 f8             	mov    %esi,-0x8(%rbp)
ffffffff80201652:	e8 99 23 00 00       	callq  ffffffff802039f0 <inb>
ffffffff80201657:	0f b6 c0             	movzbl %al,%eax
ffffffff8020165a:	48 83 c4 10          	add    $0x10,%rsp
ffffffff8020165e:	5d                   	pop    %rbp
ffffffff8020165f:	c3                   	retq   

ffffffff80201660 <RTC_UpdateInProgress>:
ffffffff80201660:	55                   	push   %rbp
ffffffff80201661:	48 89 e5             	mov    %rsp,%rbp
ffffffff80201664:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff80201668:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff8020166d:	b9 0a 00 00 00       	mov    $0xa,%ecx
ffffffff80201672:	bf 01 00 00 00       	mov    $0x1,%edi
ffffffff80201677:	be 0a 00 00 00       	mov    $0xa,%esi
ffffffff8020167c:	89 45 fc             	mov    %eax,-0x4(%rbp)
ffffffff8020167f:	89 4d f8             	mov    %ecx,-0x8(%rbp)
ffffffff80201682:	e8 99 ff ff ff       	callq  ffffffff80201620 <RTC_GetRegister>
ffffffff80201687:	0f b6 c8             	movzbl %al,%ecx
ffffffff8020168a:	81 e1 80 00 00 00    	and    $0x80,%ecx
ffffffff80201690:	88 c8                	mov    %cl,%al
ffffffff80201692:	0f b6 c0             	movzbl %al,%eax
ffffffff80201695:	48 83 c4 10          	add    $0x10,%rsp
ffffffff80201699:	5d                   	pop    %rbp
ffffffff8020169a:	c3                   	retq   
ffffffff8020169b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

ffffffff802016a0 <RTC_GetRTCTime>:
ffffffff802016a0:	55                   	push   %rbp
ffffffff802016a1:	48 89 e5             	mov    %rsp,%rbp
ffffffff802016a4:	48 83 ec 40          	sub    $0x40,%rsp
ffffffff802016a8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff802016ac:	c6 45 ef 00          	movb   $0x0,-0x11(%rbp)
ffffffff802016b0:	e8 ab ff ff ff       	callq  ffffffff80201660 <RTC_UpdateInProgress>
ffffffff802016b5:	3c 00                	cmp    $0x0,%al
ffffffff802016b7:	74 02                	je     ffffffff802016bb <RTC_GetRTCTime+0x1b>
ffffffff802016b9:	eb f5                	jmp    ffffffff802016b0 <RTC_GetRTCTime+0x10>
ffffffff802016bb:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff802016c0:	31 f6                	xor    %esi,%esi
ffffffff802016c2:	89 c7                	mov    %eax,%edi
ffffffff802016c4:	89 45 e0             	mov    %eax,-0x20(%rbp)
ffffffff802016c7:	e8 54 ff ff ff       	callq  ffffffff80201620 <RTC_GetRegister>
ffffffff802016cc:	88 45 f7             	mov    %al,-0x9(%rbp)
ffffffff802016cf:	be 02 00 00 00       	mov    $0x2,%esi
ffffffff802016d4:	8b 7d e0             	mov    -0x20(%rbp),%edi
ffffffff802016d7:	e8 44 ff ff ff       	callq  ffffffff80201620 <RTC_GetRegister>
ffffffff802016dc:	88 45 f6             	mov    %al,-0xa(%rbp)
ffffffff802016df:	be 04 00 00 00       	mov    $0x4,%esi
ffffffff802016e4:	8b 7d e0             	mov    -0x20(%rbp),%edi
ffffffff802016e7:	e8 34 ff ff ff       	callq  ffffffff80201620 <RTC_GetRegister>
ffffffff802016ec:	88 45 f5             	mov    %al,-0xb(%rbp)
ffffffff802016ef:	be 07 00 00 00       	mov    $0x7,%esi
ffffffff802016f4:	8b 7d e0             	mov    -0x20(%rbp),%edi
ffffffff802016f7:	e8 24 ff ff ff       	callq  ffffffff80201620 <RTC_GetRegister>
ffffffff802016fc:	88 45 f4             	mov    %al,-0xc(%rbp)
ffffffff802016ff:	be 08 00 00 00       	mov    $0x8,%esi
ffffffff80201704:	8b 7d e0             	mov    -0x20(%rbp),%edi
ffffffff80201707:	e8 14 ff ff ff       	callq  ffffffff80201620 <RTC_GetRegister>
ffffffff8020170c:	88 45 f3             	mov    %al,-0xd(%rbp)
ffffffff8020170f:	be 09 00 00 00       	mov    $0x9,%esi
ffffffff80201714:	8b 7d e0             	mov    -0x20(%rbp),%edi
ffffffff80201717:	e8 04 ff ff ff       	callq  ffffffff80201620 <RTC_GetRegister>
ffffffff8020171c:	0f b6 f0             	movzbl %al,%esi
ffffffff8020171f:	66 89 f1             	mov    %si,%cx
ffffffff80201722:	66 89 4d f0          	mov    %cx,-0x10(%rbp)
ffffffff80201726:	8b 34 25 78 84 28 80 	mov    0xffffffff80288478,%esi
ffffffff8020172d:	83 fe 00             	cmp    $0x0,%esi
ffffffff80201730:	74 21                	je     ffffffff80201753 <RTC_GetRTCTime+0xb3>
ffffffff80201732:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff80201737:	8b 0c 25 78 84 28 80 	mov    0xffffffff80288478,%ecx
ffffffff8020173e:	88 ca                	mov    %cl,%dl
ffffffff80201740:	0f b6 f2             	movzbl %dl,%esi
ffffffff80201743:	bf 01 00 00 00       	mov    $0x1,%edi
ffffffff80201748:	89 45 dc             	mov    %eax,-0x24(%rbp)
ffffffff8020174b:	e8 d0 fe ff ff       	callq  ffffffff80201620 <RTC_GetRegister>
ffffffff80201750:	88 45 ef             	mov    %al,-0x11(%rbp)
ffffffff80201753:	eb 00                	jmp    ffffffff80201755 <RTC_GetRTCTime+0xb5>
ffffffff80201755:	8a 45 f7             	mov    -0x9(%rbp),%al
ffffffff80201758:	88 45 ee             	mov    %al,-0x12(%rbp)
ffffffff8020175b:	8a 45 f6             	mov    -0xa(%rbp),%al
ffffffff8020175e:	88 45 ed             	mov    %al,-0x13(%rbp)
ffffffff80201761:	8a 45 f5             	mov    -0xb(%rbp),%al
ffffffff80201764:	88 45 ec             	mov    %al,-0x14(%rbp)
ffffffff80201767:	8a 45 f4             	mov    -0xc(%rbp),%al
ffffffff8020176a:	88 45 eb             	mov    %al,-0x15(%rbp)
ffffffff8020176d:	8a 45 f3             	mov    -0xd(%rbp),%al
ffffffff80201770:	88 45 ea             	mov    %al,-0x16(%rbp)
ffffffff80201773:	66 8b 4d f0          	mov    -0x10(%rbp),%cx
ffffffff80201777:	88 c8                	mov    %cl,%al
ffffffff80201779:	88 45 e9             	mov    %al,-0x17(%rbp)
ffffffff8020177c:	8a 45 ef             	mov    -0x11(%rbp),%al
ffffffff8020177f:	88 45 e8             	mov    %al,-0x18(%rbp)
ffffffff80201782:	e8 d9 fe ff ff       	callq  ffffffff80201660 <RTC_UpdateInProgress>
ffffffff80201787:	3c 00                	cmp    $0x0,%al
ffffffff80201789:	74 02                	je     ffffffff8020178d <RTC_GetRTCTime+0xed>
ffffffff8020178b:	eb f5                	jmp    ffffffff80201782 <RTC_GetRTCTime+0xe2>
ffffffff8020178d:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff80201792:	31 f6                	xor    %esi,%esi
ffffffff80201794:	89 c7                	mov    %eax,%edi
ffffffff80201796:	89 45 d8             	mov    %eax,-0x28(%rbp)
ffffffff80201799:	e8 82 fe ff ff       	callq  ffffffff80201620 <RTC_GetRegister>
ffffffff8020179e:	88 45 f7             	mov    %al,-0x9(%rbp)
ffffffff802017a1:	be 02 00 00 00       	mov    $0x2,%esi
ffffffff802017a6:	8b 7d d8             	mov    -0x28(%rbp),%edi
ffffffff802017a9:	e8 72 fe ff ff       	callq  ffffffff80201620 <RTC_GetRegister>
ffffffff802017ae:	88 45 f6             	mov    %al,-0xa(%rbp)
ffffffff802017b1:	be 04 00 00 00       	mov    $0x4,%esi
ffffffff802017b6:	8b 7d d8             	mov    -0x28(%rbp),%edi
ffffffff802017b9:	e8 62 fe ff ff       	callq  ffffffff80201620 <RTC_GetRegister>
ffffffff802017be:	88 45 f5             	mov    %al,-0xb(%rbp)
ffffffff802017c1:	be 07 00 00 00       	mov    $0x7,%esi
ffffffff802017c6:	8b 7d d8             	mov    -0x28(%rbp),%edi
ffffffff802017c9:	e8 52 fe ff ff       	callq  ffffffff80201620 <RTC_GetRegister>
ffffffff802017ce:	88 45 f4             	mov    %al,-0xc(%rbp)
ffffffff802017d1:	be 08 00 00 00       	mov    $0x8,%esi
ffffffff802017d6:	8b 7d d8             	mov    -0x28(%rbp),%edi
ffffffff802017d9:	e8 42 fe ff ff       	callq  ffffffff80201620 <RTC_GetRegister>
ffffffff802017de:	88 45 f3             	mov    %al,-0xd(%rbp)
ffffffff802017e1:	be 09 00 00 00       	mov    $0x9,%esi
ffffffff802017e6:	8b 7d d8             	mov    -0x28(%rbp),%edi
ffffffff802017e9:	e8 32 fe ff ff       	callq  ffffffff80201620 <RTC_GetRegister>
ffffffff802017ee:	0f b6 f0             	movzbl %al,%esi
ffffffff802017f1:	66 89 f1             	mov    %si,%cx
ffffffff802017f4:	66 89 4d f0          	mov    %cx,-0x10(%rbp)
ffffffff802017f8:	8b 34 25 78 84 28 80 	mov    0xffffffff80288478,%esi
ffffffff802017ff:	83 fe 00             	cmp    $0x0,%esi
ffffffff80201802:	74 21                	je     ffffffff80201825 <RTC_GetRTCTime+0x185>
ffffffff80201804:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff80201809:	8b 0c 25 78 84 28 80 	mov    0xffffffff80288478,%ecx
ffffffff80201810:	88 ca                	mov    %cl,%dl
ffffffff80201812:	0f b6 f2             	movzbl %dl,%esi
ffffffff80201815:	bf 01 00 00 00       	mov    $0x1,%edi
ffffffff8020181a:	89 45 d4             	mov    %eax,-0x2c(%rbp)
ffffffff8020181d:	e8 fe fd ff ff       	callq  ffffffff80201620 <RTC_GetRegister>
ffffffff80201822:	88 45 ef             	mov    %al,-0x11(%rbp)
ffffffff80201825:	eb 00                	jmp    ffffffff80201827 <RTC_GetRTCTime+0x187>
ffffffff80201827:	b0 01                	mov    $0x1,%al
ffffffff80201829:	0f b6 4d ee          	movzbl -0x12(%rbp),%ecx
ffffffff8020182d:	0f b6 55 f7          	movzbl -0x9(%rbp),%edx
ffffffff80201831:	39 d1                	cmp    %edx,%ecx
ffffffff80201833:	88 45 d3             	mov    %al,-0x2d(%rbp)
ffffffff80201836:	75 65                	jne    ffffffff8020189d <RTC_GetRTCTime+0x1fd>
ffffffff80201838:	b0 01                	mov    $0x1,%al
ffffffff8020183a:	0f b6 4d ed          	movzbl -0x13(%rbp),%ecx
ffffffff8020183e:	0f b6 55 f6          	movzbl -0xa(%rbp),%edx
ffffffff80201842:	39 d1                	cmp    %edx,%ecx
ffffffff80201844:	88 45 d3             	mov    %al,-0x2d(%rbp)
ffffffff80201847:	75 54                	jne    ffffffff8020189d <RTC_GetRTCTime+0x1fd>
ffffffff80201849:	b0 01                	mov    $0x1,%al
ffffffff8020184b:	0f b6 4d ec          	movzbl -0x14(%rbp),%ecx
ffffffff8020184f:	0f b6 55 f5          	movzbl -0xb(%rbp),%edx
ffffffff80201853:	39 d1                	cmp    %edx,%ecx
ffffffff80201855:	88 45 d3             	mov    %al,-0x2d(%rbp)
ffffffff80201858:	75 43                	jne    ffffffff8020189d <RTC_GetRTCTime+0x1fd>
ffffffff8020185a:	b0 01                	mov    $0x1,%al
ffffffff8020185c:	0f b6 4d eb          	movzbl -0x15(%rbp),%ecx
ffffffff80201860:	0f b6 55 f4          	movzbl -0xc(%rbp),%edx
ffffffff80201864:	39 d1                	cmp    %edx,%ecx
ffffffff80201866:	88 45 d3             	mov    %al,-0x2d(%rbp)
ffffffff80201869:	75 32                	jne    ffffffff8020189d <RTC_GetRTCTime+0x1fd>
ffffffff8020186b:	b0 01                	mov    $0x1,%al
ffffffff8020186d:	0f b6 4d ea          	movzbl -0x16(%rbp),%ecx
ffffffff80201871:	0f b6 55 f3          	movzbl -0xd(%rbp),%edx
ffffffff80201875:	39 d1                	cmp    %edx,%ecx
ffffffff80201877:	88 45 d3             	mov    %al,-0x2d(%rbp)
ffffffff8020187a:	75 21                	jne    ffffffff8020189d <RTC_GetRTCTime+0x1fd>
ffffffff8020187c:	b0 01                	mov    $0x1,%al
ffffffff8020187e:	0f b6 4d e9          	movzbl -0x17(%rbp),%ecx
ffffffff80201882:	0f b7 55 f0          	movzwl -0x10(%rbp),%edx
ffffffff80201886:	39 d1                	cmp    %edx,%ecx
ffffffff80201888:	88 45 d3             	mov    %al,-0x2d(%rbp)
ffffffff8020188b:	75 10                	jne    ffffffff8020189d <RTC_GetRTCTime+0x1fd>
ffffffff8020188d:	0f b6 45 e8          	movzbl -0x18(%rbp),%eax
ffffffff80201891:	0f b6 4d ef          	movzbl -0x11(%rbp),%ecx
ffffffff80201895:	39 c8                	cmp    %ecx,%eax
ffffffff80201897:	0f 95 c2             	setne  %dl
ffffffff8020189a:	88 55 d3             	mov    %dl,-0x2d(%rbp)
ffffffff8020189d:	8a 45 d3             	mov    -0x2d(%rbp),%al
ffffffff802018a0:	a8 01                	test   $0x1,%al
ffffffff802018a2:	0f 85 ad fe ff ff    	jne    ffffffff80201755 <RTC_GetRTCTime+0xb5>
ffffffff802018a8:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff802018ad:	b9 0b 00 00 00       	mov    $0xb,%ecx
ffffffff802018b2:	bf 01 00 00 00       	mov    $0x1,%edi
ffffffff802018b7:	be 0b 00 00 00       	mov    $0xb,%esi
ffffffff802018bc:	89 45 cc             	mov    %eax,-0x34(%rbp)
ffffffff802018bf:	89 4d c8             	mov    %ecx,-0x38(%rbp)
ffffffff802018c2:	e8 59 fd ff ff       	callq  ffffffff80201620 <RTC_GetRegister>
ffffffff802018c7:	88 45 e7             	mov    %al,-0x19(%rbp)
ffffffff802018ca:	0f b6 4d e7          	movzbl -0x19(%rbp),%ecx
ffffffff802018ce:	83 e1 04             	and    $0x4,%ecx
ffffffff802018d1:	83 f9 00             	cmp    $0x0,%ecx
ffffffff802018d4:	0f 85 03 01 00 00    	jne    ffffffff802019dd <RTC_GetRTCTime+0x33d>
ffffffff802018da:	0f b6 45 f7          	movzbl -0x9(%rbp),%eax
ffffffff802018de:	89 c1                	mov    %eax,%ecx
ffffffff802018e0:	83 e1 0f             	and    $0xf,%ecx
ffffffff802018e3:	c1 e8 04             	shr    $0x4,%eax
ffffffff802018e6:	89 c2                	mov    %eax,%edx
ffffffff802018e8:	8d 04 92             	lea    (%rdx,%rdx,4),%eax
ffffffff802018eb:	89 ca                	mov    %ecx,%edx
ffffffff802018ed:	89 c6                	mov    %eax,%esi
ffffffff802018ef:	8d 04 72             	lea    (%rdx,%rsi,2),%eax
ffffffff802018f2:	40 88 c7             	mov    %al,%dil
ffffffff802018f5:	40 88 7d f7          	mov    %dil,-0x9(%rbp)
ffffffff802018f9:	0f b6 45 f6          	movzbl -0xa(%rbp),%eax
ffffffff802018fd:	89 c1                	mov    %eax,%ecx
ffffffff802018ff:	83 e1 0f             	and    $0xf,%ecx
ffffffff80201902:	c1 e8 04             	shr    $0x4,%eax
ffffffff80201905:	89 c2                	mov    %eax,%edx
ffffffff80201907:	8d 04 92             	lea    (%rdx,%rdx,4),%eax
ffffffff8020190a:	89 ca                	mov    %ecx,%edx
ffffffff8020190c:	89 c6                	mov    %eax,%esi
ffffffff8020190e:	8d 04 72             	lea    (%rdx,%rsi,2),%eax
ffffffff80201911:	40 88 c7             	mov    %al,%dil
ffffffff80201914:	40 88 7d f6          	mov    %dil,-0xa(%rbp)
ffffffff80201918:	0f b6 45 f5          	movzbl -0xb(%rbp),%eax
ffffffff8020191c:	89 c1                	mov    %eax,%ecx
ffffffff8020191e:	83 e1 0f             	and    $0xf,%ecx
ffffffff80201921:	41 89 c0             	mov    %eax,%r8d
ffffffff80201924:	41 83 e0 70          	and    $0x70,%r8d
ffffffff80201928:	41 c1 e8 04          	shr    $0x4,%r8d
ffffffff8020192c:	44 89 c2             	mov    %r8d,%edx
ffffffff8020192f:	44 8d 04 92          	lea    (%rdx,%rdx,4),%r8d
ffffffff80201933:	89 ca                	mov    %ecx,%edx
ffffffff80201935:	44 89 c6             	mov    %r8d,%esi
ffffffff80201938:	8d 0c 72             	lea    (%rdx,%rsi,2),%ecx
ffffffff8020193b:	25 80 00 00 00       	and    $0x80,%eax
ffffffff80201940:	09 c1                	or     %eax,%ecx
ffffffff80201942:	40 88 cf             	mov    %cl,%dil
ffffffff80201945:	40 88 7d f5          	mov    %dil,-0xb(%rbp)
ffffffff80201949:	0f b6 45 f4          	movzbl -0xc(%rbp),%eax
ffffffff8020194d:	89 c1                	mov    %eax,%ecx
ffffffff8020194f:	83 e1 0f             	and    $0xf,%ecx
ffffffff80201952:	c1 e8 04             	shr    $0x4,%eax
ffffffff80201955:	89 c2                	mov    %eax,%edx
ffffffff80201957:	8d 04 92             	lea    (%rdx,%rdx,4),%eax
ffffffff8020195a:	89 ca                	mov    %ecx,%edx
ffffffff8020195c:	89 c6                	mov    %eax,%esi
ffffffff8020195e:	8d 04 72             	lea    (%rdx,%rsi,2),%eax
ffffffff80201961:	40 88 c7             	mov    %al,%dil
ffffffff80201964:	40 88 7d f4          	mov    %dil,-0xc(%rbp)
ffffffff80201968:	0f b6 45 f3          	movzbl -0xd(%rbp),%eax
ffffffff8020196c:	89 c1                	mov    %eax,%ecx
ffffffff8020196e:	83 e1 0f             	and    $0xf,%ecx
ffffffff80201971:	c1 e8 04             	shr    $0x4,%eax
ffffffff80201974:	89 c2                	mov    %eax,%edx
ffffffff80201976:	8d 04 92             	lea    (%rdx,%rdx,4),%eax
ffffffff80201979:	89 ca                	mov    %ecx,%edx
ffffffff8020197b:	89 c6                	mov    %eax,%esi
ffffffff8020197d:	8d 04 72             	lea    (%rdx,%rsi,2),%eax
ffffffff80201980:	40 88 c7             	mov    %al,%dil
ffffffff80201983:	40 88 7d f3          	mov    %dil,-0xd(%rbp)
ffffffff80201987:	0f b7 45 f0          	movzwl -0x10(%rbp),%eax
ffffffff8020198b:	89 c1                	mov    %eax,%ecx
ffffffff8020198d:	83 e1 0f             	and    $0xf,%ecx
ffffffff80201990:	c1 e8 04             	shr    $0x4,%eax
ffffffff80201993:	89 c2                	mov    %eax,%edx
ffffffff80201995:	8d 04 92             	lea    (%rdx,%rdx,4),%eax
ffffffff80201998:	89 ca                	mov    %ecx,%edx
ffffffff8020199a:	89 c6                	mov    %eax,%esi
ffffffff8020199c:	8d 04 72             	lea    (%rdx,%rsi,2),%eax
ffffffff8020199f:	66 41 89 c1          	mov    %ax,%r9w
ffffffff802019a3:	66 44 89 4d f0       	mov    %r9w,-0x10(%rbp)
ffffffff802019a8:	8b 04 25 78 84 28 80 	mov    0xffffffff80288478,%eax
ffffffff802019af:	83 f8 00             	cmp    $0x0,%eax
ffffffff802019b2:	74 27                	je     ffffffff802019db <RTC_GetRTCTime+0x33b>
ffffffff802019b4:	b8 10 00 00 00       	mov    $0x10,%eax
ffffffff802019b9:	0f b6 4d ef          	movzbl -0x11(%rbp),%ecx
ffffffff802019bd:	83 e1 0f             	and    $0xf,%ecx
ffffffff802019c0:	0f b6 55 ef          	movzbl -0x11(%rbp),%edx
ffffffff802019c4:	89 45 c4             	mov    %eax,-0x3c(%rbp)
ffffffff802019c7:	89 d0                	mov    %edx,%eax
ffffffff802019c9:	99                   	cltd   
ffffffff802019ca:	8b 75 c4             	mov    -0x3c(%rbp),%esi
ffffffff802019cd:	f7 fe                	idiv   %esi
ffffffff802019cf:	6b c0 0a             	imul   $0xa,%eax,%eax
ffffffff802019d2:	01 c1                	add    %eax,%ecx
ffffffff802019d4:	40 88 cf             	mov    %cl,%dil
ffffffff802019d7:	40 88 7d ef          	mov    %dil,-0x11(%rbp)
ffffffff802019db:	eb 00                	jmp    ffffffff802019dd <RTC_GetRTCTime+0x33d>
ffffffff802019dd:	0f b6 45 e7          	movzbl -0x19(%rbp),%eax
ffffffff802019e1:	83 e0 02             	and    $0x2,%eax
ffffffff802019e4:	83 f8 00             	cmp    $0x0,%eax
ffffffff802019e7:	75 2f                	jne    ffffffff80201a18 <RTC_GetRTCTime+0x378>
ffffffff802019e9:	0f b6 45 f5          	movzbl -0xb(%rbp),%eax
ffffffff802019ed:	25 80 00 00 00       	and    $0x80,%eax
ffffffff802019f2:	83 f8 00             	cmp    $0x0,%eax
ffffffff802019f5:	74 21                	je     ffffffff80201a18 <RTC_GetRTCTime+0x378>
ffffffff802019f7:	b8 18 00 00 00       	mov    $0x18,%eax
ffffffff802019fc:	0f b6 4d f5          	movzbl -0xb(%rbp),%ecx
ffffffff80201a00:	83 e1 7f             	and    $0x7f,%ecx
ffffffff80201a03:	83 c1 0c             	add    $0xc,%ecx
ffffffff80201a06:	89 45 c0             	mov    %eax,-0x40(%rbp)
ffffffff80201a09:	89 c8                	mov    %ecx,%eax
ffffffff80201a0b:	99                   	cltd   
ffffffff80201a0c:	8b 4d c0             	mov    -0x40(%rbp),%ecx
ffffffff80201a0f:	f7 f9                	idiv   %ecx
ffffffff80201a11:	40 88 d6             	mov    %dl,%sil
ffffffff80201a14:	40 88 75 f5          	mov    %sil,-0xb(%rbp)
ffffffff80201a18:	8b 04 25 78 84 28 80 	mov    0xffffffff80288478,%eax
ffffffff80201a1f:	83 f8 00             	cmp    $0x0,%eax
ffffffff80201a22:	74 16                	je     ffffffff80201a3a <RTC_GetRTCTime+0x39a>
ffffffff80201a24:	0f b6 45 ef          	movzbl -0x11(%rbp),%eax
ffffffff80201a28:	6b c0 64             	imul   $0x64,%eax,%eax
ffffffff80201a2b:	0f b7 4d f0          	movzwl -0x10(%rbp),%ecx
ffffffff80201a2f:	01 c1                	add    %eax,%ecx
ffffffff80201a31:	66 89 ca             	mov    %cx,%dx
ffffffff80201a34:	66 89 55 f0          	mov    %dx,-0x10(%rbp)
ffffffff80201a38:	eb 2b                	jmp    ffffffff80201a65 <RTC_GetRTCTime+0x3c5>
ffffffff80201a3a:	0f b7 45 f0          	movzwl -0x10(%rbp),%eax
ffffffff80201a3e:	05 d0 07 00 00       	add    $0x7d0,%eax
ffffffff80201a43:	66 89 c1             	mov    %ax,%cx
ffffffff80201a46:	66 89 4d f0          	mov    %cx,-0x10(%rbp)
ffffffff80201a4a:	0f b7 45 f0          	movzwl -0x10(%rbp),%eax
ffffffff80201a4e:	3d e0 07 00 00       	cmp    $0x7e0,%eax
ffffffff80201a53:	7d 0e                	jge    ffffffff80201a63 <RTC_GetRTCTime+0x3c3>
ffffffff80201a55:	0f b7 45 f0          	movzwl -0x10(%rbp),%eax
ffffffff80201a59:	83 c0 64             	add    $0x64,%eax
ffffffff80201a5c:	66 89 c1             	mov    %ax,%cx
ffffffff80201a5f:	66 89 4d f0          	mov    %cx,-0x10(%rbp)
ffffffff80201a63:	eb 00                	jmp    ffffffff80201a65 <RTC_GetRTCTime+0x3c5>
ffffffff80201a65:	8a 45 f7             	mov    -0x9(%rbp),%al
ffffffff80201a68:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
ffffffff80201a6c:	88 01                	mov    %al,(%rcx)
ffffffff80201a6e:	8a 45 f6             	mov    -0xa(%rbp),%al
ffffffff80201a71:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
ffffffff80201a75:	88 41 01             	mov    %al,0x1(%rcx)
ffffffff80201a78:	8a 45 f5             	mov    -0xb(%rbp),%al
ffffffff80201a7b:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
ffffffff80201a7f:	88 41 02             	mov    %al,0x2(%rcx)
ffffffff80201a82:	8a 45 f4             	mov    -0xc(%rbp),%al
ffffffff80201a85:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
ffffffff80201a89:	88 41 03             	mov    %al,0x3(%rcx)
ffffffff80201a8c:	8a 45 f3             	mov    -0xd(%rbp),%al
ffffffff80201a8f:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
ffffffff80201a93:	88 41 04             	mov    %al,0x4(%rcx)
ffffffff80201a96:	66 8b 55 f0          	mov    -0x10(%rbp),%dx
ffffffff80201a9a:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
ffffffff80201a9e:	66 89 51 06          	mov    %dx,0x6(%rcx)
ffffffff80201aa2:	8a 45 ef             	mov    -0x11(%rbp),%al
ffffffff80201aa5:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
ffffffff80201aa9:	88 41 08             	mov    %al,0x8(%rcx)
ffffffff80201aac:	48 83 c4 40          	add    $0x40,%rsp
ffffffff80201ab0:	5d                   	pop    %rbp
ffffffff80201ab1:	c3                   	retq   
ffffffff80201ab2:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80201ab9:	00 00 00 
ffffffff80201abc:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff80201ac0 <debug_gfx_writeLine>:
ffffffff80201ac0:	55                   	push   %rbp
ffffffff80201ac1:	48 89 e5             	mov    %rsp,%rbp
ffffffff80201ac4:	48 81 ec b0 01 00 00 	sub    $0x1b0,%rsp
ffffffff80201acb:	4c 89 8d 98 fe ff ff 	mov    %r9,-0x168(%rbp)
ffffffff80201ad2:	4c 89 85 90 fe ff ff 	mov    %r8,-0x170(%rbp)
ffffffff80201ad9:	48 89 8d 88 fe ff ff 	mov    %rcx,-0x178(%rbp)
ffffffff80201ae0:	48 89 95 80 fe ff ff 	mov    %rdx,-0x180(%rbp)
ffffffff80201ae7:	48 89 b5 78 fe ff ff 	mov    %rsi,-0x188(%rbp)
ffffffff80201aee:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff80201af2:	b8 00 01 00 00       	mov    $0x100,%eax
ffffffff80201af7:	89 c2                	mov    %eax,%edx
ffffffff80201af9:	48 8d 8d f0 fe ff ff 	lea    -0x110(%rbp),%rcx
ffffffff80201b00:	31 f6                	xor    %esi,%esi
ffffffff80201b02:	48 89 cf             	mov    %rcx,%rdi
ffffffff80201b05:	48 89 8d 68 fe ff ff 	mov    %rcx,-0x198(%rbp)
ffffffff80201b0c:	e8 4f 6c 00 00       	callq  ffffffff80208760 <memset>
ffffffff80201b11:	48 8d 8d 70 fe ff ff 	lea    -0x190(%rbp),%rcx
ffffffff80201b18:	48 89 8d e0 fe ff ff 	mov    %rcx,-0x120(%rbp)
ffffffff80201b1f:	48 8d 4d 10          	lea    0x10(%rbp),%rcx
ffffffff80201b23:	48 89 8d d8 fe ff ff 	mov    %rcx,-0x128(%rbp)
ffffffff80201b2a:	c7 85 d4 fe ff ff 30 	movl   $0x30,-0x12c(%rbp)
ffffffff80201b31:	00 00 00 
ffffffff80201b34:	c7 85 d0 fe ff ff 08 	movl   $0x8,-0x130(%rbp)
ffffffff80201b3b:	00 00 00 
ffffffff80201b3e:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
ffffffff80201b42:	48 8d 95 d0 fe ff ff 	lea    -0x130(%rbp),%rdx
ffffffff80201b49:	48 8b bd 68 fe ff ff 	mov    -0x198(%rbp),%rdi
ffffffff80201b50:	48 89 85 60 fe ff ff 	mov    %rax,-0x1a0(%rbp)
ffffffff80201b57:	e8 34 76 00 00       	callq  ffffffff80209190 <vsnprintf>
ffffffff80201b5c:	89 85 5c fe ff ff    	mov    %eax,-0x1a4(%rbp)
ffffffff80201b62:	e8 69 93 00 00       	callq  ffffffff8020aed0 <GetBootInfo>
ffffffff80201b67:	48 89 85 c8 fe ff ff 	mov    %rax,-0x138(%rbp)
ffffffff80201b6e:	44 8b 14 25 7c 84 28 	mov    0xffffffff8028847c,%r10d
ffffffff80201b75:	80 
ffffffff80201b76:	44 89 95 c4 fe ff ff 	mov    %r10d,-0x13c(%rbp)
ffffffff80201b7d:	44 8b 14 25 80 84 28 	mov    0xffffffff80288480,%r10d
ffffffff80201b84:	80 
ffffffff80201b85:	44 89 95 c0 fe ff ff 	mov    %r10d,-0x140(%rbp)
ffffffff80201b8c:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
ffffffff80201b93:	44 8b 50 50          	mov    0x50(%rax),%r10d
ffffffff80201b97:	44 89 95 bc fe ff ff 	mov    %r10d,-0x144(%rbp)
ffffffff80201b9e:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
ffffffff80201ba5:	48 8b 40 48          	mov    0x48(%rax),%rax
ffffffff80201ba9:	48 89 85 b0 fe ff ff 	mov    %rax,-0x150(%rbp)
ffffffff80201bb0:	c7 85 ac fe ff ff 00 	movl   $0x0,-0x154(%rbp)
ffffffff80201bb7:	00 00 00 
ffffffff80201bba:	48 63 85 ac fe ff ff 	movslq -0x154(%rbp),%rax
ffffffff80201bc1:	0f be 8c 05 f0 fe ff 	movsbl -0x110(%rbp,%rax,1),%ecx
ffffffff80201bc8:	ff 
ffffffff80201bc9:	83 f9 00             	cmp    $0x0,%ecx
ffffffff80201bcc:	0f 84 14 01 00 00    	je     ffffffff80201ce6 <debug_gfx_writeLine+0x226>
ffffffff80201bd2:	c7 85 a8 fe ff ff 00 	movl   $0x0,-0x158(%rbp)
ffffffff80201bd9:	00 00 00 
ffffffff80201bdc:	83 bd a8 fe ff ff 08 	cmpl   $0x8,-0x158(%rbp)
ffffffff80201be3:	0f 8d e7 00 00 00    	jge    ffffffff80201cd0 <debug_gfx_writeLine+0x210>
ffffffff80201be9:	8b 85 c0 fe ff ff    	mov    -0x140(%rbp),%eax
ffffffff80201bef:	89 85 a4 fe ff ff    	mov    %eax,-0x15c(%rbp)
ffffffff80201bf5:	8b 85 a4 fe ff ff    	mov    -0x15c(%rbp),%eax
ffffffff80201bfb:	8b 8d c0 fe ff ff    	mov    -0x140(%rbp),%ecx
ffffffff80201c01:	83 c1 0d             	add    $0xd,%ecx
ffffffff80201c04:	39 c8                	cmp    %ecx,%eax
ffffffff80201c06:	0f 8d a1 00 00 00    	jge    ffffffff80201cad <debug_gfx_writeLine+0x1ed>
ffffffff80201c0c:	b8 08 00 00 00       	mov    $0x8,%eax
ffffffff80201c11:	8b 8d a4 fe ff ff    	mov    -0x15c(%rbp),%ecx
ffffffff80201c17:	8b 95 c0 fe ff ff    	mov    -0x140(%rbp),%edx
ffffffff80201c1d:	29 d1                	sub    %edx,%ecx
ffffffff80201c1f:	ba 0d 00 00 00       	mov    $0xd,%edx
ffffffff80201c24:	29 ca                	sub    %ecx,%edx
ffffffff80201c26:	48 63 f2             	movslq %edx,%rsi
ffffffff80201c29:	48 63 bd ac fe ff ff 	movslq -0x154(%rbp),%rdi
ffffffff80201c30:	0f be 8c 3d f0 fe ff 	movsbl -0x110(%rbp,%rdi,1),%ecx
ffffffff80201c37:	ff 
ffffffff80201c38:	83 c1 e0             	add    $0xffffffe0,%ecx
ffffffff80201c3b:	48 63 f9             	movslq %ecx,%rdi
ffffffff80201c3e:	48 6b ff 0d          	imul   $0xd,%rdi,%rdi
ffffffff80201c42:	48 8d bf 00 b0 24 80 	lea    -0x7fdb5000(%rdi),%rdi
ffffffff80201c49:	0f b6 0c 37          	movzbl (%rdi,%rsi,1),%ecx
ffffffff80201c4d:	8b 95 a8 fe ff ff    	mov    -0x158(%rbp),%edx
ffffffff80201c53:	89 8d 58 fe ff ff    	mov    %ecx,-0x1a8(%rbp)
ffffffff80201c59:	89 d1                	mov    %edx,%ecx
ffffffff80201c5b:	8b 95 58 fe ff ff    	mov    -0x1a8(%rbp),%edx
ffffffff80201c61:	d3 fa                	sar    %cl,%edx
ffffffff80201c63:	83 e2 01             	and    $0x1,%edx
ffffffff80201c66:	69 d2 dd dd dd dd    	imul   $0xdddddddd,%edx,%edx
ffffffff80201c6c:	44 8b 85 c4 fe ff ff 	mov    -0x13c(%rbp),%r8d
ffffffff80201c73:	2b 85 a8 fe ff ff    	sub    -0x158(%rbp),%eax
ffffffff80201c79:	41 01 c0             	add    %eax,%r8d
ffffffff80201c7c:	8b 85 a4 fe ff ff    	mov    -0x15c(%rbp),%eax
ffffffff80201c82:	0f af 85 bc fe ff ff 	imul   -0x144(%rbp),%eax
ffffffff80201c89:	41 01 c0             	add    %eax,%r8d
ffffffff80201c8c:	49 63 f0             	movslq %r8d,%rsi
ffffffff80201c8f:	48 8b bd b0 fe ff ff 	mov    -0x150(%rbp),%rdi
ffffffff80201c96:	89 14 b7             	mov    %edx,(%rdi,%rsi,4)
ffffffff80201c99:	8b 85 a4 fe ff ff    	mov    -0x15c(%rbp),%eax
ffffffff80201c9f:	83 c0 01             	add    $0x1,%eax
ffffffff80201ca2:	89 85 a4 fe ff ff    	mov    %eax,-0x15c(%rbp)
ffffffff80201ca8:	e9 48 ff ff ff       	jmpq   ffffffff80201bf5 <debug_gfx_writeLine+0x135>
ffffffff80201cad:	8b 85 c4 fe ff ff    	mov    -0x13c(%rbp),%eax
ffffffff80201cb3:	83 c0 08             	add    $0x8,%eax
ffffffff80201cb6:	89 85 c4 fe ff ff    	mov    %eax,-0x13c(%rbp)
ffffffff80201cbc:	8b 85 a8 fe ff ff    	mov    -0x158(%rbp),%eax
ffffffff80201cc2:	83 c0 01             	add    $0x1,%eax
ffffffff80201cc5:	89 85 a8 fe ff ff    	mov    %eax,-0x158(%rbp)
ffffffff80201ccb:	e9 0c ff ff ff       	jmpq   ffffffff80201bdc <debug_gfx_writeLine+0x11c>
ffffffff80201cd0:	eb 00                	jmp    ffffffff80201cd2 <debug_gfx_writeLine+0x212>
ffffffff80201cd2:	8b 85 ac fe ff ff    	mov    -0x154(%rbp),%eax
ffffffff80201cd8:	83 c0 01             	add    $0x1,%eax
ffffffff80201cdb:	89 85 ac fe ff ff    	mov    %eax,-0x154(%rbp)
ffffffff80201ce1:	e9 d4 fe ff ff       	jmpq   ffffffff80201bba <debug_gfx_writeLine+0xfa>
ffffffff80201ce6:	8b 85 c0 fe ff ff    	mov    -0x140(%rbp),%eax
ffffffff80201cec:	89 04 25 80 84 28 80 	mov    %eax,0xffffffff80288480
ffffffff80201cf3:	8b 85 c4 fe ff ff    	mov    -0x13c(%rbp),%eax
ffffffff80201cf9:	89 04 25 7c 84 28 80 	mov    %eax,0xffffffff8028847c
ffffffff80201d00:	48 81 c4 b0 01 00 00 	add    $0x1b0,%rsp
ffffffff80201d07:	5d                   	pop    %rbp
ffffffff80201d08:	c3                   	retq   
ffffffff80201d09:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

ffffffff80201d10 <MemoryHAL_Initialize>:
ffffffff80201d10:	55                   	push   %rbp
ffffffff80201d11:	48 89 e5             	mov    %rsp,%rbp
ffffffff80201d14:	e8 f7 07 00 00       	callq  ffffffff80202510 <CreateBootstrapSpinlock>
ffffffff80201d19:	48 89 04 25 88 84 28 	mov    %rax,0xffffffff80288488
ffffffff80201d20:	80 
ffffffff80201d21:	5d                   	pop    %rbp
ffffffff80201d22:	c3                   	retq   
ffffffff80201d23:	0f 1f 00             	nopl   (%rax)
ffffffff80201d26:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80201d2d:	00 00 00 

ffffffff80201d30 <GetVirtualAddress>:
ffffffff80201d30:	55                   	push   %rbp
ffffffff80201d31:	48 89 e5             	mov    %rsp,%rbp
ffffffff80201d34:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff80201d38:	89 7d fc             	mov    %edi,-0x4(%rbp)
ffffffff80201d3b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff80201d3f:	8b 7d fc             	mov    -0x4(%rbp),%edi
ffffffff80201d42:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
ffffffff80201d46:	e8 85 4c 00 00       	callq  ffffffff802069d0 <VirtMemMan_GetVirtualAddress>
ffffffff80201d4b:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff80201d4f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80201d53:	48 83 c4 20          	add    $0x20,%rsp
ffffffff80201d57:	5d                   	pop    %rbp
ffffffff80201d58:	c3                   	retq   
ffffffff80201d59:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

ffffffff80201d60 <GetPhysicalAddress>:
ffffffff80201d60:	55                   	push   %rbp
ffffffff80201d61:	48 89 e5             	mov    %rsp,%rbp
ffffffff80201d64:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff80201d68:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff80201d6c:	e8 4f 00 00 00       	callq  ffffffff80201dc0 <GetActiveVirtualMemoryInstance>
ffffffff80201d71:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
ffffffff80201d75:	48 89 c7             	mov    %rax,%rdi
ffffffff80201d78:	e8 13 00 00 00       	callq  ffffffff80201d90 <GetPhysicalAddressUID>
ffffffff80201d7d:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff80201d81:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80201d85:	48 83 c4 10          	add    $0x10,%rsp
ffffffff80201d89:	5d                   	pop    %rbp
ffffffff80201d8a:	c3                   	retq   
ffffffff80201d8b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

ffffffff80201d90 <GetPhysicalAddressUID>:
ffffffff80201d90:	55                   	push   %rbp
ffffffff80201d91:	48 89 e5             	mov    %rsp,%rbp
ffffffff80201d94:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff80201d98:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff80201d9c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff80201da0:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
ffffffff80201da4:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
ffffffff80201da8:	e8 b3 49 00 00       	callq  ffffffff80206760 <VirtMemMan_GetPhysicalAddress>
ffffffff80201dad:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff80201db1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80201db5:	48 83 c4 20          	add    $0x20,%rsp
ffffffff80201db9:	5d                   	pop    %rbp
ffffffff80201dba:	c3                   	retq   
ffffffff80201dbb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

ffffffff80201dc0 <GetActiveVirtualMemoryInstance>:
ffffffff80201dc0:	55                   	push   %rbp
ffffffff80201dc1:	48 89 e5             	mov    %rsp,%rbp
ffffffff80201dc4:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff80201dc8:	e8 b3 3c 00 00       	callq  ffffffff80205a80 <VirtMemMan_GetCurrent>
ffffffff80201dcd:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff80201dd1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80201dd5:	48 83 c4 10          	add    $0x10,%rsp
ffffffff80201dd9:	5d                   	pop    %rbp
ffffffff80201dda:	c3                   	retq   
ffffffff80201ddb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

ffffffff80201de0 <CreateVirtualMemoryInstance>:
ffffffff80201de0:	55                   	push   %rbp
ffffffff80201de1:	48 89 e5             	mov    %rsp,%rbp
ffffffff80201de4:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff80201de8:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
ffffffff80201dec:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
ffffffff80201df1:	74 35                	je     ffffffff80201e28 <CreateVirtualMemoryInstance+0x48>
ffffffff80201df3:	48 8b 3c 25 88 84 28 	mov    0xffffffff80288488,%rdi
ffffffff80201dfa:	80 
ffffffff80201dfb:	e8 60 07 00 00       	callq  ffffffff80202560 <LockSpinlock>
ffffffff80201e00:	88 45 ef             	mov    %al,-0x11(%rbp)
ffffffff80201e03:	e8 08 3c 00 00       	callq  ffffffff80205a10 <VirtMemMan_CreateInstance>
ffffffff80201e08:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
ffffffff80201e0c:	48 89 07             	mov    %rax,(%rdi)
ffffffff80201e0f:	48 8b 3c 25 88 84 28 	mov    0xffffffff80288488,%rdi
ffffffff80201e16:	80 
ffffffff80201e17:	e8 14 08 00 00       	callq  ffffffff80202630 <UnlockSpinlock>
ffffffff80201e1c:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
ffffffff80201e23:	88 45 ee             	mov    %al,-0x12(%rbp)
ffffffff80201e26:	eb 07                	jmp    ffffffff80201e2f <CreateVirtualMemoryInstance+0x4f>
ffffffff80201e28:	c7 45 fc 40 00 00 00 	movl   $0x40,-0x4(%rbp)
ffffffff80201e2f:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff80201e32:	48 83 c4 20          	add    $0x20,%rsp
ffffffff80201e36:	5d                   	pop    %rbp
ffffffff80201e37:	c3                   	retq   
ffffffff80201e38:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff80201e3f:	00 

ffffffff80201e40 <FreeVirtualMemoryInstance>:
ffffffff80201e40:	55                   	push   %rbp
ffffffff80201e41:	48 89 e5             	mov    %rsp,%rbp
ffffffff80201e44:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff80201e48:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff80201e4c:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
ffffffff80201e51:	74 39                	je     ffffffff80201e8c <FreeVirtualMemoryInstance+0x4c>
ffffffff80201e53:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80201e57:	48 25 ff 0f 00 00    	and    $0xfff,%rax
ffffffff80201e5d:	48 83 f8 00          	cmp    $0x0,%rax
ffffffff80201e61:	75 29                	jne    ffffffff80201e8c <FreeVirtualMemoryInstance+0x4c>
ffffffff80201e63:	48 8b 3c 25 88 84 28 	mov    0xffffffff80288488,%rdi
ffffffff80201e6a:	80 
ffffffff80201e6b:	e8 f0 06 00 00       	callq  ffffffff80202560 <LockSpinlock>
ffffffff80201e70:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
ffffffff80201e74:	88 45 f7             	mov    %al,-0x9(%rbp)
ffffffff80201e77:	e8 d4 51 00 00       	callq  ffffffff80207050 <VirtMemMan_FreePageTable>
ffffffff80201e7c:	48 8b 3c 25 88 84 28 	mov    0xffffffff80288488,%rdi
ffffffff80201e83:	80 
ffffffff80201e84:	e8 a7 07 00 00       	callq  ffffffff80202630 <UnlockSpinlock>
ffffffff80201e89:	88 45 f6             	mov    %al,-0xa(%rbp)
ffffffff80201e8c:	48 83 c4 10          	add    $0x10,%rsp
ffffffff80201e90:	5d                   	pop    %rbp
ffffffff80201e91:	c3                   	retq   
ffffffff80201e92:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff80201e96:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80201e9d:	00 00 00 

ffffffff80201ea0 <SetActiveVirtualMemoryInstance>:
ffffffff80201ea0:	55                   	push   %rbp
ffffffff80201ea1:	48 89 e5             	mov    %rsp,%rbp
ffffffff80201ea4:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff80201ea8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff80201eac:	48 8b 3c 25 88 84 28 	mov    0xffffffff80288488,%rdi
ffffffff80201eb3:	80 
ffffffff80201eb4:	e8 a7 06 00 00       	callq  ffffffff80202560 <LockSpinlock>
ffffffff80201eb9:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
ffffffff80201ebd:	88 45 ef             	mov    %al,-0x11(%rbp)
ffffffff80201ec0:	e8 5b 39 00 00       	callq  ffffffff80205820 <VirtMemMan_SetCurrent>
ffffffff80201ec5:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff80201ec9:	48 8b 3c 25 88 84 28 	mov    0xffffffff80288488,%rdi
ffffffff80201ed0:	80 
ffffffff80201ed1:	e8 5a 07 00 00       	callq  ffffffff80202630 <UnlockSpinlock>
ffffffff80201ed6:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
ffffffff80201eda:	88 45 ee             	mov    %al,-0x12(%rbp)
ffffffff80201edd:	48 89 f8             	mov    %rdi,%rax
ffffffff80201ee0:	48 83 c4 20          	add    $0x20,%rsp
ffffffff80201ee4:	5d                   	pop    %rbp
ffffffff80201ee5:	c3                   	retq   
ffffffff80201ee6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80201eed:	00 00 00 

ffffffff80201ef0 <MapPage>:
ffffffff80201ef0:	55                   	push   %rbp
ffffffff80201ef1:	48 89 e5             	mov    %rsp,%rbp
ffffffff80201ef4:	48 83 ec 60          	sub    $0x60,%rsp
ffffffff80201ef8:	8b 45 18             	mov    0x18(%rbp),%eax
ffffffff80201efb:	44 8b 55 10          	mov    0x10(%rbp),%r10d
ffffffff80201eff:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
ffffffff80201f03:	48 89 75 e8          	mov    %rsi,-0x18(%rbp)
ffffffff80201f07:	48 89 55 e0          	mov    %rdx,-0x20(%rbp)
ffffffff80201f0b:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
ffffffff80201f0f:	4c 89 45 d0          	mov    %r8,-0x30(%rbp)
ffffffff80201f13:	44 89 4d cc          	mov    %r9d,-0x34(%rbp)
ffffffff80201f17:	44 89 55 c8          	mov    %r10d,-0x38(%rbp)
ffffffff80201f1b:	89 45 c4             	mov    %eax,-0x3c(%rbp)
ffffffff80201f1e:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
ffffffff80201f23:	75 0c                	jne    ffffffff80201f31 <MapPage+0x41>
ffffffff80201f25:	c7 45 fc 40 00 00 00 	movl   $0x40,-0x4(%rbp)
ffffffff80201f2c:	e9 6a 01 00 00       	jmpq   ffffffff8020209b <MapPage+0x1ab>
ffffffff80201f31:	c7 45 c0 00 00 00 00 	movl   $0x0,-0x40(%rbp)
ffffffff80201f38:	83 7d cc 01          	cmpl   $0x1,-0x34(%rbp)
ffffffff80201f3c:	75 09                	jne    ffffffff80201f47 <MapPage+0x57>
ffffffff80201f3e:	c7 45 c0 02 00 00 00 	movl   $0x2,-0x40(%rbp)
ffffffff80201f45:	eb 2e                	jmp    ffffffff80201f75 <MapPage+0x85>
ffffffff80201f47:	83 7d cc 00          	cmpl   $0x0,-0x34(%rbp)
ffffffff80201f4b:	75 09                	jne    ffffffff80201f56 <MapPage+0x66>
ffffffff80201f4d:	c7 45 c0 00 00 00 00 	movl   $0x0,-0x40(%rbp)
ffffffff80201f54:	eb 1d                	jmp    ffffffff80201f73 <MapPage+0x83>
ffffffff80201f56:	83 7d cc 02          	cmpl   $0x2,-0x34(%rbp)
ffffffff80201f5a:	75 09                	jne    ffffffff80201f65 <MapPage+0x75>
ffffffff80201f5c:	c7 45 c0 01 00 00 00 	movl   $0x1,-0x40(%rbp)
ffffffff80201f63:	eb 0c                	jmp    ffffffff80201f71 <MapPage+0x81>
ffffffff80201f65:	c7 45 fc 08 00 00 00 	movl   $0x8,-0x4(%rbp)
ffffffff80201f6c:	e9 2a 01 00 00       	jmpq   ffffffff8020209b <MapPage+0x1ab>
ffffffff80201f71:	eb 00                	jmp    ffffffff80201f73 <MapPage+0x83>
ffffffff80201f73:	eb 00                	jmp    ffffffff80201f75 <MapPage+0x85>
ffffffff80201f75:	48 8b 3c 25 88 84 28 	mov    0xffffffff80288488,%rdi
ffffffff80201f7c:	80 
ffffffff80201f7d:	e8 de 05 00 00       	callq  ffffffff80202560 <LockSpinlock>
ffffffff80201f82:	c7 45 bc 00 00 00 00 	movl   $0x0,-0x44(%rbp)
ffffffff80201f89:	8b 4d c4             	mov    -0x3c(%rbp),%ecx
ffffffff80201f8c:	83 e1 02             	and    $0x2,%ecx
ffffffff80201f8f:	83 f9 00             	cmp    $0x0,%ecx
ffffffff80201f92:	88 45 b7             	mov    %al,-0x49(%rbp)
ffffffff80201f95:	74 09                	je     ffffffff80201fa0 <MapPage+0xb0>
ffffffff80201f97:	8b 45 bc             	mov    -0x44(%rbp),%eax
ffffffff80201f9a:	83 c8 01             	or     $0x1,%eax
ffffffff80201f9d:	89 45 bc             	mov    %eax,-0x44(%rbp)
ffffffff80201fa0:	8b 45 c4             	mov    -0x3c(%rbp),%eax
ffffffff80201fa3:	83 e0 04             	and    $0x4,%eax
ffffffff80201fa6:	83 f8 00             	cmp    $0x0,%eax
ffffffff80201fa9:	74 09                	je     ffffffff80201fb4 <MapPage+0xc4>
ffffffff80201fab:	8b 45 bc             	mov    -0x44(%rbp),%eax
ffffffff80201fae:	83 c8 02             	or     $0x2,%eax
ffffffff80201fb1:	89 45 bc             	mov    %eax,-0x44(%rbp)
ffffffff80201fb4:	c7 45 b8 00 00 00 00 	movl   $0x0,-0x48(%rbp)
ffffffff80201fbb:	8b 45 c4             	mov    -0x3c(%rbp),%eax
ffffffff80201fbe:	83 e0 00             	and    $0x0,%eax
ffffffff80201fc1:	83 f8 00             	cmp    $0x0,%eax
ffffffff80201fc4:	75 06                	jne    ffffffff80201fcc <MapPage+0xdc>
ffffffff80201fc6:	8b 45 b8             	mov    -0x48(%rbp),%eax
ffffffff80201fc9:	89 45 b8             	mov    %eax,-0x48(%rbp)
ffffffff80201fcc:	8b 45 c4             	mov    -0x3c(%rbp),%eax
ffffffff80201fcf:	83 e0 08             	and    $0x8,%eax
ffffffff80201fd2:	83 f8 08             	cmp    $0x8,%eax
ffffffff80201fd5:	75 09                	jne    ffffffff80201fe0 <MapPage+0xf0>
ffffffff80201fd7:	8b 45 b8             	mov    -0x48(%rbp),%eax
ffffffff80201fda:	83 c8 01             	or     $0x1,%eax
ffffffff80201fdd:	89 45 b8             	mov    %eax,-0x48(%rbp)
ffffffff80201fe0:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
ffffffff80201fe5:	74 59                	je     ffffffff80202040 <MapPage+0x150>
ffffffff80201fe7:	8b 45 cc             	mov    -0x34(%rbp),%eax
ffffffff80201fea:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
ffffffff80201fee:	89 01                	mov    %eax,(%rcx)
ffffffff80201ff0:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
ffffffff80201ff4:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff80201ff8:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
ffffffff80201ffc:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
ffffffff80202000:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff80202004:	48 89 4a 10          	mov    %rcx,0x10(%rdx)
ffffffff80202008:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
ffffffff8020200c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff80202010:	48 89 4a 18          	mov    %rcx,0x18(%rdx)
ffffffff80202014:	8b 45 c4             	mov    -0x3c(%rbp),%eax
ffffffff80202017:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
ffffffff8020201b:	89 41 20             	mov    %eax,0x20(%rcx)
ffffffff8020201e:	8b 45 c8             	mov    -0x38(%rbp),%eax
ffffffff80202021:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
ffffffff80202025:	89 41 24             	mov    %eax,0x24(%rcx)
ffffffff80202028:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
ffffffff8020202c:	48 c7 41 28 00 00 00 	movq   $0x0,0x28(%rcx)
ffffffff80202033:	00 
ffffffff80202034:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
ffffffff80202038:	48 c7 41 30 00 00 00 	movq   $0x0,0x30(%rcx)
ffffffff8020203f:	00 
ffffffff80202040:	8b 45 c8             	mov    -0x38(%rbp),%eax
ffffffff80202043:	83 e0 04             	and    $0x4,%eax
ffffffff80202046:	83 f8 00             	cmp    $0x0,%eax
ffffffff80202049:	74 09                	je     ffffffff80202054 <MapPage+0x164>
ffffffff8020204b:	8b 45 bc             	mov    -0x44(%rbp),%eax
ffffffff8020204e:	83 e0 fd             	and    $0xfffffffd,%eax
ffffffff80202051:	89 45 bc             	mov    %eax,-0x44(%rbp)
ffffffff80202054:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
ffffffff80202058:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
ffffffff8020205c:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
ffffffff80202060:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
ffffffff80202064:	44 8b 4d c0          	mov    -0x40(%rbp),%r9d
ffffffff80202068:	8b 45 bc             	mov    -0x44(%rbp),%eax
ffffffff8020206b:	44 8b 45 b8          	mov    -0x48(%rbp),%r8d
ffffffff8020206f:	49 89 e2             	mov    %rsp,%r10
ffffffff80202072:	45 89 42 08          	mov    %r8d,0x8(%r10)
ffffffff80202076:	41 89 02             	mov    %eax,(%r10)
ffffffff80202079:	41 b8 01 00 00 00    	mov    $0x1,%r8d
ffffffff8020207f:	e8 7c 34 00 00       	callq  ffffffff80205500 <VirtMemMan_Map>
ffffffff80202084:	48 8b 3c 25 88 84 28 	mov    0xffffffff80288488,%rdi
ffffffff8020208b:	80 
ffffffff8020208c:	e8 9f 05 00 00       	callq  ffffffff80202630 <UnlockSpinlock>
ffffffff80202091:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
ffffffff80202098:	88 45 b6             	mov    %al,-0x4a(%rbp)
ffffffff8020209b:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff8020209e:	48 83 c4 60          	add    $0x60,%rsp
ffffffff802020a2:	5d                   	pop    %rbp
ffffffff802020a3:	c3                   	retq   
ffffffff802020a4:	66 90                	xchg   %ax,%ax
ffffffff802020a6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff802020ad:	00 00 00 

ffffffff802020b0 <UnmapPage>:
ffffffff802020b0:	55                   	push   %rbp
ffffffff802020b1:	48 89 e5             	mov    %rsp,%rbp
ffffffff802020b4:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff802020b8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff802020bc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff802020c0:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
ffffffff802020c4:	48 8b 3c 25 88 84 28 	mov    0xffffffff80288488,%rdi
ffffffff802020cb:	80 
ffffffff802020cc:	e8 8f 04 00 00       	callq  ffffffff80202560 <LockSpinlock>
ffffffff802020d1:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
ffffffff802020d5:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
ffffffff802020d9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff802020dd:	88 45 e7             	mov    %al,-0x19(%rbp)
ffffffff802020e0:	e8 ab 44 00 00       	callq  ffffffff80206590 <VirtMemMan_Unmap>
ffffffff802020e5:	48 8b 3c 25 88 84 28 	mov    0xffffffff80288488,%rdi
ffffffff802020ec:	80 
ffffffff802020ed:	e8 3e 05 00 00       	callq  ffffffff80202630 <UnlockSpinlock>
ffffffff802020f2:	31 c9                	xor    %ecx,%ecx
ffffffff802020f4:	88 45 e6             	mov    %al,-0x1a(%rbp)
ffffffff802020f7:	89 c8                	mov    %ecx,%eax
ffffffff802020f9:	48 83 c4 20          	add    $0x20,%rsp
ffffffff802020fd:	5d                   	pop    %rbp
ffffffff802020fe:	c3                   	retq   
ffffffff802020ff:	90                   	nop

ffffffff80202100 <FindFreeVirtualAddress>:
ffffffff80202100:	55                   	push   %rbp
ffffffff80202101:	48 89 e5             	mov    %rsp,%rbp
ffffffff80202104:	48 83 ec 40          	sub    $0x40,%rsp
ffffffff80202108:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
ffffffff8020210c:	48 89 75 e8          	mov    %rsi,-0x18(%rbp)
ffffffff80202110:	48 89 55 e0          	mov    %rdx,-0x20(%rbp)
ffffffff80202114:	89 4d dc             	mov    %ecx,-0x24(%rbp)
ffffffff80202117:	44 89 45 d8          	mov    %r8d,-0x28(%rbp)
ffffffff8020211b:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
ffffffff80202120:	75 09                	jne    ffffffff8020212b <FindFreeVirtualAddress+0x2b>
ffffffff80202122:	c7 45 fc 40 00 00 00 	movl   $0x40,-0x4(%rbp)
ffffffff80202129:	eb 7c                	jmp    ffffffff802021a7 <FindFreeVirtualAddress+0xa7>
ffffffff8020212b:	48 8b 3c 25 88 84 28 	mov    0xffffffff80288488,%rdi
ffffffff80202132:	80 
ffffffff80202133:	e8 28 04 00 00       	callq  ffffffff80202560 <LockSpinlock>
ffffffff80202138:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%rbp)
ffffffff8020213f:	8b 4d d8             	mov    -0x28(%rbp),%ecx
ffffffff80202142:	83 e1 00             	and    $0x0,%ecx
ffffffff80202145:	83 f9 00             	cmp    $0x0,%ecx
ffffffff80202148:	88 45 c7             	mov    %al,-0x39(%rbp)
ffffffff8020214b:	74 06                	je     ffffffff80202153 <FindFreeVirtualAddress+0x53>
ffffffff8020214d:	8b 45 d4             	mov    -0x2c(%rbp),%eax
ffffffff80202150:	89 45 d4             	mov    %eax,-0x2c(%rbp)
ffffffff80202153:	8b 45 d8             	mov    -0x28(%rbp),%eax
ffffffff80202156:	83 e0 08             	and    $0x8,%eax
ffffffff80202159:	83 f8 00             	cmp    $0x0,%eax
ffffffff8020215c:	74 09                	je     ffffffff80202167 <FindFreeVirtualAddress+0x67>
ffffffff8020215e:	8b 45 d4             	mov    -0x2c(%rbp),%eax
ffffffff80202161:	83 c8 01             	or     $0x1,%eax
ffffffff80202164:	89 45 d4             	mov    %eax,-0x2c(%rbp)
ffffffff80202167:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
ffffffff8020216b:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
ffffffff8020216f:	8b 55 dc             	mov    -0x24(%rbp),%edx
ffffffff80202172:	8b 4d d4             	mov    -0x2c(%rbp),%ecx
ffffffff80202175:	e8 26 49 00 00       	callq  ffffffff80206aa0 <VirtMemMan_FindFreeAddress>
ffffffff8020217a:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
ffffffff8020217e:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
ffffffff80202183:	74 0b                	je     ffffffff80202190 <FindFreeVirtualAddress+0x90>
ffffffff80202185:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80202189:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
ffffffff8020218d:	48 89 01             	mov    %rax,(%rcx)
ffffffff80202190:	48 8b 3c 25 88 84 28 	mov    0xffffffff80288488,%rdi
ffffffff80202197:	80 
ffffffff80202198:	e8 93 04 00 00       	callq  ffffffff80202630 <UnlockSpinlock>
ffffffff8020219d:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
ffffffff802021a4:	88 45 c6             	mov    %al,-0x3a(%rbp)
ffffffff802021a7:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff802021aa:	48 83 c4 40          	add    $0x40,%rsp
ffffffff802021ae:	5d                   	pop    %rbp
ffffffff802021af:	c3                   	retq   

ffffffff802021b0 <ForkTable>:
ffffffff802021b0:	55                   	push   %rbp
ffffffff802021b1:	48 89 e5             	mov    %rsp,%rbp
ffffffff802021b4:	48 81 ec 80 00 00 00 	sub    $0x80,%rsp
ffffffff802021bb:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
ffffffff802021bf:	48 89 75 e8          	mov    %rsi,-0x18(%rbp)
ffffffff802021c3:	48 89 55 e0          	mov    %rdx,-0x20(%rbp)
ffffffff802021c7:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
ffffffff802021cb:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
ffffffff802021d0:	75 0c                	jne    ffffffff802021de <ForkTable+0x2e>
ffffffff802021d2:	c7 45 fc 40 00 00 00 	movl   $0x40,-0x4(%rbp)
ffffffff802021d9:	e9 37 01 00 00       	jmpq   ffffffff80202315 <ForkTable+0x165>
ffffffff802021de:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
ffffffff802021e2:	e8 f9 fb ff ff       	callq  ffffffff80201de0 <CreateVirtualMemoryInstance>
ffffffff802021e7:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
ffffffff802021ec:	89 45 c4             	mov    %eax,-0x3c(%rbp)
ffffffff802021ef:	75 0c                	jne    ffffffff802021fd <ForkTable+0x4d>
ffffffff802021f1:	c7 45 fc 40 00 00 00 	movl   $0x40,-0x4(%rbp)
ffffffff802021f8:	e9 18 01 00 00       	jmpq   ffffffff80202315 <ForkTable+0x165>
ffffffff802021fd:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
ffffffff80202202:	75 0c                	jne    ffffffff80202210 <ForkTable+0x60>
ffffffff80202204:	c7 45 fc 40 00 00 00 	movl   $0x40,-0x4(%rbp)
ffffffff8020220b:	e9 05 01 00 00       	jmpq   ffffffff80202315 <ForkTable+0x165>
ffffffff80202210:	b8 40 00 00 00       	mov    $0x40,%eax
ffffffff80202215:	89 c1                	mov    %eax,%ecx
ffffffff80202217:	b8 40 00 00 00       	mov    $0x40,%eax
ffffffff8020221c:	89 c7                	mov    %eax,%edi
ffffffff8020221e:	48 89 4d b8          	mov    %rcx,-0x48(%rbp)
ffffffff80202222:	e8 d9 92 00 00       	callq  ffffffff8020b500 <kmalloc>
ffffffff80202227:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
ffffffff8020222b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff8020222f:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
ffffffff80202233:	48 89 01             	mov    %rax,(%rcx)
ffffffff80202236:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8020223a:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
ffffffff8020223e:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
ffffffff80202243:	0f 84 c5 00 00 00    	je     ffffffff8020230e <ForkTable+0x15e>
ffffffff80202249:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8020224d:	8b 48 24             	mov    0x24(%rax),%ecx
ffffffff80202250:	83 e1 01             	and    $0x1,%ecx
ffffffff80202253:	83 f9 01             	cmp    $0x1,%ecx
ffffffff80202256:	74 6f                	je     ffffffff802022c7 <ForkTable+0x117>
ffffffff80202258:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8020225c:	48 8b 38             	mov    (%rax),%rdi
ffffffff8020225f:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
ffffffff80202263:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80202267:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
ffffffff8020226b:	48 8b 49 08          	mov    0x8(%rcx),%rcx
ffffffff8020226f:	48 89 7d b0          	mov    %rdi,-0x50(%rbp)
ffffffff80202273:	48 89 c7             	mov    %rax,%rdi
ffffffff80202276:	48 89 75 a8          	mov    %rsi,-0x58(%rbp)
ffffffff8020227a:	48 89 ce             	mov    %rcx,%rsi
ffffffff8020227d:	e8 0e fb ff ff       	callq  ffffffff80201d90 <GetPhysicalAddressUID>
ffffffff80202282:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
ffffffff80202286:	48 8b 49 08          	mov    0x8(%rcx),%rcx
ffffffff8020228a:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
ffffffff8020228e:	4c 8b 46 18          	mov    0x18(%rsi),%r8
ffffffff80202292:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
ffffffff80202296:	44 8b 0e             	mov    (%rsi),%r9d
ffffffff80202299:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
ffffffff8020229d:	8b 56 24             	mov    0x24(%rsi),%edx
ffffffff802022a0:	83 ca 04             	or     $0x4,%edx
ffffffff802022a3:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
ffffffff802022a7:	44 8b 56 20          	mov    0x20(%rsi),%r10d
ffffffff802022ab:	48 89 e6             	mov    %rsp,%rsi
ffffffff802022ae:	44 89 56 08          	mov    %r10d,0x8(%rsi)
ffffffff802022b2:	89 16                	mov    %edx,(%rsi)
ffffffff802022b4:	48 8b 7d b0          	mov    -0x50(%rbp),%rdi
ffffffff802022b8:	48 8b 75 a8          	mov    -0x58(%rbp),%rsi
ffffffff802022bc:	48 89 c2             	mov    %rax,%rdx
ffffffff802022bf:	e8 2c fc ff ff       	callq  ffffffff80201ef0 <MapPage>
ffffffff802022c4:	89 45 a4             	mov    %eax,-0x5c(%rbp)
ffffffff802022c7:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff802022cb:	48 83 78 38 00       	cmpq   $0x0,0x38(%rax)
ffffffff802022d0:	74 2b                	je     ffffffff802022fd <ForkTable+0x14d>
ffffffff802022d2:	b8 40 00 00 00       	mov    $0x40,%eax
ffffffff802022d7:	89 c1                	mov    %eax,%ecx
ffffffff802022d9:	b8 40 00 00 00       	mov    $0x40,%eax
ffffffff802022de:	89 c7                	mov    %eax,%edi
ffffffff802022e0:	48 89 4d 98          	mov    %rcx,-0x68(%rbp)
ffffffff802022e4:	e8 17 92 00 00       	callq  ffffffff8020b500 <kmalloc>
ffffffff802022e9:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
ffffffff802022ed:	48 89 41 38          	mov    %rax,0x38(%rcx)
ffffffff802022f1:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff802022f5:	48 8b 40 38          	mov    0x38(%rax),%rax
ffffffff802022f9:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
ffffffff802022fd:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80202301:	48 8b 40 38          	mov    0x38(%rax),%rax
ffffffff80202305:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
ffffffff80202309:	e9 30 ff ff ff       	jmpq   ffffffff8020223e <ForkTable+0x8e>
ffffffff8020230e:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
ffffffff80202315:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff80202318:	48 81 c4 80 00 00 00 	add    $0x80,%rsp
ffffffff8020231f:	5d                   	pop    %rbp
ffffffff80202320:	c3                   	retq   
ffffffff80202321:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff80202326:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8020232d:	00 00 00 

ffffffff80202330 <AllocatePhysicalPage>:
ffffffff80202330:	55                   	push   %rbp
ffffffff80202331:	48 89 e5             	mov    %rsp,%rbp
ffffffff80202334:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff80202338:	48 8b 3c 25 88 84 28 	mov    0xffffffff80288488,%rdi
ffffffff8020233f:	80 
ffffffff80202340:	e8 1b 02 00 00       	callq  ffffffff80202560 <LockSpinlock>
ffffffff80202345:	88 45 f7             	mov    %al,-0x9(%rbp)
ffffffff80202348:	e8 53 25 00 00       	callq  ffffffff802048a0 <MemMan_Alloc>
ffffffff8020234d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff80202351:	48 8b 3c 25 88 84 28 	mov    0xffffffff80288488,%rdi
ffffffff80202358:	80 
ffffffff80202359:	e8 d2 02 00 00       	callq  ffffffff80202630 <UnlockSpinlock>
ffffffff8020235e:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
ffffffff80202362:	88 45 f6             	mov    %al,-0xa(%rbp)
ffffffff80202365:	48 89 f8             	mov    %rdi,%rax
ffffffff80202368:	48 83 c4 10          	add    $0x10,%rsp
ffffffff8020236c:	5d                   	pop    %rbp
ffffffff8020236d:	c3                   	retq   
ffffffff8020236e:	66 90                	xchg   %ax,%ax

ffffffff80202370 <FreePhysicalPage>:
ffffffff80202370:	55                   	push   %rbp
ffffffff80202371:	48 89 e5             	mov    %rsp,%rbp
ffffffff80202374:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff80202378:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8020237c:	48 8b 3c 25 88 84 28 	mov    0xffffffff80288488,%rdi
ffffffff80202383:	80 
ffffffff80202384:	e8 d7 01 00 00       	callq  ffffffff80202560 <LockSpinlock>
ffffffff80202389:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
ffffffff8020238d:	88 45 f7             	mov    %al,-0x9(%rbp)
ffffffff80202390:	e8 4b 27 00 00       	callq  ffffffff80204ae0 <MemMan_Free>
ffffffff80202395:	48 8b 3c 25 88 84 28 	mov    0xffffffff80288488,%rdi
ffffffff8020239c:	80 
ffffffff8020239d:	e8 8e 02 00 00       	callq  ffffffff80202630 <UnlockSpinlock>
ffffffff802023a2:	88 45 f6             	mov    %al,-0xa(%rbp)
ffffffff802023a5:	48 83 c4 10          	add    $0x10,%rsp
ffffffff802023a9:	5d                   	pop    %rbp
ffffffff802023aa:	c3                   	retq   
ffffffff802023ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

ffffffff802023b0 <AllocatePhysicalPageCont>:
ffffffff802023b0:	55                   	push   %rbp
ffffffff802023b1:	48 89 e5             	mov    %rsp,%rbp
ffffffff802023b4:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff802023b8:	89 7d fc             	mov    %edi,-0x4(%rbp)
ffffffff802023bb:	48 8b 3c 25 88 84 28 	mov    0xffffffff80288488,%rdi
ffffffff802023c2:	80 
ffffffff802023c3:	e8 98 01 00 00       	callq  ffffffff80202560 <LockSpinlock>
ffffffff802023c8:	8b 7d fc             	mov    -0x4(%rbp),%edi
ffffffff802023cb:	88 45 ef             	mov    %al,-0x11(%rbp)
ffffffff802023ce:	e8 cd 25 00 00       	callq  ffffffff802049a0 <MemMan_Alloc4KiBPageCont>
ffffffff802023d3:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff802023d7:	48 8b 3c 25 88 84 28 	mov    0xffffffff80288488,%rdi
ffffffff802023de:	80 
ffffffff802023df:	e8 4c 02 00 00       	callq  ffffffff80202630 <UnlockSpinlock>
ffffffff802023e4:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
ffffffff802023e8:	88 45 ee             	mov    %al,-0x12(%rbp)
ffffffff802023eb:	48 89 f8             	mov    %rdi,%rax
ffffffff802023ee:	48 83 c4 20          	add    $0x20,%rsp
ffffffff802023f2:	5d                   	pop    %rbp
ffffffff802023f3:	c3                   	retq   
ffffffff802023f4:	66 90                	xchg   %ax,%ax
ffffffff802023f6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff802023fd:	00 00 00 

ffffffff80202400 <FreePhysicalPageCont>:
ffffffff80202400:	55                   	push   %rbp
ffffffff80202401:	48 89 e5             	mov    %rsp,%rbp
ffffffff80202404:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff80202408:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8020240c:	89 75 f4             	mov    %esi,-0xc(%rbp)
ffffffff8020240f:	48 8b 3c 25 88 84 28 	mov    0xffffffff80288488,%rdi
ffffffff80202416:	80 
ffffffff80202417:	e8 44 01 00 00       	callq  ffffffff80202560 <LockSpinlock>
ffffffff8020241c:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
ffffffff80202420:	8b 75 f4             	mov    -0xc(%rbp),%esi
ffffffff80202423:	88 45 f3             	mov    %al,-0xd(%rbp)
ffffffff80202426:	e8 f5 26 00 00       	callq  ffffffff80204b20 <MemMan_FreeCont>
ffffffff8020242b:	48 8b 3c 25 88 84 28 	mov    0xffffffff80288488,%rdi
ffffffff80202432:	80 
ffffffff80202433:	e8 f8 01 00 00       	callq  ffffffff80202630 <UnlockSpinlock>
ffffffff80202438:	88 45 f2             	mov    %al,-0xe(%rbp)
ffffffff8020243b:	48 83 c4 10          	add    $0x10,%rsp
ffffffff8020243f:	5d                   	pop    %rbp
ffffffff80202440:	c3                   	retq   
ffffffff80202441:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff80202446:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8020244d:	00 00 00 

ffffffff80202450 <AllocateAPLSMemory>:
ffffffff80202450:	55                   	push   %rbp
ffffffff80202451:	48 89 e5             	mov    %rsp,%rbp
ffffffff80202454:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff80202458:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8020245c:	48 8b 3c 25 88 84 28 	mov    0xffffffff80288488,%rdi
ffffffff80202463:	80 
ffffffff80202464:	e8 f7 00 00 00       	callq  ffffffff80202560 <LockSpinlock>
ffffffff80202469:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
ffffffff8020246d:	88 45 ef             	mov    %al,-0x11(%rbp)
ffffffff80202470:	e8 1b 35 00 00       	callq  ffffffff80205990 <VirtMemMan_AllocCoreLocalData>
ffffffff80202475:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff80202479:	48 8b 3c 25 88 84 28 	mov    0xffffffff80288488,%rdi
ffffffff80202480:	80 
ffffffff80202481:	e8 aa 01 00 00       	callq  ffffffff80202630 <UnlockSpinlock>
ffffffff80202486:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
ffffffff8020248a:	88 45 ee             	mov    %al,-0x12(%rbp)
ffffffff8020248d:	48 89 f8             	mov    %rdi,%rax
ffffffff80202490:	48 83 c4 20          	add    $0x20,%rsp
ffffffff80202494:	5d                   	pop    %rbp
ffffffff80202495:	c3                   	retq   
ffffffff80202496:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8020249d:	00 00 00 

ffffffff802024a0 <GetCoreCount>:
ffffffff802024a0:	55                   	push   %rbp
ffffffff802024a1:	48 89 e5             	mov    %rsp,%rbp
ffffffff802024a4:	e8 27 4d 00 00       	callq  ffffffff802071d0 <SMP_GetCoreCount>
ffffffff802024a9:	5d                   	pop    %rbp
ffffffff802024aa:	c3                   	retq   
ffffffff802024ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

ffffffff802024b0 <CreateSpinlock>:
ffffffff802024b0:	55                   	push   %rbp
ffffffff802024b1:	48 89 e5             	mov    %rsp,%rbp
ffffffff802024b4:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff802024b8:	e8 33 ec ff ff       	callq  ffffffff802010f0 <CPUID_GetCacheLineSize>
ffffffff802024bd:	89 c0                	mov    %eax,%eax
ffffffff802024bf:	89 c7                	mov    %eax,%edi
ffffffff802024c1:	e8 3a 90 00 00       	callq  ffffffff8020b500 <kmalloc>
ffffffff802024c6:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff802024ca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff802024ce:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff802024d2:	e8 19 ec ff ff       	callq  ffffffff802010f0 <CPUID_GetCacheLineSize>
ffffffff802024d7:	31 c9                	xor    %ecx,%ecx
ffffffff802024d9:	89 c0                	mov    %eax,%eax
ffffffff802024db:	89 c2                	mov    %eax,%edx
ffffffff802024dd:	31 f6                	xor    %esi,%esi
ffffffff802024df:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
ffffffff802024e3:	89 4d ec             	mov    %ecx,-0x14(%rbp)
ffffffff802024e6:	e8 75 62 00 00       	callq  ffffffff80208760 <memset>
ffffffff802024eb:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
ffffffff802024ef:	48 83 3a 00          	cmpq   $0x0,(%rdx)
ffffffff802024f3:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
ffffffff802024f7:	74 07                	je     ffffffff80202500 <CreateSpinlock+0x50>
ffffffff802024f9:	e8 f2 eb ff ff       	callq  ffffffff802010f0 <CPUID_GetCacheLineSize>
ffffffff802024fe:	fa                   	cli    
ffffffff802024ff:	f4                   	hlt    
ffffffff80202500:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80202504:	48 83 c4 20          	add    $0x20,%rsp
ffffffff80202508:	5d                   	pop    %rbp
ffffffff80202509:	c3                   	retq   
ffffffff8020250a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

ffffffff80202510 <CreateBootstrapSpinlock>:
ffffffff80202510:	55                   	push   %rbp
ffffffff80202511:	48 89 e5             	mov    %rsp,%rbp
ffffffff80202514:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff80202518:	e8 d3 eb ff ff       	callq  ffffffff802010f0 <CPUID_GetCacheLineSize>
ffffffff8020251d:	89 c0                	mov    %eax,%eax
ffffffff8020251f:	89 c7                	mov    %eax,%edi
ffffffff80202521:	e8 da 85 00 00       	callq  ffffffff8020ab00 <bootstrap_malloc>
ffffffff80202526:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff8020252a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8020252e:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff80202532:	e8 b9 eb ff ff       	callq  ffffffff802010f0 <CPUID_GetCacheLineSize>
ffffffff80202537:	31 c9                	xor    %ecx,%ecx
ffffffff80202539:	89 c0                	mov    %eax,%eax
ffffffff8020253b:	89 c2                	mov    %eax,%edx
ffffffff8020253d:	31 f6                	xor    %esi,%esi
ffffffff8020253f:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
ffffffff80202543:	89 4d ec             	mov    %ecx,-0x14(%rbp)
ffffffff80202546:	e8 15 62 00 00       	callq  ffffffff80208760 <memset>
ffffffff8020254b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
ffffffff8020254f:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
ffffffff80202553:	48 89 d0             	mov    %rdx,%rax
ffffffff80202556:	48 83 c4 20          	add    $0x20,%rsp
ffffffff8020255a:	5d                   	pop    %rbp
ffffffff8020255b:	c3                   	retq   
ffffffff8020255c:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff80202560 <LockSpinlock>:
ffffffff80202560:	55                   	push   %rbp
ffffffff80202561:	48 89 e5             	mov    %rsp,%rbp
ffffffff80202564:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff80202568:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
ffffffff8020256c:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
ffffffff80202571:	75 06                	jne    ffffffff80202579 <LockSpinlock+0x19>
ffffffff80202573:	c6 45 ff 00          	movb   $0x0,-0x1(%rbp)
ffffffff80202577:	eb 55                	jmp    ffffffff802025ce <.skip_flag_store+0x7>
ffffffff80202579:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8020257d:	52                   	push   %rdx
ffffffff8020257e:	5a                   	pop    %rdx
ffffffff8020257f:	48 83 c4 10          	add    $0x10,%rsp
ffffffff80202583:	5a                   	pop    %rdx
ffffffff80202584:	5a                   	pop    %rdx
ffffffff80202585:	48 83 c4 20          	add    $0x20,%rsp
ffffffff80202589:	5a                   	pop    %rdx
ffffffff8020258a:	5a                   	pop    %rdx
ffffffff8020258b:	48 83 ec 30          	sub    $0x30,%rsp
ffffffff8020258f:	48 83 ec 28          	sub    $0x28,%rsp
ffffffff80202593:	0f ae f0             	mfence 
ffffffff80202596:	51                   	push   %rcx
ffffffff80202597:	9c                   	pushfq 
ffffffff80202598:	fa                   	cli    
ffffffff80202599:	59                   	pop    %rcx
ffffffff8020259a:	48 c1 e1 10          	shl    $0x10,%rcx
ffffffff8020259e:	66 b9 01 00          	mov    $0x1,%cx
ffffffff802025a2:	f0 66 0f c1 48 02    	lock xadd %cx,0x2(%rax)
ffffffff802025a8:	66 39 08             	cmp    %cx,(%rax)
ffffffff802025ab:	74 0e                	je     ffffffff802025bb <.acquired>

ffffffff802025ad <.spin>:
ffffffff802025ad:	48 0f ba e1 19       	bt     $0x19,%rcx
ffffffff802025b2:	73 00                	jae    ffffffff802025b4 <.skip_sti>

ffffffff802025b4 <.skip_sti>:
ffffffff802025b4:	f3 90                	pause  
ffffffff802025b6:	66 39 08             	cmp    %cx,(%rax)
ffffffff802025b9:	75 f2                	jne    ffffffff802025ad <.spin>

ffffffff802025bb <.acquired>:
ffffffff802025bb:	48 0f ba e1 19       	bt     $0x19,%rcx
ffffffff802025c0:	73 05                	jae    ffffffff802025c7 <.skip_flag_store>
ffffffff802025c2:	66 83 48 04 01       	orw    $0x1,0x4(%rax)

ffffffff802025c7 <.skip_flag_store>:
ffffffff802025c7:	fa                   	cli    
ffffffff802025c8:	59                   	pop    %rcx
ffffffff802025c9:	5a                   	pop    %rdx
ffffffff802025ca:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
ffffffff802025ce:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
ffffffff802025d2:	48 83 c4 10          	add    $0x10,%rsp
ffffffff802025d6:	5d                   	pop    %rbp
ffffffff802025d7:	c3                   	retq   
ffffffff802025d8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff802025df:	00 

ffffffff802025e0 <GetSpinlockContenderCount>:
ffffffff802025e0:	55                   	push   %rbp
ffffffff802025e1:	48 89 e5             	mov    %rsp,%rbp
ffffffff802025e4:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff802025e8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff802025ec:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
ffffffff802025f3:	00 
ffffffff802025f4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff802025f8:	48 8b 00             	mov    (%rax),%rax
ffffffff802025fb:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff802025ff:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80202603:	48 c1 e8 10          	shr    $0x10,%rax
ffffffff80202607:	48 25 ff ff 00 00    	and    $0xffff,%rax
ffffffff8020260d:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
ffffffff80202611:	48 81 e7 ff ff 00 00 	and    $0xffff,%rdi
ffffffff80202618:	48 29 f8             	sub    %rdi,%rax
ffffffff8020261b:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff8020261f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80202623:	48 83 c4 10          	add    $0x10,%rsp
ffffffff80202627:	5d                   	pop    %rbp
ffffffff80202628:	c3                   	retq   
ffffffff80202629:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

ffffffff80202630 <UnlockSpinlock>:
ffffffff80202630:	55                   	push   %rbp
ffffffff80202631:	48 89 e5             	mov    %rsp,%rbp
ffffffff80202634:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff80202638:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
ffffffff8020263c:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
ffffffff80202641:	75 06                	jne    ffffffff80202649 <UnlockSpinlock+0x19>
ffffffff80202643:	c6 45 ff 00          	movb   $0x0,-0x1(%rbp)
ffffffff80202647:	eb 1e                	jmp    ffffffff80202667 <.unlock_skip_sti+0x4>
ffffffff80202649:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8020264d:	0f ae f0             	mfence 
ffffffff80202650:	f0 66 ff 00          	lock incw (%rax)
ffffffff80202654:	66 0f ba 60 04 00    	btw    $0x0,0x4(%rax)
ffffffff8020265a:	73 07                	jae    ffffffff80202663 <.unlock_skip_sti>
ffffffff8020265c:	fb                   	sti    
ffffffff8020265d:	66 c7 40 04 00 00    	movw   $0x0,0x4(%rax)

ffffffff80202663 <.unlock_skip_sti>:
ffffffff80202663:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
ffffffff80202667:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
ffffffff8020266b:	48 83 c4 10          	add    $0x10,%rsp
ffffffff8020266f:	5d                   	pop    %rbp
ffffffff80202670:	c3                   	retq   
ffffffff80202671:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff80202676:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8020267d:	00 00 00 

ffffffff80202680 <FreeSpinlock>:
ffffffff80202680:	55                   	push   %rbp
ffffffff80202681:	48 89 e5             	mov    %rsp,%rbp
ffffffff80202684:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff80202688:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8020268c:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
ffffffff80202691:	74 0c                	je     ffffffff8020269f <FreeSpinlock+0x1f>
ffffffff80202693:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80202697:	48 89 c7             	mov    %rax,%rdi
ffffffff8020269a:	e8 f1 90 00 00       	callq  ffffffff8020b790 <kfree>
ffffffff8020269f:	48 83 c4 10          	add    $0x10,%rsp
ffffffff802026a3:	5d                   	pop    %rbp
ffffffff802026a4:	c3                   	retq   
ffffffff802026a5:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff802026ac:	00 00 00 
ffffffff802026af:	90                   	nop

ffffffff802026b0 <SwitchAndInitializeThread>:
ffffffff802026b0:	55                   	push   %rbp
ffffffff802026b1:	48 89 e5             	mov    %rsp,%rbp
ffffffff802026b4:	53                   	push   %rbx
ffffffff802026b5:	50                   	push   %rax
ffffffff802026b6:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
ffffffff802026ba:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
ffffffff802026be:	48 8b 47 18          	mov    0x18(%rdi),%rax
ffffffff802026c2:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
ffffffff802026c6:	48 8b 5f 30          	mov    0x30(%rdi),%rbx
ffffffff802026ca:	48 89 dc             	mov    %rbx,%rsp
ffffffff802026cd:	50                   	push   %rax
ffffffff802026ce:	c3                   	retq   
ffffffff802026cf:	48 83 c4 08          	add    $0x8,%rsp
ffffffff802026d3:	5b                   	pop    %rbx
ffffffff802026d4:	5d                   	pop    %rbp
ffffffff802026d5:	c3                   	retq   
ffffffff802026d6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff802026dd:	00 00 00 

ffffffff802026e0 <SavePreviousThread>:
ffffffff802026e0:	55                   	push   %rbp
ffffffff802026e1:	48 89 e5             	mov    %rsp,%rbp
ffffffff802026e4:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff802026e8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff802026ec:	e8 3f 04 00 00       	callq  ffffffff80202b30 <GetSavedInterruptState>
ffffffff802026f1:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff802026f5:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
ffffffff802026fa:	74 2f                	je     ffffffff8020272b <SavePreviousThread+0x4b>
ffffffff802026fc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80202700:	48 8b 78 70          	mov    0x70(%rax),%rdi
ffffffff80202704:	e8 57 fe ff ff       	callq  ffffffff80202560 <LockSpinlock>
ffffffff80202709:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
ffffffff8020270d:	48 8b 3f             	mov    (%rdi),%rdi
ffffffff80202710:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
ffffffff80202714:	48 89 79 40          	mov    %rdi,0x40(%rcx)
ffffffff80202718:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
ffffffff8020271c:	48 8b 79 70          	mov    0x70(%rcx),%rdi
ffffffff80202720:	88 45 ef             	mov    %al,-0x11(%rbp)
ffffffff80202723:	e8 08 ff ff ff       	callq  ffffffff80202630 <UnlockSpinlock>
ffffffff80202728:	88 45 ee             	mov    %al,-0x12(%rbp)
ffffffff8020272b:	48 83 c4 20          	add    $0x20,%rsp
ffffffff8020272f:	5d                   	pop    %rbp
ffffffff80202730:	c3                   	retq   
ffffffff80202731:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff80202736:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8020273d:	00 00 00 

ffffffff80202740 <SwitchToThread>:
ffffffff80202740:	55                   	push   %rbp
ffffffff80202741:	48 89 e5             	mov    %rsp,%rbp
ffffffff80202744:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff80202748:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8020274c:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
ffffffff80202750:	48 8b 7f 70          	mov    0x70(%rdi),%rdi
ffffffff80202754:	e8 07 fe ff ff       	callq  ffffffff80202560 <LockSpinlock>
ffffffff80202759:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
ffffffff8020275d:	48 8b 7f 40          	mov    0x40(%rdi),%rdi
ffffffff80202761:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
ffffffff80202765:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
ffffffff80202769:	48 8b 7f 70          	mov    0x70(%rdi),%rdi
ffffffff8020276d:	88 45 ef             	mov    %al,-0x11(%rbp)
ffffffff80202770:	e8 bb fe ff ff       	callq  ffffffff80202630 <UnlockSpinlock>
ffffffff80202775:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
ffffffff80202779:	48 89 fc             	mov    %rdi,%rsp
ffffffff8020277c:	41 5f                	pop    %r15
ffffffff8020277e:	41 5e                	pop    %r14
ffffffff80202780:	41 5d                	pop    %r13
ffffffff80202782:	41 5c                	pop    %r12
ffffffff80202784:	41 5b                	pop    %r11
ffffffff80202786:	41 5a                	pop    %r10
ffffffff80202788:	41 59                	pop    %r9
ffffffff8020278a:	41 58                	pop    %r8
ffffffff8020278c:	5f                   	pop    %rdi
ffffffff8020278d:	5e                   	pop    %rsi
ffffffff8020278e:	5d                   	pop    %rbp
ffffffff8020278f:	5a                   	pop    %rdx
ffffffff80202790:	59                   	pop    %rcx
ffffffff80202791:	5b                   	pop    %rbx
ffffffff80202792:	58                   	pop    %rax
ffffffff80202793:	48 83 c4 10          	add    $0x10,%rsp
ffffffff80202797:	48 cf                	iretq  
ffffffff80202799:	88 45 ee             	mov    %al,-0x12(%rbp)
ffffffff8020279c:	48 83 c4 20          	add    $0x20,%rsp
ffffffff802027a0:	5d                   	pop    %rbp
ffffffff802027a1:	c3                   	retq   
ffffffff802027a2:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff802027a6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff802027ad:	00 00 00 

ffffffff802027b0 <SetTLSBase>:
ffffffff802027b0:	55                   	push   %rbp
ffffffff802027b1:	48 89 e5             	mov    %rsp,%rbp
ffffffff802027b4:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff802027b8:	b8 00 01 00 c0       	mov    $0xc0000100,%eax
ffffffff802027bd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff802027c1:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
ffffffff802027c5:	bf 00 01 00 c0       	mov    $0xc0000100,%edi
ffffffff802027ca:	89 45 f4             	mov    %eax,-0xc(%rbp)
ffffffff802027cd:	e8 ee 12 00 00       	callq  ffffffff80203ac0 <wrmsr>
ffffffff802027d2:	48 83 c4 10          	add    $0x10,%rsp
ffffffff802027d6:	5d                   	pop    %rbp
ffffffff802027d7:	c3                   	retq   
ffffffff802027d8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff802027df:	00 

ffffffff802027e0 <RequestInterruptVectorBlock>:
ffffffff802027e0:	55                   	push   %rbp
ffffffff802027e1:	48 89 e5             	mov    %rsp,%rbp
ffffffff802027e4:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff802027e8:	89 7d f8             	mov    %edi,-0x8(%rbp)
ffffffff802027eb:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
ffffffff802027f2:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
ffffffff802027f9:	81 7d f0 00 01 00 00 	cmpl   $0x100,-0x10(%rbp)
ffffffff80202800:	7d 55                	jge    ffffffff80202857 <RequestInterruptVectorBlock+0x77>
ffffffff80202802:	83 7d f0 00          	cmpl   $0x0,-0x10(%rbp)
ffffffff80202806:	7e 1d                	jle    ffffffff80202825 <RequestInterruptVectorBlock+0x45>
ffffffff80202808:	8b 45 f0             	mov    -0x10(%rbp),%eax
ffffffff8020280b:	ff c8                	dec    %eax
ffffffff8020280d:	48 63 c8             	movslq %eax,%rcx
ffffffff80202810:	48 8d 0c cd 90 84 28 	lea    -0x7fd77b70(,%rcx,8),%rcx
ffffffff80202817:	80 
ffffffff80202818:	48 83 39 00          	cmpq   $0x0,(%rcx)
ffffffff8020281c:	74 07                	je     ffffffff80202825 <RequestInterruptVectorBlock+0x45>
ffffffff8020281e:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
ffffffff80202825:	48 63 45 f0          	movslq -0x10(%rbp),%rax
ffffffff80202829:	48 8d 04 c5 90 84 28 	lea    -0x7fd77b70(,%rax,8),%rax
ffffffff80202830:	80 
ffffffff80202831:	48 83 38 00          	cmpq   $0x0,(%rax)
ffffffff80202835:	75 09                	jne    ffffffff80202840 <RequestInterruptVectorBlock+0x60>
ffffffff80202837:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff8020283a:	83 c0 01             	add    $0x1,%eax
ffffffff8020283d:	89 45 f4             	mov    %eax,-0xc(%rbp)
ffffffff80202840:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff80202843:	3b 45 f8             	cmp    -0x8(%rbp),%eax
ffffffff80202846:	75 02                	jne    ffffffff8020284a <RequestInterruptVectorBlock+0x6a>
ffffffff80202848:	eb 0d                	jmp    ffffffff80202857 <RequestInterruptVectorBlock+0x77>
ffffffff8020284a:	eb 00                	jmp    ffffffff8020284c <RequestInterruptVectorBlock+0x6c>
ffffffff8020284c:	8b 45 f0             	mov    -0x10(%rbp),%eax
ffffffff8020284f:	83 c0 01             	add    $0x1,%eax
ffffffff80202852:	89 45 f0             	mov    %eax,-0x10(%rbp)
ffffffff80202855:	eb a2                	jmp    ffffffff802027f9 <RequestInterruptVectorBlock+0x19>
ffffffff80202857:	8b 45 f0             	mov    -0x10(%rbp),%eax
ffffffff8020285a:	03 45 f8             	add    -0x8(%rbp),%eax
ffffffff8020285d:	3d 00 01 00 00       	cmp    $0x100,%eax
ffffffff80202862:	72 09                	jb     ffffffff8020286d <RequestInterruptVectorBlock+0x8d>
ffffffff80202864:	c7 45 fc ff ff ff ff 	movl   $0xffffffff,-0x4(%rbp)
ffffffff8020286b:	eb 06                	jmp    ffffffff80202873 <RequestInterruptVectorBlock+0x93>
ffffffff8020286d:	8b 45 f0             	mov    -0x10(%rbp),%eax
ffffffff80202870:	89 45 fc             	mov    %eax,-0x4(%rbp)
ffffffff80202873:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff80202876:	48 83 c4 10          	add    $0x10,%rsp
ffffffff8020287a:	5d                   	pop    %rbp
ffffffff8020287b:	c3                   	retq   
ffffffff8020287c:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff80202880 <ShadowInterruptHandler>:
ffffffff80202880:	55                   	push   %rbp
ffffffff80202881:	48 89 e5             	mov    %rsp,%rbp
ffffffff80202884:	48 83 ec 30          	sub    $0x30,%rsp
ffffffff80202888:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8020288c:	48 8b 3c 25 90 8c 28 	mov    0xffffffff80288c90,%rdi
ffffffff80202893:	80 
ffffffff80202894:	48 83 ff 00          	cmp    $0x0,%rdi
ffffffff80202898:	75 14                	jne    ffffffff802028ae <ShadowInterruptHandler+0x2e>
ffffffff8020289a:	b8 b8 00 00 00       	mov    $0xb8,%eax
ffffffff8020289f:	89 c7                	mov    %eax,%edi
ffffffff802028a1:	e8 aa fb ff ff       	callq  ffffffff80202450 <AllocateAPLSMemory>
ffffffff802028a6:	48 89 04 25 90 8c 28 	mov    %rax,0xffffffff80288c90
ffffffff802028ad:	80 
ffffffff802028ae:	48 8b 3c 25 90 8c 28 	mov    0xffffffff80288c90,%rdi
ffffffff802028b5:	80 
ffffffff802028b6:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
ffffffff802028ba:	b8 b8 00 00 00       	mov    $0xb8,%eax
ffffffff802028bf:	89 c2                	mov    %eax,%edx
ffffffff802028c1:	e8 3a 5e 00 00       	callq  ffffffff80208700 <memcpy>
ffffffff802028c6:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
ffffffff802028ca:	48 8b 92 80 00 00 00 	mov    0x80(%rdx),%rdx
ffffffff802028d1:	48 8d 14 d5 90 84 28 	lea    -0x7fd77b70(,%rdx,8),%rdx
ffffffff802028d8:	80 
ffffffff802028d9:	48 83 3a 00          	cmpq   $0x0,(%rdx)
ffffffff802028dd:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff802028e1:	74 34                	je     ffffffff80202917 <ShadowInterruptHandler+0x97>
ffffffff802028e3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff802028e7:	48 8b 80 80 00 00 00 	mov    0x80(%rax),%rax
ffffffff802028ee:	48 8d 04 c5 90 84 28 	lea    -0x7fd77b70(,%rax,8),%rax
ffffffff802028f5:	80 
ffffffff802028f6:	48 8b 00             	mov    (%rax),%rax
ffffffff802028f9:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
ffffffff802028fd:	48 8b 89 80 00 00 00 	mov    0x80(%rcx),%rcx
ffffffff80202904:	89 ca                	mov    %ecx,%edx
ffffffff80202906:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
ffffffff8020290a:	48 8b 89 88 00 00 00 	mov    0x88(%rcx),%rcx
ffffffff80202911:	89 ce                	mov    %ecx,%esi
ffffffff80202913:	89 d7                	mov    %edx,%edi
ffffffff80202915:	ff d0                	callq  *%rax
ffffffff80202917:	31 c0                	xor    %eax,%eax
ffffffff80202919:	b9 b8 00 00 00       	mov    $0xb8,%ecx
ffffffff8020291e:	89 ca                	mov    %ecx,%edx
ffffffff80202920:	48 8b 34 25 90 8c 28 	mov    0xffffffff80288c90,%rsi
ffffffff80202927:	80 
ffffffff80202928:	b9 b8 00 00 00       	mov    $0xb8,%ecx
ffffffff8020292d:	89 cf                	mov    %ecx,%edi
ffffffff8020292f:	31 c9                	xor    %ecx,%ecx
ffffffff80202931:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff80202935:	48 89 f7             	mov    %rsi,%rdi
ffffffff80202938:	89 ce                	mov    %ecx,%esi
ffffffff8020293a:	4c 8b 45 e8          	mov    -0x18(%rbp),%r8
ffffffff8020293e:	48 89 55 e0          	mov    %rdx,-0x20(%rbp)
ffffffff80202942:	4c 89 c2             	mov    %r8,%rdx
ffffffff80202945:	89 45 dc             	mov    %eax,-0x24(%rbp)
ffffffff80202948:	e8 13 5e 00 00       	callq  ffffffff80208760 <memset>
ffffffff8020294d:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
ffffffff80202951:	48 83 ba 80 00 00 00 	cmpq   $0x1f,0x80(%rdx)
ffffffff80202958:	1f 
ffffffff80202959:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
ffffffff8020295d:	76 15                	jbe    ffffffff80202974 <ShadowInterruptHandler+0xf4>
ffffffff8020295f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80202963:	48 8b 80 80 00 00 00 	mov    0x80(%rax),%rax
ffffffff8020296a:	88 c1                	mov    %al,%cl
ffffffff8020296c:	0f b6 f9             	movzbl %cl,%edi
ffffffff8020296f:	e8 4c 0f 00 00       	callq  ffffffff802038c0 <APIC_SendEOI>
ffffffff80202974:	48 83 c4 30          	add    $0x30,%rsp
ffffffff80202978:	5d                   	pop    %rbp
ffffffff80202979:	c3                   	retq   
ffffffff8020297a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

ffffffff80202980 <HandleInterruptNoReturn>:
ffffffff80202980:	55                   	push   %rbp
ffffffff80202981:	48 89 e5             	mov    %rsp,%rbp
ffffffff80202984:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff80202988:	31 c0                	xor    %eax,%eax
ffffffff8020298a:	b9 b8 00 00 00       	mov    $0xb8,%ecx
ffffffff8020298f:	89 ca                	mov    %ecx,%edx
ffffffff80202991:	89 7d fc             	mov    %edi,-0x4(%rbp)
ffffffff80202994:	48 8b 34 25 90 8c 28 	mov    0xffffffff80288c90,%rsi
ffffffff8020299b:	80 
ffffffff8020299c:	b9 b8 00 00 00       	mov    $0xb8,%ecx
ffffffff802029a1:	41 89 c8             	mov    %ecx,%r8d
ffffffff802029a4:	31 c9                	xor    %ecx,%ecx
ffffffff802029a6:	48 89 f7             	mov    %rsi,%rdi
ffffffff802029a9:	89 ce                	mov    %ecx,%esi
ffffffff802029ab:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
ffffffff802029af:	4c 89 c2             	mov    %r8,%rdx
ffffffff802029b2:	89 45 ec             	mov    %eax,-0x14(%rbp)
ffffffff802029b5:	e8 a6 5d 00 00       	callq  ffffffff80208760 <memset>
ffffffff802029ba:	83 7d fc 1f          	cmpl   $0x1f,-0x4(%rbp)
ffffffff802029be:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
ffffffff802029c2:	76 0d                	jbe    ffffffff802029d1 <HandleInterruptNoReturn+0x51>
ffffffff802029c4:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff802029c7:	88 c1                	mov    %al,%cl
ffffffff802029c9:	0f b6 f9             	movzbl %cl,%edi
ffffffff802029cc:	e8 ef 0e 00 00       	callq  ffffffff802038c0 <APIC_SendEOI>
ffffffff802029d1:	fb                   	sti    
ffffffff802029d2:	48 83 c4 20          	add    $0x20,%rsp
ffffffff802029d6:	5d                   	pop    %rbp
ffffffff802029d7:	c3                   	retq   
ffffffff802029d8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff802029df:	00 

ffffffff802029e0 <RegisterInterruptHandler>:
ffffffff802029e0:	55                   	push   %rbp
ffffffff802029e1:	48 89 e5             	mov    %rsp,%rbp
ffffffff802029e4:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff802029e8:	89 7d f8             	mov    %edi,-0x8(%rbp)
ffffffff802029eb:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff802029ef:	81 7d f8 00 01 00 00 	cmpl   $0x100,-0x8(%rbp)
ffffffff802029f6:	73 06                	jae    ffffffff802029fe <RegisterInterruptHandler+0x1e>
ffffffff802029f8:	83 7d f8 1f          	cmpl   $0x1f,-0x8(%rbp)
ffffffff802029fc:	77 09                	ja     ffffffff80202a07 <RegisterInterruptHandler+0x27>
ffffffff802029fe:	c7 45 fc ff ff ff ff 	movl   $0xffffffff,-0x4(%rbp)
ffffffff80202a05:	eb 31                	jmp    ffffffff80202a38 <RegisterInterruptHandler+0x58>
ffffffff80202a07:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80202a0b:	8b 4d f8             	mov    -0x8(%rbp),%ecx
ffffffff80202a0e:	89 ca                	mov    %ecx,%edx
ffffffff80202a10:	48 8d 14 d5 90 84 28 	lea    -0x7fd77b70(,%rdx,8),%rdx
ffffffff80202a17:	80 
ffffffff80202a18:	48 89 02             	mov    %rax,(%rdx)
ffffffff80202a1b:	8b 4d f8             	mov    -0x8(%rbp),%ecx
ffffffff80202a1e:	40 88 ce             	mov    %cl,%sil
ffffffff80202a21:	40 0f b6 fe          	movzbl %sil,%edi
ffffffff80202a25:	48 c7 c6 80 28 20 80 	mov    $0xffffffff80202880,%rsi
ffffffff80202a2c:	e8 0f e6 ff ff       	callq  ffffffff80201040 <IDT_RegisterHandler>
ffffffff80202a31:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
ffffffff80202a38:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff80202a3b:	48 83 c4 10          	add    $0x10,%rsp
ffffffff80202a3f:	5d                   	pop    %rbp
ffffffff80202a40:	c3                   	retq   
ffffffff80202a41:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff80202a46:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80202a4d:	00 00 00 

ffffffff80202a50 <GetInterruptHandler>:
ffffffff80202a50:	55                   	push   %rbp
ffffffff80202a51:	48 89 e5             	mov    %rsp,%rbp
ffffffff80202a54:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff80202a58:	89 7d f8             	mov    %edi,-0x8(%rbp)
ffffffff80202a5b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff80202a5f:	81 7d f8 00 01 00 00 	cmpl   $0x100,-0x8(%rbp)
ffffffff80202a66:	72 09                	jb     ffffffff80202a71 <GetInterruptHandler+0x21>
ffffffff80202a68:	c7 45 fc ff ff ff ff 	movl   $0xffffffff,-0x4(%rbp)
ffffffff80202a6f:	eb 25                	jmp    ffffffff80202a96 <GetInterruptHandler+0x46>
ffffffff80202a71:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
ffffffff80202a76:	74 17                	je     ffffffff80202a8f <GetInterruptHandler+0x3f>
ffffffff80202a78:	8b 45 f8             	mov    -0x8(%rbp),%eax
ffffffff80202a7b:	89 c1                	mov    %eax,%ecx
ffffffff80202a7d:	48 8d 0c cd 90 84 28 	lea    -0x7fd77b70(,%rcx,8),%rcx
ffffffff80202a84:	80 
ffffffff80202a85:	48 8b 09             	mov    (%rcx),%rcx
ffffffff80202a88:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff80202a8c:	48 89 0a             	mov    %rcx,(%rdx)
ffffffff80202a8f:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
ffffffff80202a96:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff80202a99:	48 83 c4 10          	add    $0x10,%rsp
ffffffff80202a9d:	5d                   	pop    %rbp
ffffffff80202a9e:	c3                   	retq   
ffffffff80202a9f:	90                   	nop

ffffffff80202aa0 <RemoveInterruptHandler>:
ffffffff80202aa0:	55                   	push   %rbp
ffffffff80202aa1:	48 89 e5             	mov    %rsp,%rbp
ffffffff80202aa4:	48 83 ec 04          	sub    $0x4,%rsp
ffffffff80202aa8:	89 7d fc             	mov    %edi,-0x4(%rbp)
ffffffff80202aab:	81 7d fc 00 01 00 00 	cmpl   $0x100,-0x4(%rbp)
ffffffff80202ab2:	73 1a                	jae    ffffffff80202ace <RemoveInterruptHandler+0x2e>
ffffffff80202ab4:	83 7d fc 1f          	cmpl   $0x1f,-0x4(%rbp)
ffffffff80202ab8:	76 14                	jbe    ffffffff80202ace <RemoveInterruptHandler+0x2e>
ffffffff80202aba:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff80202abd:	89 c1                	mov    %eax,%ecx
ffffffff80202abf:	48 8d 0c cd 90 84 28 	lea    -0x7fd77b70(,%rcx,8),%rcx
ffffffff80202ac6:	80 
ffffffff80202ac7:	48 c7 01 00 00 00 00 	movq   $0x0,(%rcx)
ffffffff80202ace:	48 83 c4 04          	add    $0x4,%rsp
ffffffff80202ad2:	5d                   	pop    %rbp
ffffffff80202ad3:	c3                   	retq   
ffffffff80202ad4:	66 90                	xchg   %ax,%ax
ffffffff80202ad6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80202add:	00 00 00 

ffffffff80202ae0 <SetInterruptEnableMode>:
ffffffff80202ae0:	55                   	push   %rbp
ffffffff80202ae1:	48 89 e5             	mov    %rsp,%rbp
ffffffff80202ae4:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff80202ae8:	40 88 f0             	mov    %sil,%al
ffffffff80202aeb:	89 7d fc             	mov    %edi,-0x4(%rbp)
ffffffff80202aee:	88 45 fb             	mov    %al,-0x5(%rbp)
ffffffff80202af1:	8b 75 fc             	mov    -0x4(%rbp),%esi
ffffffff80202af4:	40 88 f0             	mov    %sil,%al
ffffffff80202af7:	8a 4d fb             	mov    -0x5(%rbp),%cl
ffffffff80202afa:	0f b6 f8             	movzbl %al,%edi
ffffffff80202afd:	0f b6 f1             	movzbl %cl,%esi
ffffffff80202b00:	e8 7b 14 00 00       	callq  ffffffff80203f80 <IOAPIC_SetEnableMode>
ffffffff80202b05:	48 83 c4 10          	add    $0x10,%rsp
ffffffff80202b09:	5d                   	pop    %rbp
ffffffff80202b0a:	c3                   	retq   
ffffffff80202b0b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

ffffffff80202b10 <RaiseInterrupt>:
ffffffff80202b10:	55                   	push   %rbp
ffffffff80202b11:	48 89 e5             	mov    %rsp,%rbp
ffffffff80202b14:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff80202b18:	89 7d fc             	mov    %edi,-0x4(%rbp)
ffffffff80202b1b:	8b 7d fc             	mov    -0x4(%rbp),%edi
ffffffff80202b1e:	e8 4d e5 ff ff       	callq  ffffffff80201070 <IDT_RaiseInterrupt>
ffffffff80202b23:	48 83 c4 10          	add    $0x10,%rsp
ffffffff80202b27:	5d                   	pop    %rbp
ffffffff80202b28:	c3                   	retq   
ffffffff80202b29:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

ffffffff80202b30 <GetSavedInterruptState>:
ffffffff80202b30:	55                   	push   %rbp
ffffffff80202b31:	48 89 e5             	mov    %rsp,%rbp
ffffffff80202b34:	48 8b 04 25 90 8c 28 	mov    0xffffffff80288c90,%rax
ffffffff80202b3b:	80 
ffffffff80202b3c:	5d                   	pop    %rbp
ffffffff80202b3d:	c3                   	retq   
ffffffff80202b3e:	66 90                	xchg   %ax,%ax

ffffffff80202b40 <Syscall_Handler>:
ffffffff80202b40:	50                   	push   %rax
ffffffff80202b41:	48 89 e0             	mov    %rsp,%rax
ffffffff80202b44:	48 8b 24 25 98 8c 28 	mov    0xffffffff80288c98,%rsp
ffffffff80202b4b:	80 
ffffffff80202b4c:	50                   	push   %rax
ffffffff80202b4d:	51                   	push   %rcx
ffffffff80202b4e:	57                   	push   %rdi
ffffffff80202b4f:	48 89 cf             	mov    %rcx,%rdi
ffffffff80202b52:	4c 89 1c 25 a0 8c 28 	mov    %r11,0xffffffff80288ca0
ffffffff80202b59:	80 
ffffffff80202b5a:	e8 11 c3 00 00       	callq  ffffffff8020ee70 <SyscallReceived>
ffffffff80202b5f:	5f                   	pop    %rdi
ffffffff80202b60:	59                   	pop    %rcx
ffffffff80202b61:	58                   	pop    %rax
ffffffff80202b62:	48 89 c4             	mov    %rax,%rsp
ffffffff80202b65:	58                   	pop    %rax
ffffffff80202b66:	48 0f 07             	sysretq 
ffffffff80202b69:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

ffffffff80202b70 <SwitchToUserMode>:
ffffffff80202b70:	55                   	push   %rbp
ffffffff80202b71:	48 89 e5             	mov    %rsp,%rbp
ffffffff80202b74:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff80202b78:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff80202b7c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff80202b80:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80202b84:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
ffffffff80202b88:	9c                   	pushfq 
ffffffff80202b89:	41 5b                	pop    %r11
ffffffff80202b8b:	49 81 cb 00 02 00 00 	or     $0x200,%r11
ffffffff80202b92:	fa                   	cli    
ffffffff80202b93:	48 89 c4             	mov    %rax,%rsp
ffffffff80202b96:	48 89 e5             	mov    %rsp,%rbp
ffffffff80202b99:	48 0f 07             	sysretq 
ffffffff80202b9c:	48 83 c4 10          	add    $0x10,%rsp
ffffffff80202ba0:	5d                   	pop    %rbp
ffffffff80202ba1:	c3                   	retq   
ffffffff80202ba2:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff80202ba6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80202bad:	00 00 00 

ffffffff80202bb0 <SetKernelStack>:
ffffffff80202bb0:	55                   	push   %rbp
ffffffff80202bb1:	48 89 e5             	mov    %rsp,%rbp
ffffffff80202bb4:	50                   	push   %rax
ffffffff80202bb5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff80202bb9:	48 89 3c 25 98 8c 28 	mov    %rdi,0xffffffff80288c98
ffffffff80202bc0:	80 
ffffffff80202bc1:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80202bc5:	5d                   	pop    %rbp
ffffffff80202bc6:	c3                   	retq   
ffffffff80202bc7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff80202bce:	00 00 

ffffffff80202bd0 <Syscall_Initialize>:
ffffffff80202bd0:	55                   	push   %rbp
ffffffff80202bd1:	48 89 e5             	mov    %rsp,%rbp
ffffffff80202bd4:	48 83 ec 40          	sub    $0x40,%rsp
ffffffff80202bd8:	b8 80 00 00 c0       	mov    $0xc0000080,%eax
ffffffff80202bdd:	48 b9 00 00 00 00 08 	movabs $0x18000800000000,%rcx
ffffffff80202be4:	00 18 00 
ffffffff80202be7:	48 89 4d f8          	mov    %rcx,-0x8(%rbp)
ffffffff80202beb:	48 c7 45 f0 40 2b 20 	movq   $0xffffffff80202b40,-0x10(%rbp)
ffffffff80202bf2:	80 
ffffffff80202bf3:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
ffffffff80202bfa:	00 
ffffffff80202bfb:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
ffffffff80202c02:	00 
ffffffff80202c03:	48 c7 04 25 a0 8c 28 	movq   $0x0,0xffffffff80288ca0
ffffffff80202c0a:	80 00 00 00 00 
ffffffff80202c0f:	bf 80 00 00 c0       	mov    $0xc0000080,%edi
ffffffff80202c14:	89 45 dc             	mov    %eax,-0x24(%rbp)
ffffffff80202c17:	e8 e4 0e 00 00       	callq  ffffffff80203b00 <rdmsr>
ffffffff80202c1c:	bf 80 00 00 c0       	mov    $0xc0000080,%edi
ffffffff80202c21:	48 83 c8 01          	or     $0x1,%rax
ffffffff80202c25:	ba 80 00 00 c0       	mov    $0xc0000080,%edx
ffffffff80202c2a:	89 7d d8             	mov    %edi,-0x28(%rbp)
ffffffff80202c2d:	89 d7                	mov    %edx,%edi
ffffffff80202c2f:	48 89 c6             	mov    %rax,%rsi
ffffffff80202c32:	e8 89 0e 00 00       	callq  ffffffff80203ac0 <wrmsr>
ffffffff80202c37:	ba 81 00 00 c0       	mov    $0xc0000081,%edx
ffffffff80202c3c:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
ffffffff80202c40:	bf 81 00 00 c0       	mov    $0xc0000081,%edi
ffffffff80202c45:	89 55 d4             	mov    %edx,-0x2c(%rbp)
ffffffff80202c48:	e8 73 0e 00 00       	callq  ffffffff80203ac0 <wrmsr>
ffffffff80202c4d:	ba 82 00 00 c0       	mov    $0xc0000082,%edx
ffffffff80202c52:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
ffffffff80202c56:	bf 82 00 00 c0       	mov    $0xc0000082,%edi
ffffffff80202c5b:	89 55 d0             	mov    %edx,-0x30(%rbp)
ffffffff80202c5e:	e8 5d 0e 00 00       	callq  ffffffff80203ac0 <wrmsr>
ffffffff80202c63:	ba 83 00 00 c0       	mov    $0xc0000083,%edx
ffffffff80202c68:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
ffffffff80202c6c:	bf 83 00 00 c0       	mov    $0xc0000083,%edi
ffffffff80202c71:	89 55 cc             	mov    %edx,-0x34(%rbp)
ffffffff80202c74:	e8 47 0e 00 00       	callq  ffffffff80203ac0 <wrmsr>
ffffffff80202c79:	ba 84 00 00 c0       	mov    $0xc0000084,%edx
ffffffff80202c7e:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
ffffffff80202c82:	bf 84 00 00 c0       	mov    $0xc0000084,%edi
ffffffff80202c87:	89 55 c8             	mov    %edx,-0x38(%rbp)
ffffffff80202c8a:	e8 31 0e 00 00       	callq  ffffffff80203ac0 <wrmsr>
ffffffff80202c8f:	48 83 c4 40          	add    $0x40,%rsp
ffffffff80202c93:	5d                   	pop    %rbp
ffffffff80202c94:	c3                   	retq   
ffffffff80202c95:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80202c9c:	00 00 00 
ffffffff80202c9f:	90                   	nop

ffffffff80202ca0 <PIT_SetFrequency>:
ffffffff80202ca0:	55                   	push   %rbp
ffffffff80202ca1:	48 89 e5             	mov    %rsp,%rbp
ffffffff80202ca4:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff80202ca8:	88 c8                	mov    %cl,%al
ffffffff80202caa:	41 88 d1             	mov    %dl,%r9b
ffffffff80202cad:	41 88 f2             	mov    %sil,%r10b
ffffffff80202cb0:	41 88 fb             	mov    %dil,%r11b
ffffffff80202cb3:	b9 43 00 00 00       	mov    $0x43,%ecx
ffffffff80202cb8:	44 88 5d ff          	mov    %r11b,-0x1(%rbp)
ffffffff80202cbc:	44 88 55 fe          	mov    %r10b,-0x2(%rbp)
ffffffff80202cc0:	44 88 4d fd          	mov    %r9b,-0x3(%rbp)
ffffffff80202cc4:	88 45 fc             	mov    %al,-0x4(%rbp)
ffffffff80202cc7:	44 89 45 f8          	mov    %r8d,-0x8(%rbp)
ffffffff80202ccb:	31 d2                	xor    %edx,%edx
ffffffff80202ccd:	be dc 34 12 00       	mov    $0x1234dc,%esi
ffffffff80202cd2:	89 f0                	mov    %esi,%eax
ffffffff80202cd4:	89 55 ec             	mov    %edx,-0x14(%rbp)
ffffffff80202cd7:	41 f7 f0             	div    %r8d
ffffffff80202cda:	89 45 f4             	mov    %eax,-0xc(%rbp)
ffffffff80202cdd:	89 45 e8             	mov    %eax,-0x18(%rbp)
ffffffff80202ce0:	89 f0                	mov    %esi,%eax
ffffffff80202ce2:	8b 55 ec             	mov    -0x14(%rbp),%edx
ffffffff80202ce5:	8b 75 e8             	mov    -0x18(%rbp),%esi
ffffffff80202ce8:	f7 f6                	div    %esi
ffffffff80202cea:	89 04 25 a8 8c 28 80 	mov    %eax,0xffffffff80288ca8
ffffffff80202cf1:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
ffffffff80202cf5:	83 e0 03             	and    $0x3,%eax
ffffffff80202cf8:	41 88 c1             	mov    %al,%r9b
ffffffff80202cfb:	44 88 4d ff          	mov    %r9b,-0x1(%rbp)
ffffffff80202cff:	0f b6 45 fe          	movzbl -0x2(%rbp),%eax
ffffffff80202d03:	83 e0 03             	and    $0x3,%eax
ffffffff80202d06:	41 88 c1             	mov    %al,%r9b
ffffffff80202d09:	44 88 4d fe          	mov    %r9b,-0x2(%rbp)
ffffffff80202d0d:	0f b6 45 fd          	movzbl -0x3(%rbp),%eax
ffffffff80202d11:	83 e0 07             	and    $0x7,%eax
ffffffff80202d14:	41 88 c1             	mov    %al,%r9b
ffffffff80202d17:	44 88 4d fd          	mov    %r9b,-0x3(%rbp)
ffffffff80202d1b:	0f b6 45 fc          	movzbl -0x4(%rbp),%eax
ffffffff80202d1f:	83 e0 01             	and    $0x1,%eax
ffffffff80202d22:	41 88 c1             	mov    %al,%r9b
ffffffff80202d25:	44 88 4d fc          	mov    %r9b,-0x4(%rbp)
ffffffff80202d29:	c6 45 f3 00          	movb   $0x0,-0xd(%rbp)
ffffffff80202d2d:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
ffffffff80202d31:	c1 e0 06             	shl    $0x6,%eax
ffffffff80202d34:	0f b6 55 fe          	movzbl -0x2(%rbp),%edx
ffffffff80202d38:	c1 e2 04             	shl    $0x4,%edx
ffffffff80202d3b:	09 d0                	or     %edx,%eax
ffffffff80202d3d:	0f b6 55 fd          	movzbl -0x3(%rbp),%edx
ffffffff80202d41:	d1 e2                	shl    %edx
ffffffff80202d43:	09 d0                	or     %edx,%eax
ffffffff80202d45:	0f b6 55 fc          	movzbl -0x4(%rbp),%edx
ffffffff80202d49:	09 d0                	or     %edx,%eax
ffffffff80202d4b:	41 88 c1             	mov    %al,%r9b
ffffffff80202d4e:	44 88 4d f3          	mov    %r9b,-0xd(%rbp)
ffffffff80202d52:	44 8a 4d f3          	mov    -0xd(%rbp),%r9b
ffffffff80202d56:	41 0f b6 f1          	movzbl %r9b,%esi
ffffffff80202d5a:	bf 43 00 00 00       	mov    $0x43,%edi
ffffffff80202d5f:	89 4d e4             	mov    %ecx,-0x1c(%rbp)
ffffffff80202d62:	e8 59 0c 00 00       	callq  ffffffff802039c0 <outb>
ffffffff80202d67:	0f b6 45 fe          	movzbl -0x2(%rbp),%eax
ffffffff80202d6b:	83 e0 01             	and    $0x1,%eax
ffffffff80202d6e:	83 f8 01             	cmp    $0x1,%eax
ffffffff80202d71:	75 25                	jne    ffffffff80202d98 <PIT_SetFrequency+0xf8>
ffffffff80202d73:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff80202d76:	25 ff 00 00 00       	and    $0xff,%eax
ffffffff80202d7b:	88 c1                	mov    %al,%cl
ffffffff80202d7d:	88 4d f2             	mov    %cl,-0xe(%rbp)
ffffffff80202d80:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
ffffffff80202d84:	83 c0 40             	add    $0x40,%eax
ffffffff80202d87:	66 89 c2             	mov    %ax,%dx
ffffffff80202d8a:	8a 4d f2             	mov    -0xe(%rbp),%cl
ffffffff80202d8d:	0f b7 fa             	movzwl %dx,%edi
ffffffff80202d90:	0f b6 f1             	movzbl %cl,%esi
ffffffff80202d93:	e8 28 0c 00 00       	callq  ffffffff802039c0 <outb>
ffffffff80202d98:	0f b6 45 fe          	movzbl -0x2(%rbp),%eax
ffffffff80202d9c:	83 e0 02             	and    $0x2,%eax
ffffffff80202d9f:	83 f8 02             	cmp    $0x2,%eax
ffffffff80202da2:	75 28                	jne    ffffffff80202dcc <PIT_SetFrequency+0x12c>
ffffffff80202da4:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff80202da7:	c1 e8 08             	shr    $0x8,%eax
ffffffff80202daa:	25 ff 00 00 00       	and    $0xff,%eax
ffffffff80202daf:	88 c1                	mov    %al,%cl
ffffffff80202db1:	88 4d f1             	mov    %cl,-0xf(%rbp)
ffffffff80202db4:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
ffffffff80202db8:	83 c0 40             	add    $0x40,%eax
ffffffff80202dbb:	66 89 c2             	mov    %ax,%dx
ffffffff80202dbe:	8a 4d f1             	mov    -0xf(%rbp),%cl
ffffffff80202dc1:	0f b7 fa             	movzwl %dx,%edi
ffffffff80202dc4:	0f b6 f1             	movzbl %cl,%esi
ffffffff80202dc7:	e8 f4 0b 00 00       	callq  ffffffff802039c0 <outb>
ffffffff80202dcc:	48 83 c4 20          	add    $0x20,%rsp
ffffffff80202dd0:	5d                   	pop    %rbp
ffffffff80202dd1:	c3                   	retq   
ffffffff80202dd2:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff80202dd6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80202ddd:	00 00 00 

ffffffff80202de0 <PIT_Sleep>:
ffffffff80202de0:	55                   	push   %rbp
ffffffff80202de1:	48 89 e5             	mov    %rsp,%rbp
ffffffff80202de4:	48 83 ec 30          	sub    $0x30,%rsp
ffffffff80202de8:	89 7d fc             	mov    %edi,-0x4(%rbp)
ffffffff80202deb:	c7 04 25 ac 8c 28 80 	movl   $0x1,0xffffffff80288cac
ffffffff80202df2:	01 00 00 00 
ffffffff80202df6:	31 ff                	xor    %edi,%edi
ffffffff80202df8:	e8 f3 00 00 00       	callq  ffffffff80202ef0 <PIT_SetEnableMode>
ffffffff80202dfd:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
ffffffff80202e04:	00 
ffffffff80202e05:	bf 20 00 00 00       	mov    $0x20,%edi
ffffffff80202e0a:	48 8d 75 f0          	lea    -0x10(%rbp),%rsi
ffffffff80202e0e:	89 7d e4             	mov    %edi,-0x1c(%rbp)
ffffffff80202e11:	e8 3a fc ff ff       	callq  ffffffff80202a50 <GetInterruptHandler>
ffffffff80202e16:	48 c7 c6 20 2f 20 80 	mov    $0xffffffff80202f20,%rsi
ffffffff80202e1d:	8b 7d e4             	mov    -0x1c(%rbp),%edi
ffffffff80202e20:	89 45 e0             	mov    %eax,-0x20(%rbp)
ffffffff80202e23:	e8 b8 fb ff ff       	callq  ffffffff802029e0 <RegisterInterruptHandler>
ffffffff80202e28:	8b 7d fc             	mov    -0x4(%rbp),%edi
ffffffff80202e2b:	8b 0c 25 a8 8c 28 80 	mov    0xffffffff80288ca8,%ecx
ffffffff80202e32:	0f af f9             	imul   %ecx,%edi
ffffffff80202e35:	89 fe                	mov    %edi,%esi
ffffffff80202e37:	48 69 f6 d3 4d 62 10 	imul   $0x10624dd3,%rsi,%rsi
ffffffff80202e3e:	48 c1 ee 26          	shr    $0x26,%rsi
ffffffff80202e42:	89 f1                	mov    %esi,%ecx
ffffffff80202e44:	89 0c 25 b0 8c 28 80 	mov    %ecx,0xffffffff80288cb0
ffffffff80202e4b:	bf 01 00 00 00       	mov    $0x1,%edi
ffffffff80202e50:	89 45 dc             	mov    %eax,-0x24(%rbp)
ffffffff80202e53:	e8 98 00 00 00       	callq  ffffffff80202ef0 <PIT_SetEnableMode>
ffffffff80202e58:	c7 04 25 ac 8c 28 80 	movl   $0x0,0xffffffff80288cac
ffffffff80202e5f:	00 00 00 00 
ffffffff80202e63:	fb                   	sti    
ffffffff80202e64:	c6 45 ef 01          	movb   $0x1,-0x11(%rbp)
ffffffff80202e68:	80 7d ef 00          	cmpb   $0x0,-0x11(%rbp)
ffffffff80202e6c:	74 45                	je     ffffffff80202eb3 <PIT_Sleep+0xd3>
ffffffff80202e6e:	c7 04 25 ac 8c 28 80 	movl   $0x1,0xffffffff80288cac
ffffffff80202e75:	01 00 00 00 
ffffffff80202e79:	8b 04 25 b0 8c 28 80 	mov    0xffffffff80288cb0,%eax
ffffffff80202e80:	83 f8 00             	cmp    $0x0,%eax
ffffffff80202e83:	75 04                	jne    ffffffff80202e89 <PIT_Sleep+0xa9>
ffffffff80202e85:	c6 45 ef 00          	movb   $0x0,-0x11(%rbp)
ffffffff80202e89:	c7 04 25 ac 8c 28 80 	movl   $0x0,0xffffffff80288cac
ffffffff80202e90:	00 00 00 00 
ffffffff80202e94:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%rbp)
ffffffff80202e9b:	83 7d e8 32          	cmpl   $0x32,-0x18(%rbp)
ffffffff80202e9f:	7d 10                	jge    ffffffff80202eb1 <PIT_Sleep+0xd1>
ffffffff80202ea1:	90                   	nop
ffffffff80202ea2:	90                   	nop
ffffffff80202ea3:	90                   	nop
ffffffff80202ea4:	90                   	nop
ffffffff80202ea5:	90                   	nop
ffffffff80202ea6:	8b 45 e8             	mov    -0x18(%rbp),%eax
ffffffff80202ea9:	83 c0 01             	add    $0x1,%eax
ffffffff80202eac:	89 45 e8             	mov    %eax,-0x18(%rbp)
ffffffff80202eaf:	eb ea                	jmp    ffffffff80202e9b <PIT_Sleep+0xbb>
ffffffff80202eb1:	eb b5                	jmp    ffffffff80202e68 <PIT_Sleep+0x88>
ffffffff80202eb3:	c7 04 25 ac 8c 28 80 	movl   $0x1,0xffffffff80288cac
ffffffff80202eba:	01 00 00 00 
ffffffff80202ebe:	31 ff                	xor    %edi,%edi
ffffffff80202ec0:	e8 2b 00 00 00       	callq  ffffffff80202ef0 <PIT_SetEnableMode>
ffffffff80202ec5:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
ffffffff80202ec9:	bf 20 00 00 00       	mov    $0x20,%edi
ffffffff80202ece:	e8 0d fb ff ff       	callq  ffffffff802029e0 <RegisterInterruptHandler>
ffffffff80202ed3:	c7 04 25 b4 8c 28 80 	movl   $0x1,0xffffffff80288cb4
ffffffff80202eda:	01 00 00 00 
ffffffff80202ede:	89 45 d8             	mov    %eax,-0x28(%rbp)
ffffffff80202ee1:	48 83 c4 30          	add    $0x30,%rsp
ffffffff80202ee5:	5d                   	pop    %rbp
ffffffff80202ee6:	c3                   	retq   
ffffffff80202ee7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff80202eee:	00 00 

ffffffff80202ef0 <PIT_SetEnableMode>:
ffffffff80202ef0:	55                   	push   %rbp
ffffffff80202ef1:	48 89 e5             	mov    %rsp,%rbp
ffffffff80202ef4:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff80202ef8:	40 88 f8             	mov    %dil,%al
ffffffff80202efb:	bf 20 00 00 00       	mov    $0x20,%edi
ffffffff80202f00:	88 45 ff             	mov    %al,-0x1(%rbp)
ffffffff80202f03:	8a 45 ff             	mov    -0x1(%rbp),%al
ffffffff80202f06:	0f b6 f0             	movzbl %al,%esi
ffffffff80202f09:	b9 20 00 00 00       	mov    $0x20,%ecx
ffffffff80202f0e:	89 7d f8             	mov    %edi,-0x8(%rbp)
ffffffff80202f11:	89 cf                	mov    %ecx,%edi
ffffffff80202f13:	e8 c8 fb ff ff       	callq  ffffffff80202ae0 <SetInterruptEnableMode>
ffffffff80202f18:	48 83 c4 10          	add    $0x10,%rsp
ffffffff80202f1c:	5d                   	pop    %rbp
ffffffff80202f1d:	c3                   	retq   
ffffffff80202f1e:	66 90                	xchg   %ax,%ax

ffffffff80202f20 <PIT_TempIntHandler>:
ffffffff80202f20:	55                   	push   %rbp
ffffffff80202f21:	48 89 e5             	mov    %rsp,%rbp
ffffffff80202f24:	50                   	push   %rax
ffffffff80202f25:	89 7d fc             	mov    %edi,-0x4(%rbp)
ffffffff80202f28:	89 75 f8             	mov    %esi,-0x8(%rbp)
ffffffff80202f2b:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
ffffffff80202f32:	83 7d fc 20          	cmpl   $0x20,-0x4(%rbp)
ffffffff80202f36:	75 2c                	jne    ffffffff80202f64 <PIT_TempIntHandler+0x44>
ffffffff80202f38:	8b 04 25 ac 8c 28 80 	mov    0xffffffff80288cac,%eax
ffffffff80202f3f:	83 f8 00             	cmp    $0x0,%eax
ffffffff80202f42:	75 1e                	jne    ffffffff80202f62 <PIT_TempIntHandler+0x42>
ffffffff80202f44:	8b 04 25 b0 8c 28 80 	mov    0xffffffff80288cb0,%eax
ffffffff80202f4b:	83 f8 00             	cmp    $0x0,%eax
ffffffff80202f4e:	74 10                	je     ffffffff80202f60 <PIT_TempIntHandler+0x40>
ffffffff80202f50:	8b 04 25 b0 8c 28 80 	mov    0xffffffff80288cb0,%eax
ffffffff80202f57:	ff c8                	dec    %eax
ffffffff80202f59:	89 04 25 b0 8c 28 80 	mov    %eax,0xffffffff80288cb0
ffffffff80202f60:	eb 00                	jmp    ffffffff80202f62 <PIT_TempIntHandler+0x42>
ffffffff80202f62:	eb 00                	jmp    ffffffff80202f64 <PIT_TempIntHandler+0x44>
ffffffff80202f64:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80202f68:	5d                   	pop    %rbp
ffffffff80202f69:	c3                   	retq   
ffffffff80202f6a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

ffffffff80202f70 <PIT_Initialize>:
ffffffff80202f70:	55                   	push   %rbp
ffffffff80202f71:	48 89 e5             	mov    %rsp,%rbp
ffffffff80202f74:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff80202f78:	31 c0                	xor    %eax,%eax
ffffffff80202f7a:	b9 03 00 00 00       	mov    $0x3,%ecx
ffffffff80202f7f:	ba 02 00 00 00       	mov    $0x2,%edx
ffffffff80202f84:	be ae 4d 00 00       	mov    $0x4dae,%esi
ffffffff80202f89:	bf 03 00 00 00       	mov    $0x3,%edi
ffffffff80202f8e:	41 b8 02 00 00 00    	mov    $0x2,%r8d
ffffffff80202f94:	45 31 c9             	xor    %r9d,%r9d
ffffffff80202f97:	41 ba ae 4d 00 00    	mov    $0x4dae,%r10d
ffffffff80202f9d:	89 7d fc             	mov    %edi,-0x4(%rbp)
ffffffff80202fa0:	44 89 cf             	mov    %r9d,%edi
ffffffff80202fa3:	44 8b 5d fc          	mov    -0x4(%rbp),%r11d
ffffffff80202fa7:	89 75 f8             	mov    %esi,-0x8(%rbp)
ffffffff80202faa:	44 89 de             	mov    %r11d,%esi
ffffffff80202fad:	89 55 f4             	mov    %edx,-0xc(%rbp)
ffffffff80202fb0:	44 89 c2             	mov    %r8d,%edx
ffffffff80202fb3:	89 4d f0             	mov    %ecx,-0x10(%rbp)
ffffffff80202fb6:	44 89 c9             	mov    %r9d,%ecx
ffffffff80202fb9:	45 89 d0             	mov    %r10d,%r8d
ffffffff80202fbc:	89 45 ec             	mov    %eax,-0x14(%rbp)
ffffffff80202fbf:	e8 dc fc ff ff       	callq  ffffffff80202ca0 <PIT_SetFrequency>
ffffffff80202fc4:	48 83 c4 20          	add    $0x20,%rsp
ffffffff80202fc8:	5d                   	pop    %rbp
ffffffff80202fc9:	c3                   	retq   
ffffffff80202fca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

ffffffff80202fd0 <APIC_LockPIC>:
ffffffff80202fd0:	55                   	push   %rbp
ffffffff80202fd1:	48 89 e5             	mov    %rsp,%rbp
ffffffff80202fd4:	48 83 ec 70          	sub    $0x70,%rsp
ffffffff80202fd8:	b8 21 00 00 00       	mov    $0x21,%eax
ffffffff80202fdd:	bf 21 00 00 00       	mov    $0x21,%edi
ffffffff80202fe2:	89 45 f8             	mov    %eax,-0x8(%rbp)
ffffffff80202fe5:	e8 06 0a 00 00       	callq  ffffffff802039f0 <inb>
ffffffff80202fea:	bf a1 00 00 00       	mov    $0xa1,%edi
ffffffff80202fef:	88 45 ff             	mov    %al,-0x1(%rbp)
ffffffff80202ff2:	b9 a1 00 00 00       	mov    $0xa1,%ecx
ffffffff80202ff7:	89 7d f4             	mov    %edi,-0xc(%rbp)
ffffffff80202ffa:	89 cf                	mov    %ecx,%edi
ffffffff80202ffc:	e8 ef 09 00 00       	callq  ffffffff802039f0 <inb>
ffffffff80203001:	b9 20 00 00 00       	mov    $0x20,%ecx
ffffffff80203006:	bf 11 00 00 00       	mov    $0x11,%edi
ffffffff8020300b:	88 45 fe             	mov    %al,-0x2(%rbp)
ffffffff8020300e:	ba 20 00 00 00       	mov    $0x20,%edx
ffffffff80203013:	be 11 00 00 00       	mov    $0x11,%esi
ffffffff80203018:	89 7d f0             	mov    %edi,-0x10(%rbp)
ffffffff8020301b:	89 d7                	mov    %edx,%edi
ffffffff8020301d:	89 4d ec             	mov    %ecx,-0x14(%rbp)
ffffffff80203020:	e8 9b 09 00 00       	callq  ffffffff802039c0 <outb>
ffffffff80203025:	b9 a0 00 00 00       	mov    $0xa0,%ecx
ffffffff8020302a:	ba 11 00 00 00       	mov    $0x11,%edx
ffffffff8020302f:	bf a0 00 00 00       	mov    $0xa0,%edi
ffffffff80203034:	be 11 00 00 00       	mov    $0x11,%esi
ffffffff80203039:	89 4d e8             	mov    %ecx,-0x18(%rbp)
ffffffff8020303c:	89 55 e4             	mov    %edx,-0x1c(%rbp)
ffffffff8020303f:	e8 7c 09 00 00       	callq  ffffffff802039c0 <outb>
ffffffff80203044:	b9 21 00 00 00       	mov    $0x21,%ecx
ffffffff80203049:	ba 20 00 00 00       	mov    $0x20,%edx
ffffffff8020304e:	bf 21 00 00 00       	mov    $0x21,%edi
ffffffff80203053:	be 20 00 00 00       	mov    $0x20,%esi
ffffffff80203058:	89 4d e0             	mov    %ecx,-0x20(%rbp)
ffffffff8020305b:	89 55 dc             	mov    %edx,-0x24(%rbp)
ffffffff8020305e:	e8 5d 09 00 00       	callq  ffffffff802039c0 <outb>
ffffffff80203063:	b9 a1 00 00 00       	mov    $0xa1,%ecx
ffffffff80203068:	ba 28 00 00 00       	mov    $0x28,%edx
ffffffff8020306d:	bf a1 00 00 00       	mov    $0xa1,%edi
ffffffff80203072:	be 28 00 00 00       	mov    $0x28,%esi
ffffffff80203077:	89 4d d8             	mov    %ecx,-0x28(%rbp)
ffffffff8020307a:	89 55 d4             	mov    %edx,-0x2c(%rbp)
ffffffff8020307d:	e8 3e 09 00 00       	callq  ffffffff802039c0 <outb>
ffffffff80203082:	b9 21 00 00 00       	mov    $0x21,%ecx
ffffffff80203087:	ba 04 00 00 00       	mov    $0x4,%edx
ffffffff8020308c:	bf 21 00 00 00       	mov    $0x21,%edi
ffffffff80203091:	be 04 00 00 00       	mov    $0x4,%esi
ffffffff80203096:	89 4d d0             	mov    %ecx,-0x30(%rbp)
ffffffff80203099:	89 55 cc             	mov    %edx,-0x34(%rbp)
ffffffff8020309c:	e8 1f 09 00 00       	callq  ffffffff802039c0 <outb>
ffffffff802030a1:	b9 a1 00 00 00       	mov    $0xa1,%ecx
ffffffff802030a6:	ba 02 00 00 00       	mov    $0x2,%edx
ffffffff802030ab:	bf a1 00 00 00       	mov    $0xa1,%edi
ffffffff802030b0:	be 02 00 00 00       	mov    $0x2,%esi
ffffffff802030b5:	89 4d c8             	mov    %ecx,-0x38(%rbp)
ffffffff802030b8:	89 55 c4             	mov    %edx,-0x3c(%rbp)
ffffffff802030bb:	e8 00 09 00 00       	callq  ffffffff802039c0 <outb>
ffffffff802030c0:	b9 21 00 00 00       	mov    $0x21,%ecx
ffffffff802030c5:	ba 01 00 00 00       	mov    $0x1,%edx
ffffffff802030ca:	bf 21 00 00 00       	mov    $0x21,%edi
ffffffff802030cf:	be 01 00 00 00       	mov    $0x1,%esi
ffffffff802030d4:	89 4d c0             	mov    %ecx,-0x40(%rbp)
ffffffff802030d7:	89 55 bc             	mov    %edx,-0x44(%rbp)
ffffffff802030da:	e8 e1 08 00 00       	callq  ffffffff802039c0 <outb>
ffffffff802030df:	b9 a1 00 00 00       	mov    $0xa1,%ecx
ffffffff802030e4:	ba 01 00 00 00       	mov    $0x1,%edx
ffffffff802030e9:	bf a1 00 00 00       	mov    $0xa1,%edi
ffffffff802030ee:	be 01 00 00 00       	mov    $0x1,%esi
ffffffff802030f3:	89 4d b8             	mov    %ecx,-0x48(%rbp)
ffffffff802030f6:	89 55 b4             	mov    %edx,-0x4c(%rbp)
ffffffff802030f9:	e8 c2 08 00 00       	callq  ffffffff802039c0 <outb>
ffffffff802030fe:	b9 21 00 00 00       	mov    $0x21,%ecx
ffffffff80203103:	8a 45 ff             	mov    -0x1(%rbp),%al
ffffffff80203106:	0f b6 f0             	movzbl %al,%esi
ffffffff80203109:	bf 21 00 00 00       	mov    $0x21,%edi
ffffffff8020310e:	89 4d b0             	mov    %ecx,-0x50(%rbp)
ffffffff80203111:	e8 aa 08 00 00       	callq  ffffffff802039c0 <outb>
ffffffff80203116:	b9 a1 00 00 00       	mov    $0xa1,%ecx
ffffffff8020311b:	8a 45 fe             	mov    -0x2(%rbp),%al
ffffffff8020311e:	0f b6 f0             	movzbl %al,%esi
ffffffff80203121:	bf a1 00 00 00       	mov    $0xa1,%edi
ffffffff80203126:	89 4d ac             	mov    %ecx,-0x54(%rbp)
ffffffff80203129:	e8 92 08 00 00       	callq  ffffffff802039c0 <outb>
ffffffff8020312e:	b9 21 00 00 00       	mov    $0x21,%ecx
ffffffff80203133:	ba ff 00 00 00       	mov    $0xff,%edx
ffffffff80203138:	bf 21 00 00 00       	mov    $0x21,%edi
ffffffff8020313d:	be ff 00 00 00       	mov    $0xff,%esi
ffffffff80203142:	89 4d a8             	mov    %ecx,-0x58(%rbp)
ffffffff80203145:	89 55 a4             	mov    %edx,-0x5c(%rbp)
ffffffff80203148:	e8 73 08 00 00       	callq  ffffffff802039c0 <outb>
ffffffff8020314d:	b9 a1 00 00 00       	mov    $0xa1,%ecx
ffffffff80203152:	ba ff 00 00 00       	mov    $0xff,%edx
ffffffff80203157:	bf a1 00 00 00       	mov    $0xa1,%edi
ffffffff8020315c:	be ff 00 00 00       	mov    $0xff,%esi
ffffffff80203161:	89 4d a0             	mov    %ecx,-0x60(%rbp)
ffffffff80203164:	89 55 9c             	mov    %edx,-0x64(%rbp)
ffffffff80203167:	e8 54 08 00 00       	callq  ffffffff802039c0 <outb>
ffffffff8020316c:	48 83 c4 70          	add    $0x70,%rsp
ffffffff80203170:	5d                   	pop    %rbp
ffffffff80203171:	c3                   	retq   
ffffffff80203172:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff80203176:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8020317d:	00 00 00 

ffffffff80203180 <APIC_LocalInitialize>:
ffffffff80203180:	55                   	push   %rbp
ffffffff80203181:	48 89 e5             	mov    %rsp,%rbp
ffffffff80203184:	48 83 ec 50          	sub    $0x50,%rsp
ffffffff80203188:	c7 45 fc 20 00 00 00 	movl   $0x20,-0x4(%rbp)
ffffffff8020318f:	81 7d fc 00 01 00 00 	cmpl   $0x100,-0x4(%rbp)
ffffffff80203196:	7d 39                	jge    ffffffff802031d1 <APIC_LocalInitialize+0x51>
ffffffff80203198:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
ffffffff8020319c:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
ffffffff802031a3:	00 
ffffffff802031a4:	8b 7d fc             	mov    -0x4(%rbp),%edi
ffffffff802031a7:	48 8d 75 f0          	lea    -0x10(%rbp),%rsi
ffffffff802031ab:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
ffffffff802031af:	e8 9c f8 ff ff       	callq  ffffffff80202a50 <GetInterruptHandler>
ffffffff802031b4:	8b 7d fc             	mov    -0x4(%rbp),%edi
ffffffff802031b7:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
ffffffff802031bb:	89 45 d4             	mov    %eax,-0x2c(%rbp)
ffffffff802031be:	e8 1d f8 ff ff       	callq  ffffffff802029e0 <RegisterInterruptHandler>
ffffffff802031c3:	89 45 d0             	mov    %eax,-0x30(%rbp)
ffffffff802031c6:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff802031c9:	83 c0 01             	add    $0x1,%eax
ffffffff802031cc:	89 45 fc             	mov    %eax,-0x4(%rbp)
ffffffff802031cf:	eb be                	jmp    ffffffff8020318f <APIC_LocalInitialize+0xf>
ffffffff802031d1:	bf 1b 00 00 00       	mov    $0x1b,%edi
ffffffff802031d6:	e8 25 09 00 00       	callq  ffffffff80203b00 <rdmsr>
ffffffff802031db:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff802031df:	48 8b 04 25 b8 8c 28 	mov    0xffffffff80288cb8,%rax
ffffffff802031e6:	80 
ffffffff802031e7:	48 83 f8 00          	cmp    $0x0,%rax
ffffffff802031eb:	75 14                	jne    ffffffff80203201 <APIC_LocalInitialize+0x81>
ffffffff802031ed:	b8 10 00 00 00       	mov    $0x10,%eax
ffffffff802031f2:	89 c7                	mov    %eax,%edi
ffffffff802031f4:	e8 57 f2 ff ff       	callq  ffffffff80202450 <AllocateAPLSMemory>
ffffffff802031f9:	48 89 04 25 b8 8c 28 	mov    %rax,0xffffffff80288cb8
ffffffff80203200:	80 
ffffffff80203201:	b8 1b 00 00 00       	mov    $0x1b,%eax
ffffffff80203206:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
ffffffff8020320a:	89 ca                	mov    %ecx,%edx
ffffffff8020320c:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx
ffffffff80203212:	89 d6                	mov    %edx,%esi
ffffffff80203214:	bf 01 00 00 00       	mov    $0x1,%edi
ffffffff80203219:	89 45 cc             	mov    %eax,-0x34(%rbp)
ffffffff8020321c:	e8 0f eb ff ff       	callq  ffffffff80201d30 <GetVirtualAddress>
ffffffff80203221:	48 8b 0c 25 b8 8c 28 	mov    0xffffffff80288cb8,%rcx
ffffffff80203228:	80 
ffffffff80203229:	48 89 01             	mov    %rax,(%rcx)
ffffffff8020322c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80203230:	48 0d 00 08 00 00    	or     $0x800,%rax
ffffffff80203236:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff8020323a:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
ffffffff8020323e:	bf 1b 00 00 00       	mov    $0x1b,%edi
ffffffff80203243:	e8 78 08 00 00       	callq  ffffffff80203ac0 <wrmsr>
ffffffff80203248:	ba 80 00 00 00       	mov    $0x80,%edx
ffffffff8020324d:	bf 80 00 00 00       	mov    $0x80,%edi
ffffffff80203252:	89 55 c8             	mov    %edx,-0x38(%rbp)
ffffffff80203255:	e8 86 00 00 00       	callq  ffffffff802032e0 <APIC_Read>
ffffffff8020325a:	ba 80 00 00 00       	mov    $0x80,%edx
ffffffff8020325f:	89 45 e4             	mov    %eax,-0x1c(%rbp)
ffffffff80203262:	8b 45 e4             	mov    -0x1c(%rbp),%eax
ffffffff80203265:	25 00 ff ff ff       	and    $0xffffff00,%eax
ffffffff8020326a:	89 45 e4             	mov    %eax,-0x1c(%rbp)
ffffffff8020326d:	8b 75 e4             	mov    -0x1c(%rbp),%esi
ffffffff80203270:	bf 80 00 00 00       	mov    $0x80,%edi
ffffffff80203275:	89 55 c4             	mov    %edx,-0x3c(%rbp)
ffffffff80203278:	e8 93 00 00 00       	callq  ffffffff80203310 <APIC_Write>
ffffffff8020327d:	b8 f0 00 00 00       	mov    $0xf0,%eax
ffffffff80203282:	bf f0 00 00 00       	mov    $0xf0,%edi
ffffffff80203287:	89 45 c0             	mov    %eax,-0x40(%rbp)
ffffffff8020328a:	e8 51 00 00 00       	callq  ffffffff802032e0 <APIC_Read>
ffffffff8020328f:	ba f0 00 00 00       	mov    $0xf0,%edx
ffffffff80203294:	89 45 e0             	mov    %eax,-0x20(%rbp)
ffffffff80203297:	8b 45 e0             	mov    -0x20(%rbp),%eax
ffffffff8020329a:	0d ff 00 00 00       	or     $0xff,%eax
ffffffff8020329f:	89 45 e0             	mov    %eax,-0x20(%rbp)
ffffffff802032a2:	8b 75 e0             	mov    -0x20(%rbp),%esi
ffffffff802032a5:	bf f0 00 00 00       	mov    $0xf0,%edi
ffffffff802032aa:	89 55 bc             	mov    %edx,-0x44(%rbp)
ffffffff802032ad:	e8 5e 00 00 00       	callq  ffffffff80203310 <APIC_Write>
ffffffff802032b2:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff802032b7:	bf 01 00 00 00       	mov    $0x1,%edi
ffffffff802032bc:	89 45 b8             	mov    %eax,-0x48(%rbp)
ffffffff802032bf:	e8 7c 00 00 00       	callq  ffffffff80203340 <APIC_SetEnableMode>
ffffffff802032c4:	31 c0                	xor    %eax,%eax
ffffffff802032c6:	41 88 c0             	mov    %al,%r8b
ffffffff802032c9:	41 0f b6 c0          	movzbl %r8b,%eax
ffffffff802032cd:	48 83 c4 50          	add    $0x50,%rsp
ffffffff802032d1:	5d                   	pop    %rbp
ffffffff802032d2:	c3                   	retq   
ffffffff802032d3:	0f 1f 00             	nopl   (%rax)
ffffffff802032d6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff802032dd:	00 00 00 

ffffffff802032e0 <APIC_Read>:
ffffffff802032e0:	55                   	push   %rbp
ffffffff802032e1:	48 89 e5             	mov    %rsp,%rbp
ffffffff802032e4:	48 83 ec 04          	sub    $0x4,%rsp
ffffffff802032e8:	89 7d fc             	mov    %edi,-0x4(%rbp)
ffffffff802032eb:	c1 ef 02             	shr    $0x2,%edi
ffffffff802032ee:	89 f8                	mov    %edi,%eax
ffffffff802032f0:	48 8b 0c 25 b8 8c 28 	mov    0xffffffff80288cb8,%rcx
ffffffff802032f7:	80 
ffffffff802032f8:	48 8b 09             	mov    (%rcx),%rcx
ffffffff802032fb:	8b 04 81             	mov    (%rcx,%rax,4),%eax
ffffffff802032fe:	48 83 c4 04          	add    $0x4,%rsp
ffffffff80203302:	5d                   	pop    %rbp
ffffffff80203303:	c3                   	retq   
ffffffff80203304:	66 90                	xchg   %ax,%ax
ffffffff80203306:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8020330d:	00 00 00 

ffffffff80203310 <APIC_Write>:
ffffffff80203310:	55                   	push   %rbp
ffffffff80203311:	48 89 e5             	mov    %rsp,%rbp
ffffffff80203314:	50                   	push   %rax
ffffffff80203315:	89 7d fc             	mov    %edi,-0x4(%rbp)
ffffffff80203318:	89 75 f8             	mov    %esi,-0x8(%rbp)
ffffffff8020331b:	8b 7d fc             	mov    -0x4(%rbp),%edi
ffffffff8020331e:	c1 ef 02             	shr    $0x2,%edi
ffffffff80203321:	89 f8                	mov    %edi,%eax
ffffffff80203323:	48 8b 0c 25 b8 8c 28 	mov    0xffffffff80288cb8,%rcx
ffffffff8020332a:	80 
ffffffff8020332b:	48 8b 09             	mov    (%rcx),%rcx
ffffffff8020332e:	89 34 81             	mov    %esi,(%rcx,%rax,4)
ffffffff80203331:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80203335:	5d                   	pop    %rbp
ffffffff80203336:	c3                   	retq   
ffffffff80203337:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff8020333e:	00 00 

ffffffff80203340 <APIC_SetEnableMode>:
ffffffff80203340:	55                   	push   %rbp
ffffffff80203341:	48 89 e5             	mov    %rsp,%rbp
ffffffff80203344:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff80203348:	40 88 f8             	mov    %dil,%al
ffffffff8020334b:	bf f0 00 00 00       	mov    $0xf0,%edi
ffffffff80203350:	88 45 ff             	mov    %al,-0x1(%rbp)
ffffffff80203353:	b9 f0 00 00 00       	mov    $0xf0,%ecx
ffffffff80203358:	89 7d f4             	mov    %edi,-0xc(%rbp)
ffffffff8020335b:	89 cf                	mov    %ecx,%edi
ffffffff8020335d:	e8 7e ff ff ff       	callq  ffffffff802032e0 <APIC_Read>
ffffffff80203362:	b9 f0 00 00 00       	mov    $0xf0,%ecx
ffffffff80203367:	31 ff                	xor    %edi,%edi
ffffffff80203369:	89 45 f8             	mov    %eax,-0x8(%rbp)
ffffffff8020336c:	8b 45 f8             	mov    -0x8(%rbp),%eax
ffffffff8020336f:	0f b6 55 ff          	movzbl -0x1(%rbp),%edx
ffffffff80203373:	83 e2 01             	and    $0x1,%edx
ffffffff80203376:	29 d7                	sub    %edx,%edi
ffffffff80203378:	33 7d f8             	xor    -0x8(%rbp),%edi
ffffffff8020337b:	81 e7 00 01 00 00    	and    $0x100,%edi
ffffffff80203381:	31 f8                	xor    %edi,%eax
ffffffff80203383:	89 45 f8             	mov    %eax,-0x8(%rbp)
ffffffff80203386:	8b 75 f8             	mov    -0x8(%rbp),%esi
ffffffff80203389:	bf f0 00 00 00       	mov    $0xf0,%edi
ffffffff8020338e:	89 4d f0             	mov    %ecx,-0x10(%rbp)
ffffffff80203391:	e8 7a ff ff ff       	callq  ffffffff80203310 <APIC_Write>
ffffffff80203396:	48 83 c4 10          	add    $0x10,%rsp
ffffffff8020339a:	5d                   	pop    %rbp
ffffffff8020339b:	c3                   	retq   
ffffffff8020339c:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff802033a0 <APIC_CallibrateTimer>:
ffffffff802033a0:	55                   	push   %rbp
ffffffff802033a1:	48 89 e5             	mov    %rsp,%rbp
ffffffff802033a4:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff802033a8:	c7 04 25 c0 8c 28 80 	movl   $0x0,0xffffffff80288cc0
ffffffff802033af:	00 00 00 00 
ffffffff802033b3:	c7 04 25 c4 8c 28 80 	movl   $0xffffffff,0xffffffff80288cc4
ffffffff802033ba:	ff ff ff ff 
ffffffff802033be:	c7 04 25 c8 8c 28 80 	movl   $0x0,0xffffffff80288cc8
ffffffff802033c5:	00 00 00 00 
ffffffff802033c9:	48 c7 c6 d0 34 20 80 	mov    $0xffffffff802034d0,%rsi
ffffffff802033d0:	b8 21 00 00 00       	mov    $0x21,%eax
ffffffff802033d5:	89 c7                	mov    %eax,%edi
ffffffff802033d7:	89 45 f4             	mov    %eax,-0xc(%rbp)
ffffffff802033da:	e8 01 f6 ff ff       	callq  ffffffff802029e0 <RegisterInterruptHandler>
ffffffff802033df:	bf 20 03 00 00       	mov    $0x320,%edi
ffffffff802033e4:	89 7d f0             	mov    %edi,-0x10(%rbp)
ffffffff802033e7:	8b 75 f4             	mov    -0xc(%rbp),%esi
ffffffff802033ea:	89 45 ec             	mov    %eax,-0x14(%rbp)
ffffffff802033ed:	e8 0e 01 00 00       	callq  ffffffff80203500 <APIC_SetVector>
ffffffff802033f2:	31 ff                	xor    %edi,%edi
ffffffff802033f4:	e8 57 01 00 00       	callq  ffffffff80203550 <APIC_SetTimerValue>
ffffffff802033f9:	bf 10 00 00 00       	mov    $0x10,%edi
ffffffff802033fe:	e8 7d 01 00 00       	callq  ffffffff80203580 <APIC_SetTimerDivisor>
ffffffff80203403:	48 c7 c6 20 36 20 80 	mov    $0xffffffff80203620,%rsi
ffffffff8020340a:	bf 20 00 00 00       	mov    $0x20,%edi
ffffffff8020340f:	e8 cc f5 ff ff       	callq  ffffffff802029e0 <RegisterInterruptHandler>
ffffffff80203414:	bf ff ff ff ff       	mov    $0xffffffff,%edi
ffffffff80203419:	89 45 e8             	mov    %eax,-0x18(%rbp)
ffffffff8020341c:	e8 2f 01 00 00       	callq  ffffffff80203550 <APIC_SetTimerValue>
ffffffff80203421:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff80203426:	89 c7                	mov    %eax,%edi
ffffffff80203428:	89 45 e4             	mov    %eax,-0x1c(%rbp)
ffffffff8020342b:	e8 50 02 00 00       	callq  ffffffff80203680 <APIC_SetTimerMode>
ffffffff80203430:	8b 7d e4             	mov    -0x1c(%rbp),%edi
ffffffff80203433:	e8 b8 fa ff ff       	callq  ffffffff80202ef0 <PIT_SetEnableMode>
ffffffff80203438:	8b 7d f0             	mov    -0x10(%rbp),%edi
ffffffff8020343b:	8b 75 e4             	mov    -0x1c(%rbp),%esi
ffffffff8020343e:	e8 8d 02 00 00       	callq  ffffffff802036d0 <APIC_SetEnableInterrupt>
ffffffff80203443:	c7 04 25 c4 8c 28 80 	movl   $0x0,0xffffffff80288cc4
ffffffff8020344a:	00 00 00 00 
ffffffff8020344e:	8b 04 25 c4 8c 28 80 	mov    0xffffffff80288cc4,%eax
ffffffff80203455:	3d c6 00 00 00       	cmp    $0xc6,%eax
ffffffff8020345a:	7d 02                	jge    ffffffff8020345e <APIC_CallibrateTimer+0xbe>
ffffffff8020345c:	eb f0                	jmp    ffffffff8020344e <APIC_CallibrateTimer+0xae>
ffffffff8020345e:	31 c0                	xor    %eax,%eax
ffffffff80203460:	89 c7                	mov    %eax,%edi
ffffffff80203462:	89 45 e0             	mov    %eax,-0x20(%rbp)
ffffffff80203465:	e8 86 fa ff ff       	callq  ffffffff80202ef0 <PIT_SetEnableMode>
ffffffff8020346a:	bf 20 03 00 00       	mov    $0x320,%edi
ffffffff8020346f:	8b 75 e0             	mov    -0x20(%rbp),%esi
ffffffff80203472:	e8 59 02 00 00       	callq  ffffffff802036d0 <APIC_SetEnableInterrupt>
ffffffff80203477:	8b 04 25 c0 8c 28 80 	mov    0xffffffff80288cc0,%eax
ffffffff8020347e:	8b 34 25 c8 8c 28 80 	mov    0xffffffff80288cc8,%esi
ffffffff80203485:	f7 d6                	not    %esi
ffffffff80203487:	29 c6                	sub    %eax,%esi
ffffffff80203489:	89 f1                	mov    %esi,%ecx
ffffffff8020348b:	48 89 4d f8          	mov    %rcx,-0x8(%rbp)
ffffffff8020348f:	48 69 c9 ae 4d 00 00 	imul   $0x4dae,%rcx,%rcx
ffffffff80203496:	48 89 4d f8          	mov    %rcx,-0x8(%rbp)
ffffffff8020349a:	48 d1 e9             	shr    %rcx
ffffffff8020349d:	48 ba 0b d4 fa 95 02 	movabs $0xa57eb50295fad40b,%rdx
ffffffff802034a4:	b5 7e a5 
ffffffff802034a7:	48 89 c8             	mov    %rcx,%rax
ffffffff802034aa:	48 f7 e2             	mul    %rdx
ffffffff802034ad:	48 c1 ea 06          	shr    $0x6,%rdx
ffffffff802034b1:	48 89 55 f8          	mov    %rdx,-0x8(%rbp)
ffffffff802034b5:	48 8b 04 25 b8 8c 28 	mov    0xffffffff80288cb8,%rax
ffffffff802034bc:	80 
ffffffff802034bd:	48 89 50 08          	mov    %rdx,0x8(%rax)
ffffffff802034c1:	48 83 c4 20          	add    $0x20,%rsp
ffffffff802034c5:	5d                   	pop    %rbp
ffffffff802034c6:	c3                   	retq   
ffffffff802034c7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff802034ce:	00 00 

ffffffff802034d0 <APIC_TimerCallibrateRollover>:
ffffffff802034d0:	55                   	push   %rbp
ffffffff802034d1:	48 89 e5             	mov    %rsp,%rbp
ffffffff802034d4:	50                   	push   %rax
ffffffff802034d5:	89 7d fc             	mov    %edi,-0x4(%rbp)
ffffffff802034d8:	89 75 f8             	mov    %esi,-0x8(%rbp)
ffffffff802034db:	83 7d fc 21          	cmpl   $0x21,-0x4(%rbp)
ffffffff802034df:	75 10                	jne    ffffffff802034f1 <APIC_TimerCallibrateRollover+0x21>
ffffffff802034e1:	8b 04 25 c0 8c 28 80 	mov    0xffffffff80288cc0,%eax
ffffffff802034e8:	ff c0                	inc    %eax
ffffffff802034ea:	89 04 25 c0 8c 28 80 	mov    %eax,0xffffffff80288cc0
ffffffff802034f1:	83 7d f8 00          	cmpl   $0x0,-0x8(%rbp)
ffffffff802034f5:	74 02                	je     ffffffff802034f9 <APIC_TimerCallibrateRollover+0x29>
ffffffff802034f7:	eb 00                	jmp    ffffffff802034f9 <APIC_TimerCallibrateRollover+0x29>
ffffffff802034f9:	48 83 c4 08          	add    $0x8,%rsp
ffffffff802034fd:	5d                   	pop    %rbp
ffffffff802034fe:	c3                   	retq   
ffffffff802034ff:	90                   	nop

ffffffff80203500 <APIC_SetVector>:
ffffffff80203500:	55                   	push   %rbp
ffffffff80203501:	48 89 e5             	mov    %rsp,%rbp
ffffffff80203504:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff80203508:	40 88 f0             	mov    %sil,%al
ffffffff8020350b:	89 7d fc             	mov    %edi,-0x4(%rbp)
ffffffff8020350e:	88 45 fb             	mov    %al,-0x5(%rbp)
ffffffff80203511:	81 7d fc 20 03 00 00 	cmpl   $0x320,-0x4(%rbp)
ffffffff80203518:	72 09                	jb     ffffffff80203523 <APIC_SetVector+0x23>
ffffffff8020351a:	81 7d fc 70 03 00 00 	cmpl   $0x370,-0x4(%rbp)
ffffffff80203521:	76 02                	jbe    ffffffff80203525 <APIC_SetVector+0x25>
ffffffff80203523:	eb 20                	jmp    ffffffff80203545 <APIC_SetVector+0x45>
ffffffff80203525:	8b 7d fc             	mov    -0x4(%rbp),%edi
ffffffff80203528:	e8 b3 fd ff ff       	callq  ffffffff802032e0 <APIC_Read>
ffffffff8020352d:	89 45 f4             	mov    %eax,-0xc(%rbp)
ffffffff80203530:	0f b6 45 fb          	movzbl -0x5(%rbp),%eax
ffffffff80203534:	0b 45 f4             	or     -0xc(%rbp),%eax
ffffffff80203537:	89 45 f4             	mov    %eax,-0xc(%rbp)
ffffffff8020353a:	8b 7d fc             	mov    -0x4(%rbp),%edi
ffffffff8020353d:	8b 75 f4             	mov    -0xc(%rbp),%esi
ffffffff80203540:	e8 cb fd ff ff       	callq  ffffffff80203310 <APIC_Write>
ffffffff80203545:	48 83 c4 10          	add    $0x10,%rsp
ffffffff80203549:	5d                   	pop    %rbp
ffffffff8020354a:	c3                   	retq   
ffffffff8020354b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

ffffffff80203550 <APIC_SetTimerValue>:
ffffffff80203550:	55                   	push   %rbp
ffffffff80203551:	48 89 e5             	mov    %rsp,%rbp
ffffffff80203554:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff80203558:	b8 80 03 00 00       	mov    $0x380,%eax
ffffffff8020355d:	89 7d fc             	mov    %edi,-0x4(%rbp)
ffffffff80203560:	8b 75 fc             	mov    -0x4(%rbp),%esi
ffffffff80203563:	bf 80 03 00 00       	mov    $0x380,%edi
ffffffff80203568:	89 45 f8             	mov    %eax,-0x8(%rbp)
ffffffff8020356b:	e8 a0 fd ff ff       	callq  ffffffff80203310 <APIC_Write>
ffffffff80203570:	48 83 c4 10          	add    $0x10,%rsp
ffffffff80203574:	5d                   	pop    %rbp
ffffffff80203575:	c3                   	retq   
ffffffff80203576:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8020357d:	00 00 00 

ffffffff80203580 <APIC_SetTimerDivisor>:
ffffffff80203580:	55                   	push   %rbp
ffffffff80203581:	48 89 e5             	mov    %rsp,%rbp
ffffffff80203584:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff80203588:	40 88 f8             	mov    %dil,%al
ffffffff8020358b:	88 45 ff             	mov    %al,-0x1(%rbp)
ffffffff8020358e:	c6 45 fe 00          	movb   $0x0,-0x2(%rbp)
ffffffff80203592:	0f b6 7d ff          	movzbl -0x1(%rbp),%edi
ffffffff80203596:	83 ff 10             	cmp    $0x10,%edi
ffffffff80203599:	7e 27                	jle    ffffffff802035c2 <APIC_SetTimerDivisor+0x42>
ffffffff8020359b:	b8 10 00 00 00       	mov    $0x10,%eax
ffffffff802035a0:	0f b6 4d fe          	movzbl -0x2(%rbp),%ecx
ffffffff802035a4:	83 c9 08             	or     $0x8,%ecx
ffffffff802035a7:	88 ca                	mov    %cl,%dl
ffffffff802035a9:	88 55 fe             	mov    %dl,-0x2(%rbp)
ffffffff802035ac:	0f b6 4d ff          	movzbl -0x1(%rbp),%ecx
ffffffff802035b0:	89 45 f8             	mov    %eax,-0x8(%rbp)
ffffffff802035b3:	89 c8                	mov    %ecx,%eax
ffffffff802035b5:	99                   	cltd   
ffffffff802035b6:	8b 4d f8             	mov    -0x8(%rbp),%ecx
ffffffff802035b9:	f7 f9                	idiv   %ecx
ffffffff802035bb:	40 88 c6             	mov    %al,%sil
ffffffff802035be:	40 88 75 ff          	mov    %sil,-0x1(%rbp)
ffffffff802035c2:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
ffffffff802035c6:	83 f8 10             	cmp    $0x10,%eax
ffffffff802035c9:	75 0e                	jne    ffffffff802035d9 <APIC_SetTimerDivisor+0x59>
ffffffff802035cb:	0f b6 45 fe          	movzbl -0x2(%rbp),%eax
ffffffff802035cf:	83 c8 03             	or     $0x3,%eax
ffffffff802035d2:	88 c1                	mov    %al,%cl
ffffffff802035d4:	88 4d fe             	mov    %cl,-0x2(%rbp)
ffffffff802035d7:	eb 26                	jmp    ffffffff802035ff <APIC_SetTimerDivisor+0x7f>
ffffffff802035d9:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
ffffffff802035dd:	83 f8 01             	cmp    $0x1,%eax
ffffffff802035e0:	75 06                	jne    ffffffff802035e8 <APIC_SetTimerDivisor+0x68>
ffffffff802035e2:	c6 45 fe 0b          	movb   $0xb,-0x2(%rbp)
ffffffff802035e6:	eb 15                	jmp    ffffffff802035fd <APIC_SetTimerDivisor+0x7d>
ffffffff802035e8:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
ffffffff802035ec:	c1 f8 02             	sar    $0x2,%eax
ffffffff802035ef:	83 e0 03             	and    $0x3,%eax
ffffffff802035f2:	0f b6 4d fe          	movzbl -0x2(%rbp),%ecx
ffffffff802035f6:	09 c1                	or     %eax,%ecx
ffffffff802035f8:	88 ca                	mov    %cl,%dl
ffffffff802035fa:	88 55 fe             	mov    %dl,-0x2(%rbp)
ffffffff802035fd:	eb 00                	jmp    ffffffff802035ff <APIC_SetTimerDivisor+0x7f>
ffffffff802035ff:	b8 e0 03 00 00       	mov    $0x3e0,%eax
ffffffff80203604:	0f b6 75 fe          	movzbl -0x2(%rbp),%esi
ffffffff80203608:	bf e0 03 00 00       	mov    $0x3e0,%edi
ffffffff8020360d:	89 45 f4             	mov    %eax,-0xc(%rbp)
ffffffff80203610:	e8 fb fc ff ff       	callq  ffffffff80203310 <APIC_Write>
ffffffff80203615:	48 83 c4 10          	add    $0x10,%rsp
ffffffff80203619:	5d                   	pop    %rbp
ffffffff8020361a:	c3                   	retq   
ffffffff8020361b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

ffffffff80203620 <APIC_TimerCallibrate>:
ffffffff80203620:	55                   	push   %rbp
ffffffff80203621:	48 89 e5             	mov    %rsp,%rbp
ffffffff80203624:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff80203628:	89 7d fc             	mov    %edi,-0x4(%rbp)
ffffffff8020362b:	89 75 f8             	mov    %esi,-0x8(%rbp)
ffffffff8020362e:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
ffffffff80203635:	83 7d fc 20          	cmpl   $0x20,-0x4(%rbp)
ffffffff80203639:	75 38                	jne    ffffffff80203673 <APIC_TimerCallibrate+0x53>
ffffffff8020363b:	8b 04 25 c4 8c 28 80 	mov    0xffffffff80288cc4,%eax
ffffffff80203642:	83 f8 00             	cmp    $0x0,%eax
ffffffff80203645:	7c 2c                	jl     ffffffff80203673 <APIC_TimerCallibrate+0x53>
ffffffff80203647:	8b 04 25 c4 8c 28 80 	mov    0xffffffff80288cc4,%eax
ffffffff8020364e:	ff c0                	inc    %eax
ffffffff80203650:	89 04 25 c4 8c 28 80 	mov    %eax,0xffffffff80288cc4
ffffffff80203657:	8b 04 25 c4 8c 28 80 	mov    0xffffffff80288cc4,%eax
ffffffff8020365e:	3d c6 00 00 00       	cmp    $0xc6,%eax
ffffffff80203663:	75 0c                	jne    ffffffff80203671 <APIC_TimerCallibrate+0x51>
ffffffff80203665:	e8 06 02 00 00       	callq  ffffffff80203870 <APIC_GetTimerValue>
ffffffff8020366a:	89 04 25 c8 8c 28 80 	mov    %eax,0xffffffff80288cc8
ffffffff80203671:	eb 00                	jmp    ffffffff80203673 <APIC_TimerCallibrate+0x53>
ffffffff80203673:	48 83 c4 10          	add    $0x10,%rsp
ffffffff80203677:	5d                   	pop    %rbp
ffffffff80203678:	c3                   	retq   
ffffffff80203679:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

ffffffff80203680 <APIC_SetTimerMode>:
ffffffff80203680:	55                   	push   %rbp
ffffffff80203681:	48 89 e5             	mov    %rsp,%rbp
ffffffff80203684:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff80203688:	40 88 f8             	mov    %dil,%al
ffffffff8020368b:	bf 20 03 00 00       	mov    $0x320,%edi
ffffffff80203690:	88 45 ff             	mov    %al,-0x1(%rbp)
ffffffff80203693:	b9 20 03 00 00       	mov    $0x320,%ecx
ffffffff80203698:	89 7d f4             	mov    %edi,-0xc(%rbp)
ffffffff8020369b:	89 cf                	mov    %ecx,%edi
ffffffff8020369d:	e8 3e fc ff ff       	callq  ffffffff802032e0 <APIC_Read>
ffffffff802036a2:	b9 20 03 00 00       	mov    $0x320,%ecx
ffffffff802036a7:	89 45 f8             	mov    %eax,-0x8(%rbp)
ffffffff802036aa:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
ffffffff802036ae:	83 e0 03             	and    $0x3,%eax
ffffffff802036b1:	c1 e0 11             	shl    $0x11,%eax
ffffffff802036b4:	0b 45 f8             	or     -0x8(%rbp),%eax
ffffffff802036b7:	89 45 f8             	mov    %eax,-0x8(%rbp)
ffffffff802036ba:	8b 75 f8             	mov    -0x8(%rbp),%esi
ffffffff802036bd:	bf 20 03 00 00       	mov    $0x320,%edi
ffffffff802036c2:	89 4d f0             	mov    %ecx,-0x10(%rbp)
ffffffff802036c5:	e8 46 fc ff ff       	callq  ffffffff80203310 <APIC_Write>
ffffffff802036ca:	48 83 c4 10          	add    $0x10,%rsp
ffffffff802036ce:	5d                   	pop    %rbp
ffffffff802036cf:	c3                   	retq   

ffffffff802036d0 <APIC_SetEnableInterrupt>:
ffffffff802036d0:	55                   	push   %rbp
ffffffff802036d1:	48 89 e5             	mov    %rsp,%rbp
ffffffff802036d4:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff802036d8:	89 7d fc             	mov    %edi,-0x4(%rbp)
ffffffff802036db:	89 75 f8             	mov    %esi,-0x8(%rbp)
ffffffff802036de:	81 7d fc 20 03 00 00 	cmpl   $0x320,-0x4(%rbp)
ffffffff802036e5:	72 09                	jb     ffffffff802036f0 <APIC_SetEnableInterrupt+0x20>
ffffffff802036e7:	81 7d fc 70 03 00 00 	cmpl   $0x370,-0x4(%rbp)
ffffffff802036ee:	76 02                	jbe    ffffffff802036f2 <APIC_SetEnableInterrupt+0x22>
ffffffff802036f0:	eb 34                	jmp    ffffffff80203726 <APIC_SetEnableInterrupt+0x56>
ffffffff802036f2:	8b 7d fc             	mov    -0x4(%rbp),%edi
ffffffff802036f5:	e8 e6 fb ff ff       	callq  ffffffff802032e0 <APIC_Read>
ffffffff802036fa:	31 ff                	xor    %edi,%edi
ffffffff802036fc:	89 45 f4             	mov    %eax,-0xc(%rbp)
ffffffff802036ff:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff80203702:	8b 4d f8             	mov    -0x8(%rbp),%ecx
ffffffff80203705:	83 f1 ff             	xor    $0xffffffff,%ecx
ffffffff80203708:	83 e1 01             	and    $0x1,%ecx
ffffffff8020370b:	29 cf                	sub    %ecx,%edi
ffffffff8020370d:	33 7d f4             	xor    -0xc(%rbp),%edi
ffffffff80203710:	81 e7 00 00 01 00    	and    $0x10000,%edi
ffffffff80203716:	31 f8                	xor    %edi,%eax
ffffffff80203718:	89 45 f4             	mov    %eax,-0xc(%rbp)
ffffffff8020371b:	8b 7d fc             	mov    -0x4(%rbp),%edi
ffffffff8020371e:	8b 75 f4             	mov    -0xc(%rbp),%esi
ffffffff80203721:	e8 ea fb ff ff       	callq  ffffffff80203310 <APIC_Write>
ffffffff80203726:	48 83 c4 10          	add    $0x10,%rsp
ffffffff8020372a:	5d                   	pop    %rbp
ffffffff8020372b:	c3                   	retq   
ffffffff8020372c:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff80203730 <APIC_GetTimerFrequency>:
ffffffff80203730:	55                   	push   %rbp
ffffffff80203731:	48 89 e5             	mov    %rsp,%rbp
ffffffff80203734:	48 8b 04 25 b8 8c 28 	mov    0xffffffff80288cb8,%rax
ffffffff8020373b:	80 
ffffffff8020373c:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff80203740:	5d                   	pop    %rbp
ffffffff80203741:	c3                   	retq   
ffffffff80203742:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff80203746:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8020374d:	00 00 00 

ffffffff80203750 <APIC_SetDeliveryMode>:
ffffffff80203750:	55                   	push   %rbp
ffffffff80203751:	48 89 e5             	mov    %rsp,%rbp
ffffffff80203754:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff80203758:	40 88 f0             	mov    %sil,%al
ffffffff8020375b:	89 7d fc             	mov    %edi,-0x4(%rbp)
ffffffff8020375e:	88 45 fb             	mov    %al,-0x5(%rbp)
ffffffff80203761:	81 7d fc 20 03 00 00 	cmpl   $0x320,-0x4(%rbp)
ffffffff80203768:	72 09                	jb     ffffffff80203773 <APIC_SetDeliveryMode+0x23>
ffffffff8020376a:	81 7d fc 60 03 00 00 	cmpl   $0x360,-0x4(%rbp)
ffffffff80203771:	76 02                	jbe    ffffffff80203775 <APIC_SetDeliveryMode+0x25>
ffffffff80203773:	eb 26                	jmp    ffffffff8020379b <APIC_SetDeliveryMode+0x4b>
ffffffff80203775:	8b 7d fc             	mov    -0x4(%rbp),%edi
ffffffff80203778:	e8 63 fb ff ff       	callq  ffffffff802032e0 <APIC_Read>
ffffffff8020377d:	89 45 f4             	mov    %eax,-0xc(%rbp)
ffffffff80203780:	0f b6 45 fb          	movzbl -0x5(%rbp),%eax
ffffffff80203784:	83 e0 07             	and    $0x7,%eax
ffffffff80203787:	c1 e0 08             	shl    $0x8,%eax
ffffffff8020378a:	0b 45 f4             	or     -0xc(%rbp),%eax
ffffffff8020378d:	89 45 f4             	mov    %eax,-0xc(%rbp)
ffffffff80203790:	8b 7d fc             	mov    -0x4(%rbp),%edi
ffffffff80203793:	8b 75 f4             	mov    -0xc(%rbp),%esi
ffffffff80203796:	e8 75 fb ff ff       	callq  ffffffff80203310 <APIC_Write>
ffffffff8020379b:	48 83 c4 10          	add    $0x10,%rsp
ffffffff8020379f:	5d                   	pop    %rbp
ffffffff802037a0:	c3                   	retq   
ffffffff802037a1:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff802037a6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff802037ad:	00 00 00 

ffffffff802037b0 <APIC_SetTriggerMode>:
ffffffff802037b0:	55                   	push   %rbp
ffffffff802037b1:	48 89 e5             	mov    %rsp,%rbp
ffffffff802037b4:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff802037b8:	40 88 f0             	mov    %sil,%al
ffffffff802037bb:	89 7d fc             	mov    %edi,-0x4(%rbp)
ffffffff802037be:	88 45 fb             	mov    %al,-0x5(%rbp)
ffffffff802037c1:	81 7d fc 50 03 00 00 	cmpl   $0x350,-0x4(%rbp)
ffffffff802037c8:	72 09                	jb     ffffffff802037d3 <APIC_SetTriggerMode+0x23>
ffffffff802037ca:	81 7d fc 60 03 00 00 	cmpl   $0x360,-0x4(%rbp)
ffffffff802037d1:	76 02                	jbe    ffffffff802037d5 <APIC_SetTriggerMode+0x25>
ffffffff802037d3:	eb 26                	jmp    ffffffff802037fb <APIC_SetTriggerMode+0x4b>
ffffffff802037d5:	8b 7d fc             	mov    -0x4(%rbp),%edi
ffffffff802037d8:	e8 03 fb ff ff       	callq  ffffffff802032e0 <APIC_Read>
ffffffff802037dd:	89 45 f4             	mov    %eax,-0xc(%rbp)
ffffffff802037e0:	0f b6 45 fb          	movzbl -0x5(%rbp),%eax
ffffffff802037e4:	83 e0 01             	and    $0x1,%eax
ffffffff802037e7:	c1 e0 0f             	shl    $0xf,%eax
ffffffff802037ea:	0b 45 f4             	or     -0xc(%rbp),%eax
ffffffff802037ed:	89 45 f4             	mov    %eax,-0xc(%rbp)
ffffffff802037f0:	8b 7d fc             	mov    -0x4(%rbp),%edi
ffffffff802037f3:	8b 75 f4             	mov    -0xc(%rbp),%esi
ffffffff802037f6:	e8 15 fb ff ff       	callq  ffffffff80203310 <APIC_Write>
ffffffff802037fb:	48 83 c4 10          	add    $0x10,%rsp
ffffffff802037ff:	5d                   	pop    %rbp
ffffffff80203800:	c3                   	retq   
ffffffff80203801:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff80203806:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8020380d:	00 00 00 

ffffffff80203810 <APIC_SetPolarity>:
ffffffff80203810:	55                   	push   %rbp
ffffffff80203811:	48 89 e5             	mov    %rsp,%rbp
ffffffff80203814:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff80203818:	40 88 f0             	mov    %sil,%al
ffffffff8020381b:	89 7d fc             	mov    %edi,-0x4(%rbp)
ffffffff8020381e:	88 45 fb             	mov    %al,-0x5(%rbp)
ffffffff80203821:	81 7d fc 50 03 00 00 	cmpl   $0x350,-0x4(%rbp)
ffffffff80203828:	72 09                	jb     ffffffff80203833 <APIC_SetPolarity+0x23>
ffffffff8020382a:	81 7d fc 60 03 00 00 	cmpl   $0x360,-0x4(%rbp)
ffffffff80203831:	76 02                	jbe    ffffffff80203835 <APIC_SetPolarity+0x25>
ffffffff80203833:	eb 26                	jmp    ffffffff8020385b <APIC_SetPolarity+0x4b>
ffffffff80203835:	8b 7d fc             	mov    -0x4(%rbp),%edi
ffffffff80203838:	e8 a3 fa ff ff       	callq  ffffffff802032e0 <APIC_Read>
ffffffff8020383d:	89 45 f4             	mov    %eax,-0xc(%rbp)
ffffffff80203840:	0f b6 45 fb          	movzbl -0x5(%rbp),%eax
ffffffff80203844:	83 e0 01             	and    $0x1,%eax
ffffffff80203847:	c1 e0 0d             	shl    $0xd,%eax
ffffffff8020384a:	0b 45 f4             	or     -0xc(%rbp),%eax
ffffffff8020384d:	89 45 f4             	mov    %eax,-0xc(%rbp)
ffffffff80203850:	8b 7d fc             	mov    -0x4(%rbp),%edi
ffffffff80203853:	8b 75 f4             	mov    -0xc(%rbp),%esi
ffffffff80203856:	e8 b5 fa ff ff       	callq  ffffffff80203310 <APIC_Write>
ffffffff8020385b:	48 83 c4 10          	add    $0x10,%rsp
ffffffff8020385f:	5d                   	pop    %rbp
ffffffff80203860:	c3                   	retq   
ffffffff80203861:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff80203866:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8020386d:	00 00 00 

ffffffff80203870 <APIC_GetTimerValue>:
ffffffff80203870:	55                   	push   %rbp
ffffffff80203871:	48 89 e5             	mov    %rsp,%rbp
ffffffff80203874:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff80203878:	b8 90 03 00 00       	mov    $0x390,%eax
ffffffff8020387d:	bf 90 03 00 00       	mov    $0x390,%edi
ffffffff80203882:	89 45 fc             	mov    %eax,-0x4(%rbp)
ffffffff80203885:	e8 56 fa ff ff       	callq  ffffffff802032e0 <APIC_Read>
ffffffff8020388a:	48 83 c4 10          	add    $0x10,%rsp
ffffffff8020388e:	5d                   	pop    %rbp
ffffffff8020388f:	c3                   	retq   

ffffffff80203890 <APIC_GetID>:
ffffffff80203890:	55                   	push   %rbp
ffffffff80203891:	48 89 e5             	mov    %rsp,%rbp
ffffffff80203894:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff80203898:	b8 20 00 00 00       	mov    $0x20,%eax
ffffffff8020389d:	bf 20 00 00 00       	mov    $0x20,%edi
ffffffff802038a2:	89 45 fc             	mov    %eax,-0x4(%rbp)
ffffffff802038a5:	e8 36 fa ff ff       	callq  ffffffff802032e0 <APIC_Read>
ffffffff802038aa:	88 c1                	mov    %al,%cl
ffffffff802038ac:	0f b6 c1             	movzbl %cl,%eax
ffffffff802038af:	48 83 c4 10          	add    $0x10,%rsp
ffffffff802038b3:	5d                   	pop    %rbp
ffffffff802038b4:	c3                   	retq   
ffffffff802038b5:	90                   	nop
ffffffff802038b6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff802038bd:	00 00 00 

ffffffff802038c0 <APIC_SendEOI>:
ffffffff802038c0:	55                   	push   %rbp
ffffffff802038c1:	48 89 e5             	mov    %rsp,%rbp
ffffffff802038c4:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff802038c8:	40 88 f8             	mov    %dil,%al
ffffffff802038cb:	bf 20 00 00 00       	mov    $0x20,%edi
ffffffff802038d0:	88 45 ff             	mov    %al,-0x1(%rbp)
ffffffff802038d3:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
ffffffff802038d7:	99                   	cltd   
ffffffff802038d8:	f7 ff                	idiv   %edi
ffffffff802038da:	c1 e0 04             	shl    $0x4,%eax
ffffffff802038dd:	05 00 01 00 00       	add    $0x100,%eax
ffffffff802038e2:	89 45 f8             	mov    %eax,-0x8(%rbp)
ffffffff802038e5:	8b 7d f8             	mov    -0x8(%rbp),%edi
ffffffff802038e8:	e8 f3 f9 ff ff       	callq  ffffffff802032e0 <APIC_Read>
ffffffff802038ed:	bf 20 00 00 00       	mov    $0x20,%edi
ffffffff802038f2:	b9 01 00 00 00       	mov    $0x1,%ecx
ffffffff802038f7:	89 45 f4             	mov    %eax,-0xc(%rbp)
ffffffff802038fa:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff802038fd:	0f b6 75 ff          	movzbl -0x1(%rbp),%esi
ffffffff80203901:	89 45 f0             	mov    %eax,-0x10(%rbp)
ffffffff80203904:	89 f0                	mov    %esi,%eax
ffffffff80203906:	99                   	cltd   
ffffffff80203907:	f7 ff                	idiv   %edi
ffffffff80203909:	89 4d ec             	mov    %ecx,-0x14(%rbp)
ffffffff8020390c:	89 d1                	mov    %edx,%ecx
ffffffff8020390e:	8b 55 ec             	mov    -0x14(%rbp),%edx
ffffffff80203911:	d3 e2                	shl    %cl,%edx
ffffffff80203913:	8b 75 f0             	mov    -0x10(%rbp),%esi
ffffffff80203916:	21 d6                	and    %edx,%esi
ffffffff80203918:	0f b6 55 ff          	movzbl -0x1(%rbp),%edx
ffffffff8020391c:	89 d0                	mov    %edx,%eax
ffffffff8020391e:	99                   	cltd   
ffffffff8020391f:	f7 ff                	idiv   %edi
ffffffff80203921:	89 d1                	mov    %edx,%ecx
ffffffff80203923:	d3 ee                	shr    %cl,%esi
ffffffff80203925:	83 fe 00             	cmp    $0x0,%esi
ffffffff80203928:	74 19                	je     ffffffff80203943 <APIC_SendEOI+0x83>
ffffffff8020392a:	b8 b0 00 00 00       	mov    $0xb0,%eax
ffffffff8020392f:	31 c9                	xor    %ecx,%ecx
ffffffff80203931:	bf b0 00 00 00       	mov    $0xb0,%edi
ffffffff80203936:	31 f6                	xor    %esi,%esi
ffffffff80203938:	89 45 e8             	mov    %eax,-0x18(%rbp)
ffffffff8020393b:	89 4d e4             	mov    %ecx,-0x1c(%rbp)
ffffffff8020393e:	e8 cd f9 ff ff       	callq  ffffffff80203310 <APIC_Write>
ffffffff80203943:	48 83 c4 20          	add    $0x20,%rsp
ffffffff80203947:	5d                   	pop    %rbp
ffffffff80203948:	c3                   	retq   
ffffffff80203949:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

ffffffff80203950 <APIC_SendIPI>:
ffffffff80203950:	55                   	push   %rbp
ffffffff80203951:	48 89 e5             	mov    %rsp,%rbp
ffffffff80203954:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff80203958:	88 d0                	mov    %dl,%al
ffffffff8020395a:	40 88 f1             	mov    %sil,%cl
ffffffff8020395d:	ba 10 03 00 00       	mov    $0x310,%edx
ffffffff80203962:	89 7d fc             	mov    %edi,-0x4(%rbp)
ffffffff80203965:	88 4d fb             	mov    %cl,-0x5(%rbp)
ffffffff80203968:	88 45 fa             	mov    %al,-0x6(%rbp)
ffffffff8020396b:	8b 75 fc             	mov    -0x4(%rbp),%esi
ffffffff8020396e:	c1 e6 18             	shl    $0x18,%esi
ffffffff80203971:	89 75 f4             	mov    %esi,-0xc(%rbp)
ffffffff80203974:	0f b6 75 fa          	movzbl -0x6(%rbp),%esi
ffffffff80203978:	83 e6 07             	and    $0x7,%esi
ffffffff8020397b:	c1 e6 08             	shl    $0x8,%esi
ffffffff8020397e:	81 ce 00 40 00 00    	or     $0x4000,%esi
ffffffff80203984:	0f b6 7d fb          	movzbl -0x5(%rbp),%edi
ffffffff80203988:	09 fe                	or     %edi,%esi
ffffffff8020398a:	89 75 f0             	mov    %esi,-0x10(%rbp)
ffffffff8020398d:	8b 75 f4             	mov    -0xc(%rbp),%esi
ffffffff80203990:	bf 10 03 00 00       	mov    $0x310,%edi
ffffffff80203995:	89 55 ec             	mov    %edx,-0x14(%rbp)
ffffffff80203998:	e8 73 f9 ff ff       	callq  ffffffff80203310 <APIC_Write>
ffffffff8020399d:	ba 00 03 00 00       	mov    $0x300,%edx
ffffffff802039a2:	8b 75 f0             	mov    -0x10(%rbp),%esi
ffffffff802039a5:	bf 00 03 00 00       	mov    $0x300,%edi
ffffffff802039aa:	89 55 e8             	mov    %edx,-0x18(%rbp)
ffffffff802039ad:	e8 5e f9 ff ff       	callq  ffffffff80203310 <APIC_Write>
ffffffff802039b2:	48 83 c4 20          	add    $0x20,%rsp
ffffffff802039b6:	5d                   	pop    %rbp
ffffffff802039b7:	c3                   	retq   
ffffffff802039b8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff802039bf:	00 

ffffffff802039c0 <outb>:
ffffffff802039c0:	55                   	push   %rbp
ffffffff802039c1:	48 89 e5             	mov    %rsp,%rbp
ffffffff802039c4:	48 83 ec 04          	sub    $0x4,%rsp
ffffffff802039c8:	40 88 f0             	mov    %sil,%al
ffffffff802039cb:	66 89 f9             	mov    %di,%cx
ffffffff802039ce:	66 89 4d fe          	mov    %cx,-0x2(%rbp)
ffffffff802039d2:	88 45 fd             	mov    %al,-0x3(%rbp)
ffffffff802039d5:	66 8b 55 fe          	mov    -0x2(%rbp),%dx
ffffffff802039d9:	8a 45 fd             	mov    -0x3(%rbp),%al
ffffffff802039dc:	ee                   	out    %al,(%dx)
ffffffff802039dd:	48 83 c4 04          	add    $0x4,%rsp
ffffffff802039e1:	5d                   	pop    %rbp
ffffffff802039e2:	c3                   	retq   
ffffffff802039e3:	0f 1f 00             	nopl   (%rax)
ffffffff802039e6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff802039ed:	00 00 00 

ffffffff802039f0 <inb>:
ffffffff802039f0:	55                   	push   %rbp
ffffffff802039f1:	48 89 e5             	mov    %rsp,%rbp
ffffffff802039f4:	48 83 ec 04          	sub    $0x4,%rsp
ffffffff802039f8:	66 89 f8             	mov    %di,%ax
ffffffff802039fb:	66 89 45 fe          	mov    %ax,-0x2(%rbp)
ffffffff802039ff:	66 8b 55 fe          	mov    -0x2(%rbp),%dx
ffffffff80203a03:	ec                   	in     (%dx),%al
ffffffff80203a04:	88 45 fd             	mov    %al,-0x3(%rbp)
ffffffff80203a07:	0f b6 45 fd          	movzbl -0x3(%rbp),%eax
ffffffff80203a0b:	48 83 c4 04          	add    $0x4,%rsp
ffffffff80203a0f:	5d                   	pop    %rbp
ffffffff80203a10:	c3                   	retq   
ffffffff80203a11:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff80203a16:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80203a1d:	00 00 00 

ffffffff80203a20 <outw>:
ffffffff80203a20:	55                   	push   %rbp
ffffffff80203a21:	48 89 e5             	mov    %rsp,%rbp
ffffffff80203a24:	48 83 ec 04          	sub    $0x4,%rsp
ffffffff80203a28:	66 89 f0             	mov    %si,%ax
ffffffff80203a2b:	66 89 f9             	mov    %di,%cx
ffffffff80203a2e:	66 89 4d fe          	mov    %cx,-0x2(%rbp)
ffffffff80203a32:	66 89 45 fc          	mov    %ax,-0x4(%rbp)
ffffffff80203a36:	66 8b 55 fe          	mov    -0x2(%rbp),%dx
ffffffff80203a3a:	66 8b 45 fc          	mov    -0x4(%rbp),%ax
ffffffff80203a3e:	66 ef                	out    %ax,(%dx)
ffffffff80203a40:	48 83 c4 04          	add    $0x4,%rsp
ffffffff80203a44:	5d                   	pop    %rbp
ffffffff80203a45:	c3                   	retq   
ffffffff80203a46:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80203a4d:	00 00 00 

ffffffff80203a50 <inw>:
ffffffff80203a50:	55                   	push   %rbp
ffffffff80203a51:	48 89 e5             	mov    %rsp,%rbp
ffffffff80203a54:	48 83 ec 04          	sub    $0x4,%rsp
ffffffff80203a58:	66 89 f8             	mov    %di,%ax
ffffffff80203a5b:	66 89 45 fe          	mov    %ax,-0x2(%rbp)
ffffffff80203a5f:	66 8b 55 fe          	mov    -0x2(%rbp),%dx
ffffffff80203a63:	66 ed                	in     (%dx),%ax
ffffffff80203a65:	66 89 45 fc          	mov    %ax,-0x4(%rbp)
ffffffff80203a69:	0f b7 45 fc          	movzwl -0x4(%rbp),%eax
ffffffff80203a6d:	48 83 c4 04          	add    $0x4,%rsp
ffffffff80203a71:	5d                   	pop    %rbp
ffffffff80203a72:	c3                   	retq   
ffffffff80203a73:	0f 1f 00             	nopl   (%rax)
ffffffff80203a76:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80203a7d:	00 00 00 

ffffffff80203a80 <outl>:
ffffffff80203a80:	55                   	push   %rbp
ffffffff80203a81:	48 89 e5             	mov    %rsp,%rbp
ffffffff80203a84:	50                   	push   %rax
ffffffff80203a85:	66 89 f8             	mov    %di,%ax
ffffffff80203a88:	66 89 45 fe          	mov    %ax,-0x2(%rbp)
ffffffff80203a8c:	89 75 f8             	mov    %esi,-0x8(%rbp)
ffffffff80203a8f:	66 8b 55 fe          	mov    -0x2(%rbp),%dx
ffffffff80203a93:	8b 45 f8             	mov    -0x8(%rbp),%eax
ffffffff80203a96:	ef                   	out    %eax,(%dx)
ffffffff80203a97:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80203a9b:	5d                   	pop    %rbp
ffffffff80203a9c:	c3                   	retq   
ffffffff80203a9d:	0f 1f 00             	nopl   (%rax)

ffffffff80203aa0 <inl>:
ffffffff80203aa0:	55                   	push   %rbp
ffffffff80203aa1:	48 89 e5             	mov    %rsp,%rbp
ffffffff80203aa4:	50                   	push   %rax
ffffffff80203aa5:	66 89 f8             	mov    %di,%ax
ffffffff80203aa8:	66 89 45 fe          	mov    %ax,-0x2(%rbp)
ffffffff80203aac:	66 8b 55 fe          	mov    -0x2(%rbp),%dx
ffffffff80203ab0:	ed                   	in     (%dx),%eax
ffffffff80203ab1:	89 45 f8             	mov    %eax,-0x8(%rbp)
ffffffff80203ab4:	8b 45 f8             	mov    -0x8(%rbp),%eax
ffffffff80203ab7:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80203abb:	5d                   	pop    %rbp
ffffffff80203abc:	c3                   	retq   
ffffffff80203abd:	0f 1f 00             	nopl   (%rax)

ffffffff80203ac0 <wrmsr>:
ffffffff80203ac0:	55                   	push   %rbp
ffffffff80203ac1:	48 89 e5             	mov    %rsp,%rbp
ffffffff80203ac4:	48 83 ec 18          	sub    $0x18,%rsp
ffffffff80203ac8:	89 7d fc             	mov    %edi,-0x4(%rbp)
ffffffff80203acb:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff80203acf:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
ffffffff80203ad3:	89 f7                	mov    %esi,%edi
ffffffff80203ad5:	89 7d ec             	mov    %edi,-0x14(%rbp)
ffffffff80203ad8:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
ffffffff80203adc:	48 c1 ee 20          	shr    $0x20,%rsi
ffffffff80203ae0:	89 f7                	mov    %esi,%edi
ffffffff80203ae2:	89 7d e8             	mov    %edi,-0x18(%rbp)
ffffffff80203ae5:	8b 45 ec             	mov    -0x14(%rbp),%eax
ffffffff80203ae8:	8b 55 e8             	mov    -0x18(%rbp),%edx
ffffffff80203aeb:	8b 4d fc             	mov    -0x4(%rbp),%ecx
ffffffff80203aee:	0f 30                	wrmsr  
ffffffff80203af0:	48 83 c4 18          	add    $0x18,%rsp
ffffffff80203af4:	5d                   	pop    %rbp
ffffffff80203af5:	c3                   	retq   
ffffffff80203af6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80203afd:	00 00 00 

ffffffff80203b00 <rdmsr>:
ffffffff80203b00:	55                   	push   %rbp
ffffffff80203b01:	48 89 e5             	mov    %rsp,%rbp
ffffffff80203b04:	48 83 ec 0c          	sub    $0xc,%rsp
ffffffff80203b08:	89 7d fc             	mov    %edi,-0x4(%rbp)
ffffffff80203b0b:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
ffffffff80203b12:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
ffffffff80203b19:	8b 4d fc             	mov    -0x4(%rbp),%ecx
ffffffff80203b1c:	0f 32                	rdmsr  
ffffffff80203b1e:	89 45 f8             	mov    %eax,-0x8(%rbp)
ffffffff80203b21:	89 55 f4             	mov    %edx,-0xc(%rbp)
ffffffff80203b24:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff80203b27:	89 c6                	mov    %eax,%esi
ffffffff80203b29:	48 c1 e6 20          	shl    $0x20,%rsi
ffffffff80203b2d:	8b 45 f8             	mov    -0x8(%rbp),%eax
ffffffff80203b30:	41 89 c0             	mov    %eax,%r8d
ffffffff80203b33:	4c 09 c6             	or     %r8,%rsi
ffffffff80203b36:	48 89 f0             	mov    %rsi,%rax
ffffffff80203b39:	48 83 c4 0c          	add    $0xc,%rsp
ffffffff80203b3d:	5d                   	pop    %rbp
ffffffff80203b3e:	c3                   	retq   
ffffffff80203b3f:	90                   	nop

ffffffff80203b40 <IOAPIC_Initialize>:
ffffffff80203b40:	55                   	push   %rbp
ffffffff80203b41:	48 89 e5             	mov    %rsp,%rbp
ffffffff80203b44:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff80203b48:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
ffffffff80203b4c:	89 75 ec             	mov    %esi,-0x14(%rbp)
ffffffff80203b4f:	8b 34 25 cc 8c 28 80 	mov    0xffffffff80288ccc,%esi
ffffffff80203b56:	81 fe 80 00 00 00    	cmp    $0x80,%esi
ffffffff80203b5c:	72 09                	jb     ffffffff80203b67 <IOAPIC_Initialize+0x27>
ffffffff80203b5e:	c6 45 ff ff          	movb   $0xff,-0x1(%rbp)
ffffffff80203b62:	e9 95 00 00 00       	jmpq   ffffffff80203bfc <IOAPIC_Initialize+0xbc>
ffffffff80203b67:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80203b6b:	8b 0c 25 cc 8c 28 80 	mov    0xffffffff80288ccc,%ecx
ffffffff80203b72:	89 ca                	mov    %ecx,%edx
ffffffff80203b74:	48 8d 14 52          	lea    (%rdx,%rdx,2),%rdx
ffffffff80203b78:	48 89 04 d5 00 38 28 	mov    %rax,-0x7fd7c800(,%rdx,8)
ffffffff80203b7f:	80 
ffffffff80203b80:	8b 4d ec             	mov    -0x14(%rbp),%ecx
ffffffff80203b83:	8b 34 25 cc 8c 28 80 	mov    0xffffffff80288ccc,%esi
ffffffff80203b8a:	89 f0                	mov    %esi,%eax
ffffffff80203b8c:	48 8d 04 40          	lea    (%rax,%rax,2),%rax
ffffffff80203b90:	89 0c c5 08 38 28 80 	mov    %ecx,-0x7fd7c7f8(,%rax,8)
ffffffff80203b97:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
ffffffff80203b9b:	31 f6                	xor    %esi,%esi
ffffffff80203b9d:	e8 6e 00 00 00       	callq  ffffffff80203c10 <IOAPIC_Read>
ffffffff80203ba2:	c1 e8 18             	shr    $0x18,%eax
ffffffff80203ba5:	83 e0 0f             	and    $0xf,%eax
ffffffff80203ba8:	8b 0c 25 cc 8c 28 80 	mov    0xffffffff80288ccc,%ecx
ffffffff80203baf:	89 ca                	mov    %ecx,%edx
ffffffff80203bb1:	48 8d 14 52          	lea    (%rdx,%rdx,2),%rdx
ffffffff80203bb5:	89 04 d5 0c 38 28 80 	mov    %eax,-0x7fd7c7f4(,%rdx,8)
ffffffff80203bbc:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
ffffffff80203bc0:	be 01 00 00 00       	mov    $0x1,%esi
ffffffff80203bc5:	e8 46 00 00 00       	callq  ffffffff80203c10 <IOAPIC_Read>
ffffffff80203bca:	c1 e8 10             	shr    $0x10,%eax
ffffffff80203bcd:	41 88 c0             	mov    %al,%r8b
ffffffff80203bd0:	41 0f b6 c0          	movzbl %r8b,%eax
ffffffff80203bd4:	8b 0c 25 cc 8c 28 80 	mov    0xffffffff80288ccc,%ecx
ffffffff80203bdb:	89 ca                	mov    %ecx,%edx
ffffffff80203bdd:	48 8d 14 52          	lea    (%rdx,%rdx,2),%rdx
ffffffff80203be1:	89 04 d5 10 38 28 80 	mov    %eax,-0x7fd7c7f0(,%rdx,8)
ffffffff80203be8:	8b 04 25 cc 8c 28 80 	mov    0xffffffff80288ccc,%eax
ffffffff80203bef:	ff c0                	inc    %eax
ffffffff80203bf1:	89 04 25 cc 8c 28 80 	mov    %eax,0xffffffff80288ccc
ffffffff80203bf8:	c6 45 ff 00          	movb   $0x0,-0x1(%rbp)
ffffffff80203bfc:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
ffffffff80203c00:	48 83 c4 20          	add    $0x20,%rsp
ffffffff80203c04:	5d                   	pop    %rbp
ffffffff80203c05:	c3                   	retq   
ffffffff80203c06:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80203c0d:	00 00 00 

ffffffff80203c10 <IOAPIC_Read>:
ffffffff80203c10:	55                   	push   %rbp
ffffffff80203c11:	48 89 e5             	mov    %rsp,%rbp
ffffffff80203c14:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff80203c18:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff80203c1c:	89 75 f4             	mov    %esi,-0xc(%rbp)
ffffffff80203c1f:	8b 75 f4             	mov    -0xc(%rbp),%esi
ffffffff80203c22:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
ffffffff80203c26:	89 37                	mov    %esi,(%rdi)
ffffffff80203c28:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
ffffffff80203c2c:	8b 47 10             	mov    0x10(%rdi),%eax
ffffffff80203c2f:	48 83 c4 10          	add    $0x10,%rsp
ffffffff80203c33:	5d                   	pop    %rbp
ffffffff80203c34:	c3                   	retq   
ffffffff80203c35:	90                   	nop
ffffffff80203c36:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80203c3d:	00 00 00 

ffffffff80203c40 <IOAPIC_Write>:
ffffffff80203c40:	55                   	push   %rbp
ffffffff80203c41:	48 89 e5             	mov    %rsp,%rbp
ffffffff80203c44:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff80203c48:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff80203c4c:	89 75 f4             	mov    %esi,-0xc(%rbp)
ffffffff80203c4f:	89 55 f0             	mov    %edx,-0x10(%rbp)
ffffffff80203c52:	8b 55 f4             	mov    -0xc(%rbp),%edx
ffffffff80203c55:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
ffffffff80203c59:	89 17                	mov    %edx,(%rdi)
ffffffff80203c5b:	8b 55 f0             	mov    -0x10(%rbp),%edx
ffffffff80203c5e:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
ffffffff80203c62:	89 57 10             	mov    %edx,0x10(%rdi)
ffffffff80203c65:	48 83 c4 10          	add    $0x10,%rsp
ffffffff80203c69:	5d                   	pop    %rbp
ffffffff80203c6a:	c3                   	retq   
ffffffff80203c6b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

ffffffff80203c70 <IOAPIC_GetVector>:
ffffffff80203c70:	55                   	push   %rbp
ffffffff80203c71:	48 89 e5             	mov    %rsp,%rbp
ffffffff80203c74:	48 83 ec 30          	sub    $0x30,%rsp
ffffffff80203c78:	40 88 f8             	mov    %dil,%al
ffffffff80203c7b:	88 45 fe             	mov    %al,-0x2(%rbp)
ffffffff80203c7e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff80203c82:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
ffffffff80203c89:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
ffffffff80203c90:	00 
ffffffff80203c91:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%rbp)
ffffffff80203c98:	8b 45 dc             	mov    -0x24(%rbp),%eax
ffffffff80203c9b:	8b 0c 25 cc 8c 28 80 	mov    0xffffffff80288ccc,%ecx
ffffffff80203ca2:	39 c8                	cmp    %ecx,%eax
ffffffff80203ca4:	73 7e                	jae    ffffffff80203d24 <IOAPIC_GetVector+0xb4>
ffffffff80203ca6:	0f b6 45 fe          	movzbl -0x2(%rbp),%eax
ffffffff80203caa:	8b 4d dc             	mov    -0x24(%rbp),%ecx
ffffffff80203cad:	89 ca                	mov    %ecx,%edx
ffffffff80203caf:	48 8d 14 52          	lea    (%rdx,%rdx,2),%rdx
ffffffff80203cb3:	48 8d 14 d5 00 38 28 	lea    -0x7fd7c800(,%rdx,8),%rdx
ffffffff80203cba:	80 
ffffffff80203cbb:	3b 42 08             	cmp    0x8(%rdx),%eax
ffffffff80203cbe:	72 54                	jb     ffffffff80203d14 <IOAPIC_GetVector+0xa4>
ffffffff80203cc0:	0f b6 45 fe          	movzbl -0x2(%rbp),%eax
ffffffff80203cc4:	8b 4d dc             	mov    -0x24(%rbp),%ecx
ffffffff80203cc7:	89 ca                	mov    %ecx,%edx
ffffffff80203cc9:	48 8d 14 52          	lea    (%rdx,%rdx,2),%rdx
ffffffff80203ccd:	48 8d 34 d5 00 38 28 	lea    -0x7fd7c800(,%rdx,8),%rsi
ffffffff80203cd4:	80 
ffffffff80203cd5:	8b 0c d5 08 38 28 80 	mov    -0x7fd7c7f8(,%rdx,8),%ecx
ffffffff80203cdc:	03 4e 10             	add    0x10(%rsi),%ecx
ffffffff80203cdf:	39 c8                	cmp    %ecx,%eax
ffffffff80203ce1:	73 31                	jae    ffffffff80203d14 <IOAPIC_GetVector+0xa4>
ffffffff80203ce3:	0f b6 45 fe          	movzbl -0x2(%rbp),%eax
ffffffff80203ce7:	8b 4d dc             	mov    -0x24(%rbp),%ecx
ffffffff80203cea:	89 ca                	mov    %ecx,%edx
ffffffff80203cec:	48 8d 14 52          	lea    (%rdx,%rdx,2),%rdx
ffffffff80203cf0:	8b 0c d5 08 38 28 80 	mov    -0x7fd7c7f8(,%rdx,8),%ecx
ffffffff80203cf7:	29 c8                	sub    %ecx,%eax
ffffffff80203cf9:	89 45 ec             	mov    %eax,-0x14(%rbp)
ffffffff80203cfc:	8b 45 dc             	mov    -0x24(%rbp),%eax
ffffffff80203cff:	89 c2                	mov    %eax,%edx
ffffffff80203d01:	48 8d 14 52          	lea    (%rdx,%rdx,2),%rdx
ffffffff80203d05:	48 8d 14 d5 00 38 28 	lea    -0x7fd7c800(,%rdx,8),%rdx
ffffffff80203d0c:	80 
ffffffff80203d0d:	48 8b 12             	mov    (%rdx),%rdx
ffffffff80203d10:	48 89 55 e0          	mov    %rdx,-0x20(%rbp)
ffffffff80203d14:	eb 00                	jmp    ffffffff80203d16 <IOAPIC_GetVector+0xa6>
ffffffff80203d16:	8b 45 dc             	mov    -0x24(%rbp),%eax
ffffffff80203d19:	83 c0 01             	add    $0x1,%eax
ffffffff80203d1c:	89 45 dc             	mov    %eax,-0x24(%rbp)
ffffffff80203d1f:	e9 74 ff ff ff       	jmpq   ffffffff80203c98 <IOAPIC_GetVector+0x28>
ffffffff80203d24:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
ffffffff80203d29:	75 06                	jne    ffffffff80203d31 <IOAPIC_GetVector+0xc1>
ffffffff80203d2b:	c6 45 ff ff          	movb   $0xff,-0x1(%rbp)
ffffffff80203d2f:	eb 37                	jmp    ffffffff80203d68 <IOAPIC_GetVector+0xf8>
ffffffff80203d31:	8b 45 ec             	mov    -0x14(%rbp),%eax
ffffffff80203d34:	d1 e0                	shl    %eax
ffffffff80203d36:	83 c0 10             	add    $0x10,%eax
ffffffff80203d39:	89 45 d8             	mov    %eax,-0x28(%rbp)
ffffffff80203d3c:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
ffffffff80203d40:	8b 75 d8             	mov    -0x28(%rbp),%esi
ffffffff80203d43:	e8 c8 fe ff ff       	callq  ffffffff80203c10 <IOAPIC_Read>
ffffffff80203d48:	89 45 d4             	mov    %eax,-0x2c(%rbp)
ffffffff80203d4b:	8b 45 d4             	mov    -0x2c(%rbp),%eax
ffffffff80203d4e:	25 ff 00 00 00       	and    $0xff,%eax
ffffffff80203d53:	88 c1                	mov    %al,%cl
ffffffff80203d55:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
ffffffff80203d59:	88 0f                	mov    %cl,(%rdi)
ffffffff80203d5b:	8b 45 d4             	mov    -0x2c(%rbp),%eax
ffffffff80203d5e:	25 ff 00 00 00       	and    $0xff,%eax
ffffffff80203d63:	88 c1                	mov    %al,%cl
ffffffff80203d65:	88 4d ff             	mov    %cl,-0x1(%rbp)
ffffffff80203d68:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
ffffffff80203d6c:	48 83 c4 30          	add    $0x30,%rsp
ffffffff80203d70:	5d                   	pop    %rbp
ffffffff80203d71:	c3                   	retq   
ffffffff80203d72:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff80203d76:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80203d7d:	00 00 00 

ffffffff80203d80 <IOAPIC_MapIRQ>:
ffffffff80203d80:	55                   	push   %rbp
ffffffff80203d81:	48 89 e5             	mov    %rsp,%rbp
ffffffff80203d84:	41 56                	push   %r14
ffffffff80203d86:	53                   	push   %rbx
ffffffff80203d87:	48 83 ec 40          	sub    $0x40,%rsp
ffffffff80203d8b:	44 88 c8             	mov    %r9b,%al
ffffffff80203d8e:	45 88 c2             	mov    %r8b,%r10b
ffffffff80203d91:	41 88 cb             	mov    %cl,%r11b
ffffffff80203d94:	40 88 f3             	mov    %sil,%bl
ffffffff80203d97:	41 88 fe             	mov    %dil,%r14b
ffffffff80203d9a:	44 88 75 ef          	mov    %r14b,-0x11(%rbp)
ffffffff80203d9e:	88 5d ee             	mov    %bl,-0x12(%rbp)
ffffffff80203da1:	48 89 55 e0          	mov    %rdx,-0x20(%rbp)
ffffffff80203da5:	44 88 5d df          	mov    %r11b,-0x21(%rbp)
ffffffff80203da9:	44 88 55 de          	mov    %r10b,-0x22(%rbp)
ffffffff80203dad:	88 45 dd             	mov    %al,-0x23(%rbp)
ffffffff80203db0:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%rbp)
ffffffff80203db7:	48 c7 45 d0 00 00 00 	movq   $0x0,-0x30(%rbp)
ffffffff80203dbe:	00 
ffffffff80203dbf:	c7 45 cc 00 00 00 00 	movl   $0x0,-0x34(%rbp)
ffffffff80203dc6:	8b 45 cc             	mov    -0x34(%rbp),%eax
ffffffff80203dc9:	8b 0c 25 cc 8c 28 80 	mov    0xffffffff80288ccc,%ecx
ffffffff80203dd0:	39 c8                	cmp    %ecx,%eax
ffffffff80203dd2:	0f 83 9f 00 00 00    	jae    ffffffff80203e77 <IOAPIC_MapIRQ+0xf7>
ffffffff80203dd8:	0f b6 45 ef          	movzbl -0x11(%rbp),%eax
ffffffff80203ddc:	8b 4d cc             	mov    -0x34(%rbp),%ecx
ffffffff80203ddf:	89 ca                	mov    %ecx,%edx
ffffffff80203de1:	48 8d 14 52          	lea    (%rdx,%rdx,2),%rdx
ffffffff80203de5:	48 8d 14 d5 00 38 28 	lea    -0x7fd7c800(,%rdx,8),%rdx
ffffffff80203dec:	80 
ffffffff80203ded:	3b 42 08             	cmp    0x8(%rdx),%eax
ffffffff80203df0:	72 75                	jb     ffffffff80203e67 <IOAPIC_MapIRQ+0xe7>
ffffffff80203df2:	0f b6 45 ef          	movzbl -0x11(%rbp),%eax
ffffffff80203df6:	8b 4d cc             	mov    -0x34(%rbp),%ecx
ffffffff80203df9:	89 ca                	mov    %ecx,%edx
ffffffff80203dfb:	48 8d 14 52          	lea    (%rdx,%rdx,2),%rdx
ffffffff80203dff:	48 8d 34 d5 00 38 28 	lea    -0x7fd7c800(,%rdx,8),%rsi
ffffffff80203e06:	80 
ffffffff80203e07:	8b 0c d5 08 38 28 80 	mov    -0x7fd7c7f8(,%rdx,8),%ecx
ffffffff80203e0e:	03 4e 10             	add    0x10(%rsi),%ecx
ffffffff80203e11:	39 c8                	cmp    %ecx,%eax
ffffffff80203e13:	73 52                	jae    ffffffff80203e67 <IOAPIC_MapIRQ+0xe7>
ffffffff80203e15:	0f b6 45 ef          	movzbl -0x11(%rbp),%eax
ffffffff80203e19:	8b 4d cc             	mov    -0x34(%rbp),%ecx
ffffffff80203e1c:	89 ca                	mov    %ecx,%edx
ffffffff80203e1e:	48 8d 14 52          	lea    (%rdx,%rdx,2),%rdx
ffffffff80203e22:	8b 0c d5 08 38 28 80 	mov    -0x7fd7c7f8(,%rdx,8),%ecx
ffffffff80203e29:	29 c8                	sub    %ecx,%eax
ffffffff80203e2b:	89 45 d8             	mov    %eax,-0x28(%rbp)
ffffffff80203e2e:	8b 45 cc             	mov    -0x34(%rbp),%eax
ffffffff80203e31:	89 c2                	mov    %eax,%edx
ffffffff80203e33:	48 8d 14 52          	lea    (%rdx,%rdx,2),%rdx
ffffffff80203e37:	48 8b 14 d5 00 38 28 	mov    -0x7fd7c800(,%rdx,8),%rdx
ffffffff80203e3e:	80 
ffffffff80203e3f:	48 89 55 d0          	mov    %rdx,-0x30(%rbp)
ffffffff80203e43:	8b 45 cc             	mov    -0x34(%rbp),%eax
ffffffff80203e46:	0f b6 4d ee          	movzbl -0x12(%rbp),%ecx
ffffffff80203e4a:	89 ca                	mov    %ecx,%edx
ffffffff80203e4c:	89 04 d5 00 30 28 80 	mov    %eax,-0x7fd7d000(,%rdx,8)
ffffffff80203e53:	8b 45 d8             	mov    -0x28(%rbp),%eax
ffffffff80203e56:	0f b6 4d ee          	movzbl -0x12(%rbp),%ecx
ffffffff80203e5a:	89 ca                	mov    %ecx,%edx
ffffffff80203e5c:	48 8d 14 d5 00 30 28 	lea    -0x7fd7d000(,%rdx,8),%rdx
ffffffff80203e63:	80 
ffffffff80203e64:	89 42 04             	mov    %eax,0x4(%rdx)
ffffffff80203e67:	eb 00                	jmp    ffffffff80203e69 <IOAPIC_MapIRQ+0xe9>
ffffffff80203e69:	8b 45 cc             	mov    -0x34(%rbp),%eax
ffffffff80203e6c:	83 c0 01             	add    $0x1,%eax
ffffffff80203e6f:	89 45 cc             	mov    %eax,-0x34(%rbp)
ffffffff80203e72:	e9 4f ff ff ff       	jmpq   ffffffff80203dc6 <IOAPIC_MapIRQ+0x46>
ffffffff80203e77:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
ffffffff80203e7c:	75 05                	jne    ffffffff80203e83 <IOAPIC_MapIRQ+0x103>
ffffffff80203e7e:	e9 e6 00 00 00       	jmpq   ffffffff80203f69 <IOAPIC_MapIRQ+0x1e9>
ffffffff80203e83:	8b 45 d8             	mov    -0x28(%rbp),%eax
ffffffff80203e86:	d1 e0                	shl    %eax
ffffffff80203e88:	83 c0 10             	add    $0x10,%eax
ffffffff80203e8b:	89 45 c8             	mov    %eax,-0x38(%rbp)
ffffffff80203e8e:	8b 45 d8             	mov    -0x28(%rbp),%eax
ffffffff80203e91:	d1 e0                	shl    %eax
ffffffff80203e93:	83 c0 10             	add    $0x10,%eax
ffffffff80203e96:	83 c0 01             	add    $0x1,%eax
ffffffff80203e99:	89 45 c4             	mov    %eax,-0x3c(%rbp)
ffffffff80203e9c:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
ffffffff80203ea0:	8b 75 c4             	mov    -0x3c(%rbp),%esi
ffffffff80203ea3:	e8 68 fd ff ff       	callq  ffffffff80203c10 <IOAPIC_Read>
ffffffff80203ea8:	89 45 c0             	mov    %eax,-0x40(%rbp)
ffffffff80203eab:	8b 45 c0             	mov    -0x40(%rbp),%eax
ffffffff80203eae:	25 ff ff ff 00       	and    $0xffffff,%eax
ffffffff80203eb3:	89 45 c0             	mov    %eax,-0x40(%rbp)
ffffffff80203eb6:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
ffffffff80203eba:	48 c1 e7 18          	shl    $0x18,%rdi
ffffffff80203ebe:	8b 45 c0             	mov    -0x40(%rbp),%eax
ffffffff80203ec1:	89 c1                	mov    %eax,%ecx
ffffffff80203ec3:	48 09 f9             	or     %rdi,%rcx
ffffffff80203ec6:	89 c8                	mov    %ecx,%eax
ffffffff80203ec8:	89 45 c0             	mov    %eax,-0x40(%rbp)
ffffffff80203ecb:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
ffffffff80203ecf:	8b 75 c4             	mov    -0x3c(%rbp),%esi
ffffffff80203ed2:	8b 55 c0             	mov    -0x40(%rbp),%edx
ffffffff80203ed5:	e8 66 fd ff ff       	callq  ffffffff80203c40 <IOAPIC_Write>
ffffffff80203eda:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
ffffffff80203ede:	8b 75 c8             	mov    -0x38(%rbp),%esi
ffffffff80203ee1:	e8 2a fd ff ff       	callq  ffffffff80203c10 <IOAPIC_Read>
ffffffff80203ee6:	89 45 bc             	mov    %eax,-0x44(%rbp)
ffffffff80203ee9:	8b 45 bc             	mov    -0x44(%rbp),%eax
ffffffff80203eec:	25 ff df ff ff       	and    $0xffffdfff,%eax
ffffffff80203ef1:	89 45 bc             	mov    %eax,-0x44(%rbp)
ffffffff80203ef4:	0f b6 45 de          	movzbl -0x22(%rbp),%eax
ffffffff80203ef8:	83 e0 01             	and    $0x1,%eax
ffffffff80203efb:	c1 e0 0d             	shl    $0xd,%eax
ffffffff80203efe:	0b 45 bc             	or     -0x44(%rbp),%eax
ffffffff80203f01:	89 45 bc             	mov    %eax,-0x44(%rbp)
ffffffff80203f04:	8b 45 bc             	mov    -0x44(%rbp),%eax
ffffffff80203f07:	25 ff 7f ff ff       	and    $0xffff7fff,%eax
ffffffff80203f0c:	89 45 bc             	mov    %eax,-0x44(%rbp)
ffffffff80203f0f:	0f b6 45 df          	movzbl -0x21(%rbp),%eax
ffffffff80203f13:	83 e0 01             	and    $0x1,%eax
ffffffff80203f16:	c1 e0 0f             	shl    $0xf,%eax
ffffffff80203f19:	0b 45 bc             	or     -0x44(%rbp),%eax
ffffffff80203f1c:	89 45 bc             	mov    %eax,-0x44(%rbp)
ffffffff80203f1f:	8b 45 bc             	mov    -0x44(%rbp),%eax
ffffffff80203f22:	25 ff f7 ff ff       	and    $0xfffff7ff,%eax
ffffffff80203f27:	89 45 bc             	mov    %eax,-0x44(%rbp)
ffffffff80203f2a:	8b 45 bc             	mov    -0x44(%rbp),%eax
ffffffff80203f2d:	25 ff f8 ff ff       	and    $0xfffff8ff,%eax
ffffffff80203f32:	89 45 bc             	mov    %eax,-0x44(%rbp)
ffffffff80203f35:	8b 45 bc             	mov    -0x44(%rbp),%eax
ffffffff80203f38:	25 00 ff ff ff       	and    $0xffffff00,%eax
ffffffff80203f3d:	89 45 bc             	mov    %eax,-0x44(%rbp)
ffffffff80203f40:	0f b6 45 ee          	movzbl -0x12(%rbp),%eax
ffffffff80203f44:	0b 45 bc             	or     -0x44(%rbp),%eax
ffffffff80203f47:	89 45 bc             	mov    %eax,-0x44(%rbp)
ffffffff80203f4a:	0f b6 45 dd          	movzbl -0x23(%rbp),%eax
ffffffff80203f4e:	83 e0 07             	and    $0x7,%eax
ffffffff80203f51:	c1 e0 08             	shl    $0x8,%eax
ffffffff80203f54:	0b 45 bc             	or     -0x44(%rbp),%eax
ffffffff80203f57:	89 45 bc             	mov    %eax,-0x44(%rbp)
ffffffff80203f5a:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
ffffffff80203f5e:	8b 75 c8             	mov    -0x38(%rbp),%esi
ffffffff80203f61:	8b 55 bc             	mov    -0x44(%rbp),%edx
ffffffff80203f64:	e8 d7 fc ff ff       	callq  ffffffff80203c40 <IOAPIC_Write>
ffffffff80203f69:	48 83 c4 40          	add    $0x40,%rsp
ffffffff80203f6d:	5b                   	pop    %rbx
ffffffff80203f6e:	41 5e                	pop    %r14
ffffffff80203f70:	5d                   	pop    %rbp
ffffffff80203f71:	c3                   	retq   
ffffffff80203f72:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff80203f76:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80203f7d:	00 00 00 

ffffffff80203f80 <IOAPIC_SetEnableMode>:
ffffffff80203f80:	55                   	push   %rbp
ffffffff80203f81:	48 89 e5             	mov    %rsp,%rbp
ffffffff80203f84:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff80203f88:	40 88 f0             	mov    %sil,%al
ffffffff80203f8b:	40 88 f9             	mov    %dil,%cl
ffffffff80203f8e:	88 4d ff             	mov    %cl,-0x1(%rbp)
ffffffff80203f91:	88 45 fe             	mov    %al,-0x2(%rbp)
ffffffff80203f94:	0f b6 75 ff          	movzbl -0x1(%rbp),%esi
ffffffff80203f98:	89 f2                	mov    %esi,%edx
ffffffff80203f9a:	48 8d 14 d5 00 30 28 	lea    -0x7fd7d000(,%rdx,8),%rdx
ffffffff80203fa1:	80 
ffffffff80203fa2:	83 3a ff             	cmpl   $0xffffffff,(%rdx)
ffffffff80203fa5:	74 75                	je     ffffffff8020401c <IOAPIC_SetEnableMode+0x9c>
ffffffff80203fa7:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
ffffffff80203fab:	89 c1                	mov    %eax,%ecx
ffffffff80203fad:	8b 04 cd 04 30 28 80 	mov    -0x7fd7cffc(,%rcx,8),%eax
ffffffff80203fb4:	89 c1                	mov    %eax,%ecx
ffffffff80203fb6:	8d 44 09 10          	lea    0x10(%rcx,%rcx,1),%eax
ffffffff80203fba:	89 45 f8             	mov    %eax,-0x8(%rbp)
ffffffff80203fbd:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
ffffffff80203fc1:	89 c1                	mov    %eax,%ecx
ffffffff80203fc3:	8b 04 cd 00 30 28 80 	mov    -0x7fd7d000(,%rcx,8),%eax
ffffffff80203fca:	89 c1                	mov    %eax,%ecx
ffffffff80203fcc:	48 8d 0c 49          	lea    (%rcx,%rcx,2),%rcx
ffffffff80203fd0:	48 8d 0c cd 00 38 28 	lea    -0x7fd7c800(,%rcx,8),%rcx
ffffffff80203fd7:	80 
ffffffff80203fd8:	48 8b 09             	mov    (%rcx),%rcx
ffffffff80203fdb:	48 89 4d f0          	mov    %rcx,-0x10(%rbp)
ffffffff80203fdf:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
ffffffff80203fe3:	8b 75 f8             	mov    -0x8(%rbp),%esi
ffffffff80203fe6:	e8 25 fc ff ff       	callq  ffffffff80203c10 <IOAPIC_Read>
ffffffff80203feb:	31 f6                	xor    %esi,%esi
ffffffff80203fed:	89 45 ec             	mov    %eax,-0x14(%rbp)
ffffffff80203ff0:	8b 45 ec             	mov    -0x14(%rbp),%eax
ffffffff80203ff3:	0f b6 55 fe          	movzbl -0x2(%rbp),%edx
ffffffff80203ff7:	83 f2 ff             	xor    $0xffffffff,%edx
ffffffff80203ffa:	83 e2 01             	and    $0x1,%edx
ffffffff80203ffd:	29 d6                	sub    %edx,%esi
ffffffff80203fff:	33 75 ec             	xor    -0x14(%rbp),%esi
ffffffff80204002:	81 e6 00 00 01 00    	and    $0x10000,%esi
ffffffff80204008:	31 f0                	xor    %esi,%eax
ffffffff8020400a:	89 45 ec             	mov    %eax,-0x14(%rbp)
ffffffff8020400d:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
ffffffff80204011:	8b 75 f8             	mov    -0x8(%rbp),%esi
ffffffff80204014:	8b 55 ec             	mov    -0x14(%rbp),%edx
ffffffff80204017:	e8 24 fc ff ff       	callq  ffffffff80203c40 <IOAPIC_Write>
ffffffff8020401c:	48 83 c4 20          	add    $0x20,%rsp
ffffffff80204020:	5d                   	pop    %rbp
ffffffff80204021:	c3                   	retq   
ffffffff80204022:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80204029:	00 00 00 
ffffffff8020402c:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff80204030 <APIC_Initialize>:
ffffffff80204030:	55                   	push   %rbp
ffffffff80204031:	48 89 e5             	mov    %rsp,%rbp
ffffffff80204034:	48 81 ec c0 00 00 00 	sub    $0xc0,%rsp
ffffffff8020403b:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff80204040:	31 c9                	xor    %ecx,%ecx
ffffffff80204042:	bf 01 00 00 00       	mov    $0x1,%edi
ffffffff80204047:	31 f6                	xor    %esi,%esi
ffffffff80204049:	89 45 a4             	mov    %eax,-0x5c(%rbp)
ffffffff8020404c:	89 4d a0             	mov    %ecx,-0x60(%rbp)
ffffffff8020404f:	e8 6c d0 ff ff       	callq  ffffffff802010c0 <CPUID_RequestInfo>
ffffffff80204054:	b8 03 00 00 00       	mov    $0x3,%eax
ffffffff80204059:	b9 00 02 00 00       	mov    $0x200,%ecx
ffffffff8020405e:	bf 03 00 00 00       	mov    $0x3,%edi
ffffffff80204063:	be 00 02 00 00       	mov    $0x200,%esi
ffffffff80204068:	89 45 9c             	mov    %eax,-0x64(%rbp)
ffffffff8020406b:	89 4d 98             	mov    %ecx,-0x68(%rbp)
ffffffff8020406e:	e8 dd d0 ff ff       	callq  ffffffff80201150 <CPUID_FeatureIsAvailable>
ffffffff80204073:	88 45 fb             	mov    %al,-0x5(%rbp)
ffffffff80204076:	80 7d fb 00          	cmpb   $0x0,-0x5(%rbp)
ffffffff8020407a:	75 0c                	jne    ffffffff80204088 <APIC_Initialize+0x58>
ffffffff8020407c:	c7 45 fc ff ff ff ff 	movl   $0xffffffff,-0x4(%rbp)
ffffffff80204083:	e9 e1 03 00 00       	jmpq   ffffffff80204469 <APIC_Initialize+0x439>
ffffffff80204088:	48 c7 04 25 d0 8c 28 	movq   $0x0,0xffffffff80288cd0
ffffffff8020408f:	80 00 00 00 00 
ffffffff80204094:	e8 37 ef ff ff       	callq  ffffffff80202fd0 <APIC_LockPIC>
ffffffff80204099:	e8 e2 f0 ff ff       	callq  ffffffff80203180 <APIC_LocalInitialize>
ffffffff8020409e:	48 c7 c7 e5 3c 24 80 	mov    $0xffffffff80243ce5,%rdi
ffffffff802040a5:	31 f6                	xor    %esi,%esi
ffffffff802040a7:	88 45 97             	mov    %al,-0x69(%rbp)
ffffffff802040aa:	e8 81 6f 00 00       	callq  ffffffff8020b030 <ACPITables_FindTable>
ffffffff802040af:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff802040b3:	e8 b8 ee ff ff       	callq  ffffffff80202f70 <PIT_Initialize>
ffffffff802040b8:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
ffffffff802040bd:	0f 84 81 03 00 00    	je     ffffffff80204444 <APIC_Initialize+0x414>
ffffffff802040c3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff802040c7:	8b 48 04             	mov    0x4(%rax),%ecx
ffffffff802040ca:	83 e9 08             	sub    $0x8,%ecx
ffffffff802040cd:	89 c9                	mov    %ecx,%ecx
ffffffff802040cf:	89 c8                	mov    %ecx,%eax
ffffffff802040d1:	48 83 e8 24          	sub    $0x24,%rax
ffffffff802040d5:	89 c1                	mov    %eax,%ecx
ffffffff802040d7:	89 4d ec             	mov    %ecx,-0x14(%rbp)
ffffffff802040da:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%rbp)
ffffffff802040e1:	83 7d e8 03          	cmpl   $0x3,-0x18(%rbp)
ffffffff802040e5:	0f 8d 51 03 00 00    	jge    ffffffff8020443c <APIC_Initialize+0x40c>
ffffffff802040eb:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%rbp)
ffffffff802040f2:	8b 45 e4             	mov    -0x1c(%rbp),%eax
ffffffff802040f5:	3b 45 ec             	cmp    -0x14(%rbp),%eax
ffffffff802040f8:	0f 83 2e 03 00 00    	jae    ffffffff8020442c <APIC_Initialize+0x3fc>
ffffffff802040fe:	8b 45 e4             	mov    -0x1c(%rbp),%eax
ffffffff80204101:	89 c1                	mov    %eax,%ecx
ffffffff80204103:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff80204107:	48 8d 74 0a 2c       	lea    0x2c(%rdx,%rcx,1),%rsi
ffffffff8020410c:	48 89 75 d8          	mov    %rsi,-0x28(%rbp)
ffffffff80204110:	0f b6 44 0a 2c       	movzbl 0x2c(%rdx,%rcx,1),%eax
ffffffff80204115:	89 c1                	mov    %eax,%ecx
ffffffff80204117:	48 89 ca             	mov    %rcx,%rdx
ffffffff8020411a:	48 83 ea 03          	sub    $0x3,%rdx
ffffffff8020411e:	48 89 4d 88          	mov    %rcx,-0x78(%rbp)
ffffffff80204122:	48 89 55 80          	mov    %rdx,-0x80(%rbp)
ffffffff80204126:	0f 87 d7 02 00 00    	ja     ffffffff80204403 <APIC_Initialize+0x3d3>
ffffffff8020412c:	48 8b 45 88          	mov    -0x78(%rbp),%rax
ffffffff80204130:	48 8b 0c c5 78 f0 20 	mov    -0x7fdf0f88(,%rax,8),%rcx
ffffffff80204137:	80 
ffffffff80204138:	ff e1                	jmpq   *%rcx
ffffffff8020413a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8020413e:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
ffffffff80204142:	83 7d e8 00          	cmpl   $0x0,-0x18(%rbp)
ffffffff80204146:	75 4a                	jne    ffffffff80204192 <APIC_Initialize+0x162>
ffffffff80204148:	b8 10 00 00 00       	mov    $0x10,%eax
ffffffff8020414d:	89 c7                	mov    %eax,%edi
ffffffff8020414f:	e8 ac 69 00 00       	callq  ffffffff8020ab00 <bootstrap_malloc>
ffffffff80204154:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
ffffffff80204158:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
ffffffff8020415c:	0f b6 4f 03          	movzbl 0x3(%rdi),%ecx
ffffffff80204160:	89 08                	mov    %ecx,(%rax)
ffffffff80204162:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff80204166:	0f b6 48 02          	movzbl 0x2(%rax),%ecx
ffffffff8020416a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8020416e:	89 48 04             	mov    %ecx,0x4(%rax)
ffffffff80204171:	48 8b 04 25 d0 8c 28 	mov    0xffffffff80288cd0,%rax
ffffffff80204178:	80 
ffffffff80204179:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
ffffffff8020417d:	48 89 47 08          	mov    %rax,0x8(%rdi)
ffffffff80204181:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80204185:	48 89 04 25 d0 8c 28 	mov    %rax,0xffffffff80288cd0
ffffffff8020418c:	80 
ffffffff8020418d:	e9 97 00 00 00       	jmpq   ffffffff80204229 <APIC_Initialize+0x1f9>
ffffffff80204192:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff80204196:	0f b6 48 03          	movzbl 0x3(%rax),%ecx
ffffffff8020419a:	89 8d 7c ff ff ff    	mov    %ecx,-0x84(%rbp)
ffffffff802041a0:	e8 eb f6 ff ff       	callq  ffffffff80203890 <APIC_GetID>
ffffffff802041a5:	0f b6 c8             	movzbl %al,%ecx
ffffffff802041a8:	8b 95 7c ff ff ff    	mov    -0x84(%rbp),%edx
ffffffff802041ae:	39 ca                	cmp    %ecx,%edx
ffffffff802041b0:	74 75                	je     ffffffff80204227 <APIC_Initialize+0x1f7>
ffffffff802041b2:	83 7d e8 02          	cmpl   $0x2,-0x18(%rbp)
ffffffff802041b6:	75 6f                	jne    ffffffff80204227 <APIC_Initialize+0x1f7>
ffffffff802041b8:	31 c0                	xor    %eax,%eax
ffffffff802041ba:	b9 05 00 00 00       	mov    $0x5,%ecx
ffffffff802041bf:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
ffffffff802041c3:	0f b6 7a 03          	movzbl 0x3(%rdx),%edi
ffffffff802041c7:	31 f6                	xor    %esi,%esi
ffffffff802041c9:	ba 05 00 00 00       	mov    $0x5,%edx
ffffffff802041ce:	89 85 78 ff ff ff    	mov    %eax,-0x88(%rbp)
ffffffff802041d4:	89 8d 74 ff ff ff    	mov    %ecx,-0x8c(%rbp)
ffffffff802041da:	e8 71 f7 ff ff       	callq  ffffffff80203950 <APIC_SendIPI>
ffffffff802041df:	b8 0a 00 00 00       	mov    $0xa,%eax
ffffffff802041e4:	bf 0a 00 00 00       	mov    $0xa,%edi
ffffffff802041e9:	89 85 70 ff ff ff    	mov    %eax,-0x90(%rbp)
ffffffff802041ef:	e8 ec eb ff ff       	callq  ffffffff80202de0 <PIT_Sleep>
ffffffff802041f4:	b8 0f 00 00 00       	mov    $0xf,%eax
ffffffff802041f9:	b9 06 00 00 00       	mov    $0x6,%ecx
ffffffff802041fe:	4c 8b 45 d0          	mov    -0x30(%rbp),%r8
ffffffff80204202:	41 0f b6 78 03       	movzbl 0x3(%r8),%edi
ffffffff80204207:	be 0f 00 00 00       	mov    $0xf,%esi
ffffffff8020420c:	ba 06 00 00 00       	mov    $0x6,%edx
ffffffff80204211:	89 85 6c ff ff ff    	mov    %eax,-0x94(%rbp)
ffffffff80204217:	89 8d 68 ff ff ff    	mov    %ecx,-0x98(%rbp)
ffffffff8020421d:	e8 2e f7 ff ff       	callq  ffffffff80203950 <APIC_SendIPI>
ffffffff80204222:	e8 b9 2f 00 00       	callq  ffffffff802071e0 <SMP_WaitForCoreCountIncrement>
ffffffff80204227:	eb 00                	jmp    ffffffff80204229 <APIC_Initialize+0x1f9>
ffffffff80204229:	e9 d5 01 00 00       	jmpq   ffffffff80204403 <APIC_Initialize+0x3d3>
ffffffff8020422e:	83 7d e8 00          	cmpl   $0x0,-0x18(%rbp)
ffffffff80204232:	74 05                	je     ffffffff80204239 <APIC_Initialize+0x209>
ffffffff80204234:	e9 ca 01 00 00       	jmpq   ffffffff80204403 <APIC_Initialize+0x3d3>
ffffffff80204239:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff8020423e:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
ffffffff80204242:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
ffffffff80204246:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
ffffffff8020424a:	8b 51 04             	mov    0x4(%rcx),%edx
ffffffff8020424d:	89 d6                	mov    %edx,%esi
ffffffff8020424f:	bf 01 00 00 00       	mov    $0x1,%edi
ffffffff80204254:	89 85 64 ff ff ff    	mov    %eax,-0x9c(%rbp)
ffffffff8020425a:	e8 d1 da ff ff       	callq  ffffffff80201d30 <GetVirtualAddress>
ffffffff8020425f:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
ffffffff80204263:	8b 71 08             	mov    0x8(%rcx),%esi
ffffffff80204266:	48 89 c7             	mov    %rax,%rdi
ffffffff80204269:	e8 d2 f8 ff ff       	callq  ffffffff80203b40 <IOAPIC_Initialize>
ffffffff8020426e:	c7 45 bc 00 00 00 00 	movl   $0x0,-0x44(%rbp)
ffffffff80204275:	88 85 63 ff ff ff    	mov    %al,-0x9d(%rbp)
ffffffff8020427b:	83 7d bc 10          	cmpl   $0x10,-0x44(%rbp)
ffffffff8020427f:	7d 5a                	jge    ffffffff802042db <APIC_Initialize+0x2ab>
ffffffff80204281:	8b 45 bc             	mov    -0x44(%rbp),%eax
ffffffff80204284:	88 c1                	mov    %al,%cl
ffffffff80204286:	8b 45 bc             	mov    -0x44(%rbp),%eax
ffffffff80204289:	83 c0 20             	add    $0x20,%eax
ffffffff8020428c:	88 c2                	mov    %al,%dl
ffffffff8020428e:	88 8d 62 ff ff ff    	mov    %cl,-0x9e(%rbp)
ffffffff80204294:	88 95 61 ff ff ff    	mov    %dl,-0x9f(%rbp)
ffffffff8020429a:	e8 f1 f5 ff ff       	callq  ffffffff80203890 <APIC_GetID>
ffffffff8020429f:	31 f6                	xor    %esi,%esi
ffffffff802042a1:	0f b6 f8             	movzbl %al,%edi
ffffffff802042a4:	89 fa                	mov    %edi,%edx
ffffffff802042a6:	8a 85 62 ff ff ff    	mov    -0x9e(%rbp),%al
ffffffff802042ac:	0f b6 f8             	movzbl %al,%edi
ffffffff802042af:	8a 8d 61 ff ff ff    	mov    -0x9f(%rbp),%cl
ffffffff802042b5:	44 0f b6 c1          	movzbl %cl,%r8d
ffffffff802042b9:	45 31 c9             	xor    %r9d,%r9d
ffffffff802042bc:	89 b5 5c ff ff ff    	mov    %esi,-0xa4(%rbp)
ffffffff802042c2:	44 89 c6             	mov    %r8d,%esi
ffffffff802042c5:	44 89 c9             	mov    %r9d,%ecx
ffffffff802042c8:	45 89 c8             	mov    %r9d,%r8d
ffffffff802042cb:	e8 b0 fa ff ff       	callq  ffffffff80203d80 <IOAPIC_MapIRQ>
ffffffff802042d0:	8b 45 bc             	mov    -0x44(%rbp),%eax
ffffffff802042d3:	83 c0 01             	add    $0x1,%eax
ffffffff802042d6:	89 45 bc             	mov    %eax,-0x44(%rbp)
ffffffff802042d9:	eb a0                	jmp    ffffffff8020427b <APIC_Initialize+0x24b>
ffffffff802042db:	e9 23 01 00 00       	jmpq   ffffffff80204403 <APIC_Initialize+0x3d3>
ffffffff802042e0:	83 7d e8 01          	cmpl   $0x1,-0x18(%rbp)
ffffffff802042e4:	74 05                	je     ffffffff802042eb <APIC_Initialize+0x2bb>
ffffffff802042e6:	e9 18 01 00 00       	jmpq   ffffffff80204403 <APIC_Initialize+0x3d3>
ffffffff802042eb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff802042ef:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
ffffffff802042f3:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
ffffffff802042f7:	0f b7 48 08          	movzwl 0x8(%rax),%ecx
ffffffff802042fb:	83 e1 03             	and    $0x3,%ecx
ffffffff802042fe:	89 4d ac             	mov    %ecx,-0x54(%rbp)
ffffffff80204301:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
ffffffff80204305:	0f b7 48 08          	movzwl 0x8(%rax),%ecx
ffffffff80204309:	c1 f9 02             	sar    $0x2,%ecx
ffffffff8020430c:	83 e1 03             	and    $0x3,%ecx
ffffffff8020430f:	89 4d a8             	mov    %ecx,-0x58(%rbp)
ffffffff80204312:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
ffffffff80204316:	0f b6 48 03          	movzbl 0x3(%rax),%ecx
ffffffff8020431a:	83 f9 00             	cmp    $0x0,%ecx
ffffffff8020431d:	75 74                	jne    ffffffff80204393 <APIC_Initialize+0x363>
ffffffff8020431f:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
ffffffff80204323:	8b 48 04             	mov    0x4(%rax),%ecx
ffffffff80204326:	88 ca                	mov    %cl,%dl
ffffffff80204328:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
ffffffff8020432c:	0f b6 48 03          	movzbl 0x3(%rax),%ecx
ffffffff80204330:	83 c1 20             	add    $0x20,%ecx
ffffffff80204333:	40 88 ce             	mov    %cl,%sil
ffffffff80204336:	88 95 5b ff ff ff    	mov    %dl,-0xa5(%rbp)
ffffffff8020433c:	40 88 b5 5a ff ff ff 	mov    %sil,-0xa6(%rbp)
ffffffff80204343:	e8 48 f5 ff ff       	callq  ffffffff80203890 <APIC_GetID>
ffffffff80204348:	31 c9                	xor    %ecx,%ecx
ffffffff8020434a:	0f b6 f8             	movzbl %al,%edi
ffffffff8020434d:	89 fa                	mov    %edi,%edx
ffffffff8020434f:	8b 7d a8             	mov    -0x58(%rbp),%edi
ffffffff80204352:	d1 ff                	sar    %edi
ffffffff80204354:	40 88 f8             	mov    %dil,%al
ffffffff80204357:	8b 7d ac             	mov    -0x54(%rbp),%edi
ffffffff8020435a:	d1 ff                	sar    %edi
ffffffff8020435c:	40 88 fe             	mov    %dil,%sil
ffffffff8020435f:	44 8a 85 5b ff ff ff 	mov    -0xa5(%rbp),%r8b
ffffffff80204366:	41 0f b6 f8          	movzbl %r8b,%edi
ffffffff8020436a:	44 8a 8d 5a ff ff ff 	mov    -0xa6(%rbp),%r9b
ffffffff80204371:	45 0f b6 d1          	movzbl %r9b,%r10d
ffffffff80204375:	44 0f b6 d8          	movzbl %al,%r11d
ffffffff80204379:	44 0f b6 c6          	movzbl %sil,%r8d
ffffffff8020437d:	45 31 c9             	xor    %r9d,%r9d
ffffffff80204380:	44 89 d6             	mov    %r10d,%esi
ffffffff80204383:	89 8d 54 ff ff ff    	mov    %ecx,-0xac(%rbp)
ffffffff80204389:	44 89 d9             	mov    %r11d,%ecx
ffffffff8020438c:	e8 ef f9 ff ff       	callq  ffffffff80203d80 <IOAPIC_MapIRQ>
ffffffff80204391:	eb 6c                	jmp    ffffffff802043ff <APIC_Initialize+0x3cf>
ffffffff80204393:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
ffffffff80204397:	8b 48 04             	mov    0x4(%rax),%ecx
ffffffff8020439a:	88 ca                	mov    %cl,%dl
ffffffff8020439c:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
ffffffff802043a0:	40 8a 70 03          	mov    0x3(%rax),%sil
ffffffff802043a4:	88 95 53 ff ff ff    	mov    %dl,-0xad(%rbp)
ffffffff802043aa:	40 88 b5 52 ff ff ff 	mov    %sil,-0xae(%rbp)
ffffffff802043b1:	e8 da f4 ff ff       	callq  ffffffff80203890 <APIC_GetID>
ffffffff802043b6:	31 c9                	xor    %ecx,%ecx
ffffffff802043b8:	0f b6 f8             	movzbl %al,%edi
ffffffff802043bb:	89 fa                	mov    %edi,%edx
ffffffff802043bd:	8b 7d a8             	mov    -0x58(%rbp),%edi
ffffffff802043c0:	d1 ff                	sar    %edi
ffffffff802043c2:	40 88 f8             	mov    %dil,%al
ffffffff802043c5:	8b 7d ac             	mov    -0x54(%rbp),%edi
ffffffff802043c8:	d1 ff                	sar    %edi
ffffffff802043ca:	40 88 fe             	mov    %dil,%sil
ffffffff802043cd:	44 8a 85 53 ff ff ff 	mov    -0xad(%rbp),%r8b
ffffffff802043d4:	41 0f b6 f8          	movzbl %r8b,%edi
ffffffff802043d8:	44 8a 8d 52 ff ff ff 	mov    -0xae(%rbp),%r9b
ffffffff802043df:	45 0f b6 d1          	movzbl %r9b,%r10d
ffffffff802043e3:	44 0f b6 d8          	movzbl %al,%r11d
ffffffff802043e7:	44 0f b6 c6          	movzbl %sil,%r8d
ffffffff802043eb:	45 31 c9             	xor    %r9d,%r9d
ffffffff802043ee:	44 89 d6             	mov    %r10d,%esi
ffffffff802043f1:	89 8d 4c ff ff ff    	mov    %ecx,-0xb4(%rbp)
ffffffff802043f7:	44 89 d9             	mov    %r11d,%ecx
ffffffff802043fa:	e8 81 f9 ff ff       	callq  ffffffff80203d80 <IOAPIC_MapIRQ>
ffffffff802043ff:	eb 02                	jmp    ffffffff80204403 <APIC_Initialize+0x3d3>
ffffffff80204401:	eb 00                	jmp    ffffffff80204403 <APIC_Initialize+0x3d3>
ffffffff80204403:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80204407:	0f b6 48 01          	movzbl 0x1(%rax),%ecx
ffffffff8020440b:	03 4d e4             	add    -0x1c(%rbp),%ecx
ffffffff8020440e:	89 4d e4             	mov    %ecx,-0x1c(%rbp)
ffffffff80204411:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80204415:	0f b6 48 01          	movzbl 0x1(%rax),%ecx
ffffffff80204419:	83 f9 00             	cmp    $0x0,%ecx
ffffffff8020441c:	75 09                	jne    ffffffff80204427 <APIC_Initialize+0x3f7>
ffffffff8020441e:	8b 45 e4             	mov    -0x1c(%rbp),%eax
ffffffff80204421:	83 c0 08             	add    $0x8,%eax
ffffffff80204424:	89 45 e4             	mov    %eax,-0x1c(%rbp)
ffffffff80204427:	e9 c6 fc ff ff       	jmpq   ffffffff802040f2 <APIC_Initialize+0xc2>
ffffffff8020442c:	eb 00                	jmp    ffffffff8020442e <APIC_Initialize+0x3fe>
ffffffff8020442e:	8b 45 e8             	mov    -0x18(%rbp),%eax
ffffffff80204431:	83 c0 01             	add    $0x1,%eax
ffffffff80204434:	89 45 e8             	mov    %eax,-0x18(%rbp)
ffffffff80204437:	e9 a5 fc ff ff       	jmpq   ffffffff802040e1 <APIC_Initialize+0xb1>
ffffffff8020443c:	fb                   	sti    
ffffffff8020443d:	e8 5e ef ff ff       	callq  ffffffff802033a0 <APIC_CallibrateTimer>
ffffffff80204442:	eb 1e                	jmp    ffffffff80204462 <APIC_Initialize+0x432>
ffffffff80204444:	b8 ff 00 00 00       	mov    $0xff,%eax
ffffffff80204449:	bf ff 00 00 00       	mov    $0xff,%edi
ffffffff8020444e:	89 85 48 ff ff ff    	mov    %eax,-0xb8(%rbp)
ffffffff80204454:	e8 67 c0 ff ff       	callq  ffffffff802004c0 <bootstrap_kernel_panic>
ffffffff80204459:	c7 45 fc ff ff ff ff 	movl   $0xffffffff,-0x4(%rbp)
ffffffff80204460:	eb 07                	jmp    ffffffff80204469 <APIC_Initialize+0x439>
ffffffff80204462:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
ffffffff80204469:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff8020446c:	48 81 c4 c0 00 00 00 	add    $0xc0,%rsp
ffffffff80204473:	5d                   	pop    %rbp
ffffffff80204474:	c3                   	retq   
ffffffff80204475:	0f 1f 00             	nopl   (%rax)
ffffffff80204478:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff8020447f:	00 

ffffffff80204480 <MemMan_Initialize>:
ffffffff80204480:	55                   	push   %rbp
ffffffff80204481:	48 89 e5             	mov    %rsp,%rbp
ffffffff80204484:	48 83 ec 50          	sub    $0x50,%rsp
ffffffff80204488:	e8 43 6a 00 00       	callq  ffffffff8020aed0 <GetBootInfo>
ffffffff8020448d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff80204491:	48 8b 00             	mov    (%rax),%rax
ffffffff80204494:	48 89 04 25 d8 8c 28 	mov    %rax,0xffffffff80288cd8
ffffffff8020449b:	80 
ffffffff8020449c:	89 c1                	mov    %eax,%ecx
ffffffff8020449e:	81 e1 ff 0f 00 00    	and    $0xfff,%ecx
ffffffff802044a4:	89 ca                	mov    %ecx,%edx
ffffffff802044a6:	48 29 d0             	sub    %rdx,%rax
ffffffff802044a9:	48 89 04 25 d8 8c 28 	mov    %rax,0xffffffff80288cd8
ffffffff802044b0:	80 
ffffffff802044b1:	48 c1 e8 0c          	shr    $0xc,%rax
ffffffff802044b5:	48 89 04 25 e0 8c 28 	mov    %rax,0xffffffff80288ce0
ffffffff802044bc:	80 
ffffffff802044bd:	48 89 04 25 e8 8c 28 	mov    %rax,0xffffffff80288ce8
ffffffff802044c4:	80 
ffffffff802044c5:	48 8b 04 25 e0 8c 28 	mov    0xffffffff80288ce0,%rax
ffffffff802044cc:	80 
ffffffff802044cd:	48 3d 00 00 08 00    	cmp    $0x80000,%rax
ffffffff802044d3:	77 19                	ja     ffffffff802044ee <MemMan_Initialize+0x6e>
ffffffff802044d5:	48 8b 04 25 e0 8c 28 	mov    0xffffffff80288ce0,%rax
ffffffff802044dc:	80 
ffffffff802044dd:	48 c1 e8 06          	shr    $0x6,%rax
ffffffff802044e1:	48 ff c8             	dec    %rax
ffffffff802044e4:	48 89 04 25 f0 8c 28 	mov    %rax,0xffffffff80288cf0
ffffffff802044eb:	80 
ffffffff802044ec:	eb 0c                	jmp    ffffffff802044fa <MemMan_Initialize+0x7a>
ffffffff802044ee:	48 c7 04 25 f0 8c 28 	movq   $0x0,0xffffffff80288cf0
ffffffff802044f5:	80 00 00 00 00 
ffffffff802044fa:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
ffffffff802044ff:	48 8b 0c 25 d8 8c 28 	mov    0xffffffff80288cd8,%rcx
ffffffff80204506:	80 
ffffffff80204507:	48 c1 e9 11          	shr    $0x11,%rcx
ffffffff8020450b:	89 ca                	mov    %ecx,%edx
ffffffff8020450d:	89 14 25 f8 8c 28 80 	mov    %edx,0xffffffff80288cf8
ffffffff80204514:	8b 14 25 f8 8c 28 80 	mov    0xffffffff80288cf8,%edx
ffffffff8020451b:	89 d1                	mov    %edx,%ecx
ffffffff8020451d:	48 c1 e1 02          	shl    $0x2,%rcx
ffffffff80204521:	48 89 cf             	mov    %rcx,%rdi
ffffffff80204524:	89 45 dc             	mov    %eax,-0x24(%rbp)
ffffffff80204527:	e8 d4 65 00 00       	callq  ffffffff8020ab00 <bootstrap_malloc>
ffffffff8020452c:	48 89 04 25 00 8d 28 	mov    %rax,0xffffffff80288d00
ffffffff80204533:	80 
ffffffff80204534:	8b 14 25 f8 8c 28 80 	mov    0xffffffff80288cf8,%edx
ffffffff8020453b:	89 d2                	mov    %edx,%edx
ffffffff8020453d:	89 d1                	mov    %edx,%ecx
ffffffff8020453f:	48 c1 e1 02          	shl    $0x2,%rcx
ffffffff80204543:	be ff ff ff ff       	mov    $0xffffffff,%esi
ffffffff80204548:	48 89 c7             	mov    %rax,%rdi
ffffffff8020454b:	48 89 ca             	mov    %rcx,%rdx
ffffffff8020454e:	e8 0d 42 00 00       	callq  ffffffff80208760 <memset>
ffffffff80204553:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
ffffffff8020455a:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
ffffffff8020455e:	b8 18 00 00 00       	mov    $0x18,%eax
ffffffff80204563:	89 c1                	mov    %eax,%ecx
ffffffff80204565:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff80204568:	89 c2                	mov    %eax,%edx
ffffffff8020456a:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
ffffffff8020456e:	8b 46 1c             	mov    0x1c(%rsi),%eax
ffffffff80204571:	31 ff                	xor    %edi,%edi
ffffffff80204573:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
ffffffff80204577:	89 fa                	mov    %edi,%edx
ffffffff80204579:	48 f7 f1             	div    %rcx
ffffffff8020457c:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
ffffffff80204580:	48 39 c1             	cmp    %rax,%rcx
ffffffff80204583:	0f 83 9d 00 00 00    	jae    ffffffff80204626 <MemMan_Initialize+0x1a6>
ffffffff80204589:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff8020458c:	89 c1                	mov    %eax,%ecx
ffffffff8020458e:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
ffffffff80204592:	48 6b c9 18          	imul   $0x18,%rcx,%rcx
ffffffff80204596:	48 03 4a 40          	add    0x40(%rdx),%rcx
ffffffff8020459a:	48 8b 09             	mov    (%rcx),%rcx
ffffffff8020459d:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
ffffffff802045a1:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
ffffffff802045a5:	48 c1 e9 0c          	shr    $0xc,%rcx
ffffffff802045a9:	48 c1 e1 0c          	shl    $0xc,%rcx
ffffffff802045ad:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
ffffffff802045b1:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff802045b4:	89 c1                	mov    %eax,%ecx
ffffffff802045b6:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
ffffffff802045ba:	48 6b c9 18          	imul   $0x18,%rcx,%rcx
ffffffff802045be:	48 03 4a 40          	add    0x40(%rdx),%rcx
ffffffff802045c2:	48 8b 49 08          	mov    0x8(%rcx),%rcx
ffffffff802045c6:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
ffffffff802045ca:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
ffffffff802045ce:	48 81 e1 ff 0f 00 00 	and    $0xfff,%rcx
ffffffff802045d5:	48 83 f9 00          	cmp    $0x0,%rcx
ffffffff802045d9:	74 14                	je     ffffffff802045ef <MemMan_Initialize+0x16f>
ffffffff802045db:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff802045df:	48 c1 e8 0c          	shr    $0xc,%rax
ffffffff802045e3:	48 83 c0 01          	add    $0x1,%rax
ffffffff802045e7:	48 c1 e0 0c          	shl    $0xc,%rax
ffffffff802045eb:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
ffffffff802045ef:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff802045f2:	89 c1                	mov    %eax,%ecx
ffffffff802045f4:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
ffffffff802045f8:	48 6b c9 18          	imul   $0x18,%rcx,%rcx
ffffffff802045fc:	48 03 4a 40          	add    0x40(%rdx),%rcx
ffffffff80204600:	0f b6 41 10          	movzbl 0x10(%rcx),%eax
ffffffff80204604:	83 f8 01             	cmp    $0x1,%eax
ffffffff80204607:	75 0d                	jne    ffffffff80204616 <MemMan_Initialize+0x196>
ffffffff80204609:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
ffffffff8020460d:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
ffffffff80204611:	e8 aa 00 00 00       	callq  ffffffff802046c0 <MemMan_MarkFree>
ffffffff80204616:	eb 00                	jmp    ffffffff80204618 <MemMan_Initialize+0x198>
ffffffff80204618:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff8020461b:	83 c0 01             	add    $0x1,%eax
ffffffff8020461e:	89 45 f4             	mov    %eax,-0xc(%rbp)
ffffffff80204621:	e9 38 ff ff ff       	jmpq   ffffffff8020455e <MemMan_Initialize+0xde>
ffffffff80204626:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8020462a:	48 8b 78 48          	mov    0x48(%rax),%rdi
ffffffff8020462e:	e8 2d d7 ff ff       	callq  ffffffff80201d60 <GetPhysicalAddress>
ffffffff80204633:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
ffffffff80204637:	8b 4f 50             	mov    0x50(%rdi),%ecx
ffffffff8020463a:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
ffffffff8020463e:	0f af 4f 58          	imul   0x58(%rdi),%ecx
ffffffff80204642:	89 c9                	mov    %ecx,%ecx
ffffffff80204644:	89 ce                	mov    %ecx,%esi
ffffffff80204646:	48 89 c7             	mov    %rax,%rdi
ffffffff80204649:	e8 12 01 00 00       	callq  ffffffff80204760 <MemMan_MarkUsed>
ffffffff8020464e:	48 c7 c0 00 00 20 00 	mov    $0x200000,%rax
ffffffff80204655:	48 c7 c6 e0 ce e8 00 	mov    $0xe8cee0,%rsi
ffffffff8020465c:	48 29 c6             	sub    %rax,%rsi
ffffffff8020465f:	48 81 c6 00 10 00 00 	add    $0x1000,%rsi
ffffffff80204666:	48 89 c7             	mov    %rax,%rdi
ffffffff80204669:	e8 f2 00 00 00       	callq  ffffffff80204760 <MemMan_MarkUsed>
ffffffff8020466e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80204672:	48 8b 78 30          	mov    0x30(%rax),%rdi
ffffffff80204676:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8020467a:	48 8b 70 38          	mov    0x38(%rax),%rsi
ffffffff8020467e:	e8 dd 00 00 00       	callq  ffffffff80204760 <MemMan_MarkUsed>
ffffffff80204683:	31 c9                	xor    %ecx,%ecx
ffffffff80204685:	89 c8                	mov    %ecx,%eax
ffffffff80204687:	b9 00 00 20 00       	mov    $0x200000,%ecx
ffffffff8020468c:	89 ce                	mov    %ecx,%esi
ffffffff8020468e:	31 c9                	xor    %ecx,%ecx
ffffffff80204690:	89 cf                	mov    %ecx,%edi
ffffffff80204692:	b9 00 00 20 00       	mov    $0x200000,%ecx
ffffffff80204697:	89 ca                	mov    %ecx,%edx
ffffffff80204699:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
ffffffff8020469d:	48 89 d6             	mov    %rdx,%rsi
ffffffff802046a0:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
ffffffff802046a4:	e8 b7 00 00 00       	callq  ffffffff80204760 <MemMan_MarkUsed>
ffffffff802046a9:	31 c0                	xor    %eax,%eax
ffffffff802046ab:	48 83 c4 50          	add    $0x50,%rsp
ffffffff802046af:	5d                   	pop    %rbp
ffffffff802046b0:	c3                   	retq   
ffffffff802046b1:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff802046b6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff802046bd:	00 00 00 

ffffffff802046c0 <MemMan_MarkFree>:
ffffffff802046c0:	55                   	push   %rbp
ffffffff802046c1:	48 89 e5             	mov    %rsp,%rbp
ffffffff802046c4:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff802046c8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff802046cc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff802046d0:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
ffffffff802046d5:	75 02                	jne    ffffffff802046d9 <MemMan_MarkFree+0x19>
ffffffff802046d7:	eb 73                	jmp    ffffffff8020474c <MemMan_MarkFree+0x8c>
ffffffff802046d9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff802046dd:	48 25 ff 0f 00 00    	and    $0xfff,%rax
ffffffff802046e3:	48 83 f8 00          	cmp    $0x0,%rax
ffffffff802046e7:	74 14                	je     ffffffff802046fd <MemMan_MarkFree+0x3d>
ffffffff802046e9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff802046ed:	48 c1 e8 0c          	shr    $0xc,%rax
ffffffff802046f1:	48 83 c0 01          	add    $0x1,%rax
ffffffff802046f5:	48 c1 e0 0c          	shl    $0xc,%rax
ffffffff802046f9:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff802046fd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80204701:	48 c1 e8 0c          	shr    $0xc,%rax
ffffffff80204705:	48 c1 e0 0c          	shl    $0xc,%rax
ffffffff80204709:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff8020470d:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
ffffffff80204714:	00 
ffffffff80204715:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80204719:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
ffffffff8020471d:	48 c1 e9 0c          	shr    $0xc,%rcx
ffffffff80204721:	48 39 c8             	cmp    %rcx,%rax
ffffffff80204724:	73 26                	jae    ffffffff8020474c <MemMan_MarkFree+0x8c>
ffffffff80204726:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
ffffffff8020472a:	e8 21 01 00 00       	callq  ffffffff80204850 <MemMan_SetPageFree>
ffffffff8020472f:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
ffffffff80204733:	48 81 c7 00 10 00 00 	add    $0x1000,%rdi
ffffffff8020473a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8020473e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80204742:	48 83 c0 01          	add    $0x1,%rax
ffffffff80204746:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff8020474a:	eb c9                	jmp    ffffffff80204715 <MemMan_MarkFree+0x55>
ffffffff8020474c:	48 83 c4 20          	add    $0x20,%rsp
ffffffff80204750:	5d                   	pop    %rbp
ffffffff80204751:	c3                   	retq   
ffffffff80204752:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff80204756:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8020475d:	00 00 00 

ffffffff80204760 <MemMan_MarkUsed>:
ffffffff80204760:	55                   	push   %rbp
ffffffff80204761:	48 89 e5             	mov    %rsp,%rbp
ffffffff80204764:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff80204768:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8020476c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff80204770:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
ffffffff80204775:	75 02                	jne    ffffffff80204779 <MemMan_MarkUsed+0x19>
ffffffff80204777:	eb 73                	jmp    ffffffff802047ec <MemMan_MarkUsed+0x8c>
ffffffff80204779:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8020477d:	48 25 ff 0f 00 00    	and    $0xfff,%rax
ffffffff80204783:	48 83 f8 00          	cmp    $0x0,%rax
ffffffff80204787:	74 14                	je     ffffffff8020479d <MemMan_MarkUsed+0x3d>
ffffffff80204789:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8020478d:	48 c1 e8 0c          	shr    $0xc,%rax
ffffffff80204791:	48 83 c0 01          	add    $0x1,%rax
ffffffff80204795:	48 c1 e0 0c          	shl    $0xc,%rax
ffffffff80204799:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff8020479d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff802047a1:	48 c1 e8 0c          	shr    $0xc,%rax
ffffffff802047a5:	48 c1 e0 0c          	shl    $0xc,%rax
ffffffff802047a9:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff802047ad:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
ffffffff802047b4:	00 
ffffffff802047b5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff802047b9:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
ffffffff802047bd:	48 c1 e9 0c          	shr    $0xc,%rcx
ffffffff802047c1:	48 39 c8             	cmp    %rcx,%rax
ffffffff802047c4:	73 26                	jae    ffffffff802047ec <MemMan_MarkUsed+0x8c>
ffffffff802047c6:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
ffffffff802047ca:	e8 31 00 00 00       	callq  ffffffff80204800 <MemMan_SetPageUsed>
ffffffff802047cf:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
ffffffff802047d3:	48 81 c7 00 10 00 00 	add    $0x1000,%rdi
ffffffff802047da:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff802047de:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff802047e2:	48 83 c0 01          	add    $0x1,%rax
ffffffff802047e6:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff802047ea:	eb c9                	jmp    ffffffff802047b5 <MemMan_MarkUsed+0x55>
ffffffff802047ec:	48 83 c4 20          	add    $0x20,%rsp
ffffffff802047f0:	5d                   	pop    %rbp
ffffffff802047f1:	c3                   	retq   
ffffffff802047f2:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff802047f6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff802047fd:	00 00 00 

ffffffff80204800 <MemMan_SetPageUsed>:
ffffffff80204800:	55                   	push   %rbp
ffffffff80204801:	48 89 e5             	mov    %rsp,%rbp
ffffffff80204804:	50                   	push   %rax
ffffffff80204805:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff80204809:	48 89 f8             	mov    %rdi,%rax
ffffffff8020480c:	48 c1 e8 0c          	shr    $0xc,%rax
ffffffff80204810:	88 c1                	mov    %al,%cl
ffffffff80204812:	ba 01 00 00 00       	mov    $0x1,%edx
ffffffff80204817:	d3 e2                	shl    %cl,%edx
ffffffff80204819:	48 c1 ef 11          	shr    $0x11,%rdi
ffffffff8020481d:	48 8b 04 25 00 8d 28 	mov    0xffffffff80288d00,%rax
ffffffff80204824:	80 
ffffffff80204825:	8b 34 b8             	mov    (%rax,%rdi,4),%esi
ffffffff80204828:	09 d6                	or     %edx,%esi
ffffffff8020482a:	89 34 b8             	mov    %esi,(%rax,%rdi,4)
ffffffff8020482d:	48 8b 04 25 e8 8c 28 	mov    0xffffffff80288ce8,%rax
ffffffff80204834:	80 
ffffffff80204835:	48 ff c8             	dec    %rax
ffffffff80204838:	48 89 04 25 e8 8c 28 	mov    %rax,0xffffffff80288ce8
ffffffff8020483f:	80 
ffffffff80204840:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80204844:	5d                   	pop    %rbp
ffffffff80204845:	c3                   	retq   
ffffffff80204846:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8020484d:	00 00 00 

ffffffff80204850 <MemMan_SetPageFree>:
ffffffff80204850:	55                   	push   %rbp
ffffffff80204851:	48 89 e5             	mov    %rsp,%rbp
ffffffff80204854:	50                   	push   %rax
ffffffff80204855:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff80204859:	48 89 f8             	mov    %rdi,%rax
ffffffff8020485c:	48 c1 e8 0c          	shr    $0xc,%rax
ffffffff80204860:	88 c1                	mov    %al,%cl
ffffffff80204862:	ba fe ff ff ff       	mov    $0xfffffffe,%edx
ffffffff80204867:	d3 c2                	rol    %cl,%edx
ffffffff80204869:	48 c1 ef 11          	shr    $0x11,%rdi
ffffffff8020486d:	48 8b 04 25 00 8d 28 	mov    0xffffffff80288d00,%rax
ffffffff80204874:	80 
ffffffff80204875:	8b 34 b8             	mov    (%rax,%rdi,4),%esi
ffffffff80204878:	21 d6                	and    %edx,%esi
ffffffff8020487a:	89 34 b8             	mov    %esi,(%rax,%rdi,4)
ffffffff8020487d:	48 8b 04 25 e8 8c 28 	mov    0xffffffff80288ce8,%rax
ffffffff80204884:	80 
ffffffff80204885:	48 ff c0             	inc    %rax
ffffffff80204888:	48 89 04 25 e8 8c 28 	mov    %rax,0xffffffff80288ce8
ffffffff8020488f:	80 
ffffffff80204890:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80204894:	5d                   	pop    %rbp
ffffffff80204895:	c3                   	retq   
ffffffff80204896:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8020489d:	00 00 00 

ffffffff802048a0 <MemMan_Alloc>:
ffffffff802048a0:	55                   	push   %rbp
ffffffff802048a1:	48 89 e5             	mov    %rsp,%rbp
ffffffff802048a4:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff802048a8:	48 8b 04 25 e8 8c 28 	mov    0xffffffff80288ce8,%rax
ffffffff802048af:	80 
ffffffff802048b0:	48 83 f8 00          	cmp    $0x0,%rax
ffffffff802048b4:	75 0d                	jne    ffffffff802048c3 <MemMan_Alloc+0x23>
ffffffff802048b6:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
ffffffff802048bd:	00 
ffffffff802048be:	e9 b3 00 00 00       	jmpq   ffffffff80204976 <MemMan_Alloc+0xd6>
ffffffff802048c3:	eb 00                	jmp    ffffffff802048c5 <MemMan_Alloc+0x25>
ffffffff802048c5:	48 8b 04 25 f0 8c 28 	mov    0xffffffff80288cf0,%rax
ffffffff802048cc:	80 
ffffffff802048cd:	48 8b 0c 25 00 8d 28 	mov    0xffffffff80288d00,%rcx
ffffffff802048d4:	80 
ffffffff802048d5:	83 3c 81 ff          	cmpl   $0xffffffff,(%rcx,%rax,4)
ffffffff802048d9:	75 22                	jne    ffffffff802048fd <MemMan_Alloc+0x5d>
ffffffff802048db:	48 8b 04 25 f0 8c 28 	mov    0xffffffff80288cf0,%rax
ffffffff802048e2:	80 
ffffffff802048e3:	48 ff c0             	inc    %rax
ffffffff802048e6:	48 8b 0c 25 e0 8c 28 	mov    0xffffffff80288ce0,%rcx
ffffffff802048ed:	80 
ffffffff802048ee:	31 d2                	xor    %edx,%edx
ffffffff802048f0:	48 f7 f1             	div    %rcx
ffffffff802048f3:	48 89 14 25 f0 8c 28 	mov    %rdx,0xffffffff80288cf0
ffffffff802048fa:	80 
ffffffff802048fb:	eb c8                	jmp    ffffffff802048c5 <MemMan_Alloc+0x25>
ffffffff802048fd:	48 8b 04 25 f0 8c 28 	mov    0xffffffff80288cf0,%rax
ffffffff80204904:	80 
ffffffff80204905:	48 8b 0c 25 00 8d 28 	mov    0xffffffff80288d00,%rcx
ffffffff8020490c:	80 
ffffffff8020490d:	8b 14 81             	mov    (%rcx,%rax,4),%edx
ffffffff80204910:	83 f2 ff             	xor    $0xffffffff,%edx
ffffffff80204913:	89 55 f4             	mov    %edx,-0xc(%rbp)
ffffffff80204916:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
ffffffff8020491d:	83 7d f0 20          	cmpl   $0x20,-0x10(%rbp)
ffffffff80204921:	7d 4b                	jge    ffffffff8020496e <MemMan_Alloc+0xce>
ffffffff80204923:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff80204926:	8b 4d f0             	mov    -0x10(%rbp),%ecx
ffffffff80204929:	d3 e8                	shr    %cl,%eax
ffffffff8020492b:	83 e0 01             	and    $0x1,%eax
ffffffff8020492e:	83 f8 00             	cmp    $0x0,%eax
ffffffff80204931:	74 2e                	je     ffffffff80204961 <MemMan_Alloc+0xc1>
ffffffff80204933:	48 8b 04 25 f0 8c 28 	mov    0xffffffff80288cf0,%rax
ffffffff8020493a:	80 
ffffffff8020493b:	48 c1 e0 11          	shl    $0x11,%rax
ffffffff8020493f:	48 63 4d f0          	movslq -0x10(%rbp),%rcx
ffffffff80204943:	48 c1 e1 0c          	shl    $0xc,%rcx
ffffffff80204947:	48 01 c8             	add    %rcx,%rax
ffffffff8020494a:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff8020494e:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
ffffffff80204952:	e8 a9 fe ff ff       	callq  ffffffff80204800 <MemMan_SetPageUsed>
ffffffff80204957:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8020495b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff8020495f:	eb 15                	jmp    ffffffff80204976 <MemMan_Alloc+0xd6>
ffffffff80204961:	eb 00                	jmp    ffffffff80204963 <MemMan_Alloc+0xc3>
ffffffff80204963:	8b 45 f0             	mov    -0x10(%rbp),%eax
ffffffff80204966:	83 c0 01             	add    $0x1,%eax
ffffffff80204969:	89 45 f0             	mov    %eax,-0x10(%rbp)
ffffffff8020496c:	eb af                	jmp    ffffffff8020491d <MemMan_Alloc+0x7d>
ffffffff8020496e:	48 c7 45 f8 ff ff ff 	movq   $0xffffffffffffffff,-0x8(%rbp)
ffffffff80204975:	ff 
ffffffff80204976:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8020497a:	48 83 c4 20          	add    $0x20,%rsp
ffffffff8020497e:	5d                   	pop    %rbp
ffffffff8020497f:	c3                   	retq   

ffffffff80204980 <MemMan_Alloc2MiBPage>:
ffffffff80204980:	55                   	push   %rbp
ffffffff80204981:	48 89 e5             	mov    %rsp,%rbp
ffffffff80204984:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff80204988:	b8 00 02 00 00       	mov    $0x200,%eax
ffffffff8020498d:	bf 00 02 00 00       	mov    $0x200,%edi
ffffffff80204992:	89 45 fc             	mov    %eax,-0x4(%rbp)
ffffffff80204995:	e8 06 00 00 00       	callq  ffffffff802049a0 <MemMan_Alloc4KiBPageCont>
ffffffff8020499a:	48 83 c4 10          	add    $0x10,%rsp
ffffffff8020499e:	5d                   	pop    %rbp
ffffffff8020499f:	c3                   	retq   

ffffffff802049a0 <MemMan_Alloc4KiBPageCont>:
ffffffff802049a0:	55                   	push   %rbp
ffffffff802049a1:	48 89 e5             	mov    %rsp,%rbp
ffffffff802049a4:	48 83 ec 30          	sub    $0x30,%rsp
ffffffff802049a8:	89 7d f4             	mov    %edi,-0xc(%rbp)
ffffffff802049ab:	48 8b 04 25 e8 8c 28 	mov    0xffffffff80288ce8,%rax
ffffffff802049b2:	80 
ffffffff802049b3:	48 83 f8 00          	cmp    $0x0,%rax
ffffffff802049b7:	75 0d                	jne    ffffffff802049c6 <MemMan_Alloc4KiBPageCont+0x26>
ffffffff802049b9:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
ffffffff802049c0:	00 
ffffffff802049c1:	e9 ed 00 00 00       	jmpq   ffffffff80204ab3 <MemMan_Alloc4KiBPageCont+0x113>
ffffffff802049c6:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
ffffffff802049cd:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
ffffffff802049d4:	00 
ffffffff802049d5:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%rbp)
ffffffff802049dc:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%rbp)
ffffffff802049e3:	8b 45 e0             	mov    -0x20(%rbp),%eax
ffffffff802049e6:	8b 0c 25 f8 8c 28 80 	mov    0xffffffff80288cf8,%ecx
ffffffff802049ed:	39 c8                	cmp    %ecx,%eax
ffffffff802049ef:	0f 83 90 00 00 00    	jae    ffffffff80204a85 <MemMan_Alloc4KiBPageCont+0xe5>
ffffffff802049f5:	8b 45 e0             	mov    -0x20(%rbp),%eax
ffffffff802049f8:	89 c1                	mov    %eax,%ecx
ffffffff802049fa:	48 8b 14 25 00 8d 28 	mov    0xffffffff80288d00,%rdx
ffffffff80204a01:	80 
ffffffff80204a02:	8b 04 8a             	mov    (%rdx,%rcx,4),%eax
ffffffff80204a05:	83 f0 ff             	xor    $0xffffffff,%eax
ffffffff80204a08:	89 45 dc             	mov    %eax,-0x24(%rbp)
ffffffff80204a0b:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%rbp)
ffffffff80204a12:	83 7d d8 20          	cmpl   $0x20,-0x28(%rbp)
ffffffff80204a16:	7d 5d                	jge    ffffffff80204a75 <MemMan_Alloc4KiBPageCont+0xd5>
ffffffff80204a18:	8b 45 f0             	mov    -0x10(%rbp),%eax
ffffffff80204a1b:	3b 45 f4             	cmp    -0xc(%rbp),%eax
ffffffff80204a1e:	75 02                	jne    ffffffff80204a22 <MemMan_Alloc4KiBPageCont+0x82>
ffffffff80204a20:	eb 53                	jmp    ffffffff80204a75 <MemMan_Alloc4KiBPageCont+0xd5>
ffffffff80204a22:	8b 45 dc             	mov    -0x24(%rbp),%eax
ffffffff80204a25:	8b 4d d8             	mov    -0x28(%rbp),%ecx
ffffffff80204a28:	d3 e8                	shr    %cl,%eax
ffffffff80204a2a:	83 e0 01             	and    $0x1,%eax
ffffffff80204a2d:	83 f8 00             	cmp    $0x0,%eax
ffffffff80204a30:	74 2f                	je     ffffffff80204a61 <MemMan_Alloc4KiBPageCont+0xc1>
ffffffff80204a32:	83 7d f0 00          	cmpl   $0x0,-0x10(%rbp)
ffffffff80204a36:	75 1e                	jne    ffffffff80204a56 <MemMan_Alloc4KiBPageCont+0xb6>
ffffffff80204a38:	8b 45 e0             	mov    -0x20(%rbp),%eax
ffffffff80204a3b:	89 45 e4             	mov    %eax,-0x1c(%rbp)
ffffffff80204a3e:	8b 45 e0             	mov    -0x20(%rbp),%eax
ffffffff80204a41:	89 c1                	mov    %eax,%ecx
ffffffff80204a43:	48 c1 e1 11          	shl    $0x11,%rcx
ffffffff80204a47:	48 63 55 d8          	movslq -0x28(%rbp),%rdx
ffffffff80204a4b:	48 c1 e2 0c          	shl    $0xc,%rdx
ffffffff80204a4f:	48 01 d1             	add    %rdx,%rcx
ffffffff80204a52:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
ffffffff80204a56:	8b 45 f0             	mov    -0x10(%rbp),%eax
ffffffff80204a59:	83 c0 01             	add    $0x1,%eax
ffffffff80204a5c:	89 45 f0             	mov    %eax,-0x10(%rbp)
ffffffff80204a5f:	eb 07                	jmp    ffffffff80204a68 <MemMan_Alloc4KiBPageCont+0xc8>
ffffffff80204a61:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
ffffffff80204a68:	eb 00                	jmp    ffffffff80204a6a <MemMan_Alloc4KiBPageCont+0xca>
ffffffff80204a6a:	8b 45 d8             	mov    -0x28(%rbp),%eax
ffffffff80204a6d:	83 c0 01             	add    $0x1,%eax
ffffffff80204a70:	89 45 d8             	mov    %eax,-0x28(%rbp)
ffffffff80204a73:	eb 9d                	jmp    ffffffff80204a12 <MemMan_Alloc4KiBPageCont+0x72>
ffffffff80204a75:	eb 00                	jmp    ffffffff80204a77 <MemMan_Alloc4KiBPageCont+0xd7>
ffffffff80204a77:	8b 45 e0             	mov    -0x20(%rbp),%eax
ffffffff80204a7a:	83 c0 01             	add    $0x1,%eax
ffffffff80204a7d:	89 45 e0             	mov    %eax,-0x20(%rbp)
ffffffff80204a80:	e9 5e ff ff ff       	jmpq   ffffffff802049e3 <MemMan_Alloc4KiBPageCont+0x43>
ffffffff80204a85:	8b 45 f0             	mov    -0x10(%rbp),%eax
ffffffff80204a88:	3b 45 f4             	cmp    -0xc(%rbp),%eax
ffffffff80204a8b:	74 0a                	je     ffffffff80204a97 <MemMan_Alloc4KiBPageCont+0xf7>
ffffffff80204a8d:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
ffffffff80204a94:	00 
ffffffff80204a95:	eb 1c                	jmp    ffffffff80204ab3 <MemMan_Alloc4KiBPageCont+0x113>
ffffffff80204a97:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
ffffffff80204a9b:	48 63 45 f4          	movslq -0xc(%rbp),%rax
ffffffff80204a9f:	48 c1 e0 0c          	shl    $0xc,%rax
ffffffff80204aa3:	48 89 c6             	mov    %rax,%rsi
ffffffff80204aa6:	e8 b5 fc ff ff       	callq  ffffffff80204760 <MemMan_MarkUsed>
ffffffff80204aab:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80204aaf:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff80204ab3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80204ab7:	48 83 c4 30          	add    $0x30,%rsp
ffffffff80204abb:	5d                   	pop    %rbp
ffffffff80204abc:	c3                   	retq   
ffffffff80204abd:	0f 1f 00             	nopl   (%rax)

ffffffff80204ac0 <MemMan_Alloc2MiBPageCont>:
ffffffff80204ac0:	55                   	push   %rbp
ffffffff80204ac1:	48 89 e5             	mov    %rsp,%rbp
ffffffff80204ac4:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff80204ac8:	89 7d fc             	mov    %edi,-0x4(%rbp)
ffffffff80204acb:	48 63 45 fc          	movslq -0x4(%rbp),%rax
ffffffff80204acf:	48 c1 e0 09          	shl    $0x9,%rax
ffffffff80204ad3:	89 c7                	mov    %eax,%edi
ffffffff80204ad5:	e8 c6 fe ff ff       	callq  ffffffff802049a0 <MemMan_Alloc4KiBPageCont>
ffffffff80204ada:	48 83 c4 10          	add    $0x10,%rsp
ffffffff80204ade:	5d                   	pop    %rbp
ffffffff80204adf:	c3                   	retq   

ffffffff80204ae0 <MemMan_Free>:
ffffffff80204ae0:	55                   	push   %rbp
ffffffff80204ae1:	48 89 e5             	mov    %rsp,%rbp
ffffffff80204ae4:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff80204ae8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff80204aec:	48 81 e7 00 f0 ff ff 	and    $0xfffffffffffff000,%rdi
ffffffff80204af3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff80204af7:	e8 54 fd ff ff       	callq  ffffffff80204850 <MemMan_SetPageFree>
ffffffff80204afc:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
ffffffff80204b00:	48 c1 ef 11          	shr    $0x11,%rdi
ffffffff80204b04:	48 89 3c 25 f0 8c 28 	mov    %rdi,0xffffffff80288cf0
ffffffff80204b0b:	80 
ffffffff80204b0c:	48 83 c4 10          	add    $0x10,%rsp
ffffffff80204b10:	5d                   	pop    %rbp
ffffffff80204b11:	c3                   	retq   
ffffffff80204b12:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff80204b16:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80204b1d:	00 00 00 

ffffffff80204b20 <MemMan_FreeCont>:
ffffffff80204b20:	55                   	push   %rbp
ffffffff80204b21:	48 89 e5             	mov    %rsp,%rbp
ffffffff80204b24:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff80204b28:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff80204b2c:	89 75 f4             	mov    %esi,-0xc(%rbp)
ffffffff80204b2f:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
ffffffff80204b33:	48 63 45 f4          	movslq -0xc(%rbp),%rax
ffffffff80204b37:	48 c1 e0 0c          	shl    $0xc,%rax
ffffffff80204b3b:	48 89 c6             	mov    %rax,%rsi
ffffffff80204b3e:	e8 7d fb ff ff       	callq  ffffffff802046c0 <MemMan_MarkFree>
ffffffff80204b43:	48 83 c4 10          	add    $0x10,%rsp
ffffffff80204b47:	5d                   	pop    %rbp
ffffffff80204b48:	c3                   	retq   
ffffffff80204b49:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

ffffffff80204b50 <VirtMemMan_InitializeBootstrap>:
ffffffff80204b50:	55                   	push   %rbp
ffffffff80204b51:	48 89 e5             	mov    %rsp,%rbp
ffffffff80204b54:	b8 20 00 00 00       	mov    $0x20,%eax
ffffffff80204b59:	89 c7                	mov    %eax,%edi
ffffffff80204b5b:	e8 a0 5f 00 00       	callq  ffffffff8020ab00 <bootstrap_malloc>
ffffffff80204b60:	48 89 04 25 08 8d 28 	mov    %rax,0xffffffff80288d08
ffffffff80204b67:	80 
ffffffff80204b68:	48 bf 00 10 00 00 fe 	movabs $0xfffffffe00001000,%rdi
ffffffff80204b6f:	ff ff ff 
ffffffff80204b72:	48 89 78 08          	mov    %rdi,0x8(%rax)
ffffffff80204b76:	48 8b 04 25 10 8d 28 	mov    0xffffffff80288d10,%rax
ffffffff80204b7d:	80 
ffffffff80204b7e:	48 83 f8 00          	cmp    $0x0,%rax
ffffffff80204b82:	75 47                	jne    ffffffff80204bcb <VirtMemMan_InitializeBootstrap+0x7b>
ffffffff80204b84:	b8 a0 1f 00 00       	mov    $0x1fa0,%eax
ffffffff80204b89:	89 c7                	mov    %eax,%edi
ffffffff80204b8b:	e8 70 5f 00 00       	callq  ffffffff8020ab00 <bootstrap_malloc>
ffffffff80204b90:	48 89 04 25 10 8d 28 	mov    %rax,0xffffffff80288d10
ffffffff80204b97:	80 
ffffffff80204b98:	48 25 ff 0f 00 00    	and    $0xfff,%rax
ffffffff80204b9e:	48 83 f8 00          	cmp    $0x0,%rax
ffffffff80204ba2:	74 25                	je     ffffffff80204bc9 <VirtMemMan_InitializeBootstrap+0x79>
ffffffff80204ba4:	48 8b 04 25 10 8d 28 	mov    0xffffffff80288d10,%rax
ffffffff80204bab:	80 
ffffffff80204bac:	89 c1                	mov    %eax,%ecx
ffffffff80204bae:	81 e1 ff 0f 00 00    	and    $0xfff,%ecx
ffffffff80204bb4:	89 ca                	mov    %ecx,%edx
ffffffff80204bb6:	48 f7 da             	neg    %rdx
ffffffff80204bb9:	48 8d 84 10 00 10 00 	lea    0x1000(%rax,%rdx,1),%rax
ffffffff80204bc0:	00 
ffffffff80204bc1:	48 89 04 25 10 8d 28 	mov    %rax,0xffffffff80288d10
ffffffff80204bc8:	80 
ffffffff80204bc9:	eb 00                	jmp    ffffffff80204bcb <VirtMemMan_InitializeBootstrap+0x7b>
ffffffff80204bcb:	48 8b 04 25 10 8d 28 	mov    0xffffffff80288d10,%rax
ffffffff80204bd2:	80 
ffffffff80204bd3:	48 8b 0c 25 08 8d 28 	mov    0xffffffff80288d08,%rcx
ffffffff80204bda:	80 
ffffffff80204bdb:	48 89 01             	mov    %rax,(%rcx)
ffffffff80204bde:	48 8b 04 25 08 8d 28 	mov    0xffffffff80288d08,%rax
ffffffff80204be5:	80 
ffffffff80204be6:	c6 40 10 00          	movb   $0x0,0x10(%rax)
ffffffff80204bea:	5d                   	pop    %rbp
ffffffff80204beb:	c3                   	retq   
ffffffff80204bec:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff80204bf0 <VirtMemMan_Initialize>:
ffffffff80204bf0:	55                   	push   %rbp
ffffffff80204bf1:	48 89 e5             	mov    %rsp,%rbp
ffffffff80204bf4:	48 81 ec a0 00 00 00 	sub    $0xa0,%rsp
ffffffff80204bfb:	bf 01 00 00 80       	mov    $0x80000001,%edi
ffffffff80204c00:	31 c0                	xor    %eax,%eax
ffffffff80204c02:	89 c6                	mov    %eax,%esi
ffffffff80204c04:	89 45 dc             	mov    %eax,-0x24(%rbp)
ffffffff80204c07:	e8 b4 c4 ff ff       	callq  ffffffff802010c0 <CPUID_RequestInfo>
ffffffff80204c0c:	bf 03 00 00 00       	mov    $0x3,%edi
ffffffff80204c11:	be 00 00 00 04       	mov    $0x4000000,%esi
ffffffff80204c16:	e8 35 c5 ff ff       	callq  ffffffff80201150 <CPUID_FeatureIsAvailable>
ffffffff80204c1b:	48 8b 0c 25 08 8d 28 	mov    0xffffffff80288d08,%rcx
ffffffff80204c22:	80 
ffffffff80204c23:	88 41 10             	mov    %al,0x10(%rcx)
ffffffff80204c26:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
ffffffff80204c2d:	00 
ffffffff80204c2e:	48 c7 45 f8 06 00 00 	movq   $0x6,-0x8(%rbp)
ffffffff80204c35:	00 
ffffffff80204c36:	48 c7 45 f8 06 04 00 	movq   $0x406,-0x8(%rbp)
ffffffff80204c3d:	00 
ffffffff80204c3e:	48 c7 45 f8 06 04 00 	movq   $0x1000406,-0x8(%rbp)
ffffffff80204c45:	01 
ffffffff80204c46:	be 06 04 00 01       	mov    $0x1000406,%esi
ffffffff80204c4b:	bf 77 02 00 00       	mov    $0x277,%edi
ffffffff80204c50:	e8 6b ee ff ff       	callq  ffffffff80203ac0 <wrmsr>
ffffffff80204c55:	e8 46 fc ff ff       	callq  ffffffff802048a0 <MemMan_Alloc>
ffffffff80204c5a:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff80204c5e:	8b 7d dc             	mov    -0x24(%rbp),%edi
ffffffff80204c61:	48 89 c6             	mov    %rax,%rsi
ffffffff80204c64:	e8 c7 d0 ff ff       	callq  ffffffff80201d30 <GetVirtualAddress>
ffffffff80204c69:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff80204c6d:	bf 00 10 00 00       	mov    $0x1000,%edi
ffffffff80204c72:	89 fa                	mov    %edi,%edx
ffffffff80204c74:	48 89 c7             	mov    %rax,%rdi
ffffffff80204c77:	8b 75 dc             	mov    -0x24(%rbp),%esi
ffffffff80204c7a:	e8 e1 3a 00 00       	callq  ffffffff80208760 <memset>
ffffffff80204c7f:	48 8b 0c 25 18 8d 28 	mov    0xffffffff80288d18,%rcx
ffffffff80204c86:	80 
ffffffff80204c87:	48 83 f9 00          	cmp    $0x0,%rcx
ffffffff80204c8b:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
ffffffff80204c8f:	0f 85 31 04 00 00    	jne    ffffffff802050c6 <VirtMemMan_Initialize+0x4d6>
ffffffff80204c95:	e8 06 fc ff ff       	callq  ffffffff802048a0 <MemMan_Alloc>
ffffffff80204c9a:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff80204c9e:	48 89 04 25 20 8d 28 	mov    %rax,0xffffffff80288d20
ffffffff80204ca5:	80 
ffffffff80204ca6:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
ffffffff80204caa:	31 c9                	xor    %ecx,%ecx
ffffffff80204cac:	89 cf                	mov    %ecx,%edi
ffffffff80204cae:	89 4d cc             	mov    %ecx,-0x34(%rbp)
ffffffff80204cb1:	e8 7a d0 ff ff       	callq  ffffffff80201d30 <GetVirtualAddress>
ffffffff80204cb6:	48 89 04 25 18 8d 28 	mov    %rax,0xffffffff80288d18
ffffffff80204cbd:	80 
ffffffff80204cbe:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80204cc2:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
ffffffff80204cc6:	48 89 86 f8 0f 00 00 	mov    %rax,0xff8(%rsi)
ffffffff80204ccd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80204cd1:	48 8b b0 f8 0f 00 00 	mov    0xff8(%rax),%rsi
ffffffff80204cd8:	48 83 ce 01          	or     $0x1,%rsi
ffffffff80204cdc:	48 89 b0 f8 0f 00 00 	mov    %rsi,0xff8(%rax)
ffffffff80204ce3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80204ce7:	48 8b b0 f8 0f 00 00 	mov    0xff8(%rax),%rsi
ffffffff80204cee:	48 83 ce 02          	or     $0x2,%rsi
ffffffff80204cf2:	48 89 b0 f8 0f 00 00 	mov    %rsi,0xff8(%rax)
ffffffff80204cf9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80204cfd:	48 8b b0 f8 0f 00 00 	mov    0xff8(%rax),%rsi
ffffffff80204d04:	48 89 b0 f8 0f 00 00 	mov    %rsi,0xff8(%rax)
ffffffff80204d0b:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
ffffffff80204d0f:	48 89 e0             	mov    %rsp,%rax
ffffffff80204d12:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
ffffffff80204d18:	b9 00 00 00 40       	mov    $0x40000000,%ecx
ffffffff80204d1d:	89 c8                	mov    %ecx,%eax
ffffffff80204d1f:	48 c7 c6 00 00 00 c0 	mov    $0xffffffffc0000000,%rsi
ffffffff80204d26:	b9 01 00 00 00       	mov    $0x1,%ecx
ffffffff80204d2b:	ba 07 00 00 00       	mov    $0x7,%edx
ffffffff80204d30:	89 55 c8             	mov    %edx,-0x38(%rbp)
ffffffff80204d33:	48 89 c2             	mov    %rax,%rdx
ffffffff80204d36:	89 4d c4             	mov    %ecx,-0x3c(%rbp)
ffffffff80204d39:	44 8b 45 cc          	mov    -0x34(%rbp),%r8d
ffffffff80204d3d:	44 8b 4d c8          	mov    -0x38(%rbp),%r9d
ffffffff80204d41:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
ffffffff80204d45:	e8 56 05 00 00       	callq  ffffffff802052a0 <VirtMemMan_MapHPage>
ffffffff80204d4a:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
ffffffff80204d4e:	48 89 e0             	mov    %rsp,%rax
ffffffff80204d51:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
ffffffff80204d57:	8b 4d cc             	mov    -0x34(%rbp),%ecx
ffffffff80204d5a:	89 c8                	mov    %ecx,%eax
ffffffff80204d5c:	48 c7 c6 00 00 00 80 	mov    $0xffffffff80000000,%rsi
ffffffff80204d63:	48 89 c2             	mov    %rax,%rdx
ffffffff80204d66:	8b 4d c4             	mov    -0x3c(%rbp),%ecx
ffffffff80204d69:	44 8b 45 cc          	mov    -0x34(%rbp),%r8d
ffffffff80204d6d:	44 8b 4d c8          	mov    -0x38(%rbp),%r9d
ffffffff80204d71:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
ffffffff80204d75:	e8 26 05 00 00       	callq  ffffffff802052a0 <VirtMemMan_MapHPage>
ffffffff80204d7a:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
ffffffff80204d7e:	48 89 e0             	mov    %rsp,%rax
ffffffff80204d81:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
ffffffff80204d87:	b9 00 00 00 c0       	mov    $0xc0000000,%ecx
ffffffff80204d8c:	89 c8                	mov    %ecx,%eax
ffffffff80204d8e:	48 be 00 00 00 40 ff 	movabs $0xffffffff40000000,%rsi
ffffffff80204d95:	ff ff ff 
ffffffff80204d98:	48 89 c2             	mov    %rax,%rdx
ffffffff80204d9b:	8b 4d c4             	mov    -0x3c(%rbp),%ecx
ffffffff80204d9e:	44 8b 45 cc          	mov    -0x34(%rbp),%r8d
ffffffff80204da2:	44 8b 4d c8          	mov    -0x38(%rbp),%r9d
ffffffff80204da6:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
ffffffff80204daa:	e8 f1 04 00 00       	callq  ffffffff802052a0 <VirtMemMan_MapHPage>
ffffffff80204daf:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
ffffffff80204db3:	48 89 e0             	mov    %rsp,%rax
ffffffff80204db6:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
ffffffff80204dbc:	b9 00 00 00 80       	mov    $0x80000000,%ecx
ffffffff80204dc1:	89 c8                	mov    %ecx,%eax
ffffffff80204dc3:	48 be 00 00 00 00 ff 	movabs $0xffffffff00000000,%rsi
ffffffff80204dca:	ff ff ff 
ffffffff80204dcd:	48 89 c2             	mov    %rax,%rdx
ffffffff80204dd0:	8b 4d c4             	mov    -0x3c(%rbp),%ecx
ffffffff80204dd3:	44 8b 45 cc          	mov    -0x34(%rbp),%r8d
ffffffff80204dd7:	44 8b 4d c8          	mov    -0x38(%rbp),%r9d
ffffffff80204ddb:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
ffffffff80204ddf:	e8 bc 04 00 00       	callq  ffffffff802052a0 <VirtMemMan_MapHPage>
ffffffff80204de4:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
ffffffff80204de8:	48 89 e0             	mov    %rsp,%rax
ffffffff80204deb:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
ffffffff80204df1:	48 be 00 00 00 c0 fd 	movabs $0xfffffffdc0000000,%rsi
ffffffff80204df8:	ff ff ff 
ffffffff80204dfb:	48 ba 00 00 00 c0 01 	movabs $0x1c0000000,%rdx
ffffffff80204e02:	00 00 00 
ffffffff80204e05:	8b 4d c4             	mov    -0x3c(%rbp),%ecx
ffffffff80204e08:	44 8b 45 cc          	mov    -0x34(%rbp),%r8d
ffffffff80204e0c:	44 8b 4d c8          	mov    -0x38(%rbp),%r9d
ffffffff80204e10:	e8 8b 04 00 00       	callq  ffffffff802052a0 <VirtMemMan_MapHPage>
ffffffff80204e15:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
ffffffff80204e19:	48 89 e0             	mov    %rsp,%rax
ffffffff80204e1c:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
ffffffff80204e22:	48 be 00 00 00 80 fd 	movabs $0xfffffffd80000000,%rsi
ffffffff80204e29:	ff ff ff 
ffffffff80204e2c:	48 ba 00 00 00 80 01 	movabs $0x180000000,%rdx
ffffffff80204e33:	00 00 00 
ffffffff80204e36:	8b 4d c4             	mov    -0x3c(%rbp),%ecx
ffffffff80204e39:	44 8b 45 cc          	mov    -0x34(%rbp),%r8d
ffffffff80204e3d:	44 8b 4d c8          	mov    -0x38(%rbp),%r9d
ffffffff80204e41:	e8 5a 04 00 00       	callq  ffffffff802052a0 <VirtMemMan_MapHPage>
ffffffff80204e46:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
ffffffff80204e4a:	48 89 e0             	mov    %rsp,%rax
ffffffff80204e4d:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
ffffffff80204e53:	48 be 00 00 00 40 fd 	movabs $0xfffffffd40000000,%rsi
ffffffff80204e5a:	ff ff ff 
ffffffff80204e5d:	48 ba 00 00 00 40 01 	movabs $0x140000000,%rdx
ffffffff80204e64:	00 00 00 
ffffffff80204e67:	8b 4d c4             	mov    -0x3c(%rbp),%ecx
ffffffff80204e6a:	44 8b 45 cc          	mov    -0x34(%rbp),%r8d
ffffffff80204e6e:	44 8b 4d c8          	mov    -0x38(%rbp),%r9d
ffffffff80204e72:	e8 29 04 00 00       	callq  ffffffff802052a0 <VirtMemMan_MapHPage>
ffffffff80204e77:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
ffffffff80204e7b:	48 89 e0             	mov    %rsp,%rax
ffffffff80204e7e:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
ffffffff80204e84:	48 be 00 00 00 00 fd 	movabs $0xfffffffd00000000,%rsi
ffffffff80204e8b:	ff ff ff 
ffffffff80204e8e:	48 ba 00 00 00 00 01 	movabs $0x100000000,%rdx
ffffffff80204e95:	00 00 00 
ffffffff80204e98:	8b 4d c4             	mov    -0x3c(%rbp),%ecx
ffffffff80204e9b:	44 8b 45 cc          	mov    -0x34(%rbp),%r8d
ffffffff80204e9f:	44 8b 4d c8          	mov    -0x38(%rbp),%r9d
ffffffff80204ea3:	e8 f8 03 00 00       	callq  ffffffff802052a0 <VirtMemMan_MapHPage>
ffffffff80204ea8:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
ffffffff80204eac:	48 89 e0             	mov    %rsp,%rax
ffffffff80204eaf:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
ffffffff80204eb5:	48 be 00 00 00 c0 fe 	movabs $0xfffffffec0000000,%rsi
ffffffff80204ebc:	ff ff ff 
ffffffff80204ebf:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
ffffffff80204ec3:	8b 4d c4             	mov    -0x3c(%rbp),%ecx
ffffffff80204ec6:	44 8b 45 cc          	mov    -0x34(%rbp),%r8d
ffffffff80204eca:	44 8b 4d c8          	mov    -0x38(%rbp),%r9d
ffffffff80204ece:	e8 cd 03 00 00       	callq  ffffffff802052a0 <VirtMemMan_MapHPage>
ffffffff80204ed3:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
ffffffff80204ed7:	48 89 e0             	mov    %rsp,%rax
ffffffff80204eda:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
ffffffff80204ee0:	48 be 00 00 00 80 fe 	movabs $0xfffffffe80000000,%rsi
ffffffff80204ee7:	ff ff ff 
ffffffff80204eea:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
ffffffff80204eee:	8b 4d c4             	mov    -0x3c(%rbp),%ecx
ffffffff80204ef1:	44 8b 45 cc          	mov    -0x34(%rbp),%r8d
ffffffff80204ef5:	44 8b 4d c8          	mov    -0x38(%rbp),%r9d
ffffffff80204ef9:	e8 a2 03 00 00       	callq  ffffffff802052a0 <VirtMemMan_MapHPage>
ffffffff80204efe:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
ffffffff80204f02:	48 89 e0             	mov    %rsp,%rax
ffffffff80204f05:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
ffffffff80204f0b:	48 be 00 00 00 40 fe 	movabs $0xfffffffe40000000,%rsi
ffffffff80204f12:	ff ff ff 
ffffffff80204f15:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
ffffffff80204f19:	8b 4d c4             	mov    -0x3c(%rbp),%ecx
ffffffff80204f1c:	44 8b 45 cc          	mov    -0x34(%rbp),%r8d
ffffffff80204f20:	44 8b 4d c8          	mov    -0x38(%rbp),%r9d
ffffffff80204f24:	e8 77 03 00 00       	callq  ffffffff802052a0 <VirtMemMan_MapHPage>
ffffffff80204f29:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
ffffffff80204f2d:	48 89 e0             	mov    %rsp,%rax
ffffffff80204f30:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
ffffffff80204f36:	48 be 00 00 00 00 fe 	movabs $0xfffffffe00000000,%rsi
ffffffff80204f3d:	ff ff ff 
ffffffff80204f40:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
ffffffff80204f44:	8b 4d c4             	mov    -0x3c(%rbp),%ecx
ffffffff80204f47:	44 8b 45 cc          	mov    -0x34(%rbp),%r8d
ffffffff80204f4b:	44 8b 4d c8          	mov    -0x38(%rbp),%r9d
ffffffff80204f4f:	e8 4c 03 00 00       	callq  ffffffff802052a0 <VirtMemMan_MapHPage>
ffffffff80204f54:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
ffffffff80204f58:	48 89 e0             	mov    %rsp,%rax
ffffffff80204f5b:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
ffffffff80204f61:	48 be 00 00 00 00 fb 	movabs $0xfffffffb00000000,%rsi
ffffffff80204f68:	ff ff ff 
ffffffff80204f6b:	b9 02 00 00 00       	mov    $0x2,%ecx
ffffffff80204f70:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
ffffffff80204f74:	44 8b 45 c4          	mov    -0x3c(%rbp),%r8d
ffffffff80204f78:	89 4d 9c             	mov    %ecx,-0x64(%rbp)
ffffffff80204f7b:	44 89 c1             	mov    %r8d,%ecx
ffffffff80204f7e:	44 8b 45 9c          	mov    -0x64(%rbp),%r8d
ffffffff80204f82:	44 8b 4d c8          	mov    -0x38(%rbp),%r9d
ffffffff80204f86:	e8 15 03 00 00       	callq  ffffffff802052a0 <VirtMemMan_MapHPage>
ffffffff80204f8b:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
ffffffff80204f8f:	48 89 e0             	mov    %rsp,%rax
ffffffff80204f92:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
ffffffff80204f98:	48 be 00 00 00 40 fb 	movabs $0xfffffffb40000000,%rsi
ffffffff80204f9f:	ff ff ff 
ffffffff80204fa2:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
ffffffff80204fa6:	8b 4d c4             	mov    -0x3c(%rbp),%ecx
ffffffff80204fa9:	44 8b 45 9c          	mov    -0x64(%rbp),%r8d
ffffffff80204fad:	44 8b 4d c8          	mov    -0x38(%rbp),%r9d
ffffffff80204fb1:	e8 ea 02 00 00       	callq  ffffffff802052a0 <VirtMemMan_MapHPage>
ffffffff80204fb6:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
ffffffff80204fba:	48 89 e0             	mov    %rsp,%rax
ffffffff80204fbd:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
ffffffff80204fc3:	48 be 00 00 00 80 fb 	movabs $0xfffffffb80000000,%rsi
ffffffff80204fca:	ff ff ff 
ffffffff80204fcd:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
ffffffff80204fd1:	8b 4d c4             	mov    -0x3c(%rbp),%ecx
ffffffff80204fd4:	44 8b 45 9c          	mov    -0x64(%rbp),%r8d
ffffffff80204fd8:	44 8b 4d c8          	mov    -0x38(%rbp),%r9d
ffffffff80204fdc:	e8 bf 02 00 00       	callq  ffffffff802052a0 <VirtMemMan_MapHPage>
ffffffff80204fe1:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
ffffffff80204fe5:	48 89 e0             	mov    %rsp,%rax
ffffffff80204fe8:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
ffffffff80204fee:	48 be 00 00 00 c0 fb 	movabs $0xfffffffbc0000000,%rsi
ffffffff80204ff5:	ff ff ff 
ffffffff80204ff8:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
ffffffff80204ffc:	8b 4d c4             	mov    -0x3c(%rbp),%ecx
ffffffff80204fff:	44 8b 45 9c          	mov    -0x64(%rbp),%r8d
ffffffff80205003:	44 8b 4d c8          	mov    -0x38(%rbp),%r9d
ffffffff80205007:	e8 94 02 00 00       	callq  ffffffff802052a0 <VirtMemMan_MapHPage>
ffffffff8020500c:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
ffffffff80205010:	48 89 e0             	mov    %rsp,%rax
ffffffff80205013:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
ffffffff80205019:	48 be 00 00 00 00 fc 	movabs $0xfffffffc00000000,%rsi
ffffffff80205020:	ff ff ff 
ffffffff80205023:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
ffffffff80205027:	8b 4d c4             	mov    -0x3c(%rbp),%ecx
ffffffff8020502a:	44 8b 45 c4          	mov    -0x3c(%rbp),%r8d
ffffffff8020502e:	44 8b 4d c8          	mov    -0x38(%rbp),%r9d
ffffffff80205032:	e8 69 02 00 00       	callq  ffffffff802052a0 <VirtMemMan_MapHPage>
ffffffff80205037:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
ffffffff8020503b:	48 89 e0             	mov    %rsp,%rax
ffffffff8020503e:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
ffffffff80205044:	48 be 00 00 00 40 fc 	movabs $0xfffffffc40000000,%rsi
ffffffff8020504b:	ff ff ff 
ffffffff8020504e:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
ffffffff80205052:	8b 4d c4             	mov    -0x3c(%rbp),%ecx
ffffffff80205055:	44 8b 45 c4          	mov    -0x3c(%rbp),%r8d
ffffffff80205059:	44 8b 4d c8          	mov    -0x38(%rbp),%r9d
ffffffff8020505d:	e8 3e 02 00 00       	callq  ffffffff802052a0 <VirtMemMan_MapHPage>
ffffffff80205062:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
ffffffff80205066:	48 89 e0             	mov    %rsp,%rax
ffffffff80205069:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
ffffffff8020506f:	48 be 00 00 00 80 fc 	movabs $0xfffffffc80000000,%rsi
ffffffff80205076:	ff ff ff 
ffffffff80205079:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
ffffffff8020507d:	8b 4d c4             	mov    -0x3c(%rbp),%ecx
ffffffff80205080:	44 8b 45 c4          	mov    -0x3c(%rbp),%r8d
ffffffff80205084:	44 8b 4d c8          	mov    -0x38(%rbp),%r9d
ffffffff80205088:	e8 13 02 00 00       	callq  ffffffff802052a0 <VirtMemMan_MapHPage>
ffffffff8020508d:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
ffffffff80205091:	48 89 e0             	mov    %rsp,%rax
ffffffff80205094:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
ffffffff8020509a:	48 be 00 00 00 c0 fc 	movabs $0xfffffffcc0000000,%rsi
ffffffff802050a1:	ff ff ff 
ffffffff802050a4:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
ffffffff802050a8:	8b 4d c4             	mov    -0x3c(%rbp),%ecx
ffffffff802050ab:	44 8b 45 c4          	mov    -0x3c(%rbp),%r8d
ffffffff802050af:	44 8b 4d c8          	mov    -0x38(%rbp),%r9d
ffffffff802050b3:	e8 e8 01 00 00       	callq  ffffffff802052a0 <VirtMemMan_MapHPage>
ffffffff802050b8:	48 c7 04 25 28 8d 28 	movq   $0x9fe0,0xffffffff80288d28
ffffffff802050bf:	80 e0 9f 00 00 
ffffffff802050c4:	eb 5d                	jmp    ffffffff80205123 <VirtMemMan_Initialize+0x533>
ffffffff802050c6:	48 8b 04 25 20 8d 28 	mov    0xffffffff80288d20,%rax
ffffffff802050cd:	80 
ffffffff802050ce:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
ffffffff802050d2:	48 89 81 f8 0f 00 00 	mov    %rax,0xff8(%rcx)
ffffffff802050d9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff802050dd:	48 8b 80 f8 0f 00 00 	mov    0xff8(%rax),%rax
ffffffff802050e4:	48 83 c8 01          	or     $0x1,%rax
ffffffff802050e8:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
ffffffff802050ec:	48 89 81 f8 0f 00 00 	mov    %rax,0xff8(%rcx)
ffffffff802050f3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff802050f7:	48 8b 80 f8 0f 00 00 	mov    0xff8(%rax),%rax
ffffffff802050fe:	48 83 c8 02          	or     $0x2,%rax
ffffffff80205102:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
ffffffff80205106:	48 89 81 f8 0f 00 00 	mov    %rax,0xff8(%rcx)
ffffffff8020510d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80205111:	48 8b 80 f8 0f 00 00 	mov    0xff8(%rax),%rax
ffffffff80205118:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
ffffffff8020511c:	48 89 81 f8 0f 00 00 	mov    %rax,0xff8(%rcx)
ffffffff80205123:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
ffffffff80205127:	b8 0a 00 00 00       	mov    $0xa,%eax
ffffffff8020512c:	48 89 7d 90          	mov    %rdi,-0x70(%rbp)
ffffffff80205130:	89 c7                	mov    %eax,%edi
ffffffff80205132:	e8 69 f8 ff ff       	callq  ffffffff802049a0 <MemMan_Alloc4KiBPageCont>
ffffffff80205137:	48 89 e1             	mov    %rsp,%rcx
ffffffff8020513a:	c7 41 08 00 00 00 00 	movl   $0x0,0x8(%rcx)
ffffffff80205141:	c7 01 06 00 00 00    	movl   $0x6,(%rcx)
ffffffff80205147:	bf 00 a0 00 00       	mov    $0xa000,%edi
ffffffff8020514c:	89 f9                	mov    %edi,%ecx
ffffffff8020514e:	48 ba 00 00 00 00 00 	movabs $0xffffff0000000000,%rdx
ffffffff80205155:	ff ff ff 
ffffffff80205158:	41 b8 01 00 00 00    	mov    $0x1,%r8d
ffffffff8020515e:	45 31 c9             	xor    %r9d,%r9d
ffffffff80205161:	48 8b 7d 90          	mov    -0x70(%rbp),%rdi
ffffffff80205165:	48 89 d6             	mov    %rdx,%rsi
ffffffff80205168:	48 89 55 88          	mov    %rdx,-0x78(%rbp)
ffffffff8020516c:	48 89 c2             	mov    %rax,%rdx
ffffffff8020516f:	e8 8c 03 00 00       	callq  ffffffff80205500 <VirtMemMan_Map>
ffffffff80205174:	41 b8 80 00 00 c0    	mov    $0xc0000080,%r8d
ffffffff8020517a:	44 89 c7             	mov    %r8d,%edi
ffffffff8020517d:	44 89 45 84          	mov    %r8d,-0x7c(%rbp)
ffffffff80205181:	e8 7a e9 ff ff       	callq  ffffffff80203b00 <rdmsr>
ffffffff80205186:	48 0d 00 08 00 00    	or     $0x800,%rax
ffffffff8020518c:	8b 7d 84             	mov    -0x7c(%rbp),%edi
ffffffff8020518f:	48 89 c6             	mov    %rax,%rsi
ffffffff80205192:	e8 29 e9 ff ff       	callq  ffffffff80203ac0 <wrmsr>
ffffffff80205197:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8020519b:	48 8b 80 f0 0f 00 00 	mov    0xff0(%rax),%rax
ffffffff802051a2:	48 8b 0c 25 08 8d 28 	mov    0xffffffff80288d08,%rcx
ffffffff802051a9:	80 
ffffffff802051aa:	48 89 41 18          	mov    %rax,0x18(%rcx)
ffffffff802051ae:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
ffffffff802051b2:	e8 69 06 00 00       	callq  ffffffff80205820 <VirtMemMan_SetCurrent>
ffffffff802051b7:	48 8b 0c 25 08 8d 28 	mov    0xffffffff80288d08,%rcx
ffffffff802051be:	80 
ffffffff802051bf:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
ffffffff802051c3:	48 8b 4d 88          	mov    -0x78(%rbp),%rcx
ffffffff802051c7:	48 89 0c 25 08 8d 28 	mov    %rcx,0xffffffff80288d08
ffffffff802051ce:	80 
ffffffff802051cf:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff802051d3:	48 8b 92 f0 0f 00 00 	mov    0xff0(%rdx),%rdx
ffffffff802051da:	48 be 18 00 00 00 00 	movabs $0xffffff0000000018,%rsi
ffffffff802051e1:	ff ff ff 
ffffffff802051e4:	48 89 16             	mov    %rdx,(%rsi)
ffffffff802051e7:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
ffffffff802051eb:	48 8b 52 08          	mov    0x8(%rdx),%rdx
ffffffff802051ef:	48 8b 34 25 08 8d 28 	mov    0xffffffff80288d08,%rsi
ffffffff802051f6:	80 
ffffffff802051f7:	48 89 56 08          	mov    %rdx,0x8(%rsi)
ffffffff802051fb:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
ffffffff802051ff:	44 8a 52 10          	mov    0x10(%rdx),%r10b
ffffffff80205203:	48 8b 14 25 08 8d 28 	mov    0xffffffff80288d08,%rdx
ffffffff8020520a:	80 
ffffffff8020520b:	44 88 52 10          	mov    %r10b,0x10(%rdx)
ffffffff8020520f:	41 b8 a0 1f 00 00    	mov    $0x1fa0,%r8d
ffffffff80205215:	44 89 c7             	mov    %r8d,%edi
ffffffff80205218:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
ffffffff8020521f:	e8 dc 58 00 00       	callq  ffffffff8020ab00 <bootstrap_malloc>
ffffffff80205224:	48 8b 0c 25 08 8d 28 	mov    0xffffffff80288d08,%rcx
ffffffff8020522b:	80 
ffffffff8020522c:	48 89 01             	mov    %rax,(%rcx)
ffffffff8020522f:	48 8b 04 25 08 8d 28 	mov    0xffffffff80288d08,%rax
ffffffff80205236:	80 
ffffffff80205237:	48 8b 00             	mov    (%rax),%rax
ffffffff8020523a:	48 25 ff 0f 00 00    	and    $0xfff,%rax
ffffffff80205240:	48 83 f8 00          	cmp    $0x0,%rax
ffffffff80205244:	74 36                	je     ffffffff8020527c <VirtMemMan_Initialize+0x68c>
ffffffff80205246:	48 8b 04 25 08 8d 28 	mov    0xffffffff80288d08,%rax
ffffffff8020524d:	80 
ffffffff8020524e:	48 8b 00             	mov    (%rax),%rax
ffffffff80205251:	48 8b 0c 25 08 8d 28 	mov    0xffffffff80288d08,%rcx
ffffffff80205258:	80 
ffffffff80205259:	48 8b 09             	mov    (%rcx),%rcx
ffffffff8020525c:	89 ca                	mov    %ecx,%edx
ffffffff8020525e:	81 e2 ff 0f 00 00    	and    $0xfff,%edx
ffffffff80205264:	89 d1                	mov    %edx,%ecx
ffffffff80205266:	48 f7 d9             	neg    %rcx
ffffffff80205269:	48 8d 84 08 00 10 00 	lea    0x1000(%rax,%rcx,1),%rax
ffffffff80205270:	00 
ffffffff80205271:	48 8b 0c 25 08 8d 28 	mov    0xffffffff80288d08,%rcx
ffffffff80205278:	80 
ffffffff80205279:	48 89 01             	mov    %rax,(%rcx)
ffffffff8020527c:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
ffffffff80205280:	e8 9b 05 00 00       	callq  ffffffff80205820 <VirtMemMan_SetCurrent>
ffffffff80205285:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
ffffffff8020528c:	48 81 c4 a0 00 00 00 	add    $0xa0,%rsp
ffffffff80205293:	5d                   	pop    %rbp
ffffffff80205294:	c3                   	retq   
ffffffff80205295:	90                   	nop
ffffffff80205296:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8020529d:	00 00 00 

ffffffff802052a0 <VirtMemMan_MapHPage>:
ffffffff802052a0:	55                   	push   %rbp
ffffffff802052a1:	48 89 e5             	mov    %rsp,%rbp
ffffffff802052a4:	48 83 ec 50          	sub    $0x50,%rsp
ffffffff802052a8:	88 c8                	mov    %cl,%al
ffffffff802052aa:	8b 4d 10             	mov    0x10(%rbp),%ecx
ffffffff802052ad:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff802052b1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff802052b5:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
ffffffff802052b9:	88 45 e7             	mov    %al,-0x19(%rbp)
ffffffff802052bc:	44 89 45 e0          	mov    %r8d,-0x20(%rbp)
ffffffff802052c0:	44 89 4d dc          	mov    %r9d,-0x24(%rbp)
ffffffff802052c4:	89 4d d8             	mov    %ecx,-0x28(%rbp)
ffffffff802052c7:	8b 4d e8             	mov    -0x18(%rbp),%ecx
ffffffff802052ca:	81 e1 00 00 00 c0    	and    $0xc0000000,%ecx
ffffffff802052d0:	89 4d e8             	mov    %ecx,-0x18(%rbp)
ffffffff802052d3:	48 8b 14 25 08 8d 28 	mov    0xffffffff80288d08,%rdx
ffffffff802052da:	80 
ffffffff802052db:	8a 42 10             	mov    0x10(%rdx),%al
ffffffff802052de:	3c 00                	cmp    $0x0,%al
ffffffff802052e0:	75 6f                	jne    ffffffff80205351 <VirtMemMan_MapHPage+0xb1>
ffffffff802052e2:	48 c7 45 d0 00 00 00 	movq   $0x0,-0x30(%rbp)
ffffffff802052e9:	00 
ffffffff802052ea:	48 81 7d d0 00 02 00 	cmpq   $0x200,-0x30(%rbp)
ffffffff802052f1:	00 
ffffffff802052f2:	73 58                	jae    ffffffff8020534c <VirtMemMan_MapHPage+0xac>
ffffffff802052f4:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
ffffffff802052f8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff802052fc:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
ffffffff80205300:	48 c1 e1 15          	shl    $0x15,%rcx
ffffffff80205304:	48 01 c8             	add    %rcx,%rax
ffffffff80205307:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
ffffffff8020530b:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
ffffffff8020530f:	48 c1 e2 15          	shl    $0x15,%rdx
ffffffff80205313:	48 01 d1             	add    %rdx,%rcx
ffffffff80205316:	40 8a 75 e7          	mov    -0x19(%rbp),%sil
ffffffff8020531a:	44 8b 45 e0          	mov    -0x20(%rbp),%r8d
ffffffff8020531e:	44 8b 4d dc          	mov    -0x24(%rbp),%r9d
ffffffff80205322:	44 8b 55 d8          	mov    -0x28(%rbp),%r10d
ffffffff80205326:	48 89 e2             	mov    %rsp,%rdx
ffffffff80205329:	44 89 12             	mov    %r10d,(%rdx)
ffffffff8020532c:	44 0f b6 d6          	movzbl %sil,%r10d
ffffffff80205330:	48 89 c6             	mov    %rax,%rsi
ffffffff80205333:	48 89 ca             	mov    %rcx,%rdx
ffffffff80205336:	44 89 d1             	mov    %r10d,%ecx
ffffffff80205339:	e8 62 07 00 00       	callq  ffffffff80205aa0 <VirtMemMan_MapLPage>
ffffffff8020533e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff80205342:	48 83 c0 01          	add    $0x1,%rax
ffffffff80205346:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
ffffffff8020534a:	eb 9e                	jmp    ffffffff802052ea <VirtMemMan_MapHPage+0x4a>
ffffffff8020534c:	e9 9c 01 00 00       	jmpq   ffffffff802054ed <VirtMemMan_MapHPage+0x24d>
ffffffff80205351:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80205355:	48 c1 e8 27          	shr    $0x27,%rax
ffffffff80205359:	48 25 ff 01 00 00    	and    $0x1ff,%rax
ffffffff8020535f:	89 c1                	mov    %eax,%ecx
ffffffff80205361:	89 4d cc             	mov    %ecx,-0x34(%rbp)
ffffffff80205364:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80205368:	48 c1 e8 1e          	shr    $0x1e,%rax
ffffffff8020536c:	48 25 ff 01 00 00    	and    $0x1ff,%rax
ffffffff80205372:	89 c1                	mov    %eax,%ecx
ffffffff80205374:	89 4d c8             	mov    %ecx,-0x38(%rbp)
ffffffff80205377:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
ffffffff8020537b:	8b 75 cc             	mov    -0x34(%rbp),%esi
ffffffff8020537e:	e8 3d 09 00 00       	callq  ffffffff80205cc0 <VirtMemMan_SetupPDPTEntry>
ffffffff80205383:	31 c9                	xor    %ecx,%ecx
ffffffff80205385:	8b 75 cc             	mov    -0x34(%rbp),%esi
ffffffff80205388:	89 f0                	mov    %esi,%eax
ffffffff8020538a:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
ffffffff8020538e:	48 ba 00 f0 ff ff ff 	movabs $0xffffffffffff000,%rdx
ffffffff80205395:	ff ff 0f 
ffffffff80205398:	48 23 14 c7          	and    (%rdi,%rax,8),%rdx
ffffffff8020539c:	31 ff                	xor    %edi,%edi
ffffffff8020539e:	48 89 d6             	mov    %rdx,%rsi
ffffffff802053a1:	89 4d bc             	mov    %ecx,-0x44(%rbp)
ffffffff802053a4:	e8 87 c9 ff ff       	callq  ffffffff80201d30 <GetVirtualAddress>
ffffffff802053a9:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
ffffffff802053ad:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff802053b1:	8b 4d c8             	mov    -0x38(%rbp),%ecx
ffffffff802053b4:	89 ca                	mov    %ecx,%edx
ffffffff802053b6:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
ffffffff802053ba:	48 89 04 d6          	mov    %rax,(%rsi,%rdx,8)
ffffffff802053be:	80 7d e7 00          	cmpb   $0x0,-0x19(%rbp)
ffffffff802053c2:	74 1e                	je     ffffffff802053e2 <VirtMemMan_MapHPage+0x142>
ffffffff802053c4:	8b 45 c8             	mov    -0x38(%rbp),%eax
ffffffff802053c7:	89 c1                	mov    %eax,%ecx
ffffffff802053c9:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
ffffffff802053cd:	48 8b 0c ca          	mov    (%rdx,%rcx,8),%rcx
ffffffff802053d1:	48 83 c9 01          	or     $0x1,%rcx
ffffffff802053d5:	8b 45 c8             	mov    -0x38(%rbp),%eax
ffffffff802053d8:	89 c2                	mov    %eax,%edx
ffffffff802053da:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
ffffffff802053de:	48 89 0c d6          	mov    %rcx,(%rsi,%rdx,8)
ffffffff802053e2:	8b 45 c8             	mov    -0x38(%rbp),%eax
ffffffff802053e5:	89 c1                	mov    %eax,%ecx
ffffffff802053e7:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
ffffffff802053eb:	48 8b 0c ca          	mov    (%rdx,%rcx,8),%rcx
ffffffff802053ef:	48 81 c9 80 00 00 00 	or     $0x80,%rcx
ffffffff802053f6:	8b 45 c8             	mov    -0x38(%rbp),%eax
ffffffff802053f9:	89 c2                	mov    %eax,%edx
ffffffff802053fb:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
ffffffff802053ff:	48 89 0c d6          	mov    %rcx,(%rsi,%rdx,8)
ffffffff80205403:	8b 45 c8             	mov    -0x38(%rbp),%eax
ffffffff80205406:	89 c1                	mov    %eax,%ecx
ffffffff80205408:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
ffffffff8020540c:	48 8b 0c ca          	mov    (%rdx,%rcx,8),%rcx
ffffffff80205410:	8b 45 e0             	mov    -0x20(%rbp),%eax
ffffffff80205413:	c1 e0 03             	shl    $0x3,%eax
ffffffff80205416:	89 c0                	mov    %eax,%eax
ffffffff80205418:	89 c2                	mov    %eax,%edx
ffffffff8020541a:	48 09 d1             	or     %rdx,%rcx
ffffffff8020541d:	8b 45 c8             	mov    -0x38(%rbp),%eax
ffffffff80205420:	89 c2                	mov    %eax,%edx
ffffffff80205422:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
ffffffff80205426:	48 89 0c d6          	mov    %rcx,(%rsi,%rdx,8)
ffffffff8020542a:	8b 45 dc             	mov    -0x24(%rbp),%eax
ffffffff8020542d:	83 e0 02             	and    $0x2,%eax
ffffffff80205430:	83 f8 00             	cmp    $0x0,%eax
ffffffff80205433:	74 1e                	je     ffffffff80205453 <VirtMemMan_MapHPage+0x1b3>
ffffffff80205435:	8b 45 c8             	mov    -0x38(%rbp),%eax
ffffffff80205438:	89 c1                	mov    %eax,%ecx
ffffffff8020543a:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
ffffffff8020543e:	48 8b 0c ca          	mov    (%rdx,%rcx,8),%rcx
ffffffff80205442:	48 83 c9 02          	or     $0x2,%rcx
ffffffff80205446:	8b 45 c8             	mov    -0x38(%rbp),%eax
ffffffff80205449:	89 c2                	mov    %eax,%edx
ffffffff8020544b:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
ffffffff8020544f:	48 89 0c d6          	mov    %rcx,(%rsi,%rdx,8)
ffffffff80205453:	8b 45 dc             	mov    -0x24(%rbp),%eax
ffffffff80205456:	83 e0 01             	and    $0x1,%eax
ffffffff80205459:	83 f8 00             	cmp    $0x0,%eax
ffffffff8020545c:	74 26                	je     ffffffff80205484 <VirtMemMan_MapHPage+0x1e4>
ffffffff8020545e:	8b 45 c8             	mov    -0x38(%rbp),%eax
ffffffff80205461:	89 c1                	mov    %eax,%ecx
ffffffff80205463:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
ffffffff80205467:	48 be ff ff ff ff ff 	movabs $0x7fffffffffffffff,%rsi
ffffffff8020546e:	ff ff 7f 
ffffffff80205471:	48 23 34 ca          	and    (%rdx,%rcx,8),%rsi
ffffffff80205475:	8b 45 c8             	mov    -0x38(%rbp),%eax
ffffffff80205478:	89 c1                	mov    %eax,%ecx
ffffffff8020547a:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
ffffffff8020547e:	48 89 34 ca          	mov    %rsi,(%rdx,%rcx,8)
ffffffff80205482:	eb 24                	jmp    ffffffff802054a8 <VirtMemMan_MapHPage+0x208>
ffffffff80205484:	8b 45 c8             	mov    -0x38(%rbp),%eax
ffffffff80205487:	89 c1                	mov    %eax,%ecx
ffffffff80205489:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
ffffffff8020548d:	48 be 00 00 00 00 00 	movabs $0x8000000000000000,%rsi
ffffffff80205494:	00 00 80 
ffffffff80205497:	48 0b 34 ca          	or     (%rdx,%rcx,8),%rsi
ffffffff8020549b:	8b 45 c8             	mov    -0x38(%rbp),%eax
ffffffff8020549e:	89 c1                	mov    %eax,%ecx
ffffffff802054a0:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
ffffffff802054a4:	48 89 34 ca          	mov    %rsi,(%rdx,%rcx,8)
ffffffff802054a8:	8b 45 d8             	mov    -0x28(%rbp),%eax
ffffffff802054ab:	83 e0 01             	and    $0x1,%eax
ffffffff802054ae:	83 f8 00             	cmp    $0x0,%eax
ffffffff802054b1:	74 1e                	je     ffffffff802054d1 <VirtMemMan_MapHPage+0x231>
ffffffff802054b3:	8b 45 c8             	mov    -0x38(%rbp),%eax
ffffffff802054b6:	89 c1                	mov    %eax,%ecx
ffffffff802054b8:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
ffffffff802054bc:	48 8b 0c ca          	mov    (%rdx,%rcx,8),%rcx
ffffffff802054c0:	48 83 c9 04          	or     $0x4,%rcx
ffffffff802054c4:	8b 45 c8             	mov    -0x38(%rbp),%eax
ffffffff802054c7:	89 c2                	mov    %eax,%edx
ffffffff802054c9:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
ffffffff802054cd:	48 89 0c d6          	mov    %rcx,(%rsi,%rdx,8)
ffffffff802054d1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff802054d5:	48 8b 0c 25 08 8d 28 	mov    0xffffffff80288d08,%rcx
ffffffff802054dc:	80 
ffffffff802054dd:	48 8b 49 08          	mov    0x8(%rcx),%rcx
ffffffff802054e1:	48 39 c8             	cmp    %rcx,%rax
ffffffff802054e4:	75 07                	jne    ffffffff802054ed <VirtMemMan_MapHPage+0x24d>
ffffffff802054e6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff802054ea:	0f 01 38             	invlpg (%rax)
ffffffff802054ed:	48 83 c4 50          	add    $0x50,%rsp
ffffffff802054f1:	5d                   	pop    %rbp
ffffffff802054f2:	c3                   	retq   
ffffffff802054f3:	0f 1f 00             	nopl   (%rax)
ffffffff802054f6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff802054fd:	00 00 00 

ffffffff80205500 <VirtMemMan_Map>:
ffffffff80205500:	55                   	push   %rbp
ffffffff80205501:	48 89 e5             	mov    %rsp,%rbp
ffffffff80205504:	48 83 ec 60          	sub    $0x60,%rsp
ffffffff80205508:	44 88 c0             	mov    %r8b,%al
ffffffff8020550b:	44 8b 45 18          	mov    0x18(%rbp),%r8d
ffffffff8020550f:	44 8b 55 10          	mov    0x10(%rbp),%r10d
ffffffff80205513:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff80205517:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff8020551b:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
ffffffff8020551f:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
ffffffff80205523:	88 45 df             	mov    %al,-0x21(%rbp)
ffffffff80205526:	44 89 4d d8          	mov    %r9d,-0x28(%rbp)
ffffffff8020552a:	44 89 55 d4          	mov    %r10d,-0x2c(%rbp)
ffffffff8020552e:	44 89 45 d0          	mov    %r8d,-0x30(%rbp)
ffffffff80205532:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
ffffffff80205537:	0f 86 d8 02 00 00    	jbe    ffffffff80205815 <VirtMemMan_Map+0x315>
ffffffff8020553d:	48 81 7d e0 00 10 00 	cmpq   $0x1000,-0x20(%rbp)
ffffffff80205544:	00 
ffffffff80205545:	75 3c                	jne    ffffffff80205583 <VirtMemMan_Map+0x83>
ffffffff80205547:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8020554b:	48 2d 00 10 00 00    	sub    $0x1000,%rax
ffffffff80205551:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
ffffffff80205555:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
ffffffff80205559:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
ffffffff8020555d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff80205561:	8a 4d df             	mov    -0x21(%rbp),%cl
ffffffff80205564:	44 8b 45 d8          	mov    -0x28(%rbp),%r8d
ffffffff80205568:	44 8b 4d d4          	mov    -0x2c(%rbp),%r9d
ffffffff8020556c:	44 8b 55 d0          	mov    -0x30(%rbp),%r10d
ffffffff80205570:	48 89 e0             	mov    %rsp,%rax
ffffffff80205573:	44 89 10             	mov    %r10d,(%rax)
ffffffff80205576:	0f b6 c9             	movzbl %cl,%ecx
ffffffff80205579:	e8 22 09 00 00       	callq  ffffffff80205ea0 <VirtMemMan_MapSPage>
ffffffff8020557e:	e9 8d 02 00 00       	jmpq   ffffffff80205810 <VirtMemMan_Map+0x310>
ffffffff80205583:	48 81 7d e0 00 00 20 	cmpq   $0x200000,-0x20(%rbp)
ffffffff8020558a:	00 
ffffffff8020558b:	75 3c                	jne    ffffffff802055c9 <VirtMemMan_Map+0xc9>
ffffffff8020558d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80205591:	48 2d 00 00 20 00    	sub    $0x200000,%rax
ffffffff80205597:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
ffffffff8020559b:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
ffffffff8020559f:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
ffffffff802055a3:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff802055a7:	8a 4d df             	mov    -0x21(%rbp),%cl
ffffffff802055aa:	44 8b 45 d8          	mov    -0x28(%rbp),%r8d
ffffffff802055ae:	44 8b 4d d4          	mov    -0x2c(%rbp),%r9d
ffffffff802055b2:	44 8b 55 d0          	mov    -0x30(%rbp),%r10d
ffffffff802055b6:	48 89 e0             	mov    %rsp,%rax
ffffffff802055b9:	44 89 10             	mov    %r10d,(%rax)
ffffffff802055bc:	0f b6 c9             	movzbl %cl,%ecx
ffffffff802055bf:	e8 dc 04 00 00       	callq  ffffffff80205aa0 <VirtMemMan_MapLPage>
ffffffff802055c4:	e9 45 02 00 00       	jmpq   ffffffff8020580e <VirtMemMan_Map+0x30e>
ffffffff802055c9:	48 81 7d e0 00 00 00 	cmpq   $0x40000000,-0x20(%rbp)
ffffffff802055d0:	40 
ffffffff802055d1:	75 3c                	jne    ffffffff8020560f <VirtMemMan_Map+0x10f>
ffffffff802055d3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff802055d7:	48 2d 00 00 00 40    	sub    $0x40000000,%rax
ffffffff802055dd:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
ffffffff802055e1:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
ffffffff802055e5:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
ffffffff802055e9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff802055ed:	8a 4d df             	mov    -0x21(%rbp),%cl
ffffffff802055f0:	44 8b 45 d8          	mov    -0x28(%rbp),%r8d
ffffffff802055f4:	44 8b 4d d4          	mov    -0x2c(%rbp),%r9d
ffffffff802055f8:	44 8b 55 d0          	mov    -0x30(%rbp),%r10d
ffffffff802055fc:	48 89 e0             	mov    %rsp,%rax
ffffffff802055ff:	44 89 10             	mov    %r10d,(%rax)
ffffffff80205602:	0f b6 c9             	movzbl %cl,%ecx
ffffffff80205605:	e8 96 fc ff ff       	callq  ffffffff802052a0 <VirtMemMan_MapHPage>
ffffffff8020560a:	e9 fd 01 00 00       	jmpq   ffffffff8020580c <VirtMemMan_Map+0x30c>
ffffffff8020560f:	48 81 7d e0 00 00 00 	cmpq   $0x40000000,-0x20(%rbp)
ffffffff80205616:	40 
ffffffff80205617:	0f 82 9a 00 00 00    	jb     ffffffff802056b7 <VirtMemMan_Map+0x1b7>
ffffffff8020561d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80205621:	48 25 ff ff ff 3f    	and    $0x3fffffff,%rax
ffffffff80205627:	48 83 f8 00          	cmp    $0x0,%rax
ffffffff8020562b:	0f 85 86 00 00 00    	jne    ffffffff802056b7 <VirtMemMan_Map+0x1b7>
ffffffff80205631:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80205635:	48 25 ff ff ff 3f    	and    $0x3fffffff,%rax
ffffffff8020563b:	48 83 f8 00          	cmp    $0x0,%rax
ffffffff8020563f:	75 76                	jne    ffffffff802056b7 <VirtMemMan_Map+0x1b7>
ffffffff80205641:	b8 00 00 00 40       	mov    $0x40000000,%eax
ffffffff80205646:	89 c1                	mov    %eax,%ecx
ffffffff80205648:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
ffffffff8020564c:	48 81 ea 00 00 00 40 	sub    $0x40000000,%rdx
ffffffff80205653:	48 89 55 e0          	mov    %rdx,-0x20(%rbp)
ffffffff80205657:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
ffffffff8020565b:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
ffffffff8020565f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff80205663:	44 8a 45 df          	mov    -0x21(%rbp),%r8b
ffffffff80205667:	44 8b 4d d8          	mov    -0x28(%rbp),%r9d
ffffffff8020566b:	8b 45 d4             	mov    -0x2c(%rbp),%eax
ffffffff8020566e:	44 8b 55 d0          	mov    -0x30(%rbp),%r10d
ffffffff80205672:	49 89 e3             	mov    %rsp,%r11
ffffffff80205675:	45 89 53 08          	mov    %r10d,0x8(%r11)
ffffffff80205679:	41 89 03             	mov    %eax,(%r11)
ffffffff8020567c:	45 0f b6 c0          	movzbl %r8b,%r8d
ffffffff80205680:	b8 00 00 00 40       	mov    $0x40000000,%eax
ffffffff80205685:	41 89 c3             	mov    %eax,%r11d
ffffffff80205688:	48 89 4d c8          	mov    %rcx,-0x38(%rbp)
ffffffff8020568c:	4c 89 d9             	mov    %r11,%rcx
ffffffff8020568f:	e8 6c fe ff ff       	callq  ffffffff80205500 <VirtMemMan_Map>
ffffffff80205694:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
ffffffff80205698:	48 81 c1 00 00 00 40 	add    $0x40000000,%rcx
ffffffff8020569f:	48 89 4d f0          	mov    %rcx,-0x10(%rbp)
ffffffff802056a3:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
ffffffff802056a7:	48 81 c1 00 00 00 40 	add    $0x40000000,%rcx
ffffffff802056ae:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
ffffffff802056b2:	e9 53 01 00 00       	jmpq   ffffffff8020580a <VirtMemMan_Map+0x30a>
ffffffff802056b7:	48 81 7d e0 00 00 20 	cmpq   $0x200000,-0x20(%rbp)
ffffffff802056be:	00 
ffffffff802056bf:	0f 82 9a 00 00 00    	jb     ffffffff8020575f <VirtMemMan_Map+0x25f>
ffffffff802056c5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff802056c9:	48 25 ff ff 1f 00    	and    $0x1fffff,%rax
ffffffff802056cf:	48 83 f8 00          	cmp    $0x0,%rax
ffffffff802056d3:	0f 85 86 00 00 00    	jne    ffffffff8020575f <VirtMemMan_Map+0x25f>
ffffffff802056d9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff802056dd:	48 25 ff ff 1f 00    	and    $0x1fffff,%rax
ffffffff802056e3:	48 83 f8 00          	cmp    $0x0,%rax
ffffffff802056e7:	75 76                	jne    ffffffff8020575f <VirtMemMan_Map+0x25f>
ffffffff802056e9:	b8 00 00 20 00       	mov    $0x200000,%eax
ffffffff802056ee:	89 c1                	mov    %eax,%ecx
ffffffff802056f0:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
ffffffff802056f4:	48 81 ea 00 00 20 00 	sub    $0x200000,%rdx
ffffffff802056fb:	48 89 55 e0          	mov    %rdx,-0x20(%rbp)
ffffffff802056ff:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
ffffffff80205703:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
ffffffff80205707:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff8020570b:	44 8a 45 df          	mov    -0x21(%rbp),%r8b
ffffffff8020570f:	44 8b 4d d8          	mov    -0x28(%rbp),%r9d
ffffffff80205713:	8b 45 d4             	mov    -0x2c(%rbp),%eax
ffffffff80205716:	44 8b 55 d0          	mov    -0x30(%rbp),%r10d
ffffffff8020571a:	49 89 e3             	mov    %rsp,%r11
ffffffff8020571d:	45 89 53 08          	mov    %r10d,0x8(%r11)
ffffffff80205721:	41 89 03             	mov    %eax,(%r11)
ffffffff80205724:	45 0f b6 c0          	movzbl %r8b,%r8d
ffffffff80205728:	b8 00 00 20 00       	mov    $0x200000,%eax
ffffffff8020572d:	41 89 c3             	mov    %eax,%r11d
ffffffff80205730:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
ffffffff80205734:	4c 89 d9             	mov    %r11,%rcx
ffffffff80205737:	e8 c4 fd ff ff       	callq  ffffffff80205500 <VirtMemMan_Map>
ffffffff8020573c:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
ffffffff80205740:	48 81 c1 00 00 20 00 	add    $0x200000,%rcx
ffffffff80205747:	48 89 4d f0          	mov    %rcx,-0x10(%rbp)
ffffffff8020574b:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
ffffffff8020574f:	48 81 c1 00 00 20 00 	add    $0x200000,%rcx
ffffffff80205756:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
ffffffff8020575a:	e9 a9 00 00 00       	jmpq   ffffffff80205808 <VirtMemMan_Map+0x308>
ffffffff8020575f:	48 81 7d e0 00 10 00 	cmpq   $0x1000,-0x20(%rbp)
ffffffff80205766:	00 
ffffffff80205767:	0f 82 97 00 00 00    	jb     ffffffff80205804 <VirtMemMan_Map+0x304>
ffffffff8020576d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80205771:	48 25 ff 0f 00 00    	and    $0xfff,%rax
ffffffff80205777:	48 83 f8 00          	cmp    $0x0,%rax
ffffffff8020577b:	0f 85 83 00 00 00    	jne    ffffffff80205804 <VirtMemMan_Map+0x304>
ffffffff80205781:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80205785:	48 25 ff 0f 00 00    	and    $0xfff,%rax
ffffffff8020578b:	48 83 f8 00          	cmp    $0x0,%rax
ffffffff8020578f:	75 73                	jne    ffffffff80205804 <VirtMemMan_Map+0x304>
ffffffff80205791:	b8 00 10 00 00       	mov    $0x1000,%eax
ffffffff80205796:	89 c1                	mov    %eax,%ecx
ffffffff80205798:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
ffffffff8020579c:	48 81 ea 00 10 00 00 	sub    $0x1000,%rdx
ffffffff802057a3:	48 89 55 e0          	mov    %rdx,-0x20(%rbp)
ffffffff802057a7:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
ffffffff802057ab:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
ffffffff802057af:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff802057b3:	44 8a 45 df          	mov    -0x21(%rbp),%r8b
ffffffff802057b7:	44 8b 4d d8          	mov    -0x28(%rbp),%r9d
ffffffff802057bb:	8b 45 d4             	mov    -0x2c(%rbp),%eax
ffffffff802057be:	44 8b 55 d0          	mov    -0x30(%rbp),%r10d
ffffffff802057c2:	49 89 e3             	mov    %rsp,%r11
ffffffff802057c5:	45 89 53 08          	mov    %r10d,0x8(%r11)
ffffffff802057c9:	41 89 03             	mov    %eax,(%r11)
ffffffff802057cc:	45 0f b6 c0          	movzbl %r8b,%r8d
ffffffff802057d0:	b8 00 10 00 00       	mov    $0x1000,%eax
ffffffff802057d5:	41 89 c3             	mov    %eax,%r11d
ffffffff802057d8:	48 89 4d b8          	mov    %rcx,-0x48(%rbp)
ffffffff802057dc:	4c 89 d9             	mov    %r11,%rcx
ffffffff802057df:	e8 1c fd ff ff       	callq  ffffffff80205500 <VirtMemMan_Map>
ffffffff802057e4:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
ffffffff802057e8:	48 81 c1 00 10 00 00 	add    $0x1000,%rcx
ffffffff802057ef:	48 89 4d f0          	mov    %rcx,-0x10(%rbp)
ffffffff802057f3:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
ffffffff802057f7:	48 81 c1 00 10 00 00 	add    $0x1000,%rcx
ffffffff802057fe:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
ffffffff80205802:	eb 02                	jmp    ffffffff80205806 <VirtMemMan_Map+0x306>
ffffffff80205804:	eb 0f                	jmp    ffffffff80205815 <VirtMemMan_Map+0x315>
ffffffff80205806:	eb 00                	jmp    ffffffff80205808 <VirtMemMan_Map+0x308>
ffffffff80205808:	eb 00                	jmp    ffffffff8020580a <VirtMemMan_Map+0x30a>
ffffffff8020580a:	eb 00                	jmp    ffffffff8020580c <VirtMemMan_Map+0x30c>
ffffffff8020580c:	eb 00                	jmp    ffffffff8020580e <VirtMemMan_Map+0x30e>
ffffffff8020580e:	eb 00                	jmp    ffffffff80205810 <VirtMemMan_Map+0x310>
ffffffff80205810:	e9 1d fd ff ff       	jmpq   ffffffff80205532 <VirtMemMan_Map+0x32>
ffffffff80205815:	48 83 c4 60          	add    $0x60,%rsp
ffffffff80205819:	5d                   	pop    %rbp
ffffffff8020581a:	c3                   	retq   
ffffffff8020581b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

ffffffff80205820 <VirtMemMan_SetCurrent>:
ffffffff80205820:	55                   	push   %rbp
ffffffff80205821:	48 89 e5             	mov    %rsp,%rbp
ffffffff80205824:	48 83 ec 40          	sub    $0x40,%rsp
ffffffff80205828:	48 b8 00 10 00 00 fe 	movabs $0xfffffffe00001000,%rax
ffffffff8020582f:	ff ff ff 
ffffffff80205832:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff80205836:	48 8b 3c 25 08 8d 28 	mov    0xffffffff80288d08,%rdi
ffffffff8020583d:	80 
ffffffff8020583e:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
ffffffff80205842:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
ffffffff80205846:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
ffffffff8020584a:	48 39 c7             	cmp    %rax,%rdi
ffffffff8020584d:	74 3f                	je     ffffffff8020588e <VirtMemMan_SetCurrent+0x6e>
ffffffff8020584f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80205853:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
ffffffff80205857:	74 35                	je     ffffffff8020588e <VirtMemMan_SetCurrent+0x6e>
ffffffff80205859:	b8 00 10 00 00       	mov    $0x1000,%eax
ffffffff8020585e:	89 c1                	mov    %eax,%ecx
ffffffff80205860:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
ffffffff80205864:	48 8b 14 25 08 8d 28 	mov    0xffffffff80288d08,%rdx
ffffffff8020586b:	80 
ffffffff8020586c:	48 8b 12             	mov    (%rdx),%rdx
ffffffff8020586f:	b8 00 10 00 00       	mov    $0x1000,%eax
ffffffff80205874:	89 c6                	mov    %eax,%esi
ffffffff80205876:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
ffffffff8020587a:	48 89 d6             	mov    %rdx,%rsi
ffffffff8020587d:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
ffffffff80205881:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
ffffffff80205885:	e8 76 2e 00 00       	callq  ffffffff80208700 <memcpy>
ffffffff8020588a:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
ffffffff8020588e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80205892:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff80205896:	48 8b 04 25 08 8d 28 	mov    0xffffffff80288d08,%rax
ffffffff8020589d:	80 
ffffffff8020589e:	48 8b 38             	mov    (%rax),%rdi
ffffffff802058a1:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
ffffffff802058a5:	b9 00 10 00 00       	mov    $0x1000,%ecx
ffffffff802058aa:	89 ca                	mov    %ecx,%edx
ffffffff802058ac:	e8 4f 2e 00 00       	callq  ffffffff80208700 <memcpy>
ffffffff802058b1:	48 8b 14 25 08 8d 28 	mov    0xffffffff80288d08,%rdx
ffffffff802058b8:	80 
ffffffff802058b9:	48 8b 52 18          	mov    0x18(%rdx),%rdx
ffffffff802058bd:	48 8b 34 25 08 8d 28 	mov    0xffffffff80288d08,%rsi
ffffffff802058c4:	80 
ffffffff802058c5:	48 8b 36             	mov    (%rsi),%rsi
ffffffff802058c8:	48 89 96 f0 0f 00 00 	mov    %rdx,0xff0(%rsi)
ffffffff802058cf:	48 8b 14 25 20 8d 28 	mov    0xffffffff80288d20,%rdx
ffffffff802058d6:	80 
ffffffff802058d7:	48 8b 34 25 08 8d 28 	mov    0xffffffff80288d08,%rsi
ffffffff802058de:	80 
ffffffff802058df:	48 8b 36             	mov    (%rsi),%rsi
ffffffff802058e2:	48 89 96 f8 0f 00 00 	mov    %rdx,0xff8(%rsi)
ffffffff802058e9:	48 8b 14 25 08 8d 28 	mov    0xffffffff80288d08,%rdx
ffffffff802058f0:	80 
ffffffff802058f1:	48 8b 12             	mov    (%rdx),%rdx
ffffffff802058f4:	48 8b 92 f8 0f 00 00 	mov    0xff8(%rdx),%rdx
ffffffff802058fb:	48 83 ca 01          	or     $0x1,%rdx
ffffffff802058ff:	48 8b 34 25 08 8d 28 	mov    0xffffffff80288d08,%rsi
ffffffff80205906:	80 
ffffffff80205907:	48 8b 36             	mov    (%rsi),%rsi
ffffffff8020590a:	48 89 96 f8 0f 00 00 	mov    %rdx,0xff8(%rsi)
ffffffff80205911:	48 8b 14 25 08 8d 28 	mov    0xffffffff80288d08,%rdx
ffffffff80205918:	80 
ffffffff80205919:	48 8b 12             	mov    (%rdx),%rdx
ffffffff8020591c:	48 8b 92 f8 0f 00 00 	mov    0xff8(%rdx),%rdx
ffffffff80205923:	48 83 ca 02          	or     $0x2,%rdx
ffffffff80205927:	48 8b 34 25 08 8d 28 	mov    0xffffffff80288d08,%rsi
ffffffff8020592e:	80 
ffffffff8020592f:	48 8b 36             	mov    (%rsi),%rsi
ffffffff80205932:	48 89 96 f8 0f 00 00 	mov    %rdx,0xff8(%rsi)
ffffffff80205939:	48 8b 14 25 08 8d 28 	mov    0xffffffff80288d08,%rdx
ffffffff80205940:	80 
ffffffff80205941:	48 8b 12             	mov    (%rdx),%rdx
ffffffff80205944:	48 8b 92 f8 0f 00 00 	mov    0xff8(%rdx),%rdx
ffffffff8020594b:	48 8b 34 25 08 8d 28 	mov    0xffffffff80288d08,%rsi
ffffffff80205952:	80 
ffffffff80205953:	48 8b 36             	mov    (%rsi),%rsi
ffffffff80205956:	48 89 96 f8 0f 00 00 	mov    %rdx,0xff8(%rsi)
ffffffff8020595d:	48 8b 14 25 08 8d 28 	mov    0xffffffff80288d08,%rdx
ffffffff80205964:	80 
ffffffff80205965:	48 8b 3a             	mov    (%rdx),%rdi
ffffffff80205968:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
ffffffff8020596c:	e8 ef c3 ff ff       	callq  ffffffff80201d60 <GetPhysicalAddress>
ffffffff80205971:	0f 22 d8             	mov    %rax,%cr3
ffffffff80205974:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80205978:	48 8b 14 25 08 8d 28 	mov    0xffffffff80288d08,%rdx
ffffffff8020597f:	80 
ffffffff80205980:	48 89 42 08          	mov    %rax,0x8(%rdx)
ffffffff80205984:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80205988:	48 83 c4 40          	add    $0x40,%rsp
ffffffff8020598c:	5d                   	pop    %rbp
ffffffff8020598d:	c3                   	retq   
ffffffff8020598e:	66 90                	xchg   %ax,%ax

ffffffff80205990 <VirtMemMan_AllocCoreLocalData>:
ffffffff80205990:	55                   	push   %rbp
ffffffff80205991:	48 89 e5             	mov    %rsp,%rbp
ffffffff80205994:	48 83 ec 18          	sub    $0x18,%rsp
ffffffff80205998:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
ffffffff8020599c:	48 8b 04 25 28 8d 28 	mov    0xffffffff80288d28,%rax
ffffffff802059a3:	80 
ffffffff802059a4:	48 39 c7             	cmp    %rax,%rdi
ffffffff802059a7:	77 50                	ja     ffffffff802059f9 <VirtMemMan_AllocCoreLocalData+0x69>
ffffffff802059a9:	48 8b 04 25 28 8d 28 	mov    0xffffffff80288d28,%rax
ffffffff802059b0:	80 
ffffffff802059b1:	48 83 f8 00          	cmp    $0x0,%rax
ffffffff802059b5:	76 42                	jbe    ffffffff802059f9 <VirtMemMan_AllocCoreLocalData+0x69>
ffffffff802059b7:	48 8b 04 25 08 8d 28 	mov    0xffffffff80288d08,%rax
ffffffff802059be:	80 
ffffffff802059bf:	48 8b 0c 25 28 8d 28 	mov    0xffffffff80288d28,%rcx
ffffffff802059c6:	80 
ffffffff802059c7:	ba 00 a0 00 00       	mov    $0xa000,%edx
ffffffff802059cc:	89 d6                	mov    %edx,%esi
ffffffff802059ce:	48 29 ce             	sub    %rcx,%rsi
ffffffff802059d1:	48 01 f0             	add    %rsi,%rax
ffffffff802059d4:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff802059d8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff802059dc:	48 8b 0c 25 28 8d 28 	mov    0xffffffff80288d28,%rcx
ffffffff802059e3:	80 
ffffffff802059e4:	48 29 c1             	sub    %rax,%rcx
ffffffff802059e7:	48 89 0c 25 28 8d 28 	mov    %rcx,0xffffffff80288d28
ffffffff802059ee:	80 
ffffffff802059ef:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff802059f3:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff802059f7:	eb 08                	jmp    ffffffff80205a01 <VirtMemMan_AllocCoreLocalData+0x71>
ffffffff802059f9:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
ffffffff80205a00:	00 
ffffffff80205a01:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80205a05:	48 83 c4 18          	add    $0x18,%rsp
ffffffff80205a09:	5d                   	pop    %rbp
ffffffff80205a0a:	c3                   	retq   
ffffffff80205a0b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

ffffffff80205a10 <VirtMemMan_CreateInstance>:
ffffffff80205a10:	55                   	push   %rbp
ffffffff80205a11:	48 89 e5             	mov    %rsp,%rbp
ffffffff80205a14:	48 83 ec 30          	sub    $0x30,%rsp
ffffffff80205a18:	e8 83 ee ff ff       	callq  ffffffff802048a0 <MemMan_Alloc>
ffffffff80205a1d:	31 c9                	xor    %ecx,%ecx
ffffffff80205a1f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff80205a23:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80205a27:	31 ff                	xor    %edi,%edi
ffffffff80205a29:	48 89 c6             	mov    %rax,%rsi
ffffffff80205a2c:	89 4d f4             	mov    %ecx,-0xc(%rbp)
ffffffff80205a2f:	e8 fc c2 ff ff       	callq  ffffffff80201d30 <GetVirtualAddress>
ffffffff80205a34:	31 c9                	xor    %ecx,%ecx
ffffffff80205a36:	bf 00 10 00 00       	mov    $0x1000,%edi
ffffffff80205a3b:	89 fe                	mov    %edi,%esi
ffffffff80205a3d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff80205a41:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80205a45:	bf 00 10 00 00       	mov    $0x1000,%edi
ffffffff80205a4a:	89 fa                	mov    %edi,%edx
ffffffff80205a4c:	31 ff                	xor    %edi,%edi
ffffffff80205a4e:	89 7d f0             	mov    %edi,-0x10(%rbp)
ffffffff80205a51:	48 89 c7             	mov    %rax,%rdi
ffffffff80205a54:	44 8b 45 f0          	mov    -0x10(%rbp),%r8d
ffffffff80205a58:	48 89 75 e8          	mov    %rsi,-0x18(%rbp)
ffffffff80205a5c:	44 89 c6             	mov    %r8d,%esi
ffffffff80205a5f:	89 4d e4             	mov    %ecx,-0x1c(%rbp)
ffffffff80205a62:	e8 f9 2c 00 00       	callq  ffffffff80208760 <memset>
ffffffff80205a67:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
ffffffff80205a6b:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
ffffffff80205a6f:	48 89 d0             	mov    %rdx,%rax
ffffffff80205a72:	48 83 c4 30          	add    $0x30,%rsp
ffffffff80205a76:	5d                   	pop    %rbp
ffffffff80205a77:	c3                   	retq   
ffffffff80205a78:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff80205a7f:	00 

ffffffff80205a80 <VirtMemMan_GetCurrent>:
ffffffff80205a80:	55                   	push   %rbp
ffffffff80205a81:	48 89 e5             	mov    %rsp,%rbp
ffffffff80205a84:	48 8b 04 25 08 8d 28 	mov    0xffffffff80288d08,%rax
ffffffff80205a8b:	80 
ffffffff80205a8c:	48 8b 00             	mov    (%rax),%rax
ffffffff80205a8f:	5d                   	pop    %rbp
ffffffff80205a90:	c3                   	retq   
ffffffff80205a91:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff80205a96:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80205a9d:	00 00 00 

ffffffff80205aa0 <VirtMemMan_MapLPage>:
ffffffff80205aa0:	55                   	push   %rbp
ffffffff80205aa1:	48 89 e5             	mov    %rsp,%rbp
ffffffff80205aa4:	48 83 ec 50          	sub    $0x50,%rsp
ffffffff80205aa8:	88 c8                	mov    %cl,%al
ffffffff80205aaa:	8b 4d 10             	mov    0x10(%rbp),%ecx
ffffffff80205aad:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff80205ab1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff80205ab5:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
ffffffff80205ab9:	88 45 e7             	mov    %al,-0x19(%rbp)
ffffffff80205abc:	44 89 45 e0          	mov    %r8d,-0x20(%rbp)
ffffffff80205ac0:	44 89 4d dc          	mov    %r9d,-0x24(%rbp)
ffffffff80205ac4:	89 4d d8             	mov    %ecx,-0x28(%rbp)
ffffffff80205ac7:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff80205acb:	48 c1 ea 15          	shr    $0x15,%rdx
ffffffff80205acf:	48 c1 e2 15          	shl    $0x15,%rdx
ffffffff80205ad3:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
ffffffff80205ad7:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff80205adb:	48 c1 ea 27          	shr    $0x27,%rdx
ffffffff80205adf:	48 81 e2 ff 01 00 00 	and    $0x1ff,%rdx
ffffffff80205ae6:	89 d1                	mov    %edx,%ecx
ffffffff80205ae8:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
ffffffff80205aeb:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff80205aef:	48 c1 ea 1e          	shr    $0x1e,%rdx
ffffffff80205af3:	48 81 e2 ff 01 00 00 	and    $0x1ff,%rdx
ffffffff80205afa:	89 d1                	mov    %edx,%ecx
ffffffff80205afc:	89 4d d0             	mov    %ecx,-0x30(%rbp)
ffffffff80205aff:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff80205b03:	48 c1 ea 15          	shr    $0x15,%rdx
ffffffff80205b07:	48 81 e2 ff 01 00 00 	and    $0x1ff,%rdx
ffffffff80205b0e:	89 d1                	mov    %edx,%ecx
ffffffff80205b10:	89 4d cc             	mov    %ecx,-0x34(%rbp)
ffffffff80205b13:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
ffffffff80205b17:	8b 75 d4             	mov    -0x2c(%rbp),%esi
ffffffff80205b1a:	8b 55 d0             	mov    -0x30(%rbp),%edx
ffffffff80205b1d:	e8 4e 02 00 00       	callq  ffffffff80205d70 <VirtMemMan_SetupPDEntry>
ffffffff80205b22:	31 c9                	xor    %ecx,%ecx
ffffffff80205b24:	8b 55 d4             	mov    -0x2c(%rbp),%edx
ffffffff80205b27:	89 d7                	mov    %edx,%edi
ffffffff80205b29:	4c 8b 55 f8          	mov    -0x8(%rbp),%r10
ffffffff80205b2d:	49 bb 00 f0 ff ff ff 	movabs $0xffffffffffff000,%r11
ffffffff80205b34:	ff ff 0f 
ffffffff80205b37:	4d 23 1c fa          	and    (%r10,%rdi,8),%r11
ffffffff80205b3b:	31 ff                	xor    %edi,%edi
ffffffff80205b3d:	4c 89 de             	mov    %r11,%rsi
ffffffff80205b40:	89 4d b4             	mov    %ecx,-0x4c(%rbp)
ffffffff80205b43:	e8 e8 c1 ff ff       	callq  ffffffff80201d30 <GetVirtualAddress>
ffffffff80205b48:	31 c9                	xor    %ecx,%ecx
ffffffff80205b4a:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
ffffffff80205b4e:	8b 55 d0             	mov    -0x30(%rbp),%edx
ffffffff80205b51:	89 d0                	mov    %edx,%eax
ffffffff80205b53:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
ffffffff80205b57:	49 ba 00 f0 ff ff ff 	movabs $0xffffffffffff000,%r10
ffffffff80205b5e:	ff ff 0f 
ffffffff80205b61:	4c 23 14 c6          	and    (%rsi,%rax,8),%r10
ffffffff80205b65:	31 ff                	xor    %edi,%edi
ffffffff80205b67:	4c 89 d6             	mov    %r10,%rsi
ffffffff80205b6a:	89 4d b0             	mov    %ecx,-0x50(%rbp)
ffffffff80205b6d:	e8 be c1 ff ff       	callq  ffffffff80201d30 <GetVirtualAddress>
ffffffff80205b72:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
ffffffff80205b76:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80205b7a:	8b 4d cc             	mov    -0x34(%rbp),%ecx
ffffffff80205b7d:	89 ce                	mov    %ecx,%esi
ffffffff80205b7f:	4c 8b 55 b8          	mov    -0x48(%rbp),%r10
ffffffff80205b83:	49 89 04 f2          	mov    %rax,(%r10,%rsi,8)
ffffffff80205b87:	80 7d e7 00          	cmpb   $0x0,-0x19(%rbp)
ffffffff80205b8b:	74 1e                	je     ffffffff80205bab <VirtMemMan_MapLPage+0x10b>
ffffffff80205b8d:	8b 45 cc             	mov    -0x34(%rbp),%eax
ffffffff80205b90:	89 c1                	mov    %eax,%ecx
ffffffff80205b92:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
ffffffff80205b96:	48 8b 0c ca          	mov    (%rdx,%rcx,8),%rcx
ffffffff80205b9a:	48 83 c9 01          	or     $0x1,%rcx
ffffffff80205b9e:	8b 45 cc             	mov    -0x34(%rbp),%eax
ffffffff80205ba1:	89 c2                	mov    %eax,%edx
ffffffff80205ba3:	48 8b 75 b8          	mov    -0x48(%rbp),%rsi
ffffffff80205ba7:	48 89 0c d6          	mov    %rcx,(%rsi,%rdx,8)
ffffffff80205bab:	8b 45 cc             	mov    -0x34(%rbp),%eax
ffffffff80205bae:	89 c1                	mov    %eax,%ecx
ffffffff80205bb0:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
ffffffff80205bb4:	48 8b 0c ca          	mov    (%rdx,%rcx,8),%rcx
ffffffff80205bb8:	48 81 c9 80 00 00 00 	or     $0x80,%rcx
ffffffff80205bbf:	8b 45 cc             	mov    -0x34(%rbp),%eax
ffffffff80205bc2:	89 c2                	mov    %eax,%edx
ffffffff80205bc4:	48 8b 75 b8          	mov    -0x48(%rbp),%rsi
ffffffff80205bc8:	48 89 0c d6          	mov    %rcx,(%rsi,%rdx,8)
ffffffff80205bcc:	8b 45 cc             	mov    -0x34(%rbp),%eax
ffffffff80205bcf:	89 c1                	mov    %eax,%ecx
ffffffff80205bd1:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
ffffffff80205bd5:	48 8b 0c ca          	mov    (%rdx,%rcx,8),%rcx
ffffffff80205bd9:	8b 45 e0             	mov    -0x20(%rbp),%eax
ffffffff80205bdc:	c1 e0 03             	shl    $0x3,%eax
ffffffff80205bdf:	89 c0                	mov    %eax,%eax
ffffffff80205be1:	89 c2                	mov    %eax,%edx
ffffffff80205be3:	48 09 d1             	or     %rdx,%rcx
ffffffff80205be6:	8b 45 cc             	mov    -0x34(%rbp),%eax
ffffffff80205be9:	89 c2                	mov    %eax,%edx
ffffffff80205beb:	48 8b 75 b8          	mov    -0x48(%rbp),%rsi
ffffffff80205bef:	48 89 0c d6          	mov    %rcx,(%rsi,%rdx,8)
ffffffff80205bf3:	8b 45 dc             	mov    -0x24(%rbp),%eax
ffffffff80205bf6:	83 e0 02             	and    $0x2,%eax
ffffffff80205bf9:	83 f8 00             	cmp    $0x0,%eax
ffffffff80205bfc:	74 1e                	je     ffffffff80205c1c <VirtMemMan_MapLPage+0x17c>
ffffffff80205bfe:	8b 45 cc             	mov    -0x34(%rbp),%eax
ffffffff80205c01:	89 c1                	mov    %eax,%ecx
ffffffff80205c03:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
ffffffff80205c07:	48 8b 0c ca          	mov    (%rdx,%rcx,8),%rcx
ffffffff80205c0b:	48 83 c9 02          	or     $0x2,%rcx
ffffffff80205c0f:	8b 45 cc             	mov    -0x34(%rbp),%eax
ffffffff80205c12:	89 c2                	mov    %eax,%edx
ffffffff80205c14:	48 8b 75 b8          	mov    -0x48(%rbp),%rsi
ffffffff80205c18:	48 89 0c d6          	mov    %rcx,(%rsi,%rdx,8)
ffffffff80205c1c:	8b 45 dc             	mov    -0x24(%rbp),%eax
ffffffff80205c1f:	83 e0 01             	and    $0x1,%eax
ffffffff80205c22:	83 f8 00             	cmp    $0x0,%eax
ffffffff80205c25:	74 26                	je     ffffffff80205c4d <VirtMemMan_MapLPage+0x1ad>
ffffffff80205c27:	8b 45 cc             	mov    -0x34(%rbp),%eax
ffffffff80205c2a:	89 c1                	mov    %eax,%ecx
ffffffff80205c2c:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
ffffffff80205c30:	48 be ff ff ff ff ff 	movabs $0x7fffffffffffffff,%rsi
ffffffff80205c37:	ff ff 7f 
ffffffff80205c3a:	48 23 34 ca          	and    (%rdx,%rcx,8),%rsi
ffffffff80205c3e:	8b 45 cc             	mov    -0x34(%rbp),%eax
ffffffff80205c41:	89 c1                	mov    %eax,%ecx
ffffffff80205c43:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
ffffffff80205c47:	48 89 34 ca          	mov    %rsi,(%rdx,%rcx,8)
ffffffff80205c4b:	eb 24                	jmp    ffffffff80205c71 <VirtMemMan_MapLPage+0x1d1>
ffffffff80205c4d:	8b 45 cc             	mov    -0x34(%rbp),%eax
ffffffff80205c50:	89 c1                	mov    %eax,%ecx
ffffffff80205c52:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
ffffffff80205c56:	48 be 00 00 00 00 00 	movabs $0x8000000000000000,%rsi
ffffffff80205c5d:	00 00 80 
ffffffff80205c60:	48 0b 34 ca          	or     (%rdx,%rcx,8),%rsi
ffffffff80205c64:	8b 45 cc             	mov    -0x34(%rbp),%eax
ffffffff80205c67:	89 c1                	mov    %eax,%ecx
ffffffff80205c69:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
ffffffff80205c6d:	48 89 34 ca          	mov    %rsi,(%rdx,%rcx,8)
ffffffff80205c71:	8b 45 d8             	mov    -0x28(%rbp),%eax
ffffffff80205c74:	83 e0 01             	and    $0x1,%eax
ffffffff80205c77:	83 f8 00             	cmp    $0x0,%eax
ffffffff80205c7a:	74 1e                	je     ffffffff80205c9a <VirtMemMan_MapLPage+0x1fa>
ffffffff80205c7c:	8b 45 cc             	mov    -0x34(%rbp),%eax
ffffffff80205c7f:	89 c1                	mov    %eax,%ecx
ffffffff80205c81:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
ffffffff80205c85:	48 8b 0c ca          	mov    (%rdx,%rcx,8),%rcx
ffffffff80205c89:	48 83 c9 04          	or     $0x4,%rcx
ffffffff80205c8d:	8b 45 cc             	mov    -0x34(%rbp),%eax
ffffffff80205c90:	89 c2                	mov    %eax,%edx
ffffffff80205c92:	48 8b 75 b8          	mov    -0x48(%rbp),%rsi
ffffffff80205c96:	48 89 0c d6          	mov    %rcx,(%rsi,%rdx,8)
ffffffff80205c9a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80205c9e:	48 8b 0c 25 08 8d 28 	mov    0xffffffff80288d08,%rcx
ffffffff80205ca5:	80 
ffffffff80205ca6:	48 8b 49 08          	mov    0x8(%rcx),%rcx
ffffffff80205caa:	48 39 c8             	cmp    %rcx,%rax
ffffffff80205cad:	75 07                	jne    ffffffff80205cb6 <VirtMemMan_MapLPage+0x216>
ffffffff80205caf:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80205cb3:	0f 01 38             	invlpg (%rax)
ffffffff80205cb6:	48 83 c4 50          	add    $0x50,%rsp
ffffffff80205cba:	5d                   	pop    %rbp
ffffffff80205cbb:	c3                   	retq   
ffffffff80205cbc:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff80205cc0 <VirtMemMan_SetupPDPTEntry>:
ffffffff80205cc0:	55                   	push   %rbp
ffffffff80205cc1:	48 89 e5             	mov    %rsp,%rbp
ffffffff80205cc4:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff80205cc8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff80205ccc:	89 75 f4             	mov    %esi,-0xc(%rbp)
ffffffff80205ccf:	8b 75 f4             	mov    -0xc(%rbp),%esi
ffffffff80205cd2:	89 f7                	mov    %esi,%edi
ffffffff80205cd4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80205cd8:	48 b9 00 f0 ff ff ff 	movabs $0xffffffffffff000,%rcx
ffffffff80205cdf:	ff ff 0f 
ffffffff80205ce2:	48 23 0c f8          	and    (%rax,%rdi,8),%rcx
ffffffff80205ce6:	48 83 f9 00          	cmp    $0x0,%rcx
ffffffff80205cea:	0f 94 c2             	sete   %dl
ffffffff80205ced:	80 e2 01             	and    $0x1,%dl
ffffffff80205cf0:	0f b6 f2             	movzbl %dl,%esi
ffffffff80205cf3:	44 8b 45 f4          	mov    -0xc(%rbp),%r8d
ffffffff80205cf7:	44 89 c0             	mov    %r8d,%eax
ffffffff80205cfa:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
ffffffff80205cfe:	48 8b 04 c1          	mov    (%rcx,%rax,8),%rax
ffffffff80205d02:	48 25 00 01 00 00    	and    $0x100,%rax
ffffffff80205d08:	48 83 f8 01          	cmp    $0x1,%rax
ffffffff80205d0c:	0f 94 c2             	sete   %dl
ffffffff80205d0f:	80 e2 01             	and    $0x1,%dl
ffffffff80205d12:	44 0f b6 c2          	movzbl %dl,%r8d
ffffffff80205d16:	44 09 c6             	or     %r8d,%esi
ffffffff80205d19:	83 fe 00             	cmp    $0x0,%esi
ffffffff80205d1c:	74 46                	je     ffffffff80205d64 <VirtMemMan_SetupPDPTEntry+0xa4>
ffffffff80205d1e:	e8 7d eb ff ff       	callq  ffffffff802048a0 <MemMan_Alloc>
ffffffff80205d23:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff80205d27:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80205d2b:	48 83 c8 01          	or     $0x1,%rax
ffffffff80205d2f:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff80205d33:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80205d37:	48 83 c8 02          	or     $0x2,%rax
ffffffff80205d3b:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff80205d3f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80205d43:	48 83 c8 04          	or     $0x4,%rax
ffffffff80205d47:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff80205d4b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80205d4f:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff80205d53:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80205d57:	8b 4d f4             	mov    -0xc(%rbp),%ecx
ffffffff80205d5a:	89 ca                	mov    %ecx,%edx
ffffffff80205d5c:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
ffffffff80205d60:	48 89 04 d6          	mov    %rax,(%rsi,%rdx,8)
ffffffff80205d64:	48 83 c4 20          	add    $0x20,%rsp
ffffffff80205d68:	5d                   	pop    %rbp
ffffffff80205d69:	c3                   	retq   
ffffffff80205d6a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

ffffffff80205d70 <VirtMemMan_SetupPDEntry>:
ffffffff80205d70:	55                   	push   %rbp
ffffffff80205d71:	48 89 e5             	mov    %rsp,%rbp
ffffffff80205d74:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff80205d78:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff80205d7c:	89 75 f4             	mov    %esi,-0xc(%rbp)
ffffffff80205d7f:	89 55 f0             	mov    %edx,-0x10(%rbp)
ffffffff80205d82:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
ffffffff80205d86:	8b 75 f4             	mov    -0xc(%rbp),%esi
ffffffff80205d89:	e8 32 ff ff ff       	callq  ffffffff80205cc0 <VirtMemMan_SetupPDPTEntry>
ffffffff80205d8e:	31 d2                	xor    %edx,%edx
ffffffff80205d90:	8b 75 f4             	mov    -0xc(%rbp),%esi
ffffffff80205d93:	89 f7                	mov    %esi,%edi
ffffffff80205d95:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80205d99:	48 b9 00 f0 ff ff ff 	movabs $0xffffffffffff000,%rcx
ffffffff80205da0:	ff ff 0f 
ffffffff80205da3:	48 23 0c f8          	and    (%rax,%rdi,8),%rcx
ffffffff80205da7:	31 ff                	xor    %edi,%edi
ffffffff80205da9:	48 89 ce             	mov    %rcx,%rsi
ffffffff80205dac:	89 55 e4             	mov    %edx,-0x1c(%rbp)
ffffffff80205daf:	e8 7c bf ff ff       	callq  ffffffff80201d30 <GetVirtualAddress>
ffffffff80205db4:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff80205db8:	8b 55 f0             	mov    -0x10(%rbp),%edx
ffffffff80205dbb:	89 d0                	mov    %edx,%eax
ffffffff80205dbd:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
ffffffff80205dc1:	48 be 00 f0 ff ff ff 	movabs $0xffffffffffff000,%rsi
ffffffff80205dc8:	ff ff 0f 
ffffffff80205dcb:	48 23 34 c1          	and    (%rcx,%rax,8),%rsi
ffffffff80205dcf:	48 83 fe 00          	cmp    $0x0,%rsi
ffffffff80205dd3:	41 0f 94 c0          	sete   %r8b
ffffffff80205dd7:	41 80 e0 01          	and    $0x1,%r8b
ffffffff80205ddb:	41 0f b6 d0          	movzbl %r8b,%edx
ffffffff80205ddf:	8b 7d f0             	mov    -0x10(%rbp),%edi
ffffffff80205de2:	89 f8                	mov    %edi,%eax
ffffffff80205de4:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
ffffffff80205de8:	48 8b 04 c1          	mov    (%rcx,%rax,8),%rax
ffffffff80205dec:	48 25 80 00 00 00    	and    $0x80,%rax
ffffffff80205df2:	48 83 f8 01          	cmp    $0x1,%rax
ffffffff80205df6:	41 0f 94 c0          	sete   %r8b
ffffffff80205dfa:	41 80 e0 01          	and    $0x1,%r8b
ffffffff80205dfe:	41 0f b6 f8          	movzbl %r8b,%edi
ffffffff80205e02:	09 fa                	or     %edi,%edx
ffffffff80205e04:	83 fa 00             	cmp    $0x0,%edx
ffffffff80205e07:	0f 84 86 00 00 00    	je     ffffffff80205e93 <VirtMemMan_SetupPDEntry+0x123>
ffffffff80205e0d:	e8 8e ea ff ff       	callq  ffffffff802048a0 <MemMan_Alloc>
ffffffff80205e12:	8b 4d f0             	mov    -0x10(%rbp),%ecx
ffffffff80205e15:	89 ca                	mov    %ecx,%edx
ffffffff80205e17:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
ffffffff80205e1b:	48 89 04 d6          	mov    %rax,(%rsi,%rdx,8)
ffffffff80205e1f:	8b 4d f0             	mov    -0x10(%rbp),%ecx
ffffffff80205e22:	89 c8                	mov    %ecx,%eax
ffffffff80205e24:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff80205e28:	48 8b 04 c2          	mov    (%rdx,%rax,8),%rax
ffffffff80205e2c:	48 83 c8 01          	or     $0x1,%rax
ffffffff80205e30:	8b 4d f0             	mov    -0x10(%rbp),%ecx
ffffffff80205e33:	89 ca                	mov    %ecx,%edx
ffffffff80205e35:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
ffffffff80205e39:	48 89 04 d6          	mov    %rax,(%rsi,%rdx,8)
ffffffff80205e3d:	8b 4d f0             	mov    -0x10(%rbp),%ecx
ffffffff80205e40:	89 c8                	mov    %ecx,%eax
ffffffff80205e42:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff80205e46:	48 8b 04 c2          	mov    (%rdx,%rax,8),%rax
ffffffff80205e4a:	48 83 c8 02          	or     $0x2,%rax
ffffffff80205e4e:	8b 4d f0             	mov    -0x10(%rbp),%ecx
ffffffff80205e51:	89 ca                	mov    %ecx,%edx
ffffffff80205e53:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
ffffffff80205e57:	48 89 04 d6          	mov    %rax,(%rsi,%rdx,8)
ffffffff80205e5b:	8b 4d f0             	mov    -0x10(%rbp),%ecx
ffffffff80205e5e:	89 c8                	mov    %ecx,%eax
ffffffff80205e60:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff80205e64:	48 8b 04 c2          	mov    (%rdx,%rax,8),%rax
ffffffff80205e68:	48 83 c8 04          	or     $0x4,%rax
ffffffff80205e6c:	8b 4d f0             	mov    -0x10(%rbp),%ecx
ffffffff80205e6f:	89 ca                	mov    %ecx,%edx
ffffffff80205e71:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
ffffffff80205e75:	48 89 04 d6          	mov    %rax,(%rsi,%rdx,8)
ffffffff80205e79:	8b 4d f0             	mov    -0x10(%rbp),%ecx
ffffffff80205e7c:	89 c8                	mov    %ecx,%eax
ffffffff80205e7e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff80205e82:	48 8b 04 c2          	mov    (%rdx,%rax,8),%rax
ffffffff80205e86:	8b 4d f0             	mov    -0x10(%rbp),%ecx
ffffffff80205e89:	89 ca                	mov    %ecx,%edx
ffffffff80205e8b:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
ffffffff80205e8f:	48 89 04 d6          	mov    %rax,(%rsi,%rdx,8)
ffffffff80205e93:	48 83 c4 20          	add    $0x20,%rsp
ffffffff80205e97:	5d                   	pop    %rbp
ffffffff80205e98:	c3                   	retq   
ffffffff80205e99:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

ffffffff80205ea0 <VirtMemMan_MapSPage>:
ffffffff80205ea0:	55                   	push   %rbp
ffffffff80205ea1:	48 89 e5             	mov    %rsp,%rbp
ffffffff80205ea4:	48 83 ec 60          	sub    $0x60,%rsp
ffffffff80205ea8:	88 c8                	mov    %cl,%al
ffffffff80205eaa:	8b 4d 10             	mov    0x10(%rbp),%ecx
ffffffff80205ead:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff80205eb1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff80205eb5:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
ffffffff80205eb9:	88 45 e7             	mov    %al,-0x19(%rbp)
ffffffff80205ebc:	44 89 45 e0          	mov    %r8d,-0x20(%rbp)
ffffffff80205ec0:	44 89 4d dc          	mov    %r9d,-0x24(%rbp)
ffffffff80205ec4:	89 4d d8             	mov    %ecx,-0x28(%rbp)
ffffffff80205ec7:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff80205ecb:	48 c1 ea 0c          	shr    $0xc,%rdx
ffffffff80205ecf:	48 c1 e2 0c          	shl    $0xc,%rdx
ffffffff80205ed3:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
ffffffff80205ed7:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff80205edb:	48 c1 ea 27          	shr    $0x27,%rdx
ffffffff80205edf:	48 81 e2 ff 01 00 00 	and    $0x1ff,%rdx
ffffffff80205ee6:	89 d1                	mov    %edx,%ecx
ffffffff80205ee8:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
ffffffff80205eeb:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff80205eef:	48 c1 ea 1e          	shr    $0x1e,%rdx
ffffffff80205ef3:	48 81 e2 ff 01 00 00 	and    $0x1ff,%rdx
ffffffff80205efa:	89 d1                	mov    %edx,%ecx
ffffffff80205efc:	89 4d d0             	mov    %ecx,-0x30(%rbp)
ffffffff80205eff:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff80205f03:	48 c1 ea 15          	shr    $0x15,%rdx
ffffffff80205f07:	48 81 e2 ff 01 00 00 	and    $0x1ff,%rdx
ffffffff80205f0e:	89 d1                	mov    %edx,%ecx
ffffffff80205f10:	89 4d cc             	mov    %ecx,-0x34(%rbp)
ffffffff80205f13:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff80205f17:	48 c1 ea 0c          	shr    $0xc,%rdx
ffffffff80205f1b:	48 81 e2 ff 01 00 00 	and    $0x1ff,%rdx
ffffffff80205f22:	89 d1                	mov    %edx,%ecx
ffffffff80205f24:	89 4d c8             	mov    %ecx,-0x38(%rbp)
ffffffff80205f27:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
ffffffff80205f2b:	8b 75 d4             	mov    -0x2c(%rbp),%esi
ffffffff80205f2e:	8b 55 d0             	mov    -0x30(%rbp),%edx
ffffffff80205f31:	8b 4d cc             	mov    -0x34(%rbp),%ecx
ffffffff80205f34:	e8 a7 01 00 00       	callq  ffffffff802060e0 <VirtMemMan_SetupPTEntry>
ffffffff80205f39:	31 c9                	xor    %ecx,%ecx
ffffffff80205f3b:	8b 55 d4             	mov    -0x2c(%rbp),%edx
ffffffff80205f3e:	89 d7                	mov    %edx,%edi
ffffffff80205f40:	4c 8b 55 f8          	mov    -0x8(%rbp),%r10
ffffffff80205f44:	49 bb 00 f0 ff ff ff 	movabs $0xffffffffffff000,%r11
ffffffff80205f4b:	ff ff 0f 
ffffffff80205f4e:	4d 23 1c fa          	and    (%r10,%rdi,8),%r11
ffffffff80205f52:	31 ff                	xor    %edi,%edi
ffffffff80205f54:	4c 89 de             	mov    %r11,%rsi
ffffffff80205f57:	89 4d ac             	mov    %ecx,-0x54(%rbp)
ffffffff80205f5a:	e8 d1 bd ff ff       	callq  ffffffff80201d30 <GetVirtualAddress>
ffffffff80205f5f:	31 c9                	xor    %ecx,%ecx
ffffffff80205f61:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
ffffffff80205f65:	8b 55 d0             	mov    -0x30(%rbp),%edx
ffffffff80205f68:	89 d0                	mov    %edx,%eax
ffffffff80205f6a:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
ffffffff80205f6e:	49 ba 00 f0 ff ff ff 	movabs $0xffffffffffff000,%r10
ffffffff80205f75:	ff ff 0f 
ffffffff80205f78:	4c 23 14 c6          	and    (%rsi,%rax,8),%r10
ffffffff80205f7c:	31 ff                	xor    %edi,%edi
ffffffff80205f7e:	4c 89 d6             	mov    %r10,%rsi
ffffffff80205f81:	89 4d a8             	mov    %ecx,-0x58(%rbp)
ffffffff80205f84:	e8 a7 bd ff ff       	callq  ffffffff80201d30 <GetVirtualAddress>
ffffffff80205f89:	31 c9                	xor    %ecx,%ecx
ffffffff80205f8b:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
ffffffff80205f8f:	8b 55 cc             	mov    -0x34(%rbp),%edx
ffffffff80205f92:	89 d0                	mov    %edx,%eax
ffffffff80205f94:	48 8b 75 b8          	mov    -0x48(%rbp),%rsi
ffffffff80205f98:	49 ba 00 f0 ff ff ff 	movabs $0xffffffffffff000,%r10
ffffffff80205f9f:	ff ff 0f 
ffffffff80205fa2:	4c 23 14 c6          	and    (%rsi,%rax,8),%r10
ffffffff80205fa6:	31 ff                	xor    %edi,%edi
ffffffff80205fa8:	4c 89 d6             	mov    %r10,%rsi
ffffffff80205fab:	89 4d a4             	mov    %ecx,-0x5c(%rbp)
ffffffff80205fae:	e8 7d bd ff ff       	callq  ffffffff80201d30 <GetVirtualAddress>
ffffffff80205fb3:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
ffffffff80205fb7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80205fbb:	8b 4d c8             	mov    -0x38(%rbp),%ecx
ffffffff80205fbe:	89 ce                	mov    %ecx,%esi
ffffffff80205fc0:	4c 8b 55 b0          	mov    -0x50(%rbp),%r10
ffffffff80205fc4:	49 89 04 f2          	mov    %rax,(%r10,%rsi,8)
ffffffff80205fc8:	80 7d e7 00          	cmpb   $0x0,-0x19(%rbp)
ffffffff80205fcc:	74 1e                	je     ffffffff80205fec <VirtMemMan_MapSPage+0x14c>
ffffffff80205fce:	8b 45 c8             	mov    -0x38(%rbp),%eax
ffffffff80205fd1:	89 c1                	mov    %eax,%ecx
ffffffff80205fd3:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
ffffffff80205fd7:	48 8b 0c ca          	mov    (%rdx,%rcx,8),%rcx
ffffffff80205fdb:	48 83 c9 01          	or     $0x1,%rcx
ffffffff80205fdf:	8b 45 c8             	mov    -0x38(%rbp),%eax
ffffffff80205fe2:	89 c2                	mov    %eax,%edx
ffffffff80205fe4:	48 8b 75 b0          	mov    -0x50(%rbp),%rsi
ffffffff80205fe8:	48 89 0c d6          	mov    %rcx,(%rsi,%rdx,8)
ffffffff80205fec:	8b 45 c8             	mov    -0x38(%rbp),%eax
ffffffff80205fef:	89 c1                	mov    %eax,%ecx
ffffffff80205ff1:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
ffffffff80205ff5:	48 8b 0c ca          	mov    (%rdx,%rcx,8),%rcx
ffffffff80205ff9:	8b 45 e0             	mov    -0x20(%rbp),%eax
ffffffff80205ffc:	c1 e0 03             	shl    $0x3,%eax
ffffffff80205fff:	89 c0                	mov    %eax,%eax
ffffffff80206001:	89 c2                	mov    %eax,%edx
ffffffff80206003:	48 09 d1             	or     %rdx,%rcx
ffffffff80206006:	8b 45 c8             	mov    -0x38(%rbp),%eax
ffffffff80206009:	89 c2                	mov    %eax,%edx
ffffffff8020600b:	48 8b 75 b0          	mov    -0x50(%rbp),%rsi
ffffffff8020600f:	48 89 0c d6          	mov    %rcx,(%rsi,%rdx,8)
ffffffff80206013:	8b 45 dc             	mov    -0x24(%rbp),%eax
ffffffff80206016:	83 e0 02             	and    $0x2,%eax
ffffffff80206019:	83 f8 00             	cmp    $0x0,%eax
ffffffff8020601c:	74 1e                	je     ffffffff8020603c <VirtMemMan_MapSPage+0x19c>
ffffffff8020601e:	8b 45 c8             	mov    -0x38(%rbp),%eax
ffffffff80206021:	89 c1                	mov    %eax,%ecx
ffffffff80206023:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
ffffffff80206027:	48 8b 0c ca          	mov    (%rdx,%rcx,8),%rcx
ffffffff8020602b:	48 83 c9 02          	or     $0x2,%rcx
ffffffff8020602f:	8b 45 c8             	mov    -0x38(%rbp),%eax
ffffffff80206032:	89 c2                	mov    %eax,%edx
ffffffff80206034:	48 8b 75 b0          	mov    -0x50(%rbp),%rsi
ffffffff80206038:	48 89 0c d6          	mov    %rcx,(%rsi,%rdx,8)
ffffffff8020603c:	8b 45 dc             	mov    -0x24(%rbp),%eax
ffffffff8020603f:	83 e0 01             	and    $0x1,%eax
ffffffff80206042:	83 f8 00             	cmp    $0x0,%eax
ffffffff80206045:	74 26                	je     ffffffff8020606d <VirtMemMan_MapSPage+0x1cd>
ffffffff80206047:	8b 45 c8             	mov    -0x38(%rbp),%eax
ffffffff8020604a:	89 c1                	mov    %eax,%ecx
ffffffff8020604c:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
ffffffff80206050:	48 be ff ff ff ff ff 	movabs $0x7fffffffffffffff,%rsi
ffffffff80206057:	ff ff 7f 
ffffffff8020605a:	48 23 34 ca          	and    (%rdx,%rcx,8),%rsi
ffffffff8020605e:	8b 45 c8             	mov    -0x38(%rbp),%eax
ffffffff80206061:	89 c1                	mov    %eax,%ecx
ffffffff80206063:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
ffffffff80206067:	48 89 34 ca          	mov    %rsi,(%rdx,%rcx,8)
ffffffff8020606b:	eb 24                	jmp    ffffffff80206091 <VirtMemMan_MapSPage+0x1f1>
ffffffff8020606d:	8b 45 c8             	mov    -0x38(%rbp),%eax
ffffffff80206070:	89 c1                	mov    %eax,%ecx
ffffffff80206072:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
ffffffff80206076:	48 be 00 00 00 00 00 	movabs $0x8000000000000000,%rsi
ffffffff8020607d:	00 00 80 
ffffffff80206080:	48 0b 34 ca          	or     (%rdx,%rcx,8),%rsi
ffffffff80206084:	8b 45 c8             	mov    -0x38(%rbp),%eax
ffffffff80206087:	89 c1                	mov    %eax,%ecx
ffffffff80206089:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
ffffffff8020608d:	48 89 34 ca          	mov    %rsi,(%rdx,%rcx,8)
ffffffff80206091:	8b 45 d8             	mov    -0x28(%rbp),%eax
ffffffff80206094:	83 e0 01             	and    $0x1,%eax
ffffffff80206097:	83 f8 00             	cmp    $0x0,%eax
ffffffff8020609a:	74 1e                	je     ffffffff802060ba <VirtMemMan_MapSPage+0x21a>
ffffffff8020609c:	8b 45 c8             	mov    -0x38(%rbp),%eax
ffffffff8020609f:	89 c1                	mov    %eax,%ecx
ffffffff802060a1:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
ffffffff802060a5:	48 8b 0c ca          	mov    (%rdx,%rcx,8),%rcx
ffffffff802060a9:	48 83 c9 04          	or     $0x4,%rcx
ffffffff802060ad:	8b 45 c8             	mov    -0x38(%rbp),%eax
ffffffff802060b0:	89 c2                	mov    %eax,%edx
ffffffff802060b2:	48 8b 75 b0          	mov    -0x50(%rbp),%rsi
ffffffff802060b6:	48 89 0c d6          	mov    %rcx,(%rsi,%rdx,8)
ffffffff802060ba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff802060be:	48 8b 0c 25 08 8d 28 	mov    0xffffffff80288d08,%rcx
ffffffff802060c5:	80 
ffffffff802060c6:	48 8b 49 08          	mov    0x8(%rcx),%rcx
ffffffff802060ca:	48 39 c8             	cmp    %rcx,%rax
ffffffff802060cd:	75 07                	jne    ffffffff802060d6 <VirtMemMan_MapSPage+0x236>
ffffffff802060cf:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff802060d3:	0f 01 38             	invlpg (%rax)
ffffffff802060d6:	48 83 c4 60          	add    $0x60,%rsp
ffffffff802060da:	5d                   	pop    %rbp
ffffffff802060db:	c3                   	retq   
ffffffff802060dc:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff802060e0 <VirtMemMan_SetupPTEntry>:
ffffffff802060e0:	55                   	push   %rbp
ffffffff802060e1:	48 89 e5             	mov    %rsp,%rbp
ffffffff802060e4:	48 83 ec 30          	sub    $0x30,%rsp
ffffffff802060e8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff802060ec:	89 75 f4             	mov    %esi,-0xc(%rbp)
ffffffff802060ef:	89 55 f0             	mov    %edx,-0x10(%rbp)
ffffffff802060f2:	89 4d ec             	mov    %ecx,-0x14(%rbp)
ffffffff802060f5:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
ffffffff802060f9:	8b 75 f4             	mov    -0xc(%rbp),%esi
ffffffff802060fc:	8b 55 f0             	mov    -0x10(%rbp),%edx
ffffffff802060ff:	e8 6c fc ff ff       	callq  ffffffff80205d70 <VirtMemMan_SetupPDEntry>
ffffffff80206104:	31 c9                	xor    %ecx,%ecx
ffffffff80206106:	8b 55 f4             	mov    -0xc(%rbp),%edx
ffffffff80206109:	89 d7                	mov    %edx,%edi
ffffffff8020610b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8020610f:	49 b8 00 f0 ff ff ff 	movabs $0xffffffffffff000,%r8
ffffffff80206116:	ff ff 0f 
ffffffff80206119:	4c 23 04 f8          	and    (%rax,%rdi,8),%r8
ffffffff8020611d:	31 ff                	xor    %edi,%edi
ffffffff8020611f:	4c 89 c6             	mov    %r8,%rsi
ffffffff80206122:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
ffffffff80206125:	e8 06 bc ff ff       	callq  ffffffff80201d30 <GetVirtualAddress>
ffffffff8020612a:	31 c9                	xor    %ecx,%ecx
ffffffff8020612c:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
ffffffff80206130:	8b 55 f0             	mov    -0x10(%rbp),%edx
ffffffff80206133:	89 d0                	mov    %edx,%eax
ffffffff80206135:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
ffffffff80206139:	49 b8 00 f0 ff ff ff 	movabs $0xffffffffffff000,%r8
ffffffff80206140:	ff ff 0f 
ffffffff80206143:	4c 23 04 c6          	and    (%rsi,%rax,8),%r8
ffffffff80206147:	31 ff                	xor    %edi,%edi
ffffffff80206149:	4c 89 c6             	mov    %r8,%rsi
ffffffff8020614c:	89 4d d0             	mov    %ecx,-0x30(%rbp)
ffffffff8020614f:	e8 dc bb ff ff       	callq  ffffffff80201d30 <GetVirtualAddress>
ffffffff80206154:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
ffffffff80206158:	8b 4d ec             	mov    -0x14(%rbp),%ecx
ffffffff8020615b:	89 c8                	mov    %ecx,%eax
ffffffff8020615d:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
ffffffff80206161:	49 b8 00 f0 ff ff ff 	movabs $0xffffffffffff000,%r8
ffffffff80206168:	ff ff 0f 
ffffffff8020616b:	4c 23 04 c6          	and    (%rsi,%rax,8),%r8
ffffffff8020616f:	49 83 f8 00          	cmp    $0x0,%r8
ffffffff80206173:	41 0f 94 c1          	sete   %r9b
ffffffff80206177:	41 80 e1 01          	and    $0x1,%r9b
ffffffff8020617b:	41 0f b6 c9          	movzbl %r9b,%ecx
ffffffff8020617f:	8b 55 ec             	mov    -0x14(%rbp),%edx
ffffffff80206182:	89 d0                	mov    %edx,%eax
ffffffff80206184:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
ffffffff80206188:	48 8b 04 c6          	mov    (%rsi,%rax,8),%rax
ffffffff8020618c:	48 25 80 00 00 00    	and    $0x80,%rax
ffffffff80206192:	48 83 f8 01          	cmp    $0x1,%rax
ffffffff80206196:	41 0f 94 c1          	sete   %r9b
ffffffff8020619a:	41 80 e1 01          	and    $0x1,%r9b
ffffffff8020619e:	41 0f b6 d1          	movzbl %r9b,%edx
ffffffff802061a2:	09 d1                	or     %edx,%ecx
ffffffff802061a4:	83 f9 00             	cmp    $0x0,%ecx
ffffffff802061a7:	0f 84 86 00 00 00    	je     ffffffff80206233 <VirtMemMan_SetupPTEntry+0x153>
ffffffff802061ad:	e8 ee e6 ff ff       	callq  ffffffff802048a0 <MemMan_Alloc>
ffffffff802061b2:	8b 4d ec             	mov    -0x14(%rbp),%ecx
ffffffff802061b5:	89 ca                	mov    %ecx,%edx
ffffffff802061b7:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
ffffffff802061bb:	48 89 04 d6          	mov    %rax,(%rsi,%rdx,8)
ffffffff802061bf:	8b 4d ec             	mov    -0x14(%rbp),%ecx
ffffffff802061c2:	89 c8                	mov    %ecx,%eax
ffffffff802061c4:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
ffffffff802061c8:	48 8b 04 c2          	mov    (%rdx,%rax,8),%rax
ffffffff802061cc:	48 83 c8 01          	or     $0x1,%rax
ffffffff802061d0:	8b 4d ec             	mov    -0x14(%rbp),%ecx
ffffffff802061d3:	89 ca                	mov    %ecx,%edx
ffffffff802061d5:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
ffffffff802061d9:	48 89 04 d6          	mov    %rax,(%rsi,%rdx,8)
ffffffff802061dd:	8b 4d ec             	mov    -0x14(%rbp),%ecx
ffffffff802061e0:	89 c8                	mov    %ecx,%eax
ffffffff802061e2:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
ffffffff802061e6:	48 8b 04 c2          	mov    (%rdx,%rax,8),%rax
ffffffff802061ea:	48 83 c8 02          	or     $0x2,%rax
ffffffff802061ee:	8b 4d ec             	mov    -0x14(%rbp),%ecx
ffffffff802061f1:	89 ca                	mov    %ecx,%edx
ffffffff802061f3:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
ffffffff802061f7:	48 89 04 d6          	mov    %rax,(%rsi,%rdx,8)
ffffffff802061fb:	8b 4d ec             	mov    -0x14(%rbp),%ecx
ffffffff802061fe:	89 c8                	mov    %ecx,%eax
ffffffff80206200:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
ffffffff80206204:	48 8b 04 c2          	mov    (%rdx,%rax,8),%rax
ffffffff80206208:	48 83 c8 04          	or     $0x4,%rax
ffffffff8020620c:	8b 4d ec             	mov    -0x14(%rbp),%ecx
ffffffff8020620f:	89 ca                	mov    %ecx,%edx
ffffffff80206211:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
ffffffff80206215:	48 89 04 d6          	mov    %rax,(%rsi,%rdx,8)
ffffffff80206219:	8b 4d ec             	mov    -0x14(%rbp),%ecx
ffffffff8020621c:	89 c8                	mov    %ecx,%eax
ffffffff8020621e:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
ffffffff80206222:	48 8b 04 c2          	mov    (%rdx,%rax,8),%rax
ffffffff80206226:	8b 4d ec             	mov    -0x14(%rbp),%ecx
ffffffff80206229:	89 ca                	mov    %ecx,%edx
ffffffff8020622b:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
ffffffff8020622f:	48 89 04 d6          	mov    %rax,(%rsi,%rdx,8)
ffffffff80206233:	48 83 c4 30          	add    $0x30,%rsp
ffffffff80206237:	5d                   	pop    %rbp
ffffffff80206238:	c3                   	retq   
ffffffff80206239:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

ffffffff80206240 <VirtMemMan_UnmapSPage>:
ffffffff80206240:	55                   	push   %rbp
ffffffff80206241:	48 89 e5             	mov    %rsp,%rbp
ffffffff80206244:	48 83 ec 60          	sub    $0x60,%rsp
ffffffff80206248:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8020624c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff80206250:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
ffffffff80206254:	48 c1 ee 27          	shr    $0x27,%rsi
ffffffff80206258:	48 81 e6 ff 01 00 00 	and    $0x1ff,%rsi
ffffffff8020625f:	89 f0                	mov    %esi,%eax
ffffffff80206261:	89 45 ec             	mov    %eax,-0x14(%rbp)
ffffffff80206264:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
ffffffff80206268:	48 c1 ee 1e          	shr    $0x1e,%rsi
ffffffff8020626c:	48 81 e6 ff 01 00 00 	and    $0x1ff,%rsi
ffffffff80206273:	89 f0                	mov    %esi,%eax
ffffffff80206275:	89 45 e8             	mov    %eax,-0x18(%rbp)
ffffffff80206278:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
ffffffff8020627c:	48 c1 ee 15          	shr    $0x15,%rsi
ffffffff80206280:	48 81 e6 ff 01 00 00 	and    $0x1ff,%rsi
ffffffff80206287:	89 f0                	mov    %esi,%eax
ffffffff80206289:	89 45 e4             	mov    %eax,-0x1c(%rbp)
ffffffff8020628c:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
ffffffff80206290:	48 c1 ee 0c          	shr    $0xc,%rsi
ffffffff80206294:	48 81 e6 ff 01 00 00 	and    $0x1ff,%rsi
ffffffff8020629b:	89 f0                	mov    %esi,%eax
ffffffff8020629d:	89 45 e0             	mov    %eax,-0x20(%rbp)
ffffffff802062a0:	8b 45 ec             	mov    -0x14(%rbp),%eax
ffffffff802062a3:	89 c6                	mov    %eax,%esi
ffffffff802062a5:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
ffffffff802062a9:	48 b9 00 f0 ff ff ff 	movabs $0xffffffffffff000,%rcx
ffffffff802062b0:	ff ff 0f 
ffffffff802062b3:	48 23 0c f7          	and    (%rdi,%rsi,8),%rcx
ffffffff802062b7:	48 83 f9 00          	cmp    $0x0,%rcx
ffffffff802062bb:	0f 84 f7 00 00 00    	je     ffffffff802063b8 <VirtMemMan_UnmapSPage+0x178>
ffffffff802062c1:	31 c0                	xor    %eax,%eax
ffffffff802062c3:	8b 4d ec             	mov    -0x14(%rbp),%ecx
ffffffff802062c6:	89 ca                	mov    %ecx,%edx
ffffffff802062c8:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
ffffffff802062cc:	48 bf 00 f0 ff ff ff 	movabs $0xffffffffffff000,%rdi
ffffffff802062d3:	ff ff 0f 
ffffffff802062d6:	48 23 3c d6          	and    (%rsi,%rdx,8),%rdi
ffffffff802062da:	31 c9                	xor    %ecx,%ecx
ffffffff802062dc:	48 89 7d c0          	mov    %rdi,-0x40(%rbp)
ffffffff802062e0:	89 cf                	mov    %ecx,%edi
ffffffff802062e2:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
ffffffff802062e6:	89 45 bc             	mov    %eax,-0x44(%rbp)
ffffffff802062e9:	e8 42 ba ff ff       	callq  ffffffff80201d30 <GetVirtualAddress>
ffffffff802062ee:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
ffffffff802062f2:	8b 4d e8             	mov    -0x18(%rbp),%ecx
ffffffff802062f5:	89 c8                	mov    %ecx,%eax
ffffffff802062f7:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
ffffffff802062fb:	48 be 00 f0 ff ff ff 	movabs $0xffffffffffff000,%rsi
ffffffff80206302:	ff ff 0f 
ffffffff80206305:	48 23 34 c2          	and    (%rdx,%rax,8),%rsi
ffffffff80206309:	48 83 fe 00          	cmp    $0x0,%rsi
ffffffff8020630d:	0f 84 a3 00 00 00    	je     ffffffff802063b6 <VirtMemMan_UnmapSPage+0x176>
ffffffff80206313:	31 c0                	xor    %eax,%eax
ffffffff80206315:	8b 4d e8             	mov    -0x18(%rbp),%ecx
ffffffff80206318:	89 ca                	mov    %ecx,%edx
ffffffff8020631a:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
ffffffff8020631e:	48 bf 00 f0 ff ff ff 	movabs $0xffffffffffff000,%rdi
ffffffff80206325:	ff ff 0f 
ffffffff80206328:	48 23 3c d6          	and    (%rsi,%rdx,8),%rdi
ffffffff8020632c:	31 c9                	xor    %ecx,%ecx
ffffffff8020632e:	48 89 7d b0          	mov    %rdi,-0x50(%rbp)
ffffffff80206332:	89 cf                	mov    %ecx,%edi
ffffffff80206334:	48 8b 75 b0          	mov    -0x50(%rbp),%rsi
ffffffff80206338:	89 45 ac             	mov    %eax,-0x54(%rbp)
ffffffff8020633b:	e8 f0 b9 ff ff       	callq  ffffffff80201d30 <GetVirtualAddress>
ffffffff80206340:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
ffffffff80206344:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
ffffffff80206347:	89 c8                	mov    %ecx,%eax
ffffffff80206349:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
ffffffff8020634d:	48 be 00 f0 ff ff ff 	movabs $0xffffffffffff000,%rsi
ffffffff80206354:	ff ff 0f 
ffffffff80206357:	48 23 34 c2          	and    (%rdx,%rax,8),%rsi
ffffffff8020635b:	48 83 fe 00          	cmp    $0x0,%rsi
ffffffff8020635f:	74 53                	je     ffffffff802063b4 <VirtMemMan_UnmapSPage+0x174>
ffffffff80206361:	8b 45 e4             	mov    -0x1c(%rbp),%eax
ffffffff80206364:	89 c1                	mov    %eax,%ecx
ffffffff80206366:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
ffffffff8020636a:	48 8b 0c ca          	mov    (%rdx,%rcx,8),%rcx
ffffffff8020636e:	48 ba 00 f0 ff ff ff 	movabs $0xffffffffffff000,%rdx
ffffffff80206375:	ff ff 0f 
ffffffff80206378:	48 21 d1             	and    %rdx,%rcx
ffffffff8020637b:	31 ff                	xor    %edi,%edi
ffffffff8020637d:	48 89 ce             	mov    %rcx,%rsi
ffffffff80206380:	e8 ab b9 ff ff       	callq  ffffffff80201d30 <GetVirtualAddress>
ffffffff80206385:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
ffffffff80206389:	8b 7d e0             	mov    -0x20(%rbp),%edi
ffffffff8020638c:	89 f9                	mov    %edi,%ecx
ffffffff8020638e:	48 c7 04 c8 00 00 00 	movq   $0x0,(%rax,%rcx,8)
ffffffff80206395:	00 
ffffffff80206396:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8020639a:	48 8b 0c 25 08 8d 28 	mov    0xffffffff80288d08,%rcx
ffffffff802063a1:	80 
ffffffff802063a2:	48 8b 49 08          	mov    0x8(%rcx),%rcx
ffffffff802063a6:	48 39 c8             	cmp    %rcx,%rax
ffffffff802063a9:	75 07                	jne    ffffffff802063b2 <VirtMemMan_UnmapSPage+0x172>
ffffffff802063ab:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff802063af:	0f 01 38             	invlpg (%rax)
ffffffff802063b2:	eb 00                	jmp    ffffffff802063b4 <VirtMemMan_UnmapSPage+0x174>
ffffffff802063b4:	eb 00                	jmp    ffffffff802063b6 <VirtMemMan_UnmapSPage+0x176>
ffffffff802063b6:	eb 00                	jmp    ffffffff802063b8 <VirtMemMan_UnmapSPage+0x178>
ffffffff802063b8:	48 83 c4 60          	add    $0x60,%rsp
ffffffff802063bc:	5d                   	pop    %rbp
ffffffff802063bd:	c3                   	retq   
ffffffff802063be:	66 90                	xchg   %ax,%ax

ffffffff802063c0 <VirtMemMan_UnmapLPage>:
ffffffff802063c0:	55                   	push   %rbp
ffffffff802063c1:	48 89 e5             	mov    %rsp,%rbp
ffffffff802063c4:	48 83 ec 40          	sub    $0x40,%rsp
ffffffff802063c8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff802063cc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff802063d0:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
ffffffff802063d4:	48 c1 ee 27          	shr    $0x27,%rsi
ffffffff802063d8:	48 81 e6 ff 01 00 00 	and    $0x1ff,%rsi
ffffffff802063df:	89 f0                	mov    %esi,%eax
ffffffff802063e1:	89 45 ec             	mov    %eax,-0x14(%rbp)
ffffffff802063e4:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
ffffffff802063e8:	48 c1 ee 1e          	shr    $0x1e,%rsi
ffffffff802063ec:	48 81 e6 ff 01 00 00 	and    $0x1ff,%rsi
ffffffff802063f3:	89 f0                	mov    %esi,%eax
ffffffff802063f5:	89 45 e8             	mov    %eax,-0x18(%rbp)
ffffffff802063f8:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
ffffffff802063fc:	48 c1 ee 15          	shr    $0x15,%rsi
ffffffff80206400:	48 81 e6 ff 01 00 00 	and    $0x1ff,%rsi
ffffffff80206407:	89 f0                	mov    %esi,%eax
ffffffff80206409:	89 45 e4             	mov    %eax,-0x1c(%rbp)
ffffffff8020640c:	8b 45 ec             	mov    -0x14(%rbp),%eax
ffffffff8020640f:	89 c6                	mov    %eax,%esi
ffffffff80206411:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
ffffffff80206415:	48 b9 00 f0 ff ff ff 	movabs $0xffffffffffff000,%rcx
ffffffff8020641c:	ff ff 0f 
ffffffff8020641f:	48 23 0c f7          	and    (%rdi,%rsi,8),%rcx
ffffffff80206423:	48 83 f9 00          	cmp    $0x0,%rcx
ffffffff80206427:	0f 84 a3 00 00 00    	je     ffffffff802064d0 <VirtMemMan_UnmapLPage+0x110>
ffffffff8020642d:	31 c0                	xor    %eax,%eax
ffffffff8020642f:	8b 4d ec             	mov    -0x14(%rbp),%ecx
ffffffff80206432:	89 ca                	mov    %ecx,%edx
ffffffff80206434:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
ffffffff80206438:	48 bf 00 f0 ff ff ff 	movabs $0xffffffffffff000,%rdi
ffffffff8020643f:	ff ff 0f 
ffffffff80206442:	48 23 3c d6          	and    (%rsi,%rdx,8),%rdi
ffffffff80206446:	31 c9                	xor    %ecx,%ecx
ffffffff80206448:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
ffffffff8020644c:	89 cf                	mov    %ecx,%edi
ffffffff8020644e:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
ffffffff80206452:	89 45 c4             	mov    %eax,-0x3c(%rbp)
ffffffff80206455:	e8 d6 b8 ff ff       	callq  ffffffff80201d30 <GetVirtualAddress>
ffffffff8020645a:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
ffffffff8020645e:	8b 4d e8             	mov    -0x18(%rbp),%ecx
ffffffff80206461:	89 c8                	mov    %ecx,%eax
ffffffff80206463:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
ffffffff80206467:	48 be 00 f0 ff ff ff 	movabs $0xffffffffffff000,%rsi
ffffffff8020646e:	ff ff 0f 
ffffffff80206471:	48 23 34 c2          	and    (%rdx,%rax,8),%rsi
ffffffff80206475:	48 83 fe 00          	cmp    $0x0,%rsi
ffffffff80206479:	74 53                	je     ffffffff802064ce <VirtMemMan_UnmapLPage+0x10e>
ffffffff8020647b:	8b 45 e8             	mov    -0x18(%rbp),%eax
ffffffff8020647e:	89 c1                	mov    %eax,%ecx
ffffffff80206480:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
ffffffff80206484:	48 8b 0c ca          	mov    (%rdx,%rcx,8),%rcx
ffffffff80206488:	48 ba 00 f0 ff ff ff 	movabs $0xffffffffffff000,%rdx
ffffffff8020648f:	ff ff 0f 
ffffffff80206492:	48 21 d1             	and    %rdx,%rcx
ffffffff80206495:	31 ff                	xor    %edi,%edi
ffffffff80206497:	48 89 ce             	mov    %rcx,%rsi
ffffffff8020649a:	e8 91 b8 ff ff       	callq  ffffffff80201d30 <GetVirtualAddress>
ffffffff8020649f:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
ffffffff802064a3:	8b 7d e4             	mov    -0x1c(%rbp),%edi
ffffffff802064a6:	89 f9                	mov    %edi,%ecx
ffffffff802064a8:	48 c7 04 c8 00 00 00 	movq   $0x0,(%rax,%rcx,8)
ffffffff802064af:	00 
ffffffff802064b0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff802064b4:	48 8b 0c 25 08 8d 28 	mov    0xffffffff80288d08,%rcx
ffffffff802064bb:	80 
ffffffff802064bc:	48 8b 49 08          	mov    0x8(%rcx),%rcx
ffffffff802064c0:	48 39 c8             	cmp    %rcx,%rax
ffffffff802064c3:	75 07                	jne    ffffffff802064cc <VirtMemMan_UnmapLPage+0x10c>
ffffffff802064c5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff802064c9:	0f 01 38             	invlpg (%rax)
ffffffff802064cc:	eb 00                	jmp    ffffffff802064ce <VirtMemMan_UnmapLPage+0x10e>
ffffffff802064ce:	eb 00                	jmp    ffffffff802064d0 <VirtMemMan_UnmapLPage+0x110>
ffffffff802064d0:	48 83 c4 40          	add    $0x40,%rsp
ffffffff802064d4:	5d                   	pop    %rbp
ffffffff802064d5:	c3                   	retq   
ffffffff802064d6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff802064dd:	00 00 00 

ffffffff802064e0 <VirtMemMan_UnmapHPage>:
ffffffff802064e0:	55                   	push   %rbp
ffffffff802064e1:	48 89 e5             	mov    %rsp,%rbp
ffffffff802064e4:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff802064e8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff802064ec:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff802064f0:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
ffffffff802064f4:	48 c1 ee 27          	shr    $0x27,%rsi
ffffffff802064f8:	48 81 e6 ff 01 00 00 	and    $0x1ff,%rsi
ffffffff802064ff:	89 f0                	mov    %esi,%eax
ffffffff80206501:	89 45 ec             	mov    %eax,-0x14(%rbp)
ffffffff80206504:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
ffffffff80206508:	48 c1 ee 1e          	shr    $0x1e,%rsi
ffffffff8020650c:	48 81 e6 ff 01 00 00 	and    $0x1ff,%rsi
ffffffff80206513:	89 f0                	mov    %esi,%eax
ffffffff80206515:	89 45 e8             	mov    %eax,-0x18(%rbp)
ffffffff80206518:	8b 45 ec             	mov    -0x14(%rbp),%eax
ffffffff8020651b:	89 c6                	mov    %eax,%esi
ffffffff8020651d:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
ffffffff80206521:	48 b9 00 f0 ff ff ff 	movabs $0xffffffffffff000,%rcx
ffffffff80206528:	ff ff 0f 
ffffffff8020652b:	48 23 0c f7          	and    (%rdi,%rsi,8),%rcx
ffffffff8020652f:	48 83 f9 00          	cmp    $0x0,%rcx
ffffffff80206533:	74 53                	je     ffffffff80206588 <VirtMemMan_UnmapHPage+0xa8>
ffffffff80206535:	8b 45 ec             	mov    -0x14(%rbp),%eax
ffffffff80206538:	89 c1                	mov    %eax,%ecx
ffffffff8020653a:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
ffffffff8020653e:	48 8b 0c ca          	mov    (%rdx,%rcx,8),%rcx
ffffffff80206542:	48 ba 00 f0 ff ff ff 	movabs $0xffffffffffff000,%rdx
ffffffff80206549:	ff ff 0f 
ffffffff8020654c:	48 21 d1             	and    %rdx,%rcx
ffffffff8020654f:	31 ff                	xor    %edi,%edi
ffffffff80206551:	48 89 ce             	mov    %rcx,%rsi
ffffffff80206554:	e8 d7 b7 ff ff       	callq  ffffffff80201d30 <GetVirtualAddress>
ffffffff80206559:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
ffffffff8020655d:	8b 7d e8             	mov    -0x18(%rbp),%edi
ffffffff80206560:	89 f9                	mov    %edi,%ecx
ffffffff80206562:	48 c7 04 c8 00 00 00 	movq   $0x0,(%rax,%rcx,8)
ffffffff80206569:	00 
ffffffff8020656a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8020656e:	48 8b 0c 25 08 8d 28 	mov    0xffffffff80288d08,%rcx
ffffffff80206575:	80 
ffffffff80206576:	48 8b 49 08          	mov    0x8(%rcx),%rcx
ffffffff8020657a:	48 39 c8             	cmp    %rcx,%rax
ffffffff8020657d:	75 07                	jne    ffffffff80206586 <VirtMemMan_UnmapHPage+0xa6>
ffffffff8020657f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80206583:	0f 01 38             	invlpg (%rax)
ffffffff80206586:	eb 00                	jmp    ffffffff80206588 <VirtMemMan_UnmapHPage+0xa8>
ffffffff80206588:	48 83 c4 20          	add    $0x20,%rsp
ffffffff8020658c:	5d                   	pop    %rbp
ffffffff8020658d:	c3                   	retq   
ffffffff8020658e:	66 90                	xchg   %ax,%ax

ffffffff80206590 <VirtMemMan_Unmap>:
ffffffff80206590:	55                   	push   %rbp
ffffffff80206591:	48 89 e5             	mov    %rsp,%rbp
ffffffff80206594:	48 83 ec 30          	sub    $0x30,%rsp
ffffffff80206598:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8020659c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff802065a0:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
ffffffff802065a4:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
ffffffff802065a9:	0f 86 9d 01 00 00    	jbe    ffffffff8020674c <VirtMemMan_Unmap+0x1bc>
ffffffff802065af:	48 81 7d e8 00 10 00 	cmpq   $0x1000,-0x18(%rbp)
ffffffff802065b6:	00 
ffffffff802065b7:	75 20                	jne    ffffffff802065d9 <VirtMemMan_Unmap+0x49>
ffffffff802065b9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff802065bd:	48 2d 00 10 00 00    	sub    $0x1000,%rax
ffffffff802065c3:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff802065c7:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
ffffffff802065cb:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
ffffffff802065cf:	e8 6c fc ff ff       	callq  ffffffff80206240 <VirtMemMan_UnmapSPage>
ffffffff802065d4:	e9 6e 01 00 00       	jmpq   ffffffff80206747 <VirtMemMan_Unmap+0x1b7>
ffffffff802065d9:	48 81 7d e8 00 00 20 	cmpq   $0x200000,-0x18(%rbp)
ffffffff802065e0:	00 
ffffffff802065e1:	75 20                	jne    ffffffff80206603 <VirtMemMan_Unmap+0x73>
ffffffff802065e3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff802065e7:	48 2d 00 00 20 00    	sub    $0x200000,%rax
ffffffff802065ed:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff802065f1:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
ffffffff802065f5:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
ffffffff802065f9:	e8 c2 fd ff ff       	callq  ffffffff802063c0 <VirtMemMan_UnmapLPage>
ffffffff802065fe:	e9 42 01 00 00       	jmpq   ffffffff80206745 <VirtMemMan_Unmap+0x1b5>
ffffffff80206603:	48 81 7d e8 00 00 00 	cmpq   $0x40000000,-0x18(%rbp)
ffffffff8020660a:	40 
ffffffff8020660b:	75 20                	jne    ffffffff8020662d <VirtMemMan_Unmap+0x9d>
ffffffff8020660d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80206611:	48 2d 00 00 00 40    	sub    $0x40000000,%rax
ffffffff80206617:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff8020661b:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
ffffffff8020661f:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
ffffffff80206623:	e8 b8 fe ff ff       	callq  ffffffff802064e0 <VirtMemMan_UnmapHPage>
ffffffff80206628:	e9 16 01 00 00       	jmpq   ffffffff80206743 <VirtMemMan_Unmap+0x1b3>
ffffffff8020662d:	48 81 7d e8 00 00 00 	cmpq   $0x40000000,-0x18(%rbp)
ffffffff80206634:	40 
ffffffff80206635:	72 52                	jb     ffffffff80206689 <VirtMemMan_Unmap+0xf9>
ffffffff80206637:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8020663b:	48 25 ff ff ff 3f    	and    $0x3fffffff,%rax
ffffffff80206641:	48 83 f8 00          	cmp    $0x0,%rax
ffffffff80206645:	75 42                	jne    ffffffff80206689 <VirtMemMan_Unmap+0xf9>
ffffffff80206647:	b8 00 00 00 40       	mov    $0x40000000,%eax
ffffffff8020664c:	89 c1                	mov    %eax,%ecx
ffffffff8020664e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff80206652:	48 81 ea 00 00 00 40 	sub    $0x40000000,%rdx
ffffffff80206659:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
ffffffff8020665d:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
ffffffff80206661:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
ffffffff80206665:	b8 00 00 00 40       	mov    $0x40000000,%eax
ffffffff8020666a:	89 c2                	mov    %eax,%edx
ffffffff8020666c:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
ffffffff80206670:	e8 1b ff ff ff       	callq  ffffffff80206590 <VirtMemMan_Unmap>
ffffffff80206675:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
ffffffff80206679:	48 81 c1 00 00 00 40 	add    $0x40000000,%rcx
ffffffff80206680:	48 89 4d f0          	mov    %rcx,-0x10(%rbp)
ffffffff80206684:	e9 b8 00 00 00       	jmpq   ffffffff80206741 <VirtMemMan_Unmap+0x1b1>
ffffffff80206689:	48 81 7d e8 00 00 20 	cmpq   $0x200000,-0x18(%rbp)
ffffffff80206690:	00 
ffffffff80206691:	72 4f                	jb     ffffffff802066e2 <VirtMemMan_Unmap+0x152>
ffffffff80206693:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80206697:	48 25 ff ff 1f 00    	and    $0x1fffff,%rax
ffffffff8020669d:	48 83 f8 00          	cmp    $0x0,%rax
ffffffff802066a1:	75 3f                	jne    ffffffff802066e2 <VirtMemMan_Unmap+0x152>
ffffffff802066a3:	b8 00 00 20 00       	mov    $0x200000,%eax
ffffffff802066a8:	89 c1                	mov    %eax,%ecx
ffffffff802066aa:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff802066ae:	48 81 ea 00 00 20 00 	sub    $0x200000,%rdx
ffffffff802066b5:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
ffffffff802066b9:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
ffffffff802066bd:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
ffffffff802066c1:	b8 00 00 20 00       	mov    $0x200000,%eax
ffffffff802066c6:	89 c2                	mov    %eax,%edx
ffffffff802066c8:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
ffffffff802066cc:	e8 bf fe ff ff       	callq  ffffffff80206590 <VirtMemMan_Unmap>
ffffffff802066d1:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
ffffffff802066d5:	48 81 c1 00 00 20 00 	add    $0x200000,%rcx
ffffffff802066dc:	48 89 4d f0          	mov    %rcx,-0x10(%rbp)
ffffffff802066e0:	eb 5d                	jmp    ffffffff8020673f <VirtMemMan_Unmap+0x1af>
ffffffff802066e2:	48 81 7d e8 00 10 00 	cmpq   $0x1000,-0x18(%rbp)
ffffffff802066e9:	00 
ffffffff802066ea:	72 4f                	jb     ffffffff8020673b <VirtMemMan_Unmap+0x1ab>
ffffffff802066ec:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff802066f0:	48 25 ff 0f 00 00    	and    $0xfff,%rax
ffffffff802066f6:	48 83 f8 00          	cmp    $0x0,%rax
ffffffff802066fa:	75 3f                	jne    ffffffff8020673b <VirtMemMan_Unmap+0x1ab>
ffffffff802066fc:	b8 00 10 00 00       	mov    $0x1000,%eax
ffffffff80206701:	89 c1                	mov    %eax,%ecx
ffffffff80206703:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff80206707:	48 81 ea 00 10 00 00 	sub    $0x1000,%rdx
ffffffff8020670e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
ffffffff80206712:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
ffffffff80206716:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
ffffffff8020671a:	b8 00 10 00 00       	mov    $0x1000,%eax
ffffffff8020671f:	89 c2                	mov    %eax,%edx
ffffffff80206721:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
ffffffff80206725:	e8 66 fe ff ff       	callq  ffffffff80206590 <VirtMemMan_Unmap>
ffffffff8020672a:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
ffffffff8020672e:	48 81 c1 00 10 00 00 	add    $0x1000,%rcx
ffffffff80206735:	48 89 4d f0          	mov    %rcx,-0x10(%rbp)
ffffffff80206739:	eb 02                	jmp    ffffffff8020673d <VirtMemMan_Unmap+0x1ad>
ffffffff8020673b:	eb 0f                	jmp    ffffffff8020674c <VirtMemMan_Unmap+0x1bc>
ffffffff8020673d:	eb 00                	jmp    ffffffff8020673f <VirtMemMan_Unmap+0x1af>
ffffffff8020673f:	eb 00                	jmp    ffffffff80206741 <VirtMemMan_Unmap+0x1b1>
ffffffff80206741:	eb 00                	jmp    ffffffff80206743 <VirtMemMan_Unmap+0x1b3>
ffffffff80206743:	eb 00                	jmp    ffffffff80206745 <VirtMemMan_Unmap+0x1b5>
ffffffff80206745:	eb 00                	jmp    ffffffff80206747 <VirtMemMan_Unmap+0x1b7>
ffffffff80206747:	e9 58 fe ff ff       	jmpq   ffffffff802065a4 <VirtMemMan_Unmap+0x14>
ffffffff8020674c:	48 83 c4 30          	add    $0x30,%rsp
ffffffff80206750:	5d                   	pop    %rbp
ffffffff80206751:	c3                   	retq   
ffffffff80206752:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff80206756:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8020675d:	00 00 00 

ffffffff80206760 <VirtMemMan_GetPhysicalAddress>:
ffffffff80206760:	55                   	push   %rbp
ffffffff80206761:	48 89 e5             	mov    %rsp,%rbp
ffffffff80206764:	48 81 ec 80 00 00 00 	sub    $0x80,%rsp
ffffffff8020676b:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
ffffffff8020676f:	48 89 75 e8          	mov    %rsi,-0x18(%rbp)
ffffffff80206773:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
ffffffff80206777:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
ffffffff8020677b:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
ffffffff8020677f:	48 c1 ee 27          	shr    $0x27,%rsi
ffffffff80206783:	48 81 e6 ff 01 00 00 	and    $0x1ff,%rsi
ffffffff8020678a:	89 f0                	mov    %esi,%eax
ffffffff8020678c:	89 45 dc             	mov    %eax,-0x24(%rbp)
ffffffff8020678f:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
ffffffff80206793:	48 c1 ee 1e          	shr    $0x1e,%rsi
ffffffff80206797:	48 81 e6 ff 01 00 00 	and    $0x1ff,%rsi
ffffffff8020679e:	89 f0                	mov    %esi,%eax
ffffffff802067a0:	89 45 d8             	mov    %eax,-0x28(%rbp)
ffffffff802067a3:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
ffffffff802067a7:	48 c1 ee 15          	shr    $0x15,%rsi
ffffffff802067ab:	48 81 e6 ff 01 00 00 	and    $0x1ff,%rsi
ffffffff802067b2:	89 f0                	mov    %esi,%eax
ffffffff802067b4:	89 45 d4             	mov    %eax,-0x2c(%rbp)
ffffffff802067b7:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
ffffffff802067bb:	48 c1 ee 0c          	shr    $0xc,%rsi
ffffffff802067bf:	48 81 e6 ff 01 00 00 	and    $0x1ff,%rsi
ffffffff802067c6:	89 f0                	mov    %esi,%eax
ffffffff802067c8:	89 45 d0             	mov    %eax,-0x30(%rbp)
ffffffff802067cb:	8b 45 dc             	mov    -0x24(%rbp),%eax
ffffffff802067ce:	89 c6                	mov    %eax,%esi
ffffffff802067d0:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
ffffffff802067d4:	48 8b 34 f7          	mov    (%rdi,%rsi,8),%rsi
ffffffff802067d8:	48 83 e6 01          	and    $0x1,%rsi
ffffffff802067dc:	48 83 fe 00          	cmp    $0x0,%rsi
ffffffff802067e0:	0f 84 cd 01 00 00    	je     ffffffff802069b3 <VirtMemMan_GetPhysicalAddress+0x253>
ffffffff802067e6:	31 c0                	xor    %eax,%eax
ffffffff802067e8:	8b 4d dc             	mov    -0x24(%rbp),%ecx
ffffffff802067eb:	89 ca                	mov    %ecx,%edx
ffffffff802067ed:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
ffffffff802067f1:	48 bf 00 f0 ff ff ff 	movabs $0xffffffffffff000,%rdi
ffffffff802067f8:	ff ff 0f 
ffffffff802067fb:	48 23 3c d6          	and    (%rsi,%rdx,8),%rdi
ffffffff802067ff:	31 c9                	xor    %ecx,%ecx
ffffffff80206801:	48 89 7d b0          	mov    %rdi,-0x50(%rbp)
ffffffff80206805:	89 cf                	mov    %ecx,%edi
ffffffff80206807:	48 8b 75 b0          	mov    -0x50(%rbp),%rsi
ffffffff8020680b:	89 45 ac             	mov    %eax,-0x54(%rbp)
ffffffff8020680e:	e8 1d b5 ff ff       	callq  ffffffff80201d30 <GetVirtualAddress>
ffffffff80206813:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
ffffffff80206817:	8b 4d d8             	mov    -0x28(%rbp),%ecx
ffffffff8020681a:	89 c8                	mov    %ecx,%eax
ffffffff8020681c:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
ffffffff80206820:	48 8b 04 c2          	mov    (%rdx,%rax,8),%rax
ffffffff80206824:	48 c1 e8 07          	shr    $0x7,%rax
ffffffff80206828:	48 83 e0 01          	and    $0x1,%rax
ffffffff8020682c:	48 83 f8 00          	cmp    $0x0,%rax
ffffffff80206830:	74 45                	je     ffffffff80206877 <VirtMemMan_GetPhysicalAddress+0x117>
ffffffff80206832:	8b 45 d8             	mov    -0x28(%rbp),%eax
ffffffff80206835:	89 c1                	mov    %eax,%ecx
ffffffff80206837:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
ffffffff8020683b:	48 8b 0c ca          	mov    (%rdx,%rcx,8),%rcx
ffffffff8020683f:	48 83 e1 01          	and    $0x1,%rcx
ffffffff80206843:	48 83 f9 00          	cmp    $0x0,%rcx
ffffffff80206847:	74 2e                	je     ffffffff80206877 <VirtMemMan_GetPhysicalAddress+0x117>
ffffffff80206849:	8b 45 d8             	mov    -0x28(%rbp),%eax
ffffffff8020684c:	89 c1                	mov    %eax,%ecx
ffffffff8020684e:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
ffffffff80206852:	48 be 00 00 00 c0 ff 	movabs $0xfffffffc0000000,%rsi
ffffffff80206859:	ff ff 0f 
ffffffff8020685c:	48 23 34 ca          	and    (%rdx,%rcx,8),%rsi
ffffffff80206860:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
ffffffff80206864:	48 81 e1 ff ff ff 3f 	and    $0x3fffffff,%rcx
ffffffff8020686b:	48 01 ce             	add    %rcx,%rsi
ffffffff8020686e:	48 89 75 f8          	mov    %rsi,-0x8(%rbp)
ffffffff80206872:	e9 44 01 00 00       	jmpq   ffffffff802069bb <VirtMemMan_GetPhysicalAddress+0x25b>
ffffffff80206877:	8b 45 d8             	mov    -0x28(%rbp),%eax
ffffffff8020687a:	89 c1                	mov    %eax,%ecx
ffffffff8020687c:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
ffffffff80206880:	48 8b 0c ca          	mov    (%rdx,%rcx,8),%rcx
ffffffff80206884:	48 83 e1 01          	and    $0x1,%rcx
ffffffff80206888:	48 83 f9 00          	cmp    $0x0,%rcx
ffffffff8020688c:	0f 84 1f 01 00 00    	je     ffffffff802069b1 <VirtMemMan_GetPhysicalAddress+0x251>
ffffffff80206892:	31 c0                	xor    %eax,%eax
ffffffff80206894:	8b 4d d8             	mov    -0x28(%rbp),%ecx
ffffffff80206897:	89 ca                	mov    %ecx,%edx
ffffffff80206899:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
ffffffff8020689d:	48 bf 00 f0 ff ff ff 	movabs $0xffffffffffff000,%rdi
ffffffff802068a4:	ff ff 0f 
ffffffff802068a7:	48 23 3c d6          	and    (%rsi,%rdx,8),%rdi
ffffffff802068ab:	31 c9                	xor    %ecx,%ecx
ffffffff802068ad:	48 89 7d a0          	mov    %rdi,-0x60(%rbp)
ffffffff802068b1:	89 cf                	mov    %ecx,%edi
ffffffff802068b3:	48 8b 75 a0          	mov    -0x60(%rbp),%rsi
ffffffff802068b7:	89 45 9c             	mov    %eax,-0x64(%rbp)
ffffffff802068ba:	e8 71 b4 ff ff       	callq  ffffffff80201d30 <GetVirtualAddress>
ffffffff802068bf:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
ffffffff802068c3:	8b 4d d4             	mov    -0x2c(%rbp),%ecx
ffffffff802068c6:	89 c8                	mov    %ecx,%eax
ffffffff802068c8:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
ffffffff802068cc:	48 8b 04 c2          	mov    (%rdx,%rax,8),%rax
ffffffff802068d0:	48 c1 e8 07          	shr    $0x7,%rax
ffffffff802068d4:	48 83 e0 01          	and    $0x1,%rax
ffffffff802068d8:	48 83 f8 00          	cmp    $0x0,%rax
ffffffff802068dc:	74 45                	je     ffffffff80206923 <VirtMemMan_GetPhysicalAddress+0x1c3>
ffffffff802068de:	8b 45 d4             	mov    -0x2c(%rbp),%eax
ffffffff802068e1:	89 c1                	mov    %eax,%ecx
ffffffff802068e3:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
ffffffff802068e7:	48 8b 0c ca          	mov    (%rdx,%rcx,8),%rcx
ffffffff802068eb:	48 83 e1 01          	and    $0x1,%rcx
ffffffff802068ef:	48 83 f9 00          	cmp    $0x0,%rcx
ffffffff802068f3:	74 2e                	je     ffffffff80206923 <VirtMemMan_GetPhysicalAddress+0x1c3>
ffffffff802068f5:	8b 45 d4             	mov    -0x2c(%rbp),%eax
ffffffff802068f8:	89 c1                	mov    %eax,%ecx
ffffffff802068fa:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
ffffffff802068fe:	48 be 00 00 f0 ff ff 	movabs $0xffffffffff00000,%rsi
ffffffff80206905:	ff ff 0f 
ffffffff80206908:	48 23 34 ca          	and    (%rdx,%rcx,8),%rsi
ffffffff8020690c:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
ffffffff80206910:	48 81 e1 ff ff 1f 00 	and    $0x1fffff,%rcx
ffffffff80206917:	48 01 ce             	add    %rcx,%rsi
ffffffff8020691a:	48 89 75 f8          	mov    %rsi,-0x8(%rbp)
ffffffff8020691e:	e9 98 00 00 00       	jmpq   ffffffff802069bb <VirtMemMan_GetPhysicalAddress+0x25b>
ffffffff80206923:	8b 45 d4             	mov    -0x2c(%rbp),%eax
ffffffff80206926:	89 c1                	mov    %eax,%ecx
ffffffff80206928:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
ffffffff8020692c:	48 8b 0c ca          	mov    (%rdx,%rcx,8),%rcx
ffffffff80206930:	48 83 e1 01          	and    $0x1,%rcx
ffffffff80206934:	48 83 f9 00          	cmp    $0x0,%rcx
ffffffff80206938:	74 75                	je     ffffffff802069af <VirtMemMan_GetPhysicalAddress+0x24f>
ffffffff8020693a:	31 c0                	xor    %eax,%eax
ffffffff8020693c:	8b 4d d4             	mov    -0x2c(%rbp),%ecx
ffffffff8020693f:	89 ca                	mov    %ecx,%edx
ffffffff80206941:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
ffffffff80206945:	48 bf 00 f0 ff ff ff 	movabs $0xffffffffffff000,%rdi
ffffffff8020694c:	ff ff 0f 
ffffffff8020694f:	48 23 3c d6          	and    (%rsi,%rdx,8),%rdi
ffffffff80206953:	31 c9                	xor    %ecx,%ecx
ffffffff80206955:	48 89 7d 90          	mov    %rdi,-0x70(%rbp)
ffffffff80206959:	89 cf                	mov    %ecx,%edi
ffffffff8020695b:	48 8b 75 90          	mov    -0x70(%rbp),%rsi
ffffffff8020695f:	89 45 8c             	mov    %eax,-0x74(%rbp)
ffffffff80206962:	e8 c9 b3 ff ff       	callq  ffffffff80201d30 <GetVirtualAddress>
ffffffff80206967:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
ffffffff8020696b:	8b 4d d0             	mov    -0x30(%rbp),%ecx
ffffffff8020696e:	89 c8                	mov    %ecx,%eax
ffffffff80206970:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
ffffffff80206974:	48 8b 04 c2          	mov    (%rdx,%rax,8),%rax
ffffffff80206978:	48 83 e0 01          	and    $0x1,%rax
ffffffff8020697c:	48 83 f8 00          	cmp    $0x0,%rax
ffffffff80206980:	74 2b                	je     ffffffff802069ad <VirtMemMan_GetPhysicalAddress+0x24d>
ffffffff80206982:	8b 45 d0             	mov    -0x30(%rbp),%eax
ffffffff80206985:	89 c1                	mov    %eax,%ecx
ffffffff80206987:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
ffffffff8020698b:	48 be 00 f0 ff ff ff 	movabs $0xffffffffffff000,%rsi
ffffffff80206992:	ff ff 0f 
ffffffff80206995:	48 23 34 ca          	and    (%rdx,%rcx,8),%rsi
ffffffff80206999:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
ffffffff8020699d:	48 81 e1 ff 0f 00 00 	and    $0xfff,%rcx
ffffffff802069a4:	48 01 ce             	add    %rcx,%rsi
ffffffff802069a7:	48 89 75 f8          	mov    %rsi,-0x8(%rbp)
ffffffff802069ab:	eb 0e                	jmp    ffffffff802069bb <VirtMemMan_GetPhysicalAddress+0x25b>
ffffffff802069ad:	eb 00                	jmp    ffffffff802069af <VirtMemMan_GetPhysicalAddress+0x24f>
ffffffff802069af:	eb 00                	jmp    ffffffff802069b1 <VirtMemMan_GetPhysicalAddress+0x251>
ffffffff802069b1:	eb 00                	jmp    ffffffff802069b3 <VirtMemMan_GetPhysicalAddress+0x253>
ffffffff802069b3:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
ffffffff802069ba:	00 
ffffffff802069bb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff802069bf:	48 81 c4 80 00 00 00 	add    $0x80,%rsp
ffffffff802069c6:	5d                   	pop    %rbp
ffffffff802069c7:	c3                   	retq   
ffffffff802069c8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff802069cf:	00 

ffffffff802069d0 <VirtMemMan_GetVirtualAddress>:
ffffffff802069d0:	55                   	push   %rbp
ffffffff802069d1:	48 89 e5             	mov    %rsp,%rbp
ffffffff802069d4:	48 83 ec 18          	sub    $0x18,%rsp
ffffffff802069d8:	89 7d f4             	mov    %edi,-0xc(%rbp)
ffffffff802069db:	48 89 75 e8          	mov    %rsi,-0x18(%rbp)
ffffffff802069df:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)
ffffffff802069e3:	75 3d                	jne    ffffffff80206a22 <VirtMemMan_GetVirtualAddress+0x52>
ffffffff802069e5:	48 b8 00 00 00 00 01 	movabs $0x100000000,%rax
ffffffff802069ec:	00 00 00 
ffffffff802069ef:	31 c9                	xor    %ecx,%ecx
ffffffff802069f1:	89 ca                	mov    %ecx,%edx
ffffffff802069f3:	48 be 00 00 00 00 02 	movabs $0x200000000,%rsi
ffffffff802069fa:	00 00 00 
ffffffff802069fd:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
ffffffff80206a01:	49 b8 00 00 00 00 fc 	movabs $0xfffffffc00000000,%r8
ffffffff80206a08:	ff ff ff 
ffffffff80206a0b:	4c 01 c7             	add    %r8,%rdi
ffffffff80206a0e:	4c 8b 45 e8          	mov    -0x18(%rbp),%r8
ffffffff80206a12:	49 39 c0             	cmp    %rax,%r8
ffffffff80206a15:	48 0f 42 d6          	cmovb  %rsi,%rdx
ffffffff80206a19:	48 01 d7             	add    %rdx,%rdi
ffffffff80206a1c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff80206a20:	eb 6c                	jmp    ffffffff80206a8e <VirtMemMan_GetVirtualAddress+0xbe>
ffffffff80206a22:	83 7d f4 02          	cmpl   $0x2,-0xc(%rbp)
ffffffff80206a26:	75 2a                	jne    ffffffff80206a52 <VirtMemMan_GetVirtualAddress+0x82>
ffffffff80206a28:	48 b8 00 00 00 00 01 	movabs $0x100000000,%rax
ffffffff80206a2f:	00 00 00 
ffffffff80206a32:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
ffffffff80206a36:	48 39 c1             	cmp    %rax,%rcx
ffffffff80206a39:	73 17                	jae    ffffffff80206a52 <VirtMemMan_GetVirtualAddress+0x82>
ffffffff80206a3b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80206a3f:	48 b9 00 00 00 00 fc 	movabs $0xfffffffc00000000,%rcx
ffffffff80206a46:	ff ff ff 
ffffffff80206a49:	48 01 c8             	add    %rcx,%rax
ffffffff80206a4c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff80206a50:	eb 3c                	jmp    ffffffff80206a8e <VirtMemMan_GetVirtualAddress+0xbe>
ffffffff80206a52:	83 7d f4 01          	cmpl   $0x1,-0xc(%rbp)
ffffffff80206a56:	75 2a                	jne    ffffffff80206a82 <VirtMemMan_GetVirtualAddress+0xb2>
ffffffff80206a58:	48 b8 00 00 00 00 01 	movabs $0x100000000,%rax
ffffffff80206a5f:	00 00 00 
ffffffff80206a62:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
ffffffff80206a66:	48 39 c1             	cmp    %rax,%rcx
ffffffff80206a69:	73 17                	jae    ffffffff80206a82 <VirtMemMan_GetVirtualAddress+0xb2>
ffffffff80206a6b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80206a6f:	48 b9 00 00 00 00 fb 	movabs $0xfffffffb00000000,%rcx
ffffffff80206a76:	ff ff ff 
ffffffff80206a79:	48 01 c8             	add    %rcx,%rax
ffffffff80206a7c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff80206a80:	eb 0c                	jmp    ffffffff80206a8e <VirtMemMan_GetVirtualAddress+0xbe>
ffffffff80206a82:	eb 00                	jmp    ffffffff80206a84 <VirtMemMan_GetVirtualAddress+0xb4>
ffffffff80206a84:	eb 00                	jmp    ffffffff80206a86 <VirtMemMan_GetVirtualAddress+0xb6>
ffffffff80206a86:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
ffffffff80206a8d:	00 
ffffffff80206a8e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80206a92:	48 83 c4 18          	add    $0x18,%rsp
ffffffff80206a96:	5d                   	pop    %rbp
ffffffff80206a97:	c3                   	retq   
ffffffff80206a98:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff80206a9f:	00 

ffffffff80206aa0 <VirtMemMan_FindFreeAddress>:
ffffffff80206aa0:	55                   	push   %rbp
ffffffff80206aa1:	48 89 e5             	mov    %rsp,%rbp
ffffffff80206aa4:	48 81 ec a0 00 00 00 	sub    $0xa0,%rsp
ffffffff80206aab:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff80206aaf:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff80206ab3:	89 55 ec             	mov    %edx,-0x14(%rbp)
ffffffff80206ab6:	89 4d e8             	mov    %ecx,-0x18(%rbp)
ffffffff80206ab9:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
ffffffff80206abd:	48 81 e6 ff 0f 00 00 	and    $0xfff,%rsi
ffffffff80206ac4:	48 83 fe 00          	cmp    $0x0,%rsi
ffffffff80206ac8:	74 14                	je     ffffffff80206ade <VirtMemMan_FindFreeAddress+0x3e>
ffffffff80206aca:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80206ace:	48 c1 e8 0c          	shr    $0xc,%rax
ffffffff80206ad2:	48 83 c0 01          	add    $0x1,%rax
ffffffff80206ad6:	48 c1 e0 0c          	shl    $0xc,%rax
ffffffff80206ada:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff80206ade:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80206ae2:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
ffffffff80206ae6:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
ffffffff80206aed:	00 
ffffffff80206aee:	48 c7 45 d0 00 00 00 	movq   $0x0,-0x30(%rbp)
ffffffff80206af5:	00 
ffffffff80206af6:	48 c7 45 c8 00 00 00 	movq   $0x0,-0x38(%rbp)
ffffffff80206afd:	00 
ffffffff80206afe:	c7 45 c4 00 01 00 00 	movl   $0x100,-0x3c(%rbp)
ffffffff80206b05:	8b 4d ec             	mov    -0x14(%rbp),%ecx
ffffffff80206b08:	85 c9                	test   %ecx,%ecx
ffffffff80206b0a:	75 0b                	jne    ffffffff80206b17 <VirtMemMan_FindFreeAddress+0x77>
ffffffff80206b0c:	eb 00                	jmp    ffffffff80206b0e <VirtMemMan_FindFreeAddress+0x6e>
ffffffff80206b0e:	c7 45 c4 ff 01 00 00 	movl   $0x1ff,-0x3c(%rbp)
ffffffff80206b15:	eb 07                	jmp    ffffffff80206b1e <VirtMemMan_FindFreeAddress+0x7e>
ffffffff80206b17:	c7 45 c4 00 01 00 00 	movl   $0x100,-0x3c(%rbp)
ffffffff80206b1e:	8b 45 e8             	mov    -0x18(%rbp),%eax
ffffffff80206b21:	83 e0 01             	and    $0x1,%eax
ffffffff80206b24:	83 f8 00             	cmp    $0x0,%eax
ffffffff80206b27:	74 4d                	je     ffffffff80206b76 <VirtMemMan_FindFreeAddress+0xd6>
ffffffff80206b29:	8b 45 ec             	mov    -0x14(%rbp),%eax
ffffffff80206b2c:	85 c0                	test   %eax,%eax
ffffffff80206b2e:	89 45 84             	mov    %eax,-0x7c(%rbp)
ffffffff80206b31:	74 1f                	je     ffffffff80206b52 <VirtMemMan_FindFreeAddress+0xb2>
ffffffff80206b33:	eb 00                	jmp    ffffffff80206b35 <VirtMemMan_FindFreeAddress+0x95>
ffffffff80206b35:	8b 45 84             	mov    -0x7c(%rbp),%eax
ffffffff80206b38:	83 e8 01             	sub    $0x1,%eax
ffffffff80206b3b:	89 45 80             	mov    %eax,-0x80(%rbp)
ffffffff80206b3e:	74 24                	je     ffffffff80206b64 <VirtMemMan_FindFreeAddress+0xc4>
ffffffff80206b40:	eb 00                	jmp    ffffffff80206b42 <VirtMemMan_FindFreeAddress+0xa2>
ffffffff80206b42:	8b 45 84             	mov    -0x7c(%rbp),%eax
ffffffff80206b45:	83 e8 40             	sub    $0x40,%eax
ffffffff80206b48:	89 85 7c ff ff ff    	mov    %eax,-0x84(%rbp)
ffffffff80206b4e:	74 0b                	je     ffffffff80206b5b <VirtMemMan_FindFreeAddress+0xbb>
ffffffff80206b50:	eb 1b                	jmp    ffffffff80206b6d <VirtMemMan_FindFreeAddress+0xcd>
ffffffff80206b52:	c7 45 c4 01 00 00 00 	movl   $0x1,-0x3c(%rbp)
ffffffff80206b59:	eb 19                	jmp    ffffffff80206b74 <VirtMemMan_FindFreeAddress+0xd4>
ffffffff80206b5b:	c7 45 c4 14 00 00 00 	movl   $0x14,-0x3c(%rbp)
ffffffff80206b62:	eb 10                	jmp    ffffffff80206b74 <VirtMemMan_FindFreeAddress+0xd4>
ffffffff80206b64:	c7 45 c4 02 00 00 00 	movl   $0x2,-0x3c(%rbp)
ffffffff80206b6b:	eb 07                	jmp    ffffffff80206b74 <VirtMemMan_FindFreeAddress+0xd4>
ffffffff80206b6d:	c7 45 c4 00 00 00 00 	movl   $0x0,-0x3c(%rbp)
ffffffff80206b74:	eb 00                	jmp    ffffffff80206b76 <VirtMemMan_FindFreeAddress+0xd6>
ffffffff80206b76:	48 63 45 c4          	movslq -0x3c(%rbp),%rax
ffffffff80206b7a:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
ffffffff80206b7e:	31 c0                	xor    %eax,%eax
ffffffff80206b80:	88 c1                	mov    %al,%cl
ffffffff80206b82:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
ffffffff80206b86:	8b 45 c4             	mov    -0x3c(%rbp),%eax
ffffffff80206b89:	05 80 00 00 00       	add    $0x80,%eax
ffffffff80206b8e:	48 63 f0             	movslq %eax,%rsi
ffffffff80206b91:	48 39 f2             	cmp    %rsi,%rdx
ffffffff80206b94:	88 8d 7b ff ff ff    	mov    %cl,-0x85(%rbp)
ffffffff80206b9a:	73 25                	jae    ffffffff80206bc1 <VirtMemMan_FindFreeAddress+0x121>
ffffffff80206b9c:	31 c0                	xor    %eax,%eax
ffffffff80206b9e:	88 c1                	mov    %al,%cl
ffffffff80206ba0:	48 81 7d b8 00 02 00 	cmpq   $0x200,-0x48(%rbp)
ffffffff80206ba7:	00 
ffffffff80206ba8:	88 8d 7b ff ff ff    	mov    %cl,-0x85(%rbp)
ffffffff80206bae:	73 11                	jae    ffffffff80206bc1 <VirtMemMan_FindFreeAddress+0x121>
ffffffff80206bb0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80206bb4:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
ffffffff80206bb8:	0f 92 c1             	setb   %cl
ffffffff80206bbb:	88 8d 7b ff ff ff    	mov    %cl,-0x85(%rbp)
ffffffff80206bc1:	8a 85 7b ff ff ff    	mov    -0x85(%rbp),%al
ffffffff80206bc7:	a8 01                	test   $0x1,%al
ffffffff80206bc9:	75 05                	jne    ffffffff80206bd0 <VirtMemMan_FindFreeAddress+0x130>
ffffffff80206bcb:	e9 3f 04 00 00       	jmpq   ffffffff8020700f <VirtMemMan_FindFreeAddress+0x56f>
ffffffff80206bd0:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff80206bd4:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
ffffffff80206bd8:	48 8b 04 c1          	mov    (%rcx,%rax,8),%rax
ffffffff80206bdc:	48 83 e0 01          	and    $0x1,%rax
ffffffff80206be0:	48 83 f8 00          	cmp    $0x0,%rax
ffffffff80206be4:	75 32                	jne    ffffffff80206c18 <VirtMemMan_FindFreeAddress+0x178>
ffffffff80206be6:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
ffffffff80206beb:	75 0c                	jne    ffffffff80206bf9 <VirtMemMan_FindFreeAddress+0x159>
ffffffff80206bed:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff80206bf1:	48 c1 e0 27          	shl    $0x27,%rax
ffffffff80206bf5:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
ffffffff80206bf9:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff80206bfd:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
ffffffff80206c01:	48 b8 00 00 00 00 80 	movabs $0x8000000000,%rax
ffffffff80206c08:	00 00 00 
ffffffff80206c0b:	48 03 45 d8          	add    -0x28(%rbp),%rax
ffffffff80206c0f:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
ffffffff80206c13:	e9 e4 03 00 00       	jmpq   ffffffff80206ffc <VirtMemMan_FindFreeAddress+0x55c>
ffffffff80206c18:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff80206c1c:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
ffffffff80206c20:	48 8b 04 c1          	mov    (%rcx,%rax,8),%rax
ffffffff80206c24:	48 83 e0 01          	and    $0x1,%rax
ffffffff80206c28:	48 83 f8 01          	cmp    $0x1,%rax
ffffffff80206c2c:	0f 85 b3 03 00 00    	jne    ffffffff80206fe5 <VirtMemMan_FindFreeAddress+0x545>
ffffffff80206c32:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff80206c36:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
ffffffff80206c3a:	48 8b 04 c1          	mov    (%rcx,%rax,8),%rax
ffffffff80206c3e:	48 25 00 01 00 00    	and    $0x100,%rax
ffffffff80206c44:	48 83 f8 00          	cmp    $0x0,%rax
ffffffff80206c48:	0f 85 97 03 00 00    	jne    ffffffff80206fe5 <VirtMemMan_FindFreeAddress+0x545>
ffffffff80206c4e:	31 c0                	xor    %eax,%eax
ffffffff80206c50:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
ffffffff80206c54:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
ffffffff80206c58:	48 be 00 f0 ff ff ff 	movabs $0xffffffffffff000,%rsi
ffffffff80206c5f:	ff ff 0f 
ffffffff80206c62:	48 23 34 ca          	and    (%rdx,%rcx,8),%rsi
ffffffff80206c66:	31 ff                	xor    %edi,%edi
ffffffff80206c68:	89 85 74 ff ff ff    	mov    %eax,-0x8c(%rbp)
ffffffff80206c6e:	e8 bd b0 ff ff       	callq  ffffffff80201d30 <GetVirtualAddress>
ffffffff80206c73:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
ffffffff80206c77:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
ffffffff80206c7c:	76 1d                	jbe    ffffffff80206c9b <VirtMemMan_FindFreeAddress+0x1fb>
ffffffff80206c7e:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
ffffffff80206c83:	74 16                	je     ffffffff80206c9b <VirtMemMan_FindFreeAddress+0x1fb>
ffffffff80206c85:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff80206c89:	48 83 e8 01          	sub    $0x1,%rax
ffffffff80206c8d:	48 3b 45 d0          	cmp    -0x30(%rbp),%rax
ffffffff80206c91:	74 08                	je     ffffffff80206c9b <VirtMemMan_FindFreeAddress+0x1fb>
ffffffff80206c93:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
ffffffff80206c9a:	00 
ffffffff80206c9b:	48 c7 45 a8 00 00 00 	movq   $0x0,-0x58(%rbp)
ffffffff80206ca2:	00 
ffffffff80206ca3:	31 c0                	xor    %eax,%eax
ffffffff80206ca5:	88 c1                	mov    %al,%cl
ffffffff80206ca7:	48 81 7d a8 00 02 00 	cmpq   $0x200,-0x58(%rbp)
ffffffff80206cae:	00 
ffffffff80206caf:	88 8d 73 ff ff ff    	mov    %cl,-0x8d(%rbp)
ffffffff80206cb5:	73 11                	jae    ffffffff80206cc8 <VirtMemMan_FindFreeAddress+0x228>
ffffffff80206cb7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80206cbb:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
ffffffff80206cbf:	0f 92 c1             	setb   %cl
ffffffff80206cc2:	88 8d 73 ff ff ff    	mov    %cl,-0x8d(%rbp)
ffffffff80206cc8:	8a 85 73 ff ff ff    	mov    -0x8d(%rbp),%al
ffffffff80206cce:	a8 01                	test   $0x1,%al
ffffffff80206cd0:	75 05                	jne    ffffffff80206cd7 <VirtMemMan_FindFreeAddress+0x237>
ffffffff80206cd2:	e9 0c 03 00 00       	jmpq   ffffffff80206fe3 <VirtMemMan_FindFreeAddress+0x543>
ffffffff80206cd7:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff80206cdb:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
ffffffff80206cdf:	48 8b 04 c1          	mov    (%rcx,%rax,8),%rax
ffffffff80206ce3:	48 83 e0 01          	and    $0x1,%rax
ffffffff80206ce7:	48 83 f8 00          	cmp    $0x0,%rax
ffffffff80206ceb:	75 39                	jne    ffffffff80206d26 <VirtMemMan_FindFreeAddress+0x286>
ffffffff80206ced:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
ffffffff80206cf2:	75 17                	jne    ffffffff80206d0b <VirtMemMan_FindFreeAddress+0x26b>
ffffffff80206cf4:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff80206cf8:	48 c1 e0 27          	shl    $0x27,%rax
ffffffff80206cfc:	48 8b 4d a8          	mov    -0x58(%rbp),%rcx
ffffffff80206d00:	48 c1 e1 1e          	shl    $0x1e,%rcx
ffffffff80206d04:	48 09 c8             	or     %rcx,%rax
ffffffff80206d07:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
ffffffff80206d0b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80206d0f:	48 05 00 00 00 40    	add    $0x40000000,%rax
ffffffff80206d15:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
ffffffff80206d19:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff80206d1d:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
ffffffff80206d21:	e9 aa 02 00 00       	jmpq   ffffffff80206fd0 <VirtMemMan_FindFreeAddress+0x530>
ffffffff80206d26:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff80206d2a:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
ffffffff80206d2e:	48 8b 04 c1          	mov    (%rcx,%rax,8),%rax
ffffffff80206d32:	48 83 e0 01          	and    $0x1,%rax
ffffffff80206d36:	48 83 f8 01          	cmp    $0x1,%rax
ffffffff80206d3a:	0f 85 8e 02 00 00    	jne    ffffffff80206fce <VirtMemMan_FindFreeAddress+0x52e>
ffffffff80206d40:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff80206d44:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
ffffffff80206d48:	48 8b 04 c1          	mov    (%rcx,%rax,8),%rax
ffffffff80206d4c:	48 25 80 00 00 00    	and    $0x80,%rax
ffffffff80206d52:	48 83 f8 00          	cmp    $0x0,%rax
ffffffff80206d56:	0f 85 72 02 00 00    	jne    ffffffff80206fce <VirtMemMan_FindFreeAddress+0x52e>
ffffffff80206d5c:	31 c0                	xor    %eax,%eax
ffffffff80206d5e:	48 8b 4d a8          	mov    -0x58(%rbp),%rcx
ffffffff80206d62:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
ffffffff80206d66:	48 be 00 f0 ff ff ff 	movabs $0xffffffffffff000,%rsi
ffffffff80206d6d:	ff ff 0f 
ffffffff80206d70:	48 23 34 ca          	and    (%rdx,%rcx,8),%rsi
ffffffff80206d74:	31 ff                	xor    %edi,%edi
ffffffff80206d76:	89 85 6c ff ff ff    	mov    %eax,-0x94(%rbp)
ffffffff80206d7c:	e8 af af ff ff       	callq  ffffffff80201d30 <GetVirtualAddress>
ffffffff80206d81:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
ffffffff80206d85:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
ffffffff80206d8a:	76 1d                	jbe    ffffffff80206da9 <VirtMemMan_FindFreeAddress+0x309>
ffffffff80206d8c:	48 83 7d a8 00       	cmpq   $0x0,-0x58(%rbp)
ffffffff80206d91:	74 16                	je     ffffffff80206da9 <VirtMemMan_FindFreeAddress+0x309>
ffffffff80206d93:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff80206d97:	48 83 e8 01          	sub    $0x1,%rax
ffffffff80206d9b:	48 3b 45 d0          	cmp    -0x30(%rbp),%rax
ffffffff80206d9f:	74 08                	je     ffffffff80206da9 <VirtMemMan_FindFreeAddress+0x309>
ffffffff80206da1:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
ffffffff80206da8:	00 
ffffffff80206da9:	48 c7 45 98 00 00 00 	movq   $0x0,-0x68(%rbp)
ffffffff80206db0:	00 
ffffffff80206db1:	31 c0                	xor    %eax,%eax
ffffffff80206db3:	88 c1                	mov    %al,%cl
ffffffff80206db5:	48 81 7d 98 00 02 00 	cmpq   $0x200,-0x68(%rbp)
ffffffff80206dbc:	00 
ffffffff80206dbd:	88 8d 6b ff ff ff    	mov    %cl,-0x95(%rbp)
ffffffff80206dc3:	73 11                	jae    ffffffff80206dd6 <VirtMemMan_FindFreeAddress+0x336>
ffffffff80206dc5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80206dc9:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
ffffffff80206dcd:	0f 92 c1             	setb   %cl
ffffffff80206dd0:	88 8d 6b ff ff ff    	mov    %cl,-0x95(%rbp)
ffffffff80206dd6:	8a 85 6b ff ff ff    	mov    -0x95(%rbp),%al
ffffffff80206ddc:	a8 01                	test   $0x1,%al
ffffffff80206dde:	75 05                	jne    ffffffff80206de5 <VirtMemMan_FindFreeAddress+0x345>
ffffffff80206de0:	e9 e7 01 00 00       	jmpq   ffffffff80206fcc <VirtMemMan_FindFreeAddress+0x52c>
ffffffff80206de5:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff80206de9:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
ffffffff80206ded:	48 8b 04 c1          	mov    (%rcx,%rax,8),%rax
ffffffff80206df1:	48 83 e0 01          	and    $0x1,%rax
ffffffff80206df5:	48 83 f8 00          	cmp    $0x0,%rax
ffffffff80206df9:	75 44                	jne    ffffffff80206e3f <VirtMemMan_FindFreeAddress+0x39f>
ffffffff80206dfb:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
ffffffff80206e00:	75 22                	jne    ffffffff80206e24 <VirtMemMan_FindFreeAddress+0x384>
ffffffff80206e02:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff80206e06:	48 c1 e0 27          	shl    $0x27,%rax
ffffffff80206e0a:	48 8b 4d a8          	mov    -0x58(%rbp),%rcx
ffffffff80206e0e:	48 c1 e1 1e          	shl    $0x1e,%rcx
ffffffff80206e12:	48 09 c8             	or     %rcx,%rax
ffffffff80206e15:	48 8b 4d 98          	mov    -0x68(%rbp),%rcx
ffffffff80206e19:	48 c1 e1 15          	shl    $0x15,%rcx
ffffffff80206e1d:	48 09 c8             	or     %rcx,%rax
ffffffff80206e20:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
ffffffff80206e24:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80206e28:	48 05 00 00 20 00    	add    $0x200000,%rax
ffffffff80206e2e:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
ffffffff80206e32:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff80206e36:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
ffffffff80206e3a:	e9 7a 01 00 00       	jmpq   ffffffff80206fb9 <VirtMemMan_FindFreeAddress+0x519>
ffffffff80206e3f:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff80206e43:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
ffffffff80206e47:	48 8b 04 c1          	mov    (%rcx,%rax,8),%rax
ffffffff80206e4b:	48 83 e0 01          	and    $0x1,%rax
ffffffff80206e4f:	48 83 f8 01          	cmp    $0x1,%rax
ffffffff80206e53:	0f 85 5e 01 00 00    	jne    ffffffff80206fb7 <VirtMemMan_FindFreeAddress+0x517>
ffffffff80206e59:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff80206e5d:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
ffffffff80206e61:	48 8b 04 c1          	mov    (%rcx,%rax,8),%rax
ffffffff80206e65:	48 25 80 00 00 00    	and    $0x80,%rax
ffffffff80206e6b:	48 83 f8 00          	cmp    $0x0,%rax
ffffffff80206e6f:	0f 85 42 01 00 00    	jne    ffffffff80206fb7 <VirtMemMan_FindFreeAddress+0x517>
ffffffff80206e75:	31 c0                	xor    %eax,%eax
ffffffff80206e77:	48 8b 4d 98          	mov    -0x68(%rbp),%rcx
ffffffff80206e7b:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
ffffffff80206e7f:	48 be 00 f0 ff ff ff 	movabs $0xffffffffffff000,%rsi
ffffffff80206e86:	ff ff 0f 
ffffffff80206e89:	48 23 34 ca          	and    (%rdx,%rcx,8),%rsi
ffffffff80206e8d:	31 ff                	xor    %edi,%edi
ffffffff80206e8f:	89 85 64 ff ff ff    	mov    %eax,-0x9c(%rbp)
ffffffff80206e95:	e8 96 ae ff ff       	callq  ffffffff80201d30 <GetVirtualAddress>
ffffffff80206e9a:	48 89 45 90          	mov    %rax,-0x70(%rbp)
ffffffff80206e9e:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
ffffffff80206ea3:	76 1d                	jbe    ffffffff80206ec2 <VirtMemMan_FindFreeAddress+0x422>
ffffffff80206ea5:	48 83 7d 98 00       	cmpq   $0x0,-0x68(%rbp)
ffffffff80206eaa:	74 16                	je     ffffffff80206ec2 <VirtMemMan_FindFreeAddress+0x422>
ffffffff80206eac:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff80206eb0:	48 83 e8 01          	sub    $0x1,%rax
ffffffff80206eb4:	48 3b 45 d0          	cmp    -0x30(%rbp),%rax
ffffffff80206eb8:	74 08                	je     ffffffff80206ec2 <VirtMemMan_FindFreeAddress+0x422>
ffffffff80206eba:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
ffffffff80206ec1:	00 
ffffffff80206ec2:	48 c7 45 88 00 00 00 	movq   $0x0,-0x78(%rbp)
ffffffff80206ec9:	00 
ffffffff80206eca:	31 c0                	xor    %eax,%eax
ffffffff80206ecc:	88 c1                	mov    %al,%cl
ffffffff80206ece:	48 81 7d 88 00 02 00 	cmpq   $0x200,-0x78(%rbp)
ffffffff80206ed5:	00 
ffffffff80206ed6:	88 8d 63 ff ff ff    	mov    %cl,-0x9d(%rbp)
ffffffff80206edc:	73 11                	jae    ffffffff80206eef <VirtMemMan_FindFreeAddress+0x44f>
ffffffff80206ede:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80206ee2:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
ffffffff80206ee6:	0f 92 c1             	setb   %cl
ffffffff80206ee9:	88 8d 63 ff ff ff    	mov    %cl,-0x9d(%rbp)
ffffffff80206eef:	8a 85 63 ff ff ff    	mov    -0x9d(%rbp),%al
ffffffff80206ef5:	a8 01                	test   $0x1,%al
ffffffff80206ef7:	75 05                	jne    ffffffff80206efe <VirtMemMan_FindFreeAddress+0x45e>
ffffffff80206ef9:	e9 b7 00 00 00       	jmpq   ffffffff80206fb5 <VirtMemMan_FindFreeAddress+0x515>
ffffffff80206efe:	48 83 7d 88 00       	cmpq   $0x0,-0x78(%rbp)
ffffffff80206f03:	75 1d                	jne    ffffffff80206f22 <VirtMemMan_FindFreeAddress+0x482>
ffffffff80206f05:	48 83 7d 98 00       	cmpq   $0x0,-0x68(%rbp)
ffffffff80206f0a:	75 16                	jne    ffffffff80206f22 <VirtMemMan_FindFreeAddress+0x482>
ffffffff80206f0c:	48 83 7d a8 00       	cmpq   $0x0,-0x58(%rbp)
ffffffff80206f11:	75 0f                	jne    ffffffff80206f22 <VirtMemMan_FindFreeAddress+0x482>
ffffffff80206f13:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
ffffffff80206f18:	75 08                	jne    ffffffff80206f22 <VirtMemMan_FindFreeAddress+0x482>
ffffffff80206f1a:	48 c7 45 88 01 00 00 	movq   $0x1,-0x78(%rbp)
ffffffff80206f21:	00 
ffffffff80206f22:	48 83 7d 88 00       	cmpq   $0x0,-0x78(%rbp)
ffffffff80206f27:	74 19                	je     ffffffff80206f42 <VirtMemMan_FindFreeAddress+0x4a2>
ffffffff80206f29:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff80206f2d:	48 8b 4d 88          	mov    -0x78(%rbp),%rcx
ffffffff80206f31:	48 83 e9 01          	sub    $0x1,%rcx
ffffffff80206f35:	48 39 c8             	cmp    %rcx,%rax
ffffffff80206f38:	74 08                	je     ffffffff80206f42 <VirtMemMan_FindFreeAddress+0x4a2>
ffffffff80206f3a:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
ffffffff80206f41:	00 
ffffffff80206f42:	48 8b 45 88          	mov    -0x78(%rbp),%rax
ffffffff80206f46:	48 8b 4d 90          	mov    -0x70(%rbp),%rcx
ffffffff80206f4a:	48 8b 04 c1          	mov    (%rcx,%rax,8),%rax
ffffffff80206f4e:	48 83 e0 01          	and    $0x1,%rax
ffffffff80206f52:	48 83 f8 00          	cmp    $0x0,%rax
ffffffff80206f56:	75 4a                	jne    ffffffff80206fa2 <VirtMemMan_FindFreeAddress+0x502>
ffffffff80206f58:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
ffffffff80206f5d:	75 2d                	jne    ffffffff80206f8c <VirtMemMan_FindFreeAddress+0x4ec>
ffffffff80206f5f:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff80206f63:	48 c1 e0 27          	shl    $0x27,%rax
ffffffff80206f67:	48 8b 4d a8          	mov    -0x58(%rbp),%rcx
ffffffff80206f6b:	48 c1 e1 1e          	shl    $0x1e,%rcx
ffffffff80206f6f:	48 09 c8             	or     %rcx,%rax
ffffffff80206f72:	48 8b 4d 98          	mov    -0x68(%rbp),%rcx
ffffffff80206f76:	48 c1 e1 15          	shl    $0x15,%rcx
ffffffff80206f7a:	48 09 c8             	or     %rcx,%rax
ffffffff80206f7d:	48 8b 4d 88          	mov    -0x78(%rbp),%rcx
ffffffff80206f81:	48 c1 e1 0c          	shl    $0xc,%rcx
ffffffff80206f85:	48 09 c8             	or     %rcx,%rax
ffffffff80206f88:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
ffffffff80206f8c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80206f90:	48 05 00 10 00 00    	add    $0x1000,%rax
ffffffff80206f96:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
ffffffff80206f9a:	48 8b 45 88          	mov    -0x78(%rbp),%rax
ffffffff80206f9e:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
ffffffff80206fa2:	eb 00                	jmp    ffffffff80206fa4 <VirtMemMan_FindFreeAddress+0x504>
ffffffff80206fa4:	48 8b 45 88          	mov    -0x78(%rbp),%rax
ffffffff80206fa8:	48 83 c0 01          	add    $0x1,%rax
ffffffff80206fac:	48 89 45 88          	mov    %rax,-0x78(%rbp)
ffffffff80206fb0:	e9 15 ff ff ff       	jmpq   ffffffff80206eca <VirtMemMan_FindFreeAddress+0x42a>
ffffffff80206fb5:	eb 00                	jmp    ffffffff80206fb7 <VirtMemMan_FindFreeAddress+0x517>
ffffffff80206fb7:	eb 00                	jmp    ffffffff80206fb9 <VirtMemMan_FindFreeAddress+0x519>
ffffffff80206fb9:	eb 00                	jmp    ffffffff80206fbb <VirtMemMan_FindFreeAddress+0x51b>
ffffffff80206fbb:	48 8b 45 98          	mov    -0x68(%rbp),%rax
ffffffff80206fbf:	48 83 c0 01          	add    $0x1,%rax
ffffffff80206fc3:	48 89 45 98          	mov    %rax,-0x68(%rbp)
ffffffff80206fc7:	e9 e5 fd ff ff       	jmpq   ffffffff80206db1 <VirtMemMan_FindFreeAddress+0x311>
ffffffff80206fcc:	eb 00                	jmp    ffffffff80206fce <VirtMemMan_FindFreeAddress+0x52e>
ffffffff80206fce:	eb 00                	jmp    ffffffff80206fd0 <VirtMemMan_FindFreeAddress+0x530>
ffffffff80206fd0:	eb 00                	jmp    ffffffff80206fd2 <VirtMemMan_FindFreeAddress+0x532>
ffffffff80206fd2:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff80206fd6:	48 83 c0 01          	add    $0x1,%rax
ffffffff80206fda:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
ffffffff80206fde:	e9 c0 fc ff ff       	jmpq   ffffffff80206ca3 <VirtMemMan_FindFreeAddress+0x203>
ffffffff80206fe3:	eb 15                	jmp    ffffffff80206ffa <VirtMemMan_FindFreeAddress+0x55a>
ffffffff80206fe5:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
ffffffff80206fea:	75 0c                	jne    ffffffff80206ff8 <VirtMemMan_FindFreeAddress+0x558>
ffffffff80206fec:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff80206ff0:	48 c1 e0 27          	shl    $0x27,%rax
ffffffff80206ff4:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
ffffffff80206ff8:	eb 00                	jmp    ffffffff80206ffa <VirtMemMan_FindFreeAddress+0x55a>
ffffffff80206ffa:	eb 00                	jmp    ffffffff80206ffc <VirtMemMan_FindFreeAddress+0x55c>
ffffffff80206ffc:	eb 00                	jmp    ffffffff80206ffe <VirtMemMan_FindFreeAddress+0x55e>
ffffffff80206ffe:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff80207002:	48 83 c0 01          	add    $0x1,%rax
ffffffff80207006:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
ffffffff8020700a:	e9 6f fb ff ff       	jmpq   ffffffff80206b7e <VirtMemMan_FindFreeAddress+0xde>
ffffffff8020700f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80207013:	48 c1 e8 2f          	shr    $0x2f,%rax
ffffffff80207017:	48 83 e0 01          	and    $0x1,%rax
ffffffff8020701b:	48 83 f8 00          	cmp    $0x0,%rax
ffffffff8020701f:	74 12                	je     ffffffff80207033 <VirtMemMan_FindFreeAddress+0x593>
ffffffff80207021:	48 b8 00 00 00 00 00 	movabs $0xffff000000000000,%rax
ffffffff80207028:	00 ff ff 
ffffffff8020702b:	48 0b 45 c8          	or     -0x38(%rbp),%rax
ffffffff8020702f:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
ffffffff80207033:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
ffffffff80207038:	75 08                	jne    ffffffff80207042 <VirtMemMan_FindFreeAddress+0x5a2>
ffffffff8020703a:	48 c7 45 c8 00 10 00 	movq   $0x1000,-0x38(%rbp)
ffffffff80207041:	00 
ffffffff80207042:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80207046:	48 81 c4 a0 00 00 00 	add    $0xa0,%rsp
ffffffff8020704d:	5d                   	pop    %rbp
ffffffff8020704e:	c3                   	retq   
ffffffff8020704f:	90                   	nop

ffffffff80207050 <VirtMemMan_FreePageTable>:
ffffffff80207050:	55                   	push   %rbp
ffffffff80207051:	48 89 e5             	mov    %rsp,%rbp
ffffffff80207054:	48 83 ec 50          	sub    $0x50,%rsp
ffffffff80207058:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8020705c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
ffffffff80207063:	81 7d f4 00 02 00 00 	cmpl   $0x200,-0xc(%rbp)
ffffffff8020706a:	0f 8d 31 01 00 00    	jge    ffffffff802071a1 <VirtMemMan_FreePageTable+0x151>
ffffffff80207070:	31 c0                	xor    %eax,%eax
ffffffff80207072:	48 63 4d f4          	movslq -0xc(%rbp),%rcx
ffffffff80207076:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
ffffffff8020707a:	48 be 00 f0 ff ff ff 	movabs $0xffffffffffff000,%rsi
ffffffff80207081:	ff ff 0f 
ffffffff80207084:	48 23 34 ca          	and    (%rdx,%rcx,8),%rsi
ffffffff80207088:	48 89 75 e8          	mov    %rsi,-0x18(%rbp)
ffffffff8020708c:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
ffffffff80207090:	31 ff                	xor    %edi,%edi
ffffffff80207092:	89 45 b4             	mov    %eax,-0x4c(%rbp)
ffffffff80207095:	e8 96 ac ff ff       	callq  ffffffff80201d30 <GetVirtualAddress>
ffffffff8020709a:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
ffffffff8020709e:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
ffffffff802070a3:	75 05                	jne    ffffffff802070aa <VirtMemMan_FreePageTable+0x5a>
ffffffff802070a5:	e9 e9 00 00 00       	jmpq   ffffffff80207193 <VirtMemMan_FreePageTable+0x143>
ffffffff802070aa:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%rbp)
ffffffff802070b1:	81 7d dc 00 02 00 00 	cmpl   $0x200,-0x24(%rbp)
ffffffff802070b8:	0f 8d cc 00 00 00    	jge    ffffffff8020718a <VirtMemMan_FreePageTable+0x13a>
ffffffff802070be:	48 63 45 dc          	movslq -0x24(%rbp),%rax
ffffffff802070c2:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
ffffffff802070c6:	48 8b 04 c1          	mov    (%rcx,%rax,8),%rax
ffffffff802070ca:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
ffffffff802070ce:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff802070d2:	48 25 00 01 00 00    	and    $0x100,%rax
ffffffff802070d8:	48 83 f8 00          	cmp    $0x0,%rax
ffffffff802070dc:	74 05                	je     ffffffff802070e3 <VirtMemMan_FreePageTable+0x93>
ffffffff802070de:	e9 99 00 00 00       	jmpq   ffffffff8020717c <VirtMemMan_FreePageTable+0x12c>
ffffffff802070e3:	48 b8 00 f0 ff ff ff 	movabs $0xffffffffffff000,%rax
ffffffff802070ea:	ff ff 0f 
ffffffff802070ed:	48 23 45 d0          	and    -0x30(%rbp),%rax
ffffffff802070f1:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
ffffffff802070f5:	31 c0                	xor    %eax,%eax
ffffffff802070f7:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
ffffffff802070fb:	31 ff                	xor    %edi,%edi
ffffffff802070fd:	89 45 b0             	mov    %eax,-0x50(%rbp)
ffffffff80207100:	e8 2b ac ff ff       	callq  ffffffff80201d30 <GetVirtualAddress>
ffffffff80207105:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
ffffffff80207109:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
ffffffff8020710e:	75 02                	jne    ffffffff80207112 <VirtMemMan_FreePageTable+0xc2>
ffffffff80207110:	eb 6a                	jmp    ffffffff8020717c <VirtMemMan_FreePageTable+0x12c>
ffffffff80207112:	c7 45 c4 00 00 00 00 	movl   $0x0,-0x3c(%rbp)
ffffffff80207119:	81 7d c4 00 02 00 00 	cmpl   $0x200,-0x3c(%rbp)
ffffffff80207120:	7d 51                	jge    ffffffff80207173 <VirtMemMan_FreePageTable+0x123>
ffffffff80207122:	48 63 45 c4          	movslq -0x3c(%rbp),%rax
ffffffff80207126:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
ffffffff8020712a:	48 8b 04 c1          	mov    (%rcx,%rax,8),%rax
ffffffff8020712e:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
ffffffff80207132:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff80207136:	48 25 80 00 00 00    	and    $0x80,%rax
ffffffff8020713c:	48 83 f8 00          	cmp    $0x0,%rax
ffffffff80207140:	74 02                	je     ffffffff80207144 <VirtMemMan_FreePageTable+0xf4>
ffffffff80207142:	eb 24                	jmp    ffffffff80207168 <VirtMemMan_FreePageTable+0x118>
ffffffff80207144:	48 b8 00 f0 ff ff ff 	movabs $0xffffffffffff000,%rax
ffffffff8020714b:	ff ff 0f 
ffffffff8020714e:	48 23 45 b8          	and    -0x48(%rbp),%rax
ffffffff80207152:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
ffffffff80207156:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
ffffffff8020715b:	75 02                	jne    ffffffff8020715f <VirtMemMan_FreePageTable+0x10f>
ffffffff8020715d:	eb 09                	jmp    ffffffff80207168 <VirtMemMan_FreePageTable+0x118>
ffffffff8020715f:	48 8b 7d b8          	mov    -0x48(%rbp),%rdi
ffffffff80207163:	e8 78 d9 ff ff       	callq  ffffffff80204ae0 <MemMan_Free>
ffffffff80207168:	8b 45 c4             	mov    -0x3c(%rbp),%eax
ffffffff8020716b:	83 c0 01             	add    $0x1,%eax
ffffffff8020716e:	89 45 c4             	mov    %eax,-0x3c(%rbp)
ffffffff80207171:	eb a6                	jmp    ffffffff80207119 <VirtMemMan_FreePageTable+0xc9>
ffffffff80207173:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
ffffffff80207177:	e8 64 d9 ff ff       	callq  ffffffff80204ae0 <MemMan_Free>
ffffffff8020717c:	8b 45 dc             	mov    -0x24(%rbp),%eax
ffffffff8020717f:	83 c0 01             	add    $0x1,%eax
ffffffff80207182:	89 45 dc             	mov    %eax,-0x24(%rbp)
ffffffff80207185:	e9 27 ff ff ff       	jmpq   ffffffff802070b1 <VirtMemMan_FreePageTable+0x61>
ffffffff8020718a:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
ffffffff8020718e:	e8 4d d9 ff ff       	callq  ffffffff80204ae0 <MemMan_Free>
ffffffff80207193:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff80207196:	83 c0 01             	add    $0x1,%eax
ffffffff80207199:	89 45 f4             	mov    %eax,-0xc(%rbp)
ffffffff8020719c:	e9 c2 fe ff ff       	jmpq   ffffffff80207063 <VirtMemMan_FreePageTable+0x13>
ffffffff802071a1:	48 83 c4 50          	add    $0x50,%rsp
ffffffff802071a5:	5d                   	pop    %rbp
ffffffff802071a6:	c3                   	retq   
ffffffff802071a7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff802071ae:	00 00 

ffffffff802071b0 <SMP_IncrementCoreCount>:
ffffffff802071b0:	55                   	push   %rbp
ffffffff802071b1:	48 89 e5             	mov    %rsp,%rbp
ffffffff802071b4:	8b 04 25 30 8d 28 80 	mov    0xffffffff80288d30,%eax
ffffffff802071bb:	ff c0                	inc    %eax
ffffffff802071bd:	89 04 25 30 8d 28 80 	mov    %eax,0xffffffff80288d30
ffffffff802071c4:	5d                   	pop    %rbp
ffffffff802071c5:	c3                   	retq   
ffffffff802071c6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff802071cd:	00 00 00 

ffffffff802071d0 <SMP_GetCoreCount>:
ffffffff802071d0:	55                   	push   %rbp
ffffffff802071d1:	48 89 e5             	mov    %rsp,%rbp
ffffffff802071d4:	8b 04 25 30 8d 28 80 	mov    0xffffffff80288d30,%eax
ffffffff802071db:	5d                   	pop    %rbp
ffffffff802071dc:	c3                   	retq   
ffffffff802071dd:	0f 1f 00             	nopl   (%rax)

ffffffff802071e0 <SMP_WaitForCoreCountIncrement>:
ffffffff802071e0:	55                   	push   %rbp
ffffffff802071e1:	48 89 e5             	mov    %rsp,%rbp
ffffffff802071e4:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff802071e8:	e8 e3 ff ff ff       	callq  ffffffff802071d0 <SMP_GetCoreCount>
ffffffff802071ed:	89 45 fc             	mov    %eax,-0x4(%rbp)
ffffffff802071f0:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff802071f3:	89 45 f8             	mov    %eax,-0x8(%rbp)
ffffffff802071f6:	e8 d5 ff ff ff       	callq  ffffffff802071d0 <SMP_GetCoreCount>
ffffffff802071fb:	8b 4d f8             	mov    -0x8(%rbp),%ecx
ffffffff802071fe:	39 c1                	cmp    %eax,%ecx
ffffffff80207200:	75 02                	jne    ffffffff80207204 <SMP_WaitForCoreCountIncrement+0x24>
ffffffff80207202:	eb ec                	jmp    ffffffff802071f0 <SMP_WaitForCoreCountIncrement+0x10>
ffffffff80207204:	48 83 c4 10          	add    $0x10,%rsp
ffffffff80207208:	5d                   	pop    %rbp
ffffffff80207209:	c3                   	retq   
ffffffff8020720a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

ffffffff80207210 <SMP_LockTrampoline>:
ffffffff80207210:	55                   	push   %rbp
ffffffff80207211:	48 89 e5             	mov    %rsp,%rbp
ffffffff80207214:	48 c7 c0 34 8d 28 80 	mov    $0xffffffff80288d34,%rax

ffffffff8020721b <.spin>:
ffffffff8020721b:	f3 90                	pause  
ffffffff8020721d:	f7 00 01 00 00 00    	testl  $0x1,(%rax)
ffffffff80207223:	75 f6                	jne    ffffffff8020721b <.spin>
ffffffff80207225:	f0 0f ba 28 00       	lock btsl $0x0,(%rax)
ffffffff8020722a:	72 ef                	jb     ffffffff8020721b <.spin>
ffffffff8020722c:	5d                   	pop    %rbp
ffffffff8020722d:	c3                   	retq   
ffffffff8020722e:	66 90                	xchg   %ax,%ax

ffffffff80207230 <SMP_UnlockTrampoline>:
ffffffff80207230:	55                   	push   %rbp
ffffffff80207231:	48 89 e5             	mov    %rsp,%rbp
ffffffff80207234:	48 c7 c0 34 8d 28 80 	mov    $0xffffffff80288d34,%rax
ffffffff8020723b:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
ffffffff80207241:	5d                   	pop    %rbp
ffffffff80207242:	c3                   	retq   
ffffffff80207243:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8020724a:	00 00 00 
ffffffff8020724d:	0f 1f 00             	nopl   (%rax)

ffffffff80207250 <pci_getDeviceCount>:
ffffffff80207250:	55                   	push   %rbp
ffffffff80207251:	48 89 e5             	mov    %rsp,%rbp
ffffffff80207254:	8b 04 25 40 8d 28 80 	mov    0xffffffff80288d40,%eax
ffffffff8020725b:	5d                   	pop    %rbp
ffffffff8020725c:	c3                   	retq   
ffffffff8020725d:	0f 1f 00             	nopl   (%rax)

ffffffff80207260 <pci_getDeviceInfo>:
ffffffff80207260:	55                   	push   %rbp
ffffffff80207261:	48 89 e5             	mov    %rsp,%rbp
ffffffff80207264:	48 83 ec 30          	sub    $0x30,%rsp
ffffffff80207268:	89 7d fc             	mov    %edi,-0x4(%rbp)
ffffffff8020726b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff8020726f:	48 85 f6             	test   %rsi,%rsi
ffffffff80207272:	0f 94 c0             	sete   %al
ffffffff80207275:	0f b6 f8             	movzbl %al,%edi
ffffffff80207278:	8b 4d fc             	mov    -0x4(%rbp),%ecx
ffffffff8020727b:	8b 14 25 40 8d 28 80 	mov    0xffffffff80288d40,%edx
ffffffff80207282:	39 d1                	cmp    %edx,%ecx
ffffffff80207284:	0f 93 c0             	setae  %al
ffffffff80207287:	24 01                	and    $0x1,%al
ffffffff80207289:	0f b6 c8             	movzbl %al,%ecx
ffffffff8020728c:	09 cf                	or     %ecx,%edi
ffffffff8020728e:	83 ff 00             	cmp    $0x0,%edi
ffffffff80207291:	74 02                	je     ffffffff80207295 <pci_getDeviceInfo+0x35>
ffffffff80207293:	eb 3a                	jmp    ffffffff802072cf <pci_getDeviceInfo+0x6f>
ffffffff80207295:	b8 80 00 00 00       	mov    $0x80,%eax
ffffffff8020729a:	89 c1                	mov    %eax,%ecx
ffffffff8020729c:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
ffffffff802072a0:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff802072a3:	89 c2                	mov    %eax,%edx
ffffffff802072a5:	48 c1 e2 07          	shl    $0x7,%rdx
ffffffff802072a9:	48 8d 92 50 8d 28 80 	lea    -0x7fd772b0(%rdx),%rdx
ffffffff802072b0:	b8 80 00 00 00       	mov    $0x80,%eax
ffffffff802072b5:	89 c6                	mov    %eax,%esi
ffffffff802072b7:	48 89 75 e8          	mov    %rsi,-0x18(%rbp)
ffffffff802072bb:	48 89 d6             	mov    %rdx,%rsi
ffffffff802072be:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff802072c2:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
ffffffff802072c6:	e8 35 14 00 00       	callq  ffffffff80208700 <memcpy>
ffffffff802072cb:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
ffffffff802072cf:	48 83 c4 30          	add    $0x30,%rsp
ffffffff802072d3:	5d                   	pop    %rbp
ffffffff802072d4:	c3                   	retq   
ffffffff802072d5:	90                   	nop
ffffffff802072d6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff802072dd:	00 00 00 

ffffffff802072e0 <pci_readDWord>:
ffffffff802072e0:	55                   	push   %rbp
ffffffff802072e1:	48 89 e5             	mov    %rsp,%rbp
ffffffff802072e4:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff802072e8:	b8 f8 0c 00 00       	mov    $0xcf8,%eax
ffffffff802072ed:	89 7d fc             	mov    %edi,-0x4(%rbp)
ffffffff802072f0:	89 75 f8             	mov    %esi,-0x8(%rbp)
ffffffff802072f3:	89 55 f4             	mov    %edx,-0xc(%rbp)
ffffffff802072f6:	89 4d f0             	mov    %ecx,-0x10(%rbp)
ffffffff802072f9:	8b 4d fc             	mov    -0x4(%rbp),%ecx
ffffffff802072fc:	c1 e1 10             	shl    $0x10,%ecx
ffffffff802072ff:	81 c9 00 00 00 80    	or     $0x80000000,%ecx
ffffffff80207305:	8b 55 f8             	mov    -0x8(%rbp),%edx
ffffffff80207308:	c1 e2 0b             	shl    $0xb,%edx
ffffffff8020730b:	09 d1                	or     %edx,%ecx
ffffffff8020730d:	8b 55 f4             	mov    -0xc(%rbp),%edx
ffffffff80207310:	c1 e2 08             	shl    $0x8,%edx
ffffffff80207313:	09 d1                	or     %edx,%ecx
ffffffff80207315:	8b 55 f0             	mov    -0x10(%rbp),%edx
ffffffff80207318:	81 e2 fc 00 00 00    	and    $0xfc,%edx
ffffffff8020731e:	09 d1                	or     %edx,%ecx
ffffffff80207320:	bf f8 0c 00 00       	mov    $0xcf8,%edi
ffffffff80207325:	89 ce                	mov    %ecx,%esi
ffffffff80207327:	89 45 ec             	mov    %eax,-0x14(%rbp)
ffffffff8020732a:	e8 51 c7 ff ff       	callq  ffffffff80203a80 <outl>
ffffffff8020732f:	b8 fc 0c 00 00       	mov    $0xcfc,%eax
ffffffff80207334:	bf fc 0c 00 00       	mov    $0xcfc,%edi
ffffffff80207339:	89 45 e8             	mov    %eax,-0x18(%rbp)
ffffffff8020733c:	e8 5f c7 ff ff       	callq  ffffffff80203aa0 <inl>
ffffffff80207341:	48 83 c4 20          	add    $0x20,%rsp
ffffffff80207345:	5d                   	pop    %rbp
ffffffff80207346:	c3                   	retq   
ffffffff80207347:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff8020734e:	00 00 

ffffffff80207350 <pci_writeDWord>:
ffffffff80207350:	55                   	push   %rbp
ffffffff80207351:	48 89 e5             	mov    %rsp,%rbp
ffffffff80207354:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff80207358:	b8 f8 0c 00 00       	mov    $0xcf8,%eax
ffffffff8020735d:	89 7d fc             	mov    %edi,-0x4(%rbp)
ffffffff80207360:	89 75 f8             	mov    %esi,-0x8(%rbp)
ffffffff80207363:	89 55 f4             	mov    %edx,-0xc(%rbp)
ffffffff80207366:	89 4d f0             	mov    %ecx,-0x10(%rbp)
ffffffff80207369:	44 89 45 ec          	mov    %r8d,-0x14(%rbp)
ffffffff8020736d:	8b 4d fc             	mov    -0x4(%rbp),%ecx
ffffffff80207370:	c1 e1 10             	shl    $0x10,%ecx
ffffffff80207373:	81 c9 00 00 00 80    	or     $0x80000000,%ecx
ffffffff80207379:	8b 55 f8             	mov    -0x8(%rbp),%edx
ffffffff8020737c:	c1 e2 0b             	shl    $0xb,%edx
ffffffff8020737f:	09 d1                	or     %edx,%ecx
ffffffff80207381:	8b 55 f4             	mov    -0xc(%rbp),%edx
ffffffff80207384:	c1 e2 08             	shl    $0x8,%edx
ffffffff80207387:	09 d1                	or     %edx,%ecx
ffffffff80207389:	8b 55 f0             	mov    -0x10(%rbp),%edx
ffffffff8020738c:	81 e2 fc 00 00 00    	and    $0xfc,%edx
ffffffff80207392:	09 d1                	or     %edx,%ecx
ffffffff80207394:	bf f8 0c 00 00       	mov    $0xcf8,%edi
ffffffff80207399:	89 ce                	mov    %ecx,%esi
ffffffff8020739b:	89 45 e8             	mov    %eax,-0x18(%rbp)
ffffffff8020739e:	e8 dd c6 ff ff       	callq  ffffffff80203a80 <outl>
ffffffff802073a3:	b8 fc 0c 00 00       	mov    $0xcfc,%eax
ffffffff802073a8:	8b 75 ec             	mov    -0x14(%rbp),%esi
ffffffff802073ab:	bf fc 0c 00 00       	mov    $0xcfc,%edi
ffffffff802073b0:	89 45 e4             	mov    %eax,-0x1c(%rbp)
ffffffff802073b3:	e8 c8 c6 ff ff       	callq  ffffffff80203a80 <outl>
ffffffff802073b8:	48 83 c4 20          	add    $0x20,%rsp
ffffffff802073bc:	5d                   	pop    %rbp
ffffffff802073bd:	c3                   	retq   
ffffffff802073be:	66 90                	xchg   %ax,%ax

ffffffff802073c0 <pci_enableMSI>:
ffffffff802073c0:	55                   	push   %rbp
ffffffff802073c1:	48 89 e5             	mov    %rsp,%rbp
ffffffff802073c4:	48 83 ec 30          	sub    $0x30,%rsp
ffffffff802073c8:	b8 34 00 00 00       	mov    $0x34,%eax
ffffffff802073cd:	89 7d f8             	mov    %edi,-0x8(%rbp)
ffffffff802073d0:	c6 45 f7 00          	movb   $0x0,-0x9(%rbp)
ffffffff802073d4:	8b 7d f8             	mov    -0x8(%rbp),%edi
ffffffff802073d7:	89 f9                	mov    %edi,%ecx
ffffffff802073d9:	48 c1 e1 07          	shl    $0x7,%rcx
ffffffff802073dd:	8b b9 58 8d 28 80    	mov    -0x7fd772a8(%rcx),%edi
ffffffff802073e3:	8b b1 5c 8d 28 80    	mov    -0x7fd772a4(%rcx),%esi
ffffffff802073e9:	8b 91 60 8d 28 80    	mov    -0x7fd772a0(%rcx),%edx
ffffffff802073ef:	41 b8 04 00 00 00    	mov    $0x4,%r8d
ffffffff802073f5:	44 89 c1             	mov    %r8d,%ecx
ffffffff802073f8:	89 45 e0             	mov    %eax,-0x20(%rbp)
ffffffff802073fb:	44 89 45 dc          	mov    %r8d,-0x24(%rbp)
ffffffff802073ff:	e8 dc fe ff ff       	callq  ffffffff802072e0 <pci_readDWord>
ffffffff80207404:	89 45 f0             	mov    %eax,-0x10(%rbp)
ffffffff80207407:	25 ff fb ff ff       	and    $0xfffffbff,%eax
ffffffff8020740c:	89 45 f0             	mov    %eax,-0x10(%rbp)
ffffffff8020740f:	83 c8 04             	or     $0x4,%eax
ffffffff80207412:	89 45 f0             	mov    %eax,-0x10(%rbp)
ffffffff80207415:	8b 4d f8             	mov    -0x8(%rbp),%ecx
ffffffff80207418:	41 89 c9             	mov    %ecx,%r9d
ffffffff8020741b:	49 c1 e1 07          	shl    $0x7,%r9
ffffffff8020741f:	41 8b b9 58 8d 28 80 	mov    -0x7fd772a8(%r9),%edi
ffffffff80207426:	41 8b b1 5c 8d 28 80 	mov    -0x7fd772a4(%r9),%esi
ffffffff8020742d:	41 8b 91 60 8d 28 80 	mov    -0x7fd772a0(%r9),%edx
ffffffff80207434:	8b 4d dc             	mov    -0x24(%rbp),%ecx
ffffffff80207437:	41 89 c0             	mov    %eax,%r8d
ffffffff8020743a:	e8 11 ff ff ff       	callq  ffffffff80207350 <pci_writeDWord>
ffffffff8020743f:	8b 45 f8             	mov    -0x8(%rbp),%eax
ffffffff80207442:	41 89 c1             	mov    %eax,%r9d
ffffffff80207445:	49 c1 e1 07          	shl    $0x7,%r9
ffffffff80207449:	4d 8d 91 50 8d 28 80 	lea    -0x7fd772b0(%r9),%r10
ffffffff80207450:	41 8b b9 58 8d 28 80 	mov    -0x7fd772a8(%r9),%edi
ffffffff80207457:	41 8b b1 5c 8d 28 80 	mov    -0x7fd772a4(%r9),%esi
ffffffff8020745e:	41 8b 52 10          	mov    0x10(%r10),%edx
ffffffff80207462:	b9 34 00 00 00       	mov    $0x34,%ecx
ffffffff80207467:	e8 74 fe ff ff       	callq  ffffffff802072e0 <pci_readDWord>
ffffffff8020746c:	25 ff 00 00 00       	and    $0xff,%eax
ffffffff80207471:	89 45 ec             	mov    %eax,-0x14(%rbp)
ffffffff80207474:	8b 45 ec             	mov    -0x14(%rbp),%eax
ffffffff80207477:	c1 e0 08             	shl    $0x8,%eax
ffffffff8020747a:	89 45 e8             	mov    %eax,-0x18(%rbp)
ffffffff8020747d:	8b 45 e8             	mov    -0x18(%rbp),%eax
ffffffff80207480:	25 ff ff 00 00       	and    $0xffff,%eax
ffffffff80207485:	89 45 e4             	mov    %eax,-0x1c(%rbp)
ffffffff80207488:	8b 45 e4             	mov    -0x1c(%rbp),%eax
ffffffff8020748b:	25 ff 00 00 00       	and    $0xff,%eax
ffffffff80207490:	83 f8 05             	cmp    $0x5,%eax
ffffffff80207493:	74 4b                	je     ffffffff802074e0 <pci_enableMSI+0x120>
ffffffff80207495:	8b 45 e4             	mov    -0x1c(%rbp),%eax
ffffffff80207498:	89 45 e8             	mov    %eax,-0x18(%rbp)
ffffffff8020749b:	83 7d e8 00          	cmpl   $0x0,-0x18(%rbp)
ffffffff8020749f:	75 09                	jne    ffffffff802074aa <pci_enableMSI+0xea>
ffffffff802074a1:	c6 45 ff 00          	movb   $0x0,-0x1(%rbp)
ffffffff802074a5:	e9 21 01 00 00       	jmpq   ffffffff802075cb <pci_enableMSI+0x20b>
ffffffff802074aa:	8b 45 f8             	mov    -0x8(%rbp),%eax
ffffffff802074ad:	89 c1                	mov    %eax,%ecx
ffffffff802074af:	48 c1 e1 07          	shl    $0x7,%rcx
ffffffff802074b3:	48 8d 91 50 8d 28 80 	lea    -0x7fd772b0(%rcx),%rdx
ffffffff802074ba:	8b b9 58 8d 28 80    	mov    -0x7fd772a8(%rcx),%edi
ffffffff802074c0:	8b b1 5c 8d 28 80    	mov    -0x7fd772a4(%rcx),%esi
ffffffff802074c6:	8b 52 10             	mov    0x10(%rdx),%edx
ffffffff802074c9:	8b 45 e8             	mov    -0x18(%rbp),%eax
ffffffff802074cc:	c1 e8 08             	shr    $0x8,%eax
ffffffff802074cf:	89 c1                	mov    %eax,%ecx
ffffffff802074d1:	e8 0a fe ff ff       	callq  ffffffff802072e0 <pci_readDWord>
ffffffff802074d6:	25 ff ff 00 00       	and    $0xffff,%eax
ffffffff802074db:	89 45 e4             	mov    %eax,-0x1c(%rbp)
ffffffff802074de:	eb a8                	jmp    ffffffff80207488 <pci_enableMSI+0xc8>
ffffffff802074e0:	8b 45 e8             	mov    -0x18(%rbp),%eax
ffffffff802074e3:	c1 e8 08             	shr    $0x8,%eax
ffffffff802074e6:	89 45 e8             	mov    %eax,-0x18(%rbp)
ffffffff802074e9:	8b 4d f8             	mov    -0x8(%rbp),%ecx
ffffffff802074ec:	89 ca                	mov    %ecx,%edx
ffffffff802074ee:	48 c1 e2 07          	shl    $0x7,%rdx
ffffffff802074f2:	8b ba 58 8d 28 80    	mov    -0x7fd772a8(%rdx),%edi
ffffffff802074f8:	8b b2 5c 8d 28 80    	mov    -0x7fd772a4(%rdx),%esi
ffffffff802074fe:	8b 92 60 8d 28 80    	mov    -0x7fd772a0(%rdx),%edx
ffffffff80207504:	89 c1                	mov    %eax,%ecx
ffffffff80207506:	e8 d5 fd ff ff       	callq  ffffffff802072e0 <pci_readDWord>
ffffffff8020750b:	89 45 f0             	mov    %eax,-0x10(%rbp)
ffffffff8020750e:	c1 e8 17             	shr    $0x17,%eax
ffffffff80207511:	41 88 c0             	mov    %al,%r8b
ffffffff80207514:	44 88 45 f7          	mov    %r8b,-0x9(%rbp)
ffffffff80207518:	c7 45 f0 00 00 01 00 	movl   $0x10000,-0x10(%rbp)
ffffffff8020751f:	8b 45 f8             	mov    -0x8(%rbp),%eax
ffffffff80207522:	41 89 c1             	mov    %eax,%r9d
ffffffff80207525:	49 c1 e1 07          	shl    $0x7,%r9
ffffffff80207529:	41 8b b9 58 8d 28 80 	mov    -0x7fd772a8(%r9),%edi
ffffffff80207530:	41 8b b1 5c 8d 28 80 	mov    -0x7fd772a4(%r9),%esi
ffffffff80207537:	41 8b 91 60 8d 28 80 	mov    -0x7fd772a0(%r9),%edx
ffffffff8020753e:	8b 4d e8             	mov    -0x18(%rbp),%ecx
ffffffff80207541:	41 b8 00 00 01 00    	mov    $0x10000,%r8d
ffffffff80207547:	e8 04 fe ff ff       	callq  ffffffff80207350 <pci_writeDWord>
ffffffff8020754c:	8b 45 f8             	mov    -0x8(%rbp),%eax
ffffffff8020754f:	41 89 c1             	mov    %eax,%r9d
ffffffff80207552:	49 c1 e1 07          	shl    $0x7,%r9
ffffffff80207556:	41 8b b9 58 8d 28 80 	mov    -0x7fd772a8(%r9),%edi
ffffffff8020755d:	41 8b b1 5c 8d 28 80 	mov    -0x7fd772a4(%r9),%esi
ffffffff80207564:	41 8b 91 60 8d 28 80 	mov    -0x7fd772a0(%r9),%edx
ffffffff8020756b:	8b 45 e8             	mov    -0x18(%rbp),%eax
ffffffff8020756e:	83 c0 04             	add    $0x4,%eax
ffffffff80207571:	89 c1                	mov    %eax,%ecx
ffffffff80207573:	e8 68 fd ff ff       	callq  ffffffff802072e0 <pci_readDWord>
ffffffff80207578:	89 45 f0             	mov    %eax,-0x10(%rbp)
ffffffff8020757b:	c7 45 f0 00 00 e0 fe 	movl   $0xfee00000,-0x10(%rbp)
ffffffff80207582:	e8 09 c3 ff ff       	callq  ffffffff80203890 <APIC_GetID>
ffffffff80207587:	0f b6 c8             	movzbl %al,%ecx
ffffffff8020758a:	c1 e1 0c             	shl    $0xc,%ecx
ffffffff8020758d:	8b 55 f0             	mov    -0x10(%rbp),%edx
ffffffff80207590:	09 ca                	or     %ecx,%edx
ffffffff80207592:	89 55 f0             	mov    %edx,-0x10(%rbp)
ffffffff80207595:	8b 4d f8             	mov    -0x8(%rbp),%ecx
ffffffff80207598:	41 89 c9             	mov    %ecx,%r9d
ffffffff8020759b:	49 c1 e1 07          	shl    $0x7,%r9
ffffffff8020759f:	4d 8d 91 50 8d 28 80 	lea    -0x7fd772b0(%r9),%r10
ffffffff802075a6:	41 8b b9 58 8d 28 80 	mov    -0x7fd772a8(%r9),%edi
ffffffff802075ad:	41 8b b1 5c 8d 28 80 	mov    -0x7fd772a4(%r9),%esi
ffffffff802075b4:	41 8b 52 10          	mov    0x10(%r10),%edx
ffffffff802075b8:	8b 4d e8             	mov    -0x18(%rbp),%ecx
ffffffff802075bb:	83 c1 04             	add    $0x4,%ecx
ffffffff802075be:	44 8b 45 f0          	mov    -0x10(%rbp),%r8d
ffffffff802075c2:	e8 89 fd ff ff       	callq  ffffffff80207350 <pci_writeDWord>
ffffffff802075c7:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
ffffffff802075cb:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
ffffffff802075cf:	48 83 c4 30          	add    $0x30,%rsp
ffffffff802075d3:	5d                   	pop    %rbp
ffffffff802075d4:	c3                   	retq   
ffffffff802075d5:	90                   	nop
ffffffff802075d6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff802075dd:	00 00 00 

ffffffff802075e0 <pci_regMSIVector>:
ffffffff802075e0:	55                   	push   %rbp
ffffffff802075e1:	48 89 e5             	mov    %rsp,%rbp
ffffffff802075e4:	48 83 ec 30          	sub    $0x30,%rsp
ffffffff802075e8:	40 88 f0             	mov    %sil,%al
ffffffff802075eb:	be 34 00 00 00       	mov    $0x34,%esi
ffffffff802075f0:	89 7d fc             	mov    %edi,-0x4(%rbp)
ffffffff802075f3:	88 45 fb             	mov    %al,-0x5(%rbp)
ffffffff802075f6:	8b 7d fc             	mov    -0x4(%rbp),%edi
ffffffff802075f9:	89 f9                	mov    %edi,%ecx
ffffffff802075fb:	48 c1 e1 07          	shl    $0x7,%rcx
ffffffff802075ff:	48 8d 91 50 8d 28 80 	lea    -0x7fd772b0(%rcx),%rdx
ffffffff80207606:	8b b9 58 8d 28 80    	mov    -0x7fd772a8(%rcx),%edi
ffffffff8020760c:	44 8b 81 5c 8d 28 80 	mov    -0x7fd772a4(%rcx),%r8d
ffffffff80207613:	8b 52 10             	mov    0x10(%rdx),%edx
ffffffff80207616:	b9 34 00 00 00       	mov    $0x34,%ecx
ffffffff8020761b:	89 75 dc             	mov    %esi,-0x24(%rbp)
ffffffff8020761e:	44 89 c6             	mov    %r8d,%esi
ffffffff80207621:	e8 ba fc ff ff       	callq  ffffffff802072e0 <pci_readDWord>
ffffffff80207626:	25 ff 00 00 00       	and    $0xff,%eax
ffffffff8020762b:	89 45 f4             	mov    %eax,-0xc(%rbp)
ffffffff8020762e:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff80207631:	c1 e0 08             	shl    $0x8,%eax
ffffffff80207634:	89 45 f0             	mov    %eax,-0x10(%rbp)
ffffffff80207637:	8b 45 f0             	mov    -0x10(%rbp),%eax
ffffffff8020763a:	25 ff ff 00 00       	and    $0xffff,%eax
ffffffff8020763f:	89 45 ec             	mov    %eax,-0x14(%rbp)
ffffffff80207642:	8b 45 ec             	mov    -0x14(%rbp),%eax
ffffffff80207645:	25 ff 00 00 00       	and    $0xff,%eax
ffffffff8020764a:	83 f8 05             	cmp    $0x5,%eax
ffffffff8020764d:	74 3c                	je     ffffffff8020768b <pci_regMSIVector+0xab>
ffffffff8020764f:	8b 45 ec             	mov    -0x14(%rbp),%eax
ffffffff80207652:	89 45 f0             	mov    %eax,-0x10(%rbp)
ffffffff80207655:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff80207658:	89 c1                	mov    %eax,%ecx
ffffffff8020765a:	48 c1 e1 07          	shl    $0x7,%rcx
ffffffff8020765e:	48 8d 91 50 8d 28 80 	lea    -0x7fd772b0(%rcx),%rdx
ffffffff80207665:	8b b9 58 8d 28 80    	mov    -0x7fd772a8(%rcx),%edi
ffffffff8020766b:	8b b1 5c 8d 28 80    	mov    -0x7fd772a4(%rcx),%esi
ffffffff80207671:	8b 52 10             	mov    0x10(%rdx),%edx
ffffffff80207674:	8b 45 f0             	mov    -0x10(%rbp),%eax
ffffffff80207677:	c1 e8 08             	shr    $0x8,%eax
ffffffff8020767a:	89 c1                	mov    %eax,%ecx
ffffffff8020767c:	e8 5f fc ff ff       	callq  ffffffff802072e0 <pci_readDWord>
ffffffff80207681:	25 ff ff 00 00       	and    $0xffff,%eax
ffffffff80207686:	89 45 ec             	mov    %eax,-0x14(%rbp)
ffffffff80207689:	eb b7                	jmp    ffffffff80207642 <pci_regMSIVector+0x62>
ffffffff8020768b:	8b 45 f0             	mov    -0x10(%rbp),%eax
ffffffff8020768e:	c1 e8 08             	shr    $0x8,%eax
ffffffff80207691:	89 45 f0             	mov    %eax,-0x10(%rbp)
ffffffff80207694:	8b 4d fc             	mov    -0x4(%rbp),%ecx
ffffffff80207697:	89 ca                	mov    %ecx,%edx
ffffffff80207699:	48 c1 e2 07          	shl    $0x7,%rdx
ffffffff8020769d:	8b ba 58 8d 28 80    	mov    -0x7fd772a8(%rdx),%edi
ffffffff802076a3:	8b b2 5c 8d 28 80    	mov    -0x7fd772a4(%rdx),%esi
ffffffff802076a9:	8b 92 60 8d 28 80    	mov    -0x7fd772a0(%rdx),%edx
ffffffff802076af:	89 c1                	mov    %eax,%ecx
ffffffff802076b1:	e8 2a fc ff ff       	callq  ffffffff802072e0 <pci_readDWord>
ffffffff802076b6:	89 45 e8             	mov    %eax,-0x18(%rbp)
ffffffff802076b9:	c1 e8 17             	shr    $0x17,%eax
ffffffff802076bc:	41 88 c0             	mov    %al,%r8b
ffffffff802076bf:	44 88 45 e7          	mov    %r8b,-0x19(%rbp)
ffffffff802076c3:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff802076c6:	41 89 c1             	mov    %eax,%r9d
ffffffff802076c9:	49 c1 e1 07          	shl    $0x7,%r9
ffffffff802076cd:	4d 8d 91 50 8d 28 80 	lea    -0x7fd772b0(%r9),%r10
ffffffff802076d4:	41 8b b9 58 8d 28 80 	mov    -0x7fd772a8(%r9),%edi
ffffffff802076db:	41 8b b1 5c 8d 28 80 	mov    -0x7fd772a4(%r9),%esi
ffffffff802076e2:	41 8b 52 10          	mov    0x10(%r10),%edx
ffffffff802076e6:	8b 4d f0             	mov    -0x10(%rbp),%ecx
ffffffff802076e9:	44 8b 45 e8          	mov    -0x18(%rbp),%r8d
ffffffff802076ed:	e8 5e fc ff ff       	callq  ffffffff80207350 <pci_writeDWord>
ffffffff802076f2:	8b 45 f0             	mov    -0x10(%rbp),%eax
ffffffff802076f5:	83 c0 08             	add    $0x8,%eax
ffffffff802076f8:	89 45 e0             	mov    %eax,-0x20(%rbp)
ffffffff802076fb:	80 7d e7 00          	cmpb   $0x0,-0x19(%rbp)
ffffffff802076ff:	74 09                	je     ffffffff8020770a <pci_regMSIVector+0x12a>
ffffffff80207701:	8b 45 e0             	mov    -0x20(%rbp),%eax
ffffffff80207704:	83 c0 04             	add    $0x4,%eax
ffffffff80207707:	89 45 e0             	mov    %eax,-0x20(%rbp)
ffffffff8020770a:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff8020770d:	89 c1                	mov    %eax,%ecx
ffffffff8020770f:	48 c1 e1 07          	shl    $0x7,%rcx
ffffffff80207713:	8b b9 58 8d 28 80    	mov    -0x7fd772a8(%rcx),%edi
ffffffff80207719:	8b b1 5c 8d 28 80    	mov    -0x7fd772a4(%rcx),%esi
ffffffff8020771f:	8b 91 60 8d 28 80    	mov    -0x7fd772a0(%rcx),%edx
ffffffff80207725:	8b 4d e0             	mov    -0x20(%rbp),%ecx
ffffffff80207728:	e8 b3 fb ff ff       	callq  ffffffff802072e0 <pci_readDWord>
ffffffff8020772d:	89 45 e8             	mov    %eax,-0x18(%rbp)
ffffffff80207730:	25 00 ff ff ff       	and    $0xffffff00,%eax
ffffffff80207735:	89 45 e8             	mov    %eax,-0x18(%rbp)
ffffffff80207738:	0f b6 4d fb          	movzbl -0x5(%rbp),%ecx
ffffffff8020773c:	09 c8                	or     %ecx,%eax
ffffffff8020773e:	89 45 e8             	mov    %eax,-0x18(%rbp)
ffffffff80207741:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff80207744:	41 89 c0             	mov    %eax,%r8d
ffffffff80207747:	49 c1 e0 07          	shl    $0x7,%r8
ffffffff8020774b:	4d 8d 88 50 8d 28 80 	lea    -0x7fd772b0(%r8),%r9
ffffffff80207752:	41 8b b8 58 8d 28 80 	mov    -0x7fd772a8(%r8),%edi
ffffffff80207759:	41 8b b0 5c 8d 28 80 	mov    -0x7fd772a4(%r8),%esi
ffffffff80207760:	41 8b 51 10          	mov    0x10(%r9),%edx
ffffffff80207764:	8b 4d e0             	mov    -0x20(%rbp),%ecx
ffffffff80207767:	44 8b 45 e8          	mov    -0x18(%rbp),%r8d
ffffffff8020776b:	e8 e0 fb ff ff       	callq  ffffffff80207350 <pci_writeDWord>
ffffffff80207770:	48 83 c4 30          	add    $0x30,%rsp
ffffffff80207774:	5d                   	pop    %rbp
ffffffff80207775:	c3                   	retq   
ffffffff80207776:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8020777d:	00 00 00 

ffffffff80207780 <pci_Initialize>:
ffffffff80207780:	55                   	push   %rbp
ffffffff80207781:	48 89 e5             	mov    %rsp,%rbp
ffffffff80207784:	53                   	push   %rbx
ffffffff80207785:	48 81 ec 18 01 00 00 	sub    $0x118,%rsp
ffffffff8020778c:	48 c7 c7 c5 1c 21 80 	mov    $0xffffffff80211cc5,%rdi
ffffffff80207793:	31 f6                	xor    %esi,%esi
ffffffff80207795:	e8 96 38 00 00       	callq  ffffffff8020b030 <ACPITables_FindTable>
ffffffff8020779a:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff8020779e:	8b 70 04             	mov    0x4(%rax),%esi
ffffffff802077a1:	89 f0                	mov    %esi,%eax
ffffffff802077a3:	48 83 c0 d4          	add    $0xffffffffffffffd4,%rax
ffffffff802077a7:	48 c1 e8 04          	shr    $0x4,%rax
ffffffff802077ab:	48 89 04 25 50 cd 28 	mov    %rax,0xffffffff8028cd50
ffffffff802077b2:	80 
ffffffff802077b3:	48 c1 e0 04          	shl    $0x4,%rax
ffffffff802077b7:	48 89 c7             	mov    %rax,%rdi
ffffffff802077ba:	e8 41 33 00 00       	callq  ffffffff8020ab00 <bootstrap_malloc>
ffffffff802077bf:	48 89 04 25 58 cd 28 	mov    %rax,0xffffffff8028cd58
ffffffff802077c6:	80 
ffffffff802077c7:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
ffffffff802077cb:	48 83 c7 30          	add    $0x30,%rdi
ffffffff802077cf:	48 8b 0c 25 50 cd 28 	mov    0xffffffff8028cd50,%rcx
ffffffff802077d6:	80 
ffffffff802077d7:	48 c1 e1 04          	shl    $0x4,%rcx
ffffffff802077db:	48 89 bd 28 ff ff ff 	mov    %rdi,-0xd8(%rbp)
ffffffff802077e2:	48 89 c7             	mov    %rax,%rdi
ffffffff802077e5:	48 8b b5 28 ff ff ff 	mov    -0xd8(%rbp),%rsi
ffffffff802077ec:	48 89 ca             	mov    %rcx,%rdx
ffffffff802077ef:	e8 0c 0f 00 00       	callq  ffffffff80208700 <memcpy>
ffffffff802077f4:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
ffffffff802077fb:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
ffffffff80207802:	81 7d ec 00 01 00 00 	cmpl   $0x100,-0x14(%rbp)
ffffffff80207809:	0f 8d 7d 04 00 00    	jge    ffffffff80207c8c <pci_Initialize+0x50c>
ffffffff8020780f:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%rbp)
ffffffff80207816:	83 7d e8 20          	cmpl   $0x20,-0x18(%rbp)
ffffffff8020781a:	0f 8d 5c 04 00 00    	jge    ffffffff80207c7c <pci_Initialize+0x4fc>
ffffffff80207820:	31 c0                	xor    %eax,%eax
ffffffff80207822:	8b 7d ec             	mov    -0x14(%rbp),%edi
ffffffff80207825:	8b 75 e8             	mov    -0x18(%rbp),%esi
ffffffff80207828:	31 c9                	xor    %ecx,%ecx
ffffffff8020782a:	89 ca                	mov    %ecx,%edx
ffffffff8020782c:	89 85 1c ff ff ff    	mov    %eax,-0xe4(%rbp)
ffffffff80207832:	e8 a9 fa ff ff       	callq  ffffffff802072e0 <pci_readDWord>
ffffffff80207837:	89 45 e4             	mov    %eax,-0x1c(%rbp)
ffffffff8020783a:	8b 45 e4             	mov    -0x1c(%rbp),%eax
ffffffff8020783d:	c1 e8 10             	shr    $0x10,%eax
ffffffff80207840:	3d ff ff 00 00       	cmp    $0xffff,%eax
ffffffff80207845:	0f 84 21 04 00 00    	je     ffffffff80207c6c <pci_Initialize+0x4ec>
ffffffff8020784b:	31 c0                	xor    %eax,%eax
ffffffff8020784d:	b9 0c 00 00 00       	mov    $0xc,%ecx
ffffffff80207852:	8b 7d ec             	mov    -0x14(%rbp),%edi
ffffffff80207855:	8b 75 e8             	mov    -0x18(%rbp),%esi
ffffffff80207858:	31 d2                	xor    %edx,%edx
ffffffff8020785a:	41 b8 0c 00 00 00    	mov    $0xc,%r8d
ffffffff80207860:	89 8d 18 ff ff ff    	mov    %ecx,-0xe8(%rbp)
ffffffff80207866:	44 89 c1             	mov    %r8d,%ecx
ffffffff80207869:	89 85 14 ff ff ff    	mov    %eax,-0xec(%rbp)
ffffffff8020786f:	e8 6c fa ff ff       	callq  ffffffff802072e0 <pci_readDWord>
ffffffff80207874:	89 45 e0             	mov    %eax,-0x20(%rbp)
ffffffff80207877:	c7 45 dc 01 00 00 00 	movl   $0x1,-0x24(%rbp)
ffffffff8020787e:	8b 45 e0             	mov    -0x20(%rbp),%eax
ffffffff80207881:	c1 f8 17             	sar    $0x17,%eax
ffffffff80207884:	83 e0 01             	and    $0x1,%eax
ffffffff80207887:	83 f8 00             	cmp    $0x0,%eax
ffffffff8020788a:	74 07                	je     ffffffff80207893 <pci_Initialize+0x113>
ffffffff8020788c:	c7 45 dc 08 00 00 00 	movl   $0x8,-0x24(%rbp)
ffffffff80207893:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%rbp)
ffffffff8020789a:	8b 45 d8             	mov    -0x28(%rbp),%eax
ffffffff8020789d:	3b 45 dc             	cmp    -0x24(%rbp),%eax
ffffffff802078a0:	0f 8d c4 03 00 00    	jge    ffffffff80207c6a <pci_Initialize+0x4ea>
ffffffff802078a6:	31 c0                	xor    %eax,%eax
ffffffff802078a8:	8b 7d ec             	mov    -0x14(%rbp),%edi
ffffffff802078ab:	8b 75 e8             	mov    -0x18(%rbp),%esi
ffffffff802078ae:	8b 55 d8             	mov    -0x28(%rbp),%edx
ffffffff802078b1:	31 c9                	xor    %ecx,%ecx
ffffffff802078b3:	89 85 10 ff ff ff    	mov    %eax,-0xf0(%rbp)
ffffffff802078b9:	e8 22 fa ff ff       	callq  ffffffff802072e0 <pci_readDWord>
ffffffff802078be:	c1 e8 10             	shr    $0x10,%eax
ffffffff802078c1:	3d ff ff 00 00       	cmp    $0xffff,%eax
ffffffff802078c6:	0f 84 8e 03 00 00    	je     ffffffff80207c5a <pci_Initialize+0x4da>
ffffffff802078cc:	8b 7d ec             	mov    -0x14(%rbp),%edi
ffffffff802078cf:	8b 75 e8             	mov    -0x18(%rbp),%esi
ffffffff802078d2:	8b 55 d8             	mov    -0x28(%rbp),%edx
ffffffff802078d5:	b8 08 00 00 00       	mov    $0x8,%eax
ffffffff802078da:	89 c1                	mov    %eax,%ecx
ffffffff802078dc:	89 85 0c ff ff ff    	mov    %eax,-0xf4(%rbp)
ffffffff802078e2:	e8 f9 f9 ff ff       	callq  ffffffff802072e0 <pci_readDWord>
ffffffff802078e7:	c1 e8 18             	shr    $0x18,%eax
ffffffff802078ea:	41 88 c0             	mov    %al,%r8b
ffffffff802078ed:	8b 04 25 40 8d 28 80 	mov    0xffffffff80288d40,%eax
ffffffff802078f4:	41 89 c1             	mov    %eax,%r9d
ffffffff802078f7:	49 c1 e1 07          	shl    $0x7,%r9
ffffffff802078fb:	45 88 81 50 8d 28 80 	mov    %r8b,-0x7fd772b0(%r9)
ffffffff80207902:	8b 7d ec             	mov    -0x14(%rbp),%edi
ffffffff80207905:	8b 75 e8             	mov    -0x18(%rbp),%esi
ffffffff80207908:	8b 55 d8             	mov    -0x28(%rbp),%edx
ffffffff8020790b:	8b 8d 0c ff ff ff    	mov    -0xf4(%rbp),%ecx
ffffffff80207911:	e8 ca f9 ff ff       	callq  ffffffff802072e0 <pci_readDWord>
ffffffff80207916:	c1 e8 10             	shr    $0x10,%eax
ffffffff80207919:	41 88 c0             	mov    %al,%r8b
ffffffff8020791c:	8b 04 25 40 8d 28 80 	mov    0xffffffff80288d40,%eax
ffffffff80207923:	41 89 c1             	mov    %eax,%r9d
ffffffff80207926:	49 c1 e1 07          	shl    $0x7,%r9
ffffffff8020792a:	45 88 81 51 8d 28 80 	mov    %r8b,-0x7fd772af(%r9)
ffffffff80207931:	8b 7d ec             	mov    -0x14(%rbp),%edi
ffffffff80207934:	8b 75 e8             	mov    -0x18(%rbp),%esi
ffffffff80207937:	8b 55 d8             	mov    -0x28(%rbp),%edx
ffffffff8020793a:	8b 8d 0c ff ff ff    	mov    -0xf4(%rbp),%ecx
ffffffff80207940:	e8 9b f9 ff ff       	callq  ffffffff802072e0 <pci_readDWord>
ffffffff80207945:	8b 0c 25 40 8d 28 80 	mov    0xffffffff80288d40,%ecx
ffffffff8020794c:	41 89 c9             	mov    %ecx,%r9d
ffffffff8020794f:	4c 89 cb             	mov    %r9,%rbx
ffffffff80207952:	48 c1 e3 07          	shl    $0x7,%rbx
ffffffff80207956:	88 e0                	mov    %ah,%al
ffffffff80207958:	88 83 52 8d 28 80    	mov    %al,-0x7fd772ae(%rbx)
ffffffff8020795e:	8b 4d ec             	mov    -0x14(%rbp),%ecx
ffffffff80207961:	8b 14 25 40 8d 28 80 	mov    0xffffffff80288d40,%edx
ffffffff80207968:	41 89 d1             	mov    %edx,%r9d
ffffffff8020796b:	49 c1 e1 07          	shl    $0x7,%r9
ffffffff8020796f:	41 89 89 58 8d 28 80 	mov    %ecx,-0x7fd772a8(%r9)
ffffffff80207976:	8b 4d e8             	mov    -0x18(%rbp),%ecx
ffffffff80207979:	8b 14 25 40 8d 28 80 	mov    0xffffffff80288d40,%edx
ffffffff80207980:	41 89 d1             	mov    %edx,%r9d
ffffffff80207983:	49 c1 e1 07          	shl    $0x7,%r9
ffffffff80207987:	41 89 89 5c 8d 28 80 	mov    %ecx,-0x7fd772a4(%r9)
ffffffff8020798e:	8b 4d d8             	mov    -0x28(%rbp),%ecx
ffffffff80207991:	8b 14 25 40 8d 28 80 	mov    0xffffffff80288d40,%edx
ffffffff80207998:	41 89 d1             	mov    %edx,%r9d
ffffffff8020799b:	49 c1 e1 07          	shl    $0x7,%r9
ffffffff8020799f:	41 89 89 60 8d 28 80 	mov    %ecx,-0x7fd772a0(%r9)
ffffffff802079a6:	8b 7d ec             	mov    -0x14(%rbp),%edi
ffffffff802079a9:	8b 75 e8             	mov    -0x18(%rbp),%esi
ffffffff802079ac:	8b 55 d8             	mov    -0x28(%rbp),%edx
ffffffff802079af:	b9 0c 00 00 00       	mov    $0xc,%ecx
ffffffff802079b4:	e8 27 f9 ff ff       	callq  ffffffff802072e0 <pci_readDWord>
ffffffff802079b9:	c1 e8 10             	shr    $0x10,%eax
ffffffff802079bc:	41 88 c0             	mov    %al,%r8b
ffffffff802079bf:	8b 04 25 40 8d 28 80 	mov    0xffffffff80288d40,%eax
ffffffff802079c6:	41 89 c1             	mov    %eax,%r9d
ffffffff802079c9:	49 c1 e1 07          	shl    $0x7,%r9
ffffffff802079cd:	45 88 81 c8 8d 28 80 	mov    %r8b,-0x7fd77238(%r9)
ffffffff802079d4:	8b 7d ec             	mov    -0x14(%rbp),%edi
ffffffff802079d7:	8b 75 e8             	mov    -0x18(%rbp),%esi
ffffffff802079da:	8b 55 d8             	mov    -0x28(%rbp),%edx
ffffffff802079dd:	31 c0                	xor    %eax,%eax
ffffffff802079df:	89 c1                	mov    %eax,%ecx
ffffffff802079e1:	89 85 08 ff ff ff    	mov    %eax,-0xf8(%rbp)
ffffffff802079e7:	e8 f4 f8 ff ff       	callq  ffffffff802072e0 <pci_readDWord>
ffffffff802079ec:	c1 e8 10             	shr    $0x10,%eax
ffffffff802079ef:	66 41 89 c2          	mov    %ax,%r10w
ffffffff802079f3:	8b 04 25 40 8d 28 80 	mov    0xffffffff80288d40,%eax
ffffffff802079fa:	41 89 c1             	mov    %eax,%r9d
ffffffff802079fd:	49 c1 e1 07          	shl    $0x7,%r9
ffffffff80207a01:	66 45 89 91 54 8d 28 	mov    %r10w,-0x7fd772ac(%r9)
ffffffff80207a08:	80 
ffffffff80207a09:	8b 7d ec             	mov    -0x14(%rbp),%edi
ffffffff80207a0c:	8b 75 e8             	mov    -0x18(%rbp),%esi
ffffffff80207a0f:	8b 55 d8             	mov    -0x28(%rbp),%edx
ffffffff80207a12:	8b 8d 08 ff ff ff    	mov    -0xf8(%rbp),%ecx
ffffffff80207a18:	e8 c3 f8 ff ff       	callq  ffffffff802072e0 <pci_readDWord>
ffffffff80207a1d:	66 41 89 c2          	mov    %ax,%r10w
ffffffff80207a21:	8b 04 25 40 8d 28 80 	mov    0xffffffff80288d40,%eax
ffffffff80207a28:	41 89 c1             	mov    %eax,%r9d
ffffffff80207a2b:	49 c1 e1 07          	shl    $0x7,%r9
ffffffff80207a2f:	66 45 89 91 56 8d 28 	mov    %r10w,-0x7fd772aa(%r9)
ffffffff80207a36:	80 
ffffffff80207a37:	8b 04 25 40 8d 28 80 	mov    0xffffffff80288d40,%eax
ffffffff80207a3e:	41 89 c1             	mov    %eax,%r9d
ffffffff80207a41:	49 c1 e1 07          	shl    $0x7,%r9
ffffffff80207a45:	41 0f b6 81 c8 8d 28 	movzbl -0x7fd77238(%r9),%eax
ffffffff80207a4c:	80 
ffffffff80207a4d:	85 c0                	test   %eax,%eax
ffffffff80207a4f:	89 85 04 ff ff ff    	mov    %eax,-0xfc(%rbp)
ffffffff80207a55:	74 15                	je     ffffffff80207a6c <pci_Initialize+0x2ec>
ffffffff80207a57:	eb 00                	jmp    ffffffff80207a59 <pci_Initialize+0x2d9>
ffffffff80207a59:	8b 85 04 ff ff ff    	mov    -0xfc(%rbp),%eax
ffffffff80207a5f:	83 e8 01             	sub    $0x1,%eax
ffffffff80207a62:	89 85 00 ff ff ff    	mov    %eax,-0x100(%rbp)
ffffffff80207a68:	74 1c                	je     ffffffff80207a86 <pci_Initialize+0x306>
ffffffff80207a6a:	eb 32                	jmp    ffffffff80207a9e <pci_Initialize+0x31e>
ffffffff80207a6c:	8b 04 25 40 8d 28 80 	mov    0xffffffff80288d40,%eax
ffffffff80207a73:	89 c1                	mov    %eax,%ecx
ffffffff80207a75:	48 c1 e1 07          	shl    $0x7,%rcx
ffffffff80207a79:	48 8d 89 50 8d 28 80 	lea    -0x7fd772b0(%rcx),%rcx
ffffffff80207a80:	c6 41 14 06          	movb   $0x6,0x14(%rcx)
ffffffff80207a84:	eb 18                	jmp    ffffffff80207a9e <pci_Initialize+0x31e>
ffffffff80207a86:	8b 04 25 40 8d 28 80 	mov    0xffffffff80288d40,%eax
ffffffff80207a8d:	89 c1                	mov    %eax,%ecx
ffffffff80207a8f:	48 c1 e1 07          	shl    $0x7,%rcx
ffffffff80207a93:	48 8d 89 50 8d 28 80 	lea    -0x7fd772b0(%rcx),%rcx
ffffffff80207a9a:	c6 41 14 02          	movb   $0x2,0x14(%rcx)
ffffffff80207a9e:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%rbp)
ffffffff80207aa5:	8b 04 25 40 8d 28 80 	mov    0xffffffff80288d40,%eax
ffffffff80207aac:	89 c1                	mov    %eax,%ecx
ffffffff80207aae:	48 c1 e1 07          	shl    $0x7,%rcx
ffffffff80207ab2:	48 8d 89 50 8d 28 80 	lea    -0x7fd772b0(%rcx),%rcx
ffffffff80207ab9:	0f b6 41 14          	movzbl 0x14(%rcx),%eax
ffffffff80207abd:	89 45 d0             	mov    %eax,-0x30(%rbp)
ffffffff80207ac0:	c6 45 cf 00          	movb   $0x0,-0x31(%rbp)
ffffffff80207ac4:	0f b6 45 cf          	movzbl -0x31(%rbp),%eax
ffffffff80207ac8:	3b 45 d0             	cmp    -0x30(%rbp),%eax
ffffffff80207acb:	0f 83 79 01 00 00    	jae    ffffffff80207c4a <pci_Initialize+0x4ca>
ffffffff80207ad1:	8b 7d ec             	mov    -0x14(%rbp),%edi
ffffffff80207ad4:	8b 75 e8             	mov    -0x18(%rbp),%esi
ffffffff80207ad7:	8b 55 d8             	mov    -0x28(%rbp),%edx
ffffffff80207ada:	0f b6 45 cf          	movzbl -0x31(%rbp),%eax
ffffffff80207ade:	89 c1                	mov    %eax,%ecx
ffffffff80207ae0:	8d 0c 8d 10 00 00 00 	lea    0x10(,%rcx,4),%ecx
ffffffff80207ae7:	e8 f4 f7 ff ff       	callq  ffffffff802072e0 <pci_readDWord>
ffffffff80207aec:	89 c0                	mov    %eax,%eax
ffffffff80207aee:	41 89 c0             	mov    %eax,%r8d
ffffffff80207af1:	4c 89 45 c0          	mov    %r8,-0x40(%rbp)
ffffffff80207af5:	0f b6 45 cf          	movzbl -0x31(%rbp),%eax
ffffffff80207af9:	41 89 c0             	mov    %eax,%r8d
ffffffff80207afc:	44 89 c0             	mov    %r8d,%eax
ffffffff80207aff:	41 89 c1             	mov    %eax,%r9d
ffffffff80207b02:	42 8d 04 8d 10 00 00 	lea    0x10(,%r9,4),%eax
ffffffff80207b09:	00 
ffffffff80207b0a:	8b 0c 25 40 8d 28 80 	mov    0xffffffff80288d40,%ecx
ffffffff80207b11:	41 89 c9             	mov    %ecx,%r9d
ffffffff80207b14:	49 c1 e1 07          	shl    $0x7,%r9
ffffffff80207b18:	49 c1 e0 04          	shl    $0x4,%r8
ffffffff80207b1c:	43 89 84 01 70 8d 28 	mov    %eax,-0x7fd77290(%r9,%r8,1)
ffffffff80207b23:	80 
ffffffff80207b24:	8b 45 c0             	mov    -0x40(%rbp),%eax
ffffffff80207b27:	83 e0 01             	and    $0x1,%eax
ffffffff80207b2a:	41 88 c2             	mov    %al,%r10b
ffffffff80207b2d:	0f b6 45 cf          	movzbl -0x31(%rbp),%eax
ffffffff80207b31:	41 89 c0             	mov    %eax,%r8d
ffffffff80207b34:	8b 04 25 40 8d 28 80 	mov    0xffffffff80288d40,%eax
ffffffff80207b3b:	41 89 c1             	mov    %eax,%r9d
ffffffff80207b3e:	49 c1 e1 07          	shl    $0x7,%r9
ffffffff80207b42:	4d 8d 89 50 8d 28 80 	lea    -0x7fd772b0(%r9),%r9
ffffffff80207b49:	49 83 c1 18          	add    $0x18,%r9
ffffffff80207b4d:	49 c1 e0 04          	shl    $0x4,%r8
ffffffff80207b51:	4d 01 c1             	add    %r8,%r9
ffffffff80207b54:	45 88 51 0c          	mov    %r10b,0xc(%r9)
ffffffff80207b58:	4c 8b 45 c0          	mov    -0x40(%rbp),%r8
ffffffff80207b5c:	49 83 e0 03          	and    $0x3,%r8
ffffffff80207b60:	49 83 f8 02          	cmp    $0x2,%r8
ffffffff80207b64:	75 5e                	jne    ffffffff80207bc4 <pci_Initialize+0x444>
ffffffff80207b66:	8a 45 cf             	mov    -0x31(%rbp),%al
ffffffff80207b69:	fe c0                	inc    %al
ffffffff80207b6b:	88 45 cf             	mov    %al,-0x31(%rbp)
ffffffff80207b6e:	8b 7d ec             	mov    -0x14(%rbp),%edi
ffffffff80207b71:	8b 75 e8             	mov    -0x18(%rbp),%esi
ffffffff80207b74:	8b 55 d8             	mov    -0x28(%rbp),%edx
ffffffff80207b77:	0f b6 4d cf          	movzbl -0x31(%rbp),%ecx
ffffffff80207b7b:	41 89 c8             	mov    %ecx,%r8d
ffffffff80207b7e:	42 8d 0c 85 10 00 00 	lea    0x10(,%r8,4),%ecx
ffffffff80207b85:	00 
ffffffff80207b86:	e8 55 f7 ff ff       	callq  ffffffff802072e0 <pci_readDWord>
ffffffff80207b8b:	89 c0                	mov    %eax,%eax
ffffffff80207b8d:	41 89 c0             	mov    %eax,%r8d
ffffffff80207b90:	4c 89 45 b8          	mov    %r8,-0x48(%rbp)
ffffffff80207b94:	49 c1 e0 20          	shl    $0x20,%r8
ffffffff80207b98:	4c 8b 4d c0          	mov    -0x40(%rbp),%r9
ffffffff80207b9c:	4d 09 c1             	or     %r8,%r9
ffffffff80207b9f:	4c 89 4d c0          	mov    %r9,-0x40(%rbp)
ffffffff80207ba3:	8b 04 25 40 8d 28 80 	mov    0xffffffff80288d40,%eax
ffffffff80207baa:	41 89 c0             	mov    %eax,%r8d
ffffffff80207bad:	49 c1 e0 07          	shl    $0x7,%r8
ffffffff80207bb1:	4d 8d 80 50 8d 28 80 	lea    -0x7fd772b0(%r8),%r8
ffffffff80207bb8:	45 8a 50 14          	mov    0x14(%r8),%r10b
ffffffff80207bbc:	41 80 c2 ff          	add    $0xff,%r10b
ffffffff80207bc0:	45 88 50 14          	mov    %r10b,0x14(%r8)
ffffffff80207bc4:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff80207bc8:	48 83 e0 01          	and    $0x1,%rax
ffffffff80207bcc:	48 83 f8 00          	cmp    $0x0,%rax
ffffffff80207bd0:	74 32                	je     ffffffff80207c04 <pci_Initialize+0x484>
ffffffff80207bd2:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff80207bd6:	48 83 e0 fc          	and    $0xfffffffffffffffc,%rax
ffffffff80207bda:	0f b6 4d cf          	movzbl -0x31(%rbp),%ecx
ffffffff80207bde:	89 ca                	mov    %ecx,%edx
ffffffff80207be0:	8b 0c 25 40 8d 28 80 	mov    0xffffffff80288d40,%ecx
ffffffff80207be7:	89 ce                	mov    %ecx,%esi
ffffffff80207be9:	48 c1 e6 07          	shl    $0x7,%rsi
ffffffff80207bed:	48 8d b6 50 8d 28 80 	lea    -0x7fd772b0(%rsi),%rsi
ffffffff80207bf4:	48 83 c6 18          	add    $0x18,%rsi
ffffffff80207bf8:	48 c1 e2 04          	shl    $0x4,%rdx
ffffffff80207bfc:	48 01 d6             	add    %rdx,%rsi
ffffffff80207bff:	48 89 06             	mov    %rax,(%rsi)
ffffffff80207c02:	eb 30                	jmp    ffffffff80207c34 <pci_Initialize+0x4b4>
ffffffff80207c04:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff80207c08:	48 83 e0 f0          	and    $0xfffffffffffffff0,%rax
ffffffff80207c0c:	0f b6 4d cf          	movzbl -0x31(%rbp),%ecx
ffffffff80207c10:	89 ca                	mov    %ecx,%edx
ffffffff80207c12:	8b 0c 25 40 8d 28 80 	mov    0xffffffff80288d40,%ecx
ffffffff80207c19:	89 ce                	mov    %ecx,%esi
ffffffff80207c1b:	48 c1 e6 07          	shl    $0x7,%rsi
ffffffff80207c1f:	48 8d b6 50 8d 28 80 	lea    -0x7fd772b0(%rsi),%rsi
ffffffff80207c26:	48 83 c6 18          	add    $0x18,%rsi
ffffffff80207c2a:	48 c1 e2 04          	shl    $0x4,%rdx
ffffffff80207c2e:	48 01 d6             	add    %rdx,%rsi
ffffffff80207c31:	48 89 06             	mov    %rax,(%rsi)
ffffffff80207c34:	8b 45 d4             	mov    -0x2c(%rbp),%eax
ffffffff80207c37:	83 c0 01             	add    $0x1,%eax
ffffffff80207c3a:	89 45 d4             	mov    %eax,-0x2c(%rbp)
ffffffff80207c3d:	8a 45 cf             	mov    -0x31(%rbp),%al
ffffffff80207c40:	04 01                	add    $0x1,%al
ffffffff80207c42:	88 45 cf             	mov    %al,-0x31(%rbp)
ffffffff80207c45:	e9 7a fe ff ff       	jmpq   ffffffff80207ac4 <pci_Initialize+0x344>
ffffffff80207c4a:	8b 04 25 40 8d 28 80 	mov    0xffffffff80288d40,%eax
ffffffff80207c51:	ff c0                	inc    %eax
ffffffff80207c53:	89 04 25 40 8d 28 80 	mov    %eax,0xffffffff80288d40
ffffffff80207c5a:	eb 00                	jmp    ffffffff80207c5c <pci_Initialize+0x4dc>
ffffffff80207c5c:	8b 45 d8             	mov    -0x28(%rbp),%eax
ffffffff80207c5f:	83 c0 01             	add    $0x1,%eax
ffffffff80207c62:	89 45 d8             	mov    %eax,-0x28(%rbp)
ffffffff80207c65:	e9 30 fc ff ff       	jmpq   ffffffff8020789a <pci_Initialize+0x11a>
ffffffff80207c6a:	eb 00                	jmp    ffffffff80207c6c <pci_Initialize+0x4ec>
ffffffff80207c6c:	eb 00                	jmp    ffffffff80207c6e <pci_Initialize+0x4ee>
ffffffff80207c6e:	8b 45 e8             	mov    -0x18(%rbp),%eax
ffffffff80207c71:	83 c0 01             	add    $0x1,%eax
ffffffff80207c74:	89 45 e8             	mov    %eax,-0x18(%rbp)
ffffffff80207c77:	e9 9a fb ff ff       	jmpq   ffffffff80207816 <pci_Initialize+0x96>
ffffffff80207c7c:	eb 00                	jmp    ffffffff80207c7e <pci_Initialize+0x4fe>
ffffffff80207c7e:	8b 45 ec             	mov    -0x14(%rbp),%eax
ffffffff80207c81:	83 c0 01             	add    $0x1,%eax
ffffffff80207c84:	89 45 ec             	mov    %eax,-0x14(%rbp)
ffffffff80207c87:	e9 76 fb ff ff       	jmpq   ffffffff80207802 <pci_Initialize+0x82>
ffffffff80207c8c:	48 c7 c7 d6 be 23 80 	mov    $0xffffffff8023bed6,%rdi
ffffffff80207c93:	e8 f8 6d 00 00       	callq  ffffffff8020ea90 <RegisterBus>
ffffffff80207c98:	c7 45 b4 00 00 00 00 	movl   $0x0,-0x4c(%rbp)
ffffffff80207c9f:	89 85 fc fe ff ff    	mov    %eax,-0x104(%rbp)
ffffffff80207ca5:	8b 45 b4             	mov    -0x4c(%rbp),%eax
ffffffff80207ca8:	8b 0c 25 40 8d 28 80 	mov    0xffffffff80288d40,%ecx
ffffffff80207caf:	39 c8                	cmp    %ecx,%eax
ffffffff80207cb1:	0f 83 e2 00 00 00    	jae    ffffffff80207d99 <pci_Initialize+0x619>
ffffffff80207cb7:	c7 45 b0 ff ff ff ff 	movl   $0xffffffff,-0x50(%rbp)
ffffffff80207cbe:	8b 45 b0             	mov    -0x50(%rbp),%eax
ffffffff80207cc1:	ff c0                	inc    %eax
ffffffff80207cc3:	89 45 b0             	mov    %eax,-0x50(%rbp)
ffffffff80207cc6:	48 63 c8             	movslq %eax,%rcx
ffffffff80207cc9:	48 69 c9 20 02 00 00 	imul   $0x220,%rcx,%rcx
ffffffff80207cd0:	48 8d 89 a0 f0 20 80 	lea    -0x7fdf0f60(%rcx),%rcx
ffffffff80207cd7:	48 83 b9 10 02 00 00 	cmpq   $0x0,0x210(%rcx)
ffffffff80207cde:	00 
ffffffff80207cdf:	0f 84 a4 00 00 00    	je     ffffffff80207d89 <pci_Initialize+0x609>
ffffffff80207ce5:	48 8d bd 30 ff ff ff 	lea    -0xd0(%rbp),%rdi
ffffffff80207cec:	8b 45 b4             	mov    -0x4c(%rbp),%eax
ffffffff80207cef:	48 8d b5 30 ff ff ff 	lea    -0xd0(%rbp),%rsi
ffffffff80207cf6:	48 89 bd f0 fe ff ff 	mov    %rdi,-0x110(%rbp)
ffffffff80207cfd:	89 c7                	mov    %eax,%edi
ffffffff80207cff:	e8 5c f5 ff ff       	callq  ffffffff80207260 <pci_getDeviceInfo>
ffffffff80207d04:	48 63 75 b0          	movslq -0x50(%rbp),%rsi
ffffffff80207d08:	48 69 f6 20 02 00 00 	imul   $0x220,%rsi,%rsi
ffffffff80207d0f:	48 8d b6 a0 f0 20 80 	lea    -0x7fdf0f60(%rsi),%rsi
ffffffff80207d16:	48 8b bd f0 fe ff ff 	mov    -0x110(%rbp),%rdi
ffffffff80207d1d:	ff 96 10 02 00 00    	callq  *0x210(%rsi)
ffffffff80207d23:	3c 00                	cmp    $0x0,%al
ffffffff80207d25:	74 5d                	je     ffffffff80207d84 <pci_Initialize+0x604>
ffffffff80207d27:	48 63 45 b0          	movslq -0x50(%rbp),%rax
ffffffff80207d2b:	48 69 c0 20 02 00 00 	imul   $0x220,%rax,%rax
ffffffff80207d32:	48 8d b8 a0 f0 20 80 	lea    -0x7fdf0f60(%rax),%rdi
ffffffff80207d39:	48 8d b0 a0 f1 20 80 	lea    -0x7fdf0e60(%rax),%rsi
ffffffff80207d40:	8b 90 a0 f2 20 80    	mov    -0x7fdf0d60(%rax),%edx
ffffffff80207d46:	48 8b 88 a8 f2 20 80 	mov    -0x7fdf0d58(%rax),%rcx
ffffffff80207d4d:	e8 be 6e 00 00       	callq  ffffffff8020ec10 <RegisterDevice>
ffffffff80207d52:	48 63 4d b0          	movslq -0x50(%rbp),%rcx
ffffffff80207d56:	48 69 c9 20 02 00 00 	imul   $0x220,%rcx,%rcx
ffffffff80207d5d:	48 8b 89 b8 f2 20 80 	mov    -0x7fdf0d48(%rcx),%rcx
ffffffff80207d64:	8b 55 b4             	mov    -0x4c(%rbp),%edx
ffffffff80207d67:	89 d6                	mov    %edx,%esi
ffffffff80207d69:	48 c1 e6 07          	shl    $0x7,%rsi
ffffffff80207d6d:	48 8d be 50 8d 28 80 	lea    -0x7fd772b0(%rsi),%rdi
ffffffff80207d74:	89 85 ec fe ff ff    	mov    %eax,-0x114(%rbp)
ffffffff80207d7a:	ff d1                	callq  *%rcx
ffffffff80207d7c:	88 85 eb fe ff ff    	mov    %al,-0x115(%rbp)
ffffffff80207d82:	eb 05                	jmp    ffffffff80207d89 <pci_Initialize+0x609>
ffffffff80207d84:	e9 35 ff ff ff       	jmpq   ffffffff80207cbe <pci_Initialize+0x53e>
ffffffff80207d89:	eb 00                	jmp    ffffffff80207d8b <pci_Initialize+0x60b>
ffffffff80207d8b:	8b 45 b4             	mov    -0x4c(%rbp),%eax
ffffffff80207d8e:	83 c0 01             	add    $0x1,%eax
ffffffff80207d91:	89 45 b4             	mov    %eax,-0x4c(%rbp)
ffffffff80207d94:	e9 0c ff ff ff       	jmpq   ffffffff80207ca5 <pci_Initialize+0x525>
ffffffff80207d99:	48 81 c4 18 01 00 00 	add    $0x118,%rsp
ffffffff80207da0:	5b                   	pop    %rbx
ffffffff80207da1:	5d                   	pop    %rbp
ffffffff80207da2:	c3                   	retq   
ffffffff80207da3:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80207daa:	00 00 00 
ffffffff80207dad:	0f 1f 00             	nopl   (%rax)

ffffffff80207db0 <pci_GetPCIClass3>:
ffffffff80207db0:	55                   	push   %rbp
ffffffff80207db1:	48 89 e5             	mov    %rsp,%rbp
ffffffff80207db4:	48 83 ec 28          	sub    $0x28,%rsp
ffffffff80207db8:	88 d0                	mov    %dl,%al
ffffffff80207dba:	41 88 f2             	mov    %sil,%r10b
ffffffff80207dbd:	41 88 fb             	mov    %dil,%r11b
ffffffff80207dc0:	44 88 5d ff          	mov    %r11b,-0x1(%rbp)
ffffffff80207dc4:	44 88 55 fe          	mov    %r10b,-0x2(%rbp)
ffffffff80207dc8:	88 45 fd             	mov    %al,-0x3(%rbp)
ffffffff80207dcb:	48 89 4d f0          	mov    %rcx,-0x10(%rbp)
ffffffff80207dcf:	4c 89 45 e8          	mov    %r8,-0x18(%rbp)
ffffffff80207dd3:	4c 89 4d e0          	mov    %r9,-0x20(%rbp)
ffffffff80207dd7:	49 c7 01 e3 cb 22 80 	movq   $0xffffffff8022cbe3,(%r9)
ffffffff80207dde:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
ffffffff80207de2:	48 c7 01 e3 cb 22 80 	movq   $0xffffffff8022cbe3,(%rcx)
ffffffff80207de9:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
ffffffff80207ded:	48 c7 01 e3 cb 22 80 	movq   $0xffffffff8022cbe3,(%rcx)
ffffffff80207df4:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%rbp)
ffffffff80207dfb:	8b 45 dc             	mov    -0x24(%rbp),%eax
ffffffff80207dfe:	89 c1                	mov    %eax,%ecx
ffffffff80207e00:	48 83 f9 47          	cmp    $0x47,%rcx
ffffffff80207e04:	0f 83 d6 00 00 00    	jae    ffffffff80207ee0 <pci_GetPCIClass3+0x130>
ffffffff80207e0a:	8b 45 dc             	mov    -0x24(%rbp),%eax
ffffffff80207e0d:	89 c1                	mov    %eax,%ecx
ffffffff80207e0f:	48 c1 e1 05          	shl    $0x5,%rcx
ffffffff80207e13:	48 8d 89 90 22 28 80 	lea    -0x7fd7dd70(%rcx),%rcx
ffffffff80207e1a:	0f b6 01             	movzbl (%rcx),%eax
ffffffff80207e1d:	0f b6 55 ff          	movzbl -0x1(%rbp),%edx
ffffffff80207e21:	39 d0                	cmp    %edx,%eax
ffffffff80207e23:	0f 85 a7 00 00 00    	jne    ffffffff80207ed0 <pci_GetPCIClass3+0x120>
ffffffff80207e29:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80207e2d:	48 8b 00             	mov    (%rax),%rax
ffffffff80207e30:	80 38 00             	cmpb   $0x0,(%rax)
ffffffff80207e33:	75 1b                	jne    ffffffff80207e50 <pci_GetPCIClass3+0xa0>
ffffffff80207e35:	8b 45 dc             	mov    -0x24(%rbp),%eax
ffffffff80207e38:	89 c1                	mov    %eax,%ecx
ffffffff80207e3a:	48 c1 e1 05          	shl    $0x5,%rcx
ffffffff80207e3e:	48 8d 89 90 22 28 80 	lea    -0x7fd7dd70(%rcx),%rcx
ffffffff80207e45:	48 8b 49 08          	mov    0x8(%rcx),%rcx
ffffffff80207e49:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff80207e4d:	48 89 0a             	mov    %rcx,(%rdx)
ffffffff80207e50:	8b 45 dc             	mov    -0x24(%rbp),%eax
ffffffff80207e53:	89 c1                	mov    %eax,%ecx
ffffffff80207e55:	48 c1 e1 05          	shl    $0x5,%rcx
ffffffff80207e59:	48 8d 89 90 22 28 80 	lea    -0x7fd7dd70(%rcx),%rcx
ffffffff80207e60:	0f b6 41 01          	movzbl 0x1(%rcx),%eax
ffffffff80207e64:	0f b6 55 fe          	movzbl -0x2(%rbp),%edx
ffffffff80207e68:	39 d0                	cmp    %edx,%eax
ffffffff80207e6a:	75 62                	jne    ffffffff80207ece <pci_GetPCIClass3+0x11e>
ffffffff80207e6c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80207e70:	48 8b 00             	mov    (%rax),%rax
ffffffff80207e73:	80 38 00             	cmpb   $0x0,(%rax)
ffffffff80207e76:	75 1b                	jne    ffffffff80207e93 <pci_GetPCIClass3+0xe3>
ffffffff80207e78:	8b 45 dc             	mov    -0x24(%rbp),%eax
ffffffff80207e7b:	89 c1                	mov    %eax,%ecx
ffffffff80207e7d:	48 c1 e1 05          	shl    $0x5,%rcx
ffffffff80207e81:	48 8d 89 90 22 28 80 	lea    -0x7fd7dd70(%rcx),%rcx
ffffffff80207e88:	48 8b 49 10          	mov    0x10(%rcx),%rcx
ffffffff80207e8c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff80207e90:	48 89 0a             	mov    %rcx,(%rdx)
ffffffff80207e93:	8b 45 dc             	mov    -0x24(%rbp),%eax
ffffffff80207e96:	89 c1                	mov    %eax,%ecx
ffffffff80207e98:	48 c1 e1 05          	shl    $0x5,%rcx
ffffffff80207e9c:	48 8d 89 90 22 28 80 	lea    -0x7fd7dd70(%rcx),%rcx
ffffffff80207ea3:	0f b6 41 02          	movzbl 0x2(%rcx),%eax
ffffffff80207ea7:	0f b6 55 fd          	movzbl -0x3(%rbp),%edx
ffffffff80207eab:	39 d0                	cmp    %edx,%eax
ffffffff80207ead:	75 1d                	jne    ffffffff80207ecc <pci_GetPCIClass3+0x11c>
ffffffff80207eaf:	8b 45 dc             	mov    -0x24(%rbp),%eax
ffffffff80207eb2:	89 c1                	mov    %eax,%ecx
ffffffff80207eb4:	48 c1 e1 05          	shl    $0x5,%rcx
ffffffff80207eb8:	48 8d 89 90 22 28 80 	lea    -0x7fd7dd70(%rcx),%rcx
ffffffff80207ebf:	48 8b 49 18          	mov    0x18(%rcx),%rcx
ffffffff80207ec3:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
ffffffff80207ec7:	48 89 0a             	mov    %rcx,(%rdx)
ffffffff80207eca:	eb 14                	jmp    ffffffff80207ee0 <pci_GetPCIClass3+0x130>
ffffffff80207ecc:	eb 00                	jmp    ffffffff80207ece <pci_GetPCIClass3+0x11e>
ffffffff80207ece:	eb 00                	jmp    ffffffff80207ed0 <pci_GetPCIClass3+0x120>
ffffffff80207ed0:	eb 00                	jmp    ffffffff80207ed2 <pci_GetPCIClass3+0x122>
ffffffff80207ed2:	8b 45 dc             	mov    -0x24(%rbp),%eax
ffffffff80207ed5:	83 c0 01             	add    $0x1,%eax
ffffffff80207ed8:	89 45 dc             	mov    %eax,-0x24(%rbp)
ffffffff80207edb:	e9 1b ff ff ff       	jmpq   ffffffff80207dfb <pci_GetPCIClass3+0x4b>
ffffffff80207ee0:	48 83 c4 28          	add    $0x28,%rsp
ffffffff80207ee4:	5d                   	pop    %rbp
ffffffff80207ee5:	c3                   	retq   
ffffffff80207ee6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80207eed:	00 00 00 

ffffffff80207ef0 <pci_GetPCIClass>:
ffffffff80207ef0:	55                   	push   %rbp
ffffffff80207ef1:	48 89 e5             	mov    %rsp,%rbp
ffffffff80207ef4:	48 83 ec 40          	sub    $0x40,%rsp
ffffffff80207ef8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff80207efc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff80207f00:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
ffffffff80207f04:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
ffffffff80207f08:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
ffffffff80207f0c:	48 c1 f9 18          	sar    $0x18,%rcx
ffffffff80207f10:	48 81 e1 ff 00 00 00 	and    $0xff,%rcx
ffffffff80207f17:	88 c8                	mov    %cl,%al
ffffffff80207f19:	88 45 df             	mov    %al,-0x21(%rbp)
ffffffff80207f1c:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
ffffffff80207f20:	48 c1 f9 10          	sar    $0x10,%rcx
ffffffff80207f24:	48 81 e1 ff 00 00 00 	and    $0xff,%rcx
ffffffff80207f2b:	88 c8                	mov    %cl,%al
ffffffff80207f2d:	88 45 de             	mov    %al,-0x22(%rbp)
ffffffff80207f30:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
ffffffff80207f34:	48 c1 f9 08          	sar    $0x8,%rcx
ffffffff80207f38:	48 81 e1 ff 00 00 00 	and    $0xff,%rcx
ffffffff80207f3f:	88 c8                	mov    %cl,%al
ffffffff80207f41:	88 45 dd             	mov    %al,-0x23(%rbp)
ffffffff80207f44:	8a 45 df             	mov    -0x21(%rbp),%al
ffffffff80207f47:	44 8a 45 de          	mov    -0x22(%rbp),%r8b
ffffffff80207f4b:	44 8a 4d dd          	mov    -0x23(%rbp),%r9b
ffffffff80207f4f:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
ffffffff80207f53:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff80207f57:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
ffffffff80207f5b:	0f b6 f8             	movzbl %al,%edi
ffffffff80207f5e:	45 0f b6 d0          	movzbl %r8b,%r10d
ffffffff80207f62:	45 0f b6 d9          	movzbl %r9b,%r11d
ffffffff80207f66:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
ffffffff80207f6a:	44 89 d6             	mov    %r10d,%esi
ffffffff80207f6d:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
ffffffff80207f71:	44 89 da             	mov    %r11d,%edx
ffffffff80207f74:	4c 8b 45 c8          	mov    -0x38(%rbp),%r8
ffffffff80207f78:	4c 8b 4d d0          	mov    -0x30(%rbp),%r9
ffffffff80207f7c:	e8 2f fe ff ff       	callq  ffffffff80207db0 <pci_GetPCIClass3>
ffffffff80207f81:	48 83 c4 40          	add    $0x40,%rsp
ffffffff80207f85:	5d                   	pop    %rbp
ffffffff80207f86:	c3                   	retq   
ffffffff80207f87:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff80207f8e:	00 00 

ffffffff80207f90 <pci_GetPCIVendor>:
ffffffff80207f90:	55                   	push   %rbp
ffffffff80207f91:	48 89 e5             	mov    %rsp,%rbp
ffffffff80207f94:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff80207f98:	66 89 f8             	mov    %di,%ax
ffffffff80207f9b:	66 89 45 fe          	mov    %ax,-0x2(%rbp)
ffffffff80207f9f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff80207fa3:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
ffffffff80207fa7:	48 c7 02 ba b5 21 80 	movq   $0xffffffff8021b5ba,(%rdx)
ffffffff80207fae:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff80207fb2:	48 c7 02 ba b5 21 80 	movq   $0xffffffff8021b5ba,(%rdx)
ffffffff80207fb9:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%rbp)
ffffffff80207fc0:	8b 45 e4             	mov    -0x1c(%rbp),%eax
ffffffff80207fc3:	89 c1                	mov    %eax,%ecx
ffffffff80207fc5:	48 81 f9 20 06 00 00 	cmp    $0x620,%rcx
ffffffff80207fcc:	73 5f                	jae    ffffffff8020802d <pci_GetPCIVendor+0x9d>
ffffffff80207fce:	8b 45 e4             	mov    -0x1c(%rbp),%eax
ffffffff80207fd1:	89 c1                	mov    %eax,%ecx
ffffffff80207fd3:	48 8d 0c 49          	lea    (%rcx,%rcx,2),%rcx
ffffffff80207fd7:	48 8d 0c cd e0 b4 24 	lea    -0x7fdb4b20(,%rcx,8),%rcx
ffffffff80207fde:	80 
ffffffff80207fdf:	0f b7 01             	movzwl (%rcx),%eax
ffffffff80207fe2:	0f b7 55 fe          	movzwl -0x2(%rbp),%edx
ffffffff80207fe6:	39 d0                	cmp    %edx,%eax
ffffffff80207fe8:	75 36                	jne    ffffffff80208020 <pci_GetPCIVendor+0x90>
ffffffff80207fea:	8b 45 e4             	mov    -0x1c(%rbp),%eax
ffffffff80207fed:	89 c1                	mov    %eax,%ecx
ffffffff80207fef:	48 8d 0c 49          	lea    (%rcx,%rcx,2),%rcx
ffffffff80207ff3:	48 8b 0c cd e8 b4 24 	mov    -0x7fdb4b18(,%rcx,8),%rcx
ffffffff80207ffa:	80 
ffffffff80207ffb:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff80207fff:	48 89 0a             	mov    %rcx,(%rdx)
ffffffff80208002:	8b 45 e4             	mov    -0x1c(%rbp),%eax
ffffffff80208005:	89 c1                	mov    %eax,%ecx
ffffffff80208007:	48 8d 0c 49          	lea    (%rcx,%rcx,2),%rcx
ffffffff8020800b:	48 8d 0c cd e0 b4 24 	lea    -0x7fdb4b20(,%rcx,8),%rcx
ffffffff80208012:	80 
ffffffff80208013:	48 8b 49 10          	mov    0x10(%rcx),%rcx
ffffffff80208017:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff8020801b:	48 89 0a             	mov    %rcx,(%rdx)
ffffffff8020801e:	eb 0d                	jmp    ffffffff8020802d <pci_GetPCIVendor+0x9d>
ffffffff80208020:	eb 00                	jmp    ffffffff80208022 <pci_GetPCIVendor+0x92>
ffffffff80208022:	8b 45 e4             	mov    -0x1c(%rbp),%eax
ffffffff80208025:	83 c0 01             	add    $0x1,%eax
ffffffff80208028:	89 45 e4             	mov    %eax,-0x1c(%rbp)
ffffffff8020802b:	eb 93                	jmp    ffffffff80207fc0 <pci_GetPCIVendor+0x30>
ffffffff8020802d:	48 83 c4 20          	add    $0x20,%rsp
ffffffff80208031:	5d                   	pop    %rbp
ffffffff80208032:	c3                   	retq   
ffffffff80208033:	0f 1f 00             	nopl   (%rax)
ffffffff80208036:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8020803d:	00 00 00 

ffffffff80208040 <pci_GetPCIDevice>:
ffffffff80208040:	55                   	push   %rbp
ffffffff80208041:	48 89 e5             	mov    %rsp,%rbp
ffffffff80208044:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff80208048:	66 89 f0             	mov    %si,%ax
ffffffff8020804b:	66 41 89 f8          	mov    %di,%r8w
ffffffff8020804f:	66 44 89 45 fe       	mov    %r8w,-0x2(%rbp)
ffffffff80208054:	66 89 45 fc          	mov    %ax,-0x4(%rbp)
ffffffff80208058:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
ffffffff8020805c:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
ffffffff80208060:	48 c7 01 ba b5 21 80 	movq   $0xffffffff8021b5ba,(%rcx)
ffffffff80208067:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
ffffffff8020806b:	48 c7 01 ba b5 21 80 	movq   $0xffffffff8021b5ba,(%rcx)
ffffffff80208072:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%rbp)
ffffffff80208079:	8b 45 e4             	mov    -0x1c(%rbp),%eax
ffffffff8020807c:	89 c1                	mov    %eax,%ecx
ffffffff8020807e:	48 81 f9 72 1e 00 00 	cmp    $0x1e72,%rcx
ffffffff80208085:	73 7f                	jae    ffffffff80208106 <pci_GetPCIDevice+0xc6>
ffffffff80208087:	8b 45 e4             	mov    -0x1c(%rbp),%eax
ffffffff8020808a:	89 c1                	mov    %eax,%ecx
ffffffff8020808c:	48 8d 0c 49          	lea    (%rcx,%rcx,2),%rcx
ffffffff80208090:	48 8d 0c cd e0 47 25 	lea    -0x7fdab820(,%rcx,8),%rcx
ffffffff80208097:	80 
ffffffff80208098:	0f b7 01             	movzwl (%rcx),%eax
ffffffff8020809b:	0f b7 55 fe          	movzwl -0x2(%rbp),%edx
ffffffff8020809f:	39 d0                	cmp    %edx,%eax
ffffffff802080a1:	75 53                	jne    ffffffff802080f6 <pci_GetPCIDevice+0xb6>
ffffffff802080a3:	8b 45 e4             	mov    -0x1c(%rbp),%eax
ffffffff802080a6:	89 c1                	mov    %eax,%ecx
ffffffff802080a8:	48 8d 0c 49          	lea    (%rcx,%rcx,2),%rcx
ffffffff802080ac:	48 8d 0c cd e0 47 25 	lea    -0x7fdab820(,%rcx,8),%rcx
ffffffff802080b3:	80 
ffffffff802080b4:	0f b7 41 02          	movzwl 0x2(%rcx),%eax
ffffffff802080b8:	0f b7 55 fc          	movzwl -0x4(%rbp),%edx
ffffffff802080bc:	39 d0                	cmp    %edx,%eax
ffffffff802080be:	75 36                	jne    ffffffff802080f6 <pci_GetPCIDevice+0xb6>
ffffffff802080c0:	8b 45 e4             	mov    -0x1c(%rbp),%eax
ffffffff802080c3:	89 c1                	mov    %eax,%ecx
ffffffff802080c5:	48 8d 0c 49          	lea    (%rcx,%rcx,2),%rcx
ffffffff802080c9:	48 8b 0c cd e8 47 25 	mov    -0x7fdab818(,%rcx,8),%rcx
ffffffff802080d0:	80 
ffffffff802080d1:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff802080d5:	48 89 0a             	mov    %rcx,(%rdx)
ffffffff802080d8:	8b 45 e4             	mov    -0x1c(%rbp),%eax
ffffffff802080db:	89 c1                	mov    %eax,%ecx
ffffffff802080dd:	48 8d 0c 49          	lea    (%rcx,%rcx,2),%rcx
ffffffff802080e1:	48 8d 0c cd e0 47 25 	lea    -0x7fdab820(,%rcx,8),%rcx
ffffffff802080e8:	80 
ffffffff802080e9:	48 8b 49 10          	mov    0x10(%rcx),%rcx
ffffffff802080ed:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff802080f1:	48 89 0a             	mov    %rcx,(%rdx)
ffffffff802080f4:	eb 10                	jmp    ffffffff80208106 <pci_GetPCIDevice+0xc6>
ffffffff802080f6:	eb 00                	jmp    ffffffff802080f8 <pci_GetPCIDevice+0xb8>
ffffffff802080f8:	8b 45 e4             	mov    -0x1c(%rbp),%eax
ffffffff802080fb:	83 c0 01             	add    $0x1,%eax
ffffffff802080fe:	89 45 e4             	mov    %eax,-0x1c(%rbp)
ffffffff80208101:	e9 73 ff ff ff       	jmpq   ffffffff80208079 <pci_GetPCIDevice+0x39>
ffffffff80208106:	48 83 c4 20          	add    $0x20,%rsp
ffffffff8020810a:	5d                   	pop    %rbp
ffffffff8020810b:	c3                   	retq   
ffffffff8020810c:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff80208110 <UHCI_DetectController>:
ffffffff80208110:	55                   	push   %rbp
ffffffff80208111:	48 89 e5             	mov    %rsp,%rbp
ffffffff80208114:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff80208118:	31 c0                	xor    %eax,%eax
ffffffff8020811a:	88 c1                	mov    %al,%cl
ffffffff8020811c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff80208120:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
ffffffff80208124:	0f b6 07             	movzbl (%rdi),%eax
ffffffff80208127:	83 f8 0c             	cmp    $0xc,%eax
ffffffff8020812a:	88 4d f7             	mov    %cl,-0x9(%rbp)
ffffffff8020812d:	75 25                	jne    ffffffff80208154 <UHCI_DetectController+0x44>
ffffffff8020812f:	31 c0                	xor    %eax,%eax
ffffffff80208131:	88 c1                	mov    %al,%cl
ffffffff80208133:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
ffffffff80208137:	0f b6 42 01          	movzbl 0x1(%rdx),%eax
ffffffff8020813b:	83 f8 03             	cmp    $0x3,%eax
ffffffff8020813e:	88 4d f7             	mov    %cl,-0x9(%rbp)
ffffffff80208141:	75 11                	jne    ffffffff80208154 <UHCI_DetectController+0x44>
ffffffff80208143:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80208147:	0f b6 48 02          	movzbl 0x2(%rax),%ecx
ffffffff8020814b:	83 f9 00             	cmp    $0x0,%ecx
ffffffff8020814e:	0f 94 c2             	sete   %dl
ffffffff80208151:	88 55 f7             	mov    %dl,-0x9(%rbp)
ffffffff80208154:	8a 45 f7             	mov    -0x9(%rbp),%al
ffffffff80208157:	24 01                	and    $0x1,%al
ffffffff80208159:	0f b6 c8             	movzbl %al,%ecx
ffffffff8020815c:	88 c8                	mov    %cl,%al
ffffffff8020815e:	0f b6 c0             	movzbl %al,%eax
ffffffff80208161:	48 83 c4 10          	add    $0x10,%rsp
ffffffff80208165:	5d                   	pop    %rbp
ffffffff80208166:	c3                   	retq   
ffffffff80208167:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff8020816e:	00 00 

ffffffff80208170 <UHCI_InitializeController>:
ffffffff80208170:	55                   	push   %rbp
ffffffff80208171:	48 89 e5             	mov    %rsp,%rbp
ffffffff80208174:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff80208178:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
ffffffff8020817c:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
ffffffff80208183:	00 
ffffffff80208184:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%rbp)
ffffffff8020818b:	8b 45 e4             	mov    -0x1c(%rbp),%eax
ffffffff8020818e:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
ffffffff80208192:	0f b6 51 14          	movzbl 0x14(%rcx),%edx
ffffffff80208196:	39 d0                	cmp    %edx,%eax
ffffffff80208198:	7d 67                	jge    ffffffff80208201 <UHCI_InitializeController+0x91>
ffffffff8020819a:	48 63 45 e4          	movslq -0x1c(%rbp),%rax
ffffffff8020819e:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
ffffffff802081a2:	48 83 c1 18          	add    $0x18,%rcx
ffffffff802081a6:	48 c1 e0 04          	shl    $0x4,%rax
ffffffff802081aa:	48 01 c1             	add    %rax,%rcx
ffffffff802081ad:	83 79 08 20          	cmpl   $0x20,0x8(%rcx)
ffffffff802081b1:	75 41                	jne    ffffffff802081f4 <UHCI_InitializeController+0x84>
ffffffff802081b3:	48 63 45 e4          	movslq -0x1c(%rbp),%rax
ffffffff802081b7:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
ffffffff802081bb:	48 83 c1 18          	add    $0x18,%rcx
ffffffff802081bf:	48 c1 e0 04          	shl    $0x4,%rax
ffffffff802081c3:	48 01 c1             	add    %rax,%rcx
ffffffff802081c6:	48 8b 01             	mov    (%rcx),%rax
ffffffff802081c9:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff802081cd:	48 63 45 e4          	movslq -0x1c(%rbp),%rax
ffffffff802081d1:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
ffffffff802081d5:	48 83 c1 18          	add    $0x18,%rcx
ffffffff802081d9:	48 c1 e0 04          	shl    $0x4,%rax
ffffffff802081dd:	48 01 c1             	add    %rax,%rcx
ffffffff802081e0:	0f b6 51 0c          	movzbl 0xc(%rcx),%edx
ffffffff802081e4:	83 e2 01             	and    $0x1,%edx
ffffffff802081e7:	48 63 c2             	movslq %edx,%rax
ffffffff802081ea:	48 0b 45 e8          	or     -0x18(%rbp),%rax
ffffffff802081ee:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff802081f2:	eb 0d                	jmp    ffffffff80208201 <UHCI_InitializeController+0x91>
ffffffff802081f4:	eb 00                	jmp    ffffffff802081f6 <UHCI_InitializeController+0x86>
ffffffff802081f6:	8b 45 e4             	mov    -0x1c(%rbp),%eax
ffffffff802081f9:	83 c0 01             	add    $0x1,%eax
ffffffff802081fc:	89 45 e4             	mov    %eax,-0x1c(%rbp)
ffffffff802081ff:	eb 8a                	jmp    ffffffff8020818b <UHCI_InitializeController+0x1b>
ffffffff80208201:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
ffffffff80208206:	75 06                	jne    ffffffff8020820e <UHCI_InitializeController+0x9e>
ffffffff80208208:	c6 45 ff 00          	movb   $0x0,-0x1(%rbp)
ffffffff8020820c:	eb 22                	jmp    ffffffff80208230 <UHCI_InitializeController+0xc0>
ffffffff8020820e:	31 c0                	xor    %eax,%eax
ffffffff80208210:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
ffffffff80208214:	48 c7 c2 40 82 20 80 	mov    $0xffffffff80208240,%rdx
ffffffff8020821b:	48 c7 c1 b0 82 20 80 	mov    $0xffffffff802082b0,%rcx
ffffffff80208222:	31 ff                	xor    %edi,%edi
ffffffff80208224:	89 45 e0             	mov    %eax,-0x20(%rbp)
ffffffff80208227:	e8 24 6d 00 00       	callq  ffffffff8020ef50 <USB_AddController>
ffffffff8020822c:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
ffffffff80208230:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
ffffffff80208234:	48 83 c4 20          	add    $0x20,%rsp
ffffffff80208238:	5d                   	pop    %rbp
ffffffff80208239:	c3                   	retq   
ffffffff8020823a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

ffffffff80208240 <UHCI_Read>:
ffffffff80208240:	55                   	push   %rbp
ffffffff80208241:	48 89 e5             	mov    %rsp,%rbp
ffffffff80208244:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff80208248:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
ffffffff8020824c:	89 75 ec             	mov    %esi,-0x14(%rbp)
ffffffff8020824f:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
ffffffff80208253:	48 83 e7 01          	and    $0x1,%rdi
ffffffff80208257:	48 83 ff 00          	cmp    $0x0,%rdi
ffffffff8020825b:	74 2a                	je     ffffffff80208287 <UHCI_Read+0x47>
ffffffff8020825d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80208261:	48 25 fe ff 00 00    	and    $0xfffe,%rax
ffffffff80208267:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff8020826b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8020826f:	8b 4d ec             	mov    -0x14(%rbp),%ecx
ffffffff80208272:	89 ca                	mov    %ecx,%edx
ffffffff80208274:	48 01 d0             	add    %rdx,%rax
ffffffff80208277:	66 89 c6             	mov    %ax,%si
ffffffff8020827a:	0f b7 fe             	movzwl %si,%edi
ffffffff8020827d:	e8 1e b8 ff ff       	callq  ffffffff80203aa0 <inl>
ffffffff80208282:	89 45 fc             	mov    %eax,-0x4(%rbp)
ffffffff80208285:	eb 19                	jmp    ffffffff802082a0 <UHCI_Read+0x60>
ffffffff80208287:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8020828b:	8b 4d ec             	mov    -0x14(%rbp),%ecx
ffffffff8020828e:	89 ca                	mov    %ecx,%edx
ffffffff80208290:	48 01 d0             	add    %rdx,%rax
ffffffff80208293:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
ffffffff80208297:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8020829b:	8b 08                	mov    (%rax),%ecx
ffffffff8020829d:	89 4d fc             	mov    %ecx,-0x4(%rbp)
ffffffff802082a0:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff802082a3:	48 83 c4 20          	add    $0x20,%rsp
ffffffff802082a7:	5d                   	pop    %rbp
ffffffff802082a8:	c3                   	retq   
ffffffff802082a9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

ffffffff802082b0 <UHCI_Write>:
ffffffff802082b0:	55                   	push   %rbp
ffffffff802082b1:	48 89 e5             	mov    %rsp,%rbp
ffffffff802082b4:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff802082b8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff802082bc:	89 75 f4             	mov    %esi,-0xc(%rbp)
ffffffff802082bf:	89 55 f0             	mov    %edx,-0x10(%rbp)
ffffffff802082c2:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
ffffffff802082c6:	48 83 e7 01          	and    $0x1,%rdi
ffffffff802082ca:	48 83 ff 00          	cmp    $0x0,%rdi
ffffffff802082ce:	74 2c                	je     ffffffff802082fc <UHCI_Write+0x4c>
ffffffff802082d0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff802082d4:	48 25 fe ff 00 00    	and    $0xfffe,%rax
ffffffff802082da:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff802082de:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff802082e2:	8b 4d f4             	mov    -0xc(%rbp),%ecx
ffffffff802082e5:	89 ca                	mov    %ecx,%edx
ffffffff802082e7:	48 01 d0             	add    %rdx,%rax
ffffffff802082ea:	66 89 c6             	mov    %ax,%si
ffffffff802082ed:	8b 4d f0             	mov    -0x10(%rbp),%ecx
ffffffff802082f0:	0f b7 fe             	movzwl %si,%edi
ffffffff802082f3:	89 ce                	mov    %ecx,%esi
ffffffff802082f5:	e8 86 b7 ff ff       	callq  ffffffff80203a80 <outl>
ffffffff802082fa:	eb 19                	jmp    ffffffff80208315 <UHCI_Write+0x65>
ffffffff802082fc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80208300:	8b 4d f4             	mov    -0xc(%rbp),%ecx
ffffffff80208303:	89 ca                	mov    %ecx,%edx
ffffffff80208305:	48 01 d0             	add    %rdx,%rax
ffffffff80208308:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff8020830c:	8b 4d f0             	mov    -0x10(%rbp),%ecx
ffffffff8020830f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80208313:	89 08                	mov    %ecx,(%rax)
ffffffff80208315:	48 83 c4 20          	add    $0x20,%rsp
ffffffff80208319:	5d                   	pop    %rbp
ffffffff8020831a:	c3                   	retq   
ffffffff8020831b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

ffffffff80208320 <UHCI_ActivationStateChange>:
ffffffff80208320:	55                   	push   %rbp
ffffffff80208321:	48 89 e5             	mov    %rsp,%rbp
ffffffff80208324:	48 83 ec 04          	sub    $0x4,%rsp
ffffffff80208328:	89 7d fc             	mov    %edi,-0x4(%rbp)
ffffffff8020832b:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%rbp)
ffffffff80208332:	48 83 c4 04          	add    $0x4,%rsp
ffffffff80208336:	5d                   	pop    %rbp
ffffffff80208337:	c3                   	retq   
ffffffff80208338:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff8020833f:	00 

ffffffff80208340 <sleep_kernel>:
ffffffff80208340:	55                   	push   %rbp
ffffffff80208341:	48 89 e5             	mov    %rsp,%rbp
ffffffff80208344:	b8 3f b3 ad de       	mov    $0xdeadb33f,%eax
ffffffff80208349:	fa                   	cli    
ffffffff8020834a:	f4                   	hlt    
ffffffff8020834b:	5d                   	pop    %rbp
ffffffff8020834c:	c3                   	retq   
ffffffff8020834d:	0f 1f 00             	nopl   (%rax)

ffffffff80208350 <hlt_kernel>:
ffffffff80208350:	55                   	push   %rbp
ffffffff80208351:	48 89 e5             	mov    %rsp,%rbp
ffffffff80208354:	eb 00                	jmp    ffffffff80208356 <hlt_kernel+0x6>
ffffffff80208356:	eb fe                	jmp    ffffffff80208356 <hlt_kernel+0x6>
ffffffff80208358:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff8020835f:	00 

ffffffff80208360 <hlt2_kernel>:
ffffffff80208360:	55                   	push   %rbp
ffffffff80208361:	48 89 e5             	mov    %rsp,%rbp
ffffffff80208364:	eb 00                	jmp    ffffffff80208366 <hlt2_kernel+0x6>
ffffffff80208366:	eb fe                	jmp    ffffffff80208366 <hlt2_kernel+0x6>
ffffffff80208368:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff8020836f:	00 

ffffffff80208370 <kernel_main_init>:
ffffffff80208370:	55                   	push   %rbp
ffffffff80208371:	48 89 e5             	mov    %rsp,%rbp
ffffffff80208374:	48 83 ec 30          	sub    $0x30,%rsp
ffffffff80208378:	b8 40 00 00 00       	mov    $0x40,%eax
ffffffff8020837d:	89 c1                	mov    %eax,%ecx
ffffffff8020837f:	b8 40 00 00 00       	mov    $0x40,%eax
ffffffff80208384:	89 c7                	mov    %eax,%edi
ffffffff80208386:	48 89 4d f0          	mov    %rcx,-0x10(%rbp)
ffffffff8020838a:	e8 71 27 00 00       	callq  ffffffff8020ab00 <bootstrap_malloc>
ffffffff8020838f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff80208393:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80208397:	48 c7 40 38 00 00 00 	movq   $0x0,0x38(%rax)
ffffffff8020839e:	00 
ffffffff8020839f:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
ffffffff802083a3:	e8 18 2f 00 00       	callq  ffffffff8020b2c0 <kmalloc_init>
ffffffff802083a8:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
ffffffff802083ac:	e8 0f 3a 00 00       	callq  ffffffff8020bdc0 <ProcessSys_Initialize>
ffffffff802083b1:	e8 7a 50 00 00       	callq  ffffffff8020d430 <Thread_Initialize>
ffffffff802083b6:	31 d2                	xor    %edx,%edx
ffffffff802083b8:	31 f6                	xor    %esi,%esi
ffffffff802083ba:	89 f0                	mov    %esi,%eax
ffffffff802083bc:	31 f6                	xor    %esi,%esi
ffffffff802083be:	89 f1                	mov    %esi,%ecx
ffffffff802083c0:	89 f7                	mov    %esi,%edi
ffffffff802083c2:	48 89 ce             	mov    %rcx,%rsi
ffffffff802083c5:	89 55 ec             	mov    %edx,-0x14(%rbp)
ffffffff802083c8:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
ffffffff802083cc:	e8 cf 64 00 00       	callq  ffffffff8020e8a0 <RegisterCore>
ffffffff802083d1:	31 d2                	xor    %edx,%edx
ffffffff802083d3:	89 d0                	mov    %edx,%eax
ffffffff802083d5:	48 c7 c6 00 84 20 80 	mov    $0xffffffff80208400,%rsi
ffffffff802083dc:	31 d2                	xor    %edx,%edx
ffffffff802083de:	89 d7                	mov    %edx,%edi
ffffffff802083e0:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
ffffffff802083e4:	e8 17 51 00 00       	callq  ffffffff8020d500 <CreateThread>
ffffffff802083e9:	31 d2                	xor    %edx,%edx
ffffffff802083eb:	41 88 d0             	mov    %dl,%r8b
ffffffff802083ee:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
ffffffff802083f2:	44 88 c0             	mov    %r8b,%al
ffffffff802083f5:	e8 96 64 00 00       	callq  ffffffff8020e890 <CoreUpdate>
ffffffff802083fa:	48 83 c4 30          	add    $0x30,%rsp
ffffffff802083fe:	5d                   	pop    %rbp
ffffffff802083ff:	c3                   	retq   

ffffffff80208400 <kernel_main>:
ffffffff80208400:	55                   	push   %rbp
ffffffff80208401:	48 89 e5             	mov    %rsp,%rbp
ffffffff80208404:	48 81 ec 40 02 00 00 	sub    $0x240,%rsp
ffffffff8020840b:	8b 04 25 60 cd 28 80 	mov    0xffffffff8028cd60,%eax
ffffffff80208412:	ff c0                	inc    %eax
ffffffff80208414:	89 04 25 60 cd 28 80 	mov    %eax,0xffffffff8028cd60
ffffffff8020841b:	e8 b0 a7 ff ff       	callq  ffffffff80202bd0 <Syscall_Initialize>
ffffffff80208420:	e8 3b 66 00 00       	callq  ffffffff8020ea60 <DeviceManager_Initialize>
ffffffff80208425:	e8 86 a0 ff ff       	callq  ffffffff802024b0 <CreateSpinlock>
ffffffff8020842a:	48 89 04 25 00 44 28 	mov    %rax,0xffffffff80284400
ffffffff80208431:	80 
ffffffff80208432:	e8 89 81 ff ff       	callq  ffffffff802005c0 <smp_unlock_cores>
ffffffff80208437:	8b 04 25 60 cd 28 80 	mov    0xffffffff8028cd60,%eax
ffffffff8020843e:	89 85 04 fe ff ff    	mov    %eax,-0x1fc(%rbp)
ffffffff80208444:	e8 57 a0 ff ff       	callq  ffffffff802024a0 <GetCoreCount>
ffffffff80208449:	8b 8d 04 fe ff ff    	mov    -0x1fc(%rbp),%ecx
ffffffff8020844f:	39 c1                	cmp    %eax,%ecx
ffffffff80208451:	74 02                	je     ffffffff80208455 <kernel_main+0x55>
ffffffff80208453:	eb e2                	jmp    ffffffff80208437 <kernel_main+0x37>
ffffffff80208455:	e8 96 80 ff ff       	callq  ffffffff802004f0 <setup_preemption>
ffffffff8020845a:	e8 41 81 ff ff       	callq  ffffffff802005a0 <target_device_setup>
ffffffff8020845f:	31 c0                	xor    %eax,%eax
ffffffff80208461:	89 c1                	mov    %eax,%ecx
ffffffff80208463:	48 8d 95 10 fe ff ff 	lea    -0x1f0(%rbp),%rdx
ffffffff8020846a:	31 c0                	xor    %eax,%eax
ffffffff8020846c:	89 c7                	mov    %eax,%edi
ffffffff8020846e:	48 8d b5 10 fe ff ff 	lea    -0x1f0(%rbp),%rsi
ffffffff80208475:	48 89 8d f8 fd ff ff 	mov    %rcx,-0x208(%rbp)
ffffffff8020847c:	48 89 95 f0 fd ff ff 	mov    %rdx,-0x210(%rbp)
ffffffff80208483:	e8 b8 3b 00 00       	callq  ffffffff8020c040 <GetProcessInformation>
ffffffff80208488:	48 8d 8d 10 fe ff ff 	lea    -0x1f0(%rbp),%rcx
ffffffff8020848f:	48 8d 95 08 fe ff ff 	lea    -0x1f8(%rbp),%rdx
ffffffff80208496:	48 8d bd 10 fe ff ff 	lea    -0x1f0(%rbp),%rdi
ffffffff8020849d:	48 8d b5 08 fe ff ff 	lea    -0x1f8(%rbp),%rsi
ffffffff802084a4:	89 85 ec fd ff ff    	mov    %eax,-0x214(%rbp)
ffffffff802084aa:	48 89 8d e0 fd ff ff 	mov    %rcx,-0x220(%rbp)
ffffffff802084b1:	48 89 95 d8 fd ff ff 	mov    %rdx,-0x228(%rbp)
ffffffff802084b8:	e8 23 3a 00 00       	callq  ffffffff8020bee0 <ForkProcess>
ffffffff802084bd:	45 31 c0             	xor    %r8d,%r8d
ffffffff802084c0:	44 89 c1             	mov    %r8d,%ecx
ffffffff802084c3:	48 c7 c6 f0 84 20 80 	mov    $0xffffffff802084f0,%rsi
ffffffff802084ca:	45 31 c0             	xor    %r8d,%r8d
ffffffff802084cd:	44 89 c7             	mov    %r8d,%edi
ffffffff802084d0:	89 85 d4 fd ff ff    	mov    %eax,-0x22c(%rbp)
ffffffff802084d6:	48 89 8d c8 fd ff ff 	mov    %rcx,-0x238(%rbp)
ffffffff802084dd:	e8 1e 50 00 00       	callq  ffffffff8020d500 <CreateThread>
ffffffff802084e2:	48 83 f8 00          	cmp    $0x0,%rax
ffffffff802084e6:	75 02                	jne    ffffffff802084ea <kernel_main+0xea>
ffffffff802084e8:	fa                   	cli    
ffffffff802084e9:	f4                   	hlt    
ffffffff802084ea:	eb 00                	jmp    ffffffff802084ec <kernel_main+0xec>
ffffffff802084ec:	eb fe                	jmp    ffffffff802084ec <kernel_main+0xec>
ffffffff802084ee:	66 90                	xchg   %ax,%ax

ffffffff802084f0 <load_elf>:
ffffffff802084f0:	55                   	push   %rbp
ffffffff802084f1:	48 89 e5             	mov    %rsp,%rbp
ffffffff802084f4:	48 81 ec 70 02 00 00 	sub    $0x270,%rsp
ffffffff802084fb:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
ffffffff80208502:	00 
ffffffff80208503:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
ffffffff8020850a:	00 
ffffffff8020850b:	e8 00 4f 00 00       	callq  ffffffff8020d410 <GetCurrentProcessUID>
ffffffff80208510:	48 8d 8d 00 fe ff ff 	lea    -0x200(%rbp),%rcx
ffffffff80208517:	48 8d b5 00 fe ff ff 	lea    -0x200(%rbp),%rsi
ffffffff8020851e:	48 89 c7             	mov    %rax,%rdi
ffffffff80208521:	48 89 8d d8 fd ff ff 	mov    %rcx,-0x228(%rbp)
ffffffff80208528:	e8 13 3b 00 00       	callq  ffffffff8020c040 <GetProcessInformation>
ffffffff8020852d:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
ffffffff80208531:	48 89 8d f8 fd ff ff 	mov    %rcx,-0x208(%rbp)
ffffffff80208538:	48 c7 c7 c2 ae 24 80 	mov    $0xffffffff8024aec2,%rdi
ffffffff8020853f:	48 8d 75 f8          	lea    -0x8(%rbp),%rsi
ffffffff80208543:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
ffffffff80208547:	89 85 d4 fd ff ff    	mov    %eax,-0x22c(%rbp)
ffffffff8020854d:	e8 6e 24 00 00       	callq  ffffffff8020a9c0 <Initrd_GetFile>
ffffffff80208552:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
ffffffff80208556:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
ffffffff8020855a:	88 85 d3 fd ff ff    	mov    %al,-0x22d(%rbp)
ffffffff80208560:	48 89 bd c8 fd ff ff 	mov    %rdi,-0x238(%rbp)
ffffffff80208567:	48 89 b5 c0 fd ff ff 	mov    %rsi,-0x240(%rbp)
ffffffff8020856e:	e8 4d 98 ff ff       	callq  ffffffff80201dc0 <GetActiveVirtualMemoryInstance>
ffffffff80208573:	45 31 c0             	xor    %r8d,%r8d
ffffffff80208576:	48 8d 8d f8 fd ff ff 	lea    -0x208(%rbp),%rcx
ffffffff8020857d:	48 8d 95 e0 fd ff ff 	lea    -0x220(%rbp),%rdx
ffffffff80208584:	45 31 c9             	xor    %r9d,%r9d
ffffffff80208587:	48 8d b5 f8 fd ff ff 	lea    -0x208(%rbp),%rsi
ffffffff8020858e:	48 8d bd e0 fd ff ff 	lea    -0x220(%rbp),%rdi
ffffffff80208595:	4c 8b 95 c8 fd ff ff 	mov    -0x238(%rbp),%r10
ffffffff8020859c:	48 89 bd b8 fd ff ff 	mov    %rdi,-0x248(%rbp)
ffffffff802085a3:	4c 89 d7             	mov    %r10,%rdi
ffffffff802085a6:	4c 8b 9d c0 fd ff ff 	mov    -0x240(%rbp),%r11
ffffffff802085ad:	48 89 b5 b0 fd ff ff 	mov    %rsi,-0x250(%rbp)
ffffffff802085b4:	4c 89 de             	mov    %r11,%rsi
ffffffff802085b7:	48 89 95 a8 fd ff ff 	mov    %rdx,-0x258(%rbp)
ffffffff802085be:	44 89 ca             	mov    %r9d,%edx
ffffffff802085c1:	48 89 8d a0 fd ff ff 	mov    %rcx,-0x260(%rbp)
ffffffff802085c8:	48 89 c1             	mov    %rax,%rcx
ffffffff802085cb:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
ffffffff802085d2:	44 89 85 9c fd ff ff 	mov    %r8d,-0x264(%rbp)
ffffffff802085d9:	49 89 c0             	mov    %rax,%r8
ffffffff802085dc:	4c 8b 8d b8 fd ff ff 	mov    -0x248(%rbp),%r9
ffffffff802085e3:	e8 c8 22 00 00       	callq  ffffffff8020a8b0 <LoadElf>
ffffffff802085e8:	83 f8 00             	cmp    $0x0,%eax
ffffffff802085eb:	74 02                	je     ffffffff802085ef <load_elf+0xff>
ffffffff802085ed:	fa                   	cli    
ffffffff802085ee:	f4                   	hlt    
ffffffff802085ef:	48 8b bd e0 fd ff ff 	mov    -0x220(%rbp),%rdi
ffffffff802085f6:	48 89 bd 90 fd ff ff 	mov    %rdi,-0x270(%rbp)
ffffffff802085fd:	e8 ee 4d 00 00       	callq  ffffffff8020d3f0 <GetCurrentThreadUID>
ffffffff80208602:	48 89 c7             	mov    %rax,%rdi
ffffffff80208605:	e8 66 57 00 00       	callq  ffffffff8020dd70 <GetThreadUserStack>
ffffffff8020860a:	48 8b bd 90 fd ff ff 	mov    -0x270(%rbp),%rdi
ffffffff80208611:	48 89 c6             	mov    %rax,%rsi
ffffffff80208614:	e8 57 a5 ff ff       	callq  ffffffff80202b70 <SwitchToUserMode>
ffffffff80208619:	48 81 c4 70 02 00 00 	add    $0x270,%rsp
ffffffff80208620:	5d                   	pop    %rbp
ffffffff80208621:	c3                   	retq   
ffffffff80208622:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff80208626:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8020862d:	00 00 00 

ffffffff80208630 <smp_main>:
ffffffff80208630:	55                   	push   %rbp
ffffffff80208631:	48 89 e5             	mov    %rsp,%rbp
ffffffff80208634:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff80208638:	48 8b 3c 25 00 44 28 	mov    0xffffffff80284400,%rdi
ffffffff8020863f:	80 
ffffffff80208640:	e8 1b 9f ff ff       	callq  ffffffff80202560 <LockSpinlock>
ffffffff80208645:	8b 0c 25 60 cd 28 80 	mov    0xffffffff8028cd60,%ecx
ffffffff8020864c:	ff c1                	inc    %ecx
ffffffff8020864e:	89 0c 25 60 cd 28 80 	mov    %ecx,0xffffffff8028cd60
ffffffff80208655:	48 8b 3c 25 00 44 28 	mov    0xffffffff80284400,%rdi
ffffffff8020865c:	80 
ffffffff8020865d:	88 45 ff             	mov    %al,-0x1(%rbp)
ffffffff80208660:	e8 cb 9f ff ff       	callq  ffffffff80202630 <UnlockSpinlock>
ffffffff80208665:	88 45 fe             	mov    %al,-0x2(%rbp)
ffffffff80208668:	e8 83 7e ff ff       	callq  ffffffff802004f0 <setup_preemption>
ffffffff8020866d:	31 c9                	xor    %ecx,%ecx
ffffffff8020866f:	89 cf                	mov    %ecx,%edi
ffffffff80208671:	48 c7 c6 50 83 20 80 	mov    $0xffffffff80208350,%rsi
ffffffff80208678:	31 c9                	xor    %ecx,%ecx
ffffffff8020867a:	89 ca                	mov    %ecx,%edx
ffffffff8020867c:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
ffffffff80208680:	48 89 d7             	mov    %rdx,%rdi
ffffffff80208683:	e8 78 4e 00 00       	callq  ffffffff8020d500 <CreateThread>
ffffffff80208688:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff8020868c:	e8 5f 4d 00 00       	callq  ffffffff8020d3f0 <GetCurrentThreadUID>
ffffffff80208691:	48 89 c7             	mov    %rax,%rdi
ffffffff80208694:	e8 57 5b 00 00       	callq  ffffffff8020e1f0 <FreeThread>
ffffffff80208699:	eb fe                	jmp    ffffffff80208699 <smp_main+0x69>
ffffffff8020869b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

ffffffff802086a0 <smp_core_main>:
ffffffff802086a0:	55                   	push   %rbp
ffffffff802086a1:	48 89 e5             	mov    %rsp,%rbp
ffffffff802086a4:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff802086a8:	89 7d fc             	mov    %edi,-0x4(%rbp)
ffffffff802086ab:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff802086af:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
ffffffff802086b6:	00 
ffffffff802086b7:	e8 14 a5 ff ff       	callq  ffffffff80202bd0 <Syscall_Initialize>
ffffffff802086bc:	8b 7d fc             	mov    -0x4(%rbp),%edi
ffffffff802086bf:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
ffffffff802086c3:	e8 d8 61 00 00       	callq  ffffffff8020e8a0 <RegisterCore>
ffffffff802086c8:	31 ff                	xor    %edi,%edi
ffffffff802086ca:	89 fe                	mov    %edi,%esi
ffffffff802086cc:	48 c7 c0 30 86 20 80 	mov    $0xffffffff80208630,%rax
ffffffff802086d3:	31 ff                	xor    %edi,%edi
ffffffff802086d5:	48 89 75 e8          	mov    %rsi,-0x18(%rbp)
ffffffff802086d9:	48 89 c6             	mov    %rax,%rsi
ffffffff802086dc:	e8 1f 4e 00 00       	callq  ffffffff8020d500 <CreateThread>
ffffffff802086e1:	31 c9                	xor    %ecx,%ecx
ffffffff802086e3:	88 ca                	mov    %cl,%dl
ffffffff802086e5:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
ffffffff802086e9:	88 d0                	mov    %dl,%al
ffffffff802086eb:	e8 a0 61 00 00       	callq  ffffffff8020e890 <CoreUpdate>
ffffffff802086f0:	48 83 c4 20          	add    $0x20,%rsp
ffffffff802086f4:	5d                   	pop    %rbp
ffffffff802086f5:	c3                   	retq   
ffffffff802086f6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff802086fd:	00 00 00 

ffffffff80208700 <memcpy>:
ffffffff80208700:	55                   	push   %rbp
ffffffff80208701:	48 89 e5             	mov    %rsp,%rbp
ffffffff80208704:	48 83 ec 38          	sub    $0x38,%rsp
ffffffff80208708:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8020870c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff80208710:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
ffffffff80208714:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff80208718:	48 c1 ea 02          	shr    $0x2,%rdx
ffffffff8020871c:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
ffffffff80208720:	48 83 e6 03          	and    $0x3,%rsi
ffffffff80208724:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
ffffffff80208728:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8020872c:	48 89 75 c8          	mov    %rsi,-0x38(%rbp)
ffffffff80208730:	48 89 d1             	mov    %rdx,%rcx
ffffffff80208733:	48 89 c6             	mov    %rax,%rsi
ffffffff80208736:	f3 a5                	rep movsl %ds:(%rsi),%es:(%rdi)
ffffffff80208738:	8b 4d c8             	mov    -0x38(%rbp),%ecx
ffffffff8020873b:	f3 a4                	rep movsb %ds:(%rsi),%es:(%rdi)
ffffffff8020873d:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
ffffffff80208741:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
ffffffff80208745:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
ffffffff80208749:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8020874d:	48 83 c4 38          	add    $0x38,%rsp
ffffffff80208751:	5d                   	pop    %rbp
ffffffff80208752:	c3                   	retq   
ffffffff80208753:	0f 1f 00             	nopl   (%rax)
ffffffff80208756:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8020875d:	00 00 00 

ffffffff80208760 <memset>:
ffffffff80208760:	55                   	push   %rbp
ffffffff80208761:	48 89 e5             	mov    %rsp,%rbp
ffffffff80208764:	48 83 ec 18          	sub    $0x18,%rsp
ffffffff80208768:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8020876c:	89 75 f4             	mov    %esi,-0xc(%rbp)
ffffffff8020876f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
ffffffff80208773:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80208777:	48 89 c1             	mov    %rax,%rcx
ffffffff8020877a:	48 83 c1 ff          	add    $0xffffffffffffffff,%rcx
ffffffff8020877e:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
ffffffff80208782:	48 83 f8 00          	cmp    $0x0,%rax
ffffffff80208786:	74 18                	je     ffffffff802087a0 <memset+0x40>
ffffffff80208788:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff8020878b:	88 c1                	mov    %al,%cl
ffffffff8020878d:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
ffffffff80208791:	48 89 d6             	mov    %rdx,%rsi
ffffffff80208794:	48 83 c6 01          	add    $0x1,%rsi
ffffffff80208798:	48 89 75 f8          	mov    %rsi,-0x8(%rbp)
ffffffff8020879c:	88 0a                	mov    %cl,(%rdx)
ffffffff8020879e:	eb d3                	jmp    ffffffff80208773 <memset+0x13>
ffffffff802087a0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff802087a4:	48 83 c4 18          	add    $0x18,%rsp
ffffffff802087a8:	5d                   	pop    %rbp
ffffffff802087a9:	c3                   	retq   
ffffffff802087aa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

ffffffff802087b0 <memmove>:
ffffffff802087b0:	55                   	push   %rbp
ffffffff802087b1:	48 89 e5             	mov    %rsp,%rbp
ffffffff802087b4:	48 83 ec 28          	sub    $0x28,%rsp
ffffffff802087b8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff802087bc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff802087c0:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
ffffffff802087c4:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
ffffffff802087c8:	48 89 55 e0          	mov    %rdx,-0x20(%rbp)
ffffffff802087cc:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff802087d0:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
ffffffff802087d4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff802087d8:	48 3b 55 f8          	cmp    -0x8(%rbp),%rdx
ffffffff802087dc:	0f 84 a4 00 00 00    	je     ffffffff80208886 <memmove+0xd6>
ffffffff802087e2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff802087e6:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
ffffffff802087ea:	76 3d                	jbe    ffffffff80208829 <memmove+0x79>
ffffffff802087ec:	eb 00                	jmp    ffffffff802087ee <memmove+0x3e>
ffffffff802087ee:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff802087f2:	48 89 c1             	mov    %rax,%rcx
ffffffff802087f5:	48 83 c1 ff          	add    $0xffffffffffffffff,%rcx
ffffffff802087f9:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
ffffffff802087fd:	48 83 f8 00          	cmp    $0x0,%rax
ffffffff80208801:	74 24                	je     ffffffff80208827 <memmove+0x77>
ffffffff80208803:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80208807:	48 89 c1             	mov    %rax,%rcx
ffffffff8020880a:	48 83 c1 01          	add    $0x1,%rcx
ffffffff8020880e:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
ffffffff80208812:	8a 10                	mov    (%rax),%dl
ffffffff80208814:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80208818:	48 89 c1             	mov    %rax,%rcx
ffffffff8020881b:	48 83 c1 01          	add    $0x1,%rcx
ffffffff8020881f:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
ffffffff80208823:	88 10                	mov    %dl,(%rax)
ffffffff80208825:	eb c7                	jmp    ffffffff802087ee <memmove+0x3e>
ffffffff80208827:	eb 5b                	jmp    ffffffff80208884 <memmove+0xd4>
ffffffff80208829:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8020882d:	48 83 e8 01          	sub    $0x1,%rax
ffffffff80208831:	48 03 45 e0          	add    -0x20(%rbp),%rax
ffffffff80208835:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
ffffffff80208839:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8020883d:	48 83 e8 01          	sub    $0x1,%rax
ffffffff80208841:	48 03 45 d8          	add    -0x28(%rbp),%rax
ffffffff80208845:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
ffffffff80208849:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8020884d:	48 89 c1             	mov    %rax,%rcx
ffffffff80208850:	48 83 c1 ff          	add    $0xffffffffffffffff,%rcx
ffffffff80208854:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
ffffffff80208858:	48 83 f8 00          	cmp    $0x0,%rax
ffffffff8020885c:	74 24                	je     ffffffff80208882 <memmove+0xd2>
ffffffff8020885e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80208862:	48 89 c1             	mov    %rax,%rcx
ffffffff80208865:	48 83 c1 ff          	add    $0xffffffffffffffff,%rcx
ffffffff80208869:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
ffffffff8020886d:	8a 10                	mov    (%rax),%dl
ffffffff8020886f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80208873:	48 89 c1             	mov    %rax,%rcx
ffffffff80208876:	48 83 c1 ff          	add    $0xffffffffffffffff,%rcx
ffffffff8020887a:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
ffffffff8020887e:	88 10                	mov    %dl,(%rax)
ffffffff80208880:	eb c7                	jmp    ffffffff80208849 <memmove+0x99>
ffffffff80208882:	eb 00                	jmp    ffffffff80208884 <memmove+0xd4>
ffffffff80208884:	eb 00                	jmp    ffffffff80208886 <memmove+0xd6>
ffffffff80208886:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8020888a:	48 83 c4 28          	add    $0x28,%rsp
ffffffff8020888e:	5d                   	pop    %rbp
ffffffff8020888f:	c3                   	retq   

ffffffff80208890 <strrev>:
ffffffff80208890:	55                   	push   %rbp
ffffffff80208891:	48 89 e5             	mov    %rsp,%rbp
ffffffff80208894:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff80208898:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8020889c:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
ffffffff802088a1:	74 09                	je     ffffffff802088ac <strrev+0x1c>
ffffffff802088a3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff802088a7:	80 38 00             	cmpb   $0x0,(%rax)
ffffffff802088aa:	75 02                	jne    ffffffff802088ae <strrev+0x1e>
ffffffff802088ac:	eb 62                	jmp    ffffffff80208910 <strrev+0x80>
ffffffff802088ae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff802088b2:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
ffffffff802088b6:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
ffffffff802088ba:	e8 61 00 00 00       	callq  ffffffff80208920 <strlen>
ffffffff802088bf:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
ffffffff802088c3:	48 01 c7             	add    %rax,%rdi
ffffffff802088c6:	48 83 c7 ff          	add    $0xffffffffffffffff,%rdi
ffffffff802088ca:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff802088ce:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff802088d2:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
ffffffff802088d6:	76 38                	jbe    ffffffff80208910 <strrev+0x80>
ffffffff802088d8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff802088dc:	8a 08                	mov    (%rax),%cl
ffffffff802088de:	88 4d f7             	mov    %cl,-0x9(%rbp)
ffffffff802088e1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff802088e5:	8a 08                	mov    (%rax),%cl
ffffffff802088e7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff802088eb:	88 08                	mov    %cl,(%rax)
ffffffff802088ed:	8a 4d f7             	mov    -0x9(%rbp),%cl
ffffffff802088f0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff802088f4:	88 08                	mov    %cl,(%rax)
ffffffff802088f6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff802088fa:	48 83 c0 01          	add    $0x1,%rax
ffffffff802088fe:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff80208902:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80208906:	48 83 c0 ff          	add    $0xffffffffffffffff,%rax
ffffffff8020890a:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff8020890e:	eb be                	jmp    ffffffff802088ce <strrev+0x3e>
ffffffff80208910:	48 83 c4 20          	add    $0x20,%rsp
ffffffff80208914:	5d                   	pop    %rbp
ffffffff80208915:	c3                   	retq   
ffffffff80208916:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8020891d:	00 00 00 

ffffffff80208920 <strlen>:
ffffffff80208920:	55                   	push   %rbp
ffffffff80208921:	48 89 e5             	mov    %rsp,%rbp
ffffffff80208924:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff80208928:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8020892c:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
ffffffff80208933:	00 
ffffffff80208934:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80208938:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
ffffffff8020893c:	0f be 14 01          	movsbl (%rcx,%rax,1),%edx
ffffffff80208940:	83 fa 00             	cmp    $0x0,%edx
ffffffff80208943:	74 0e                	je     ffffffff80208953 <strlen+0x33>
ffffffff80208945:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80208949:	48 83 c0 01          	add    $0x1,%rax
ffffffff8020894d:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff80208951:	eb e1                	jmp    ffffffff80208934 <strlen+0x14>
ffffffff80208953:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80208957:	48 83 c4 10          	add    $0x10,%rsp
ffffffff8020895b:	5d                   	pop    %rbp
ffffffff8020895c:	c3                   	retq   
ffffffff8020895d:	0f 1f 00             	nopl   (%rax)

ffffffff80208960 <strncmp>:
ffffffff80208960:	55                   	push   %rbp
ffffffff80208961:	48 89 e5             	mov    %rsp,%rbp
ffffffff80208964:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff80208968:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
ffffffff8020896c:	48 89 75 e8          	mov    %rsi,-0x18(%rbp)
ffffffff80208970:	48 89 55 e0          	mov    %rdx,-0x20(%rbp)
ffffffff80208974:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80208978:	48 89 c1             	mov    %rax,%rcx
ffffffff8020897b:	48 83 c1 ff          	add    $0xffffffffffffffff,%rcx
ffffffff8020897f:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
ffffffff80208983:	48 83 f8 00          	cmp    $0x0,%rax
ffffffff80208987:	74 41                	je     ffffffff802089ca <strncmp+0x6a>
ffffffff80208989:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8020898d:	48 89 c1             	mov    %rax,%rcx
ffffffff80208990:	48 83 c1 01          	add    $0x1,%rcx
ffffffff80208994:	48 89 4d f0          	mov    %rcx,-0x10(%rbp)
ffffffff80208998:	0f be 10             	movsbl (%rax),%edx
ffffffff8020899b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8020899f:	48 89 c1             	mov    %rax,%rcx
ffffffff802089a2:	48 83 c1 01          	add    $0x1,%rcx
ffffffff802089a6:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
ffffffff802089aa:	0f be 30             	movsbl (%rax),%esi
ffffffff802089ad:	39 f2                	cmp    %esi,%edx
ffffffff802089af:	74 17                	je     ffffffff802089c8 <strncmp+0x68>
ffffffff802089b1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff802089b5:	0f b6 48 ff          	movzbl -0x1(%rax),%ecx
ffffffff802089b9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff802089bd:	0f b6 50 ff          	movzbl -0x1(%rax),%edx
ffffffff802089c1:	29 d1                	sub    %edx,%ecx
ffffffff802089c3:	89 4d fc             	mov    %ecx,-0x4(%rbp)
ffffffff802089c6:	eb 09                	jmp    ffffffff802089d1 <strncmp+0x71>
ffffffff802089c8:	eb aa                	jmp    ffffffff80208974 <strncmp+0x14>
ffffffff802089ca:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
ffffffff802089d1:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff802089d4:	48 83 c4 20          	add    $0x20,%rsp
ffffffff802089d8:	5d                   	pop    %rbp
ffffffff802089d9:	c3                   	retq   
ffffffff802089da:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

ffffffff802089e0 <strcpy>:
ffffffff802089e0:	55                   	push   %rbp
ffffffff802089e1:	48 89 e5             	mov    %rsp,%rbp
ffffffff802089e4:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff802089e8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff802089ec:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff802089f0:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
ffffffff802089f4:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
ffffffff802089f8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff802089fc:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff80208a00:	48 89 c7             	mov    %rax,%rdi
ffffffff80208a03:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
ffffffff80208a07:	e8 14 ff ff ff       	callq  ffffffff80208920 <strlen>
ffffffff80208a0c:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
ffffffff80208a10:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
ffffffff80208a14:	48 89 c2             	mov    %rax,%rdx
ffffffff80208a17:	e8 e4 fc ff ff       	callq  ffffffff80208700 <memcpy>
ffffffff80208a1c:	48 83 c4 20          	add    $0x20,%rsp
ffffffff80208a20:	5d                   	pop    %rbp
ffffffff80208a21:	c3                   	retq   
ffffffff80208a22:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff80208a26:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80208a2d:	00 00 00 

ffffffff80208a30 <strcpy_s>:
ffffffff80208a30:	55                   	push   %rbp
ffffffff80208a31:	48 89 e5             	mov    %rsp,%rbp
ffffffff80208a34:	48 83 ec 40          	sub    $0x40,%rsp
ffffffff80208a38:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff80208a3c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff80208a40:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
ffffffff80208a44:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
ffffffff80208a48:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
ffffffff80208a4c:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
ffffffff80208a50:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
ffffffff80208a54:	48 3b 4d e0          	cmp    -0x20(%rbp),%rcx
ffffffff80208a58:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
ffffffff80208a5c:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
ffffffff80208a60:	73 0a                	jae    ffffffff80208a6c <strcpy_s+0x3c>
ffffffff80208a62:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80208a66:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
ffffffff80208a6a:	eb 08                	jmp    ffffffff80208a74 <strcpy_s+0x44>
ffffffff80208a6c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80208a70:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
ffffffff80208a74:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff80208a78:	48 8b 7d d8          	mov    -0x28(%rbp),%rdi
ffffffff80208a7c:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
ffffffff80208a80:	48 89 c2             	mov    %rax,%rdx
ffffffff80208a83:	e8 78 fc ff ff       	callq  ffffffff80208700 <memcpy>
ffffffff80208a88:	48 83 c4 40          	add    $0x40,%rsp
ffffffff80208a8c:	5d                   	pop    %rbp
ffffffff80208a8d:	c3                   	retq   
ffffffff80208a8e:	66 90                	xchg   %ax,%ax

ffffffff80208a90 <strchr>:
ffffffff80208a90:	55                   	push   %rbp
ffffffff80208a91:	48 89 e5             	mov    %rsp,%rbp
ffffffff80208a94:	48 83 ec 18          	sub    $0x18,%rsp
ffffffff80208a98:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
ffffffff80208a9c:	89 75 ec             	mov    %esi,-0x14(%rbp)
ffffffff80208a9f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80208aa3:	0f be 08             	movsbl (%rax),%ecx
ffffffff80208aa6:	8b 55 ec             	mov    -0x14(%rbp),%edx
ffffffff80208aa9:	40 88 d6             	mov    %dl,%sil
ffffffff80208aac:	40 0f be d6          	movsbl %sil,%edx
ffffffff80208ab0:	39 d1                	cmp    %edx,%ecx
ffffffff80208ab2:	74 20                	je     ffffffff80208ad4 <strchr+0x44>
ffffffff80208ab4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80208ab8:	48 89 c1             	mov    %rax,%rcx
ffffffff80208abb:	48 83 c1 01          	add    $0x1,%rcx
ffffffff80208abf:	48 89 4d f0          	mov    %rcx,-0x10(%rbp)
ffffffff80208ac3:	80 38 00             	cmpb   $0x0,(%rax)
ffffffff80208ac6:	75 0a                	jne    ffffffff80208ad2 <strchr+0x42>
ffffffff80208ac8:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
ffffffff80208acf:	00 
ffffffff80208ad0:	eb 0a                	jmp    ffffffff80208adc <strchr+0x4c>
ffffffff80208ad2:	eb cb                	jmp    ffffffff80208a9f <strchr+0xf>
ffffffff80208ad4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80208ad8:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff80208adc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80208ae0:	48 83 c4 18          	add    $0x18,%rsp
ffffffff80208ae4:	5d                   	pop    %rbp
ffffffff80208ae5:	c3                   	retq   
ffffffff80208ae6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80208aed:	00 00 00 

ffffffff80208af0 <strrchr>:
ffffffff80208af0:	55                   	push   %rbp
ffffffff80208af1:	48 89 e5             	mov    %rsp,%rbp
ffffffff80208af4:	48 83 ec 30          	sub    $0x30,%rsp
ffffffff80208af8:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
ffffffff80208afc:	89 75 ec             	mov    %esi,-0x14(%rbp)
ffffffff80208aff:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
ffffffff80208b03:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80208b07:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
ffffffff80208b0b:	48 89 c7             	mov    %rax,%rdi
ffffffff80208b0e:	e8 0d fe ff ff       	callq  ffffffff80208920 <strlen>
ffffffff80208b13:	48 8b 7d d8          	mov    -0x28(%rbp),%rdi
ffffffff80208b17:	48 01 c7             	add    %rax,%rdi
ffffffff80208b1a:	48 89 7d e0          	mov    %rdi,-0x20(%rbp)
ffffffff80208b1e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80208b22:	0f be 08             	movsbl (%rax),%ecx
ffffffff80208b25:	8b 55 ec             	mov    -0x14(%rbp),%edx
ffffffff80208b28:	40 88 d6             	mov    %dl,%sil
ffffffff80208b2b:	40 0f be d6          	movsbl %sil,%edx
ffffffff80208b2f:	39 d1                	cmp    %edx,%ecx
ffffffff80208b31:	74 21                	je     ffffffff80208b54 <strrchr+0x64>
ffffffff80208b33:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80208b37:	48 89 c1             	mov    %rax,%rcx
ffffffff80208b3a:	48 83 c1 ff          	add    $0xffffffffffffffff,%rcx
ffffffff80208b3e:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
ffffffff80208b42:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
ffffffff80208b46:	75 0a                	jne    ffffffff80208b52 <strrchr+0x62>
ffffffff80208b48:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
ffffffff80208b4f:	00 
ffffffff80208b50:	eb 0a                	jmp    ffffffff80208b5c <strrchr+0x6c>
ffffffff80208b52:	eb ca                	jmp    ffffffff80208b1e <strrchr+0x2e>
ffffffff80208b54:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80208b58:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff80208b5c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80208b60:	48 83 c4 30          	add    $0x30,%rsp
ffffffff80208b64:	5d                   	pop    %rbp
ffffffff80208b65:	c3                   	retq   
ffffffff80208b66:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80208b6d:	00 00 00 

ffffffff80208b70 <find_first_zero>:
ffffffff80208b70:	55                   	push   %rbp
ffffffff80208b71:	48 89 e5             	mov    %rsp,%rbp
ffffffff80208b74:	48 83 ec 0c          	sub    $0xc,%rsp
ffffffff80208b78:	89 7d f8             	mov    %edi,-0x8(%rbp)
ffffffff80208b7b:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
ffffffff80208b82:	83 7d f8 00          	cmpl   $0x0,-0x8(%rbp)
ffffffff80208b86:	75 09                	jne    ffffffff80208b91 <find_first_zero+0x21>
ffffffff80208b88:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
ffffffff80208b8f:	eb 1f                	jmp    ffffffff80208bb0 <find_first_zero+0x40>
ffffffff80208b91:	8b 45 f8             	mov    -0x8(%rbp),%eax
ffffffff80208b94:	83 f0 ff             	xor    $0xffffffff,%eax
ffffffff80208b97:	0f bc c0             	bsf    %eax,%eax
ffffffff80208b9a:	75 05                	jne    ffffffff80208ba1 <find_first_zero+0x31>
ffffffff80208b9c:	b8 20 00 00 00       	mov    $0x20,%eax
ffffffff80208ba1:	89 45 f4             	mov    %eax,-0xc(%rbp)
ffffffff80208ba4:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff80208ba7:	66 89 c1             	mov    %ax,%cx
ffffffff80208baa:	0f b7 c1             	movzwl %cx,%eax
ffffffff80208bad:	89 45 fc             	mov    %eax,-0x4(%rbp)
ffffffff80208bb0:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff80208bb3:	48 83 c4 0c          	add    $0xc,%rsp
ffffffff80208bb7:	5d                   	pop    %rbp
ffffffff80208bb8:	c3                   	retq   
ffffffff80208bb9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

ffffffff80208bc0 <set_bit_cnt>:
ffffffff80208bc0:	55                   	push   %rbp
ffffffff80208bc1:	48 89 e5             	mov    %rsp,%rbp
ffffffff80208bc4:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff80208bc8:	89 7d f8             	mov    %edi,-0x8(%rbp)
ffffffff80208bcb:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
ffffffff80208bd2:	83 7d f8 00          	cmpl   $0x0,-0x8(%rbp)
ffffffff80208bd6:	75 09                	jne    ffffffff80208be1 <set_bit_cnt+0x21>
ffffffff80208bd8:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
ffffffff80208bdf:	eb 39                	jmp    ffffffff80208c1a <set_bit_cnt+0x5a>
ffffffff80208be1:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
ffffffff80208be8:	83 7d f0 20          	cmpl   $0x20,-0x10(%rbp)
ffffffff80208bec:	7d 26                	jge    ffffffff80208c14 <set_bit_cnt+0x54>
ffffffff80208bee:	8b 45 f8             	mov    -0x8(%rbp),%eax
ffffffff80208bf1:	8b 4d f0             	mov    -0x10(%rbp),%ecx
ffffffff80208bf4:	d3 e8                	shr    %cl,%eax
ffffffff80208bf6:	83 e0 01             	and    $0x1,%eax
ffffffff80208bf9:	83 f8 00             	cmp    $0x0,%eax
ffffffff80208bfc:	74 09                	je     ffffffff80208c07 <set_bit_cnt+0x47>
ffffffff80208bfe:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff80208c01:	83 c0 01             	add    $0x1,%eax
ffffffff80208c04:	89 45 f4             	mov    %eax,-0xc(%rbp)
ffffffff80208c07:	eb 00                	jmp    ffffffff80208c09 <set_bit_cnt+0x49>
ffffffff80208c09:	8b 45 f0             	mov    -0x10(%rbp),%eax
ffffffff80208c0c:	83 c0 01             	add    $0x1,%eax
ffffffff80208c0f:	89 45 f0             	mov    %eax,-0x10(%rbp)
ffffffff80208c12:	eb d4                	jmp    ffffffff80208be8 <set_bit_cnt+0x28>
ffffffff80208c14:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff80208c17:	89 45 fc             	mov    %eax,-0x4(%rbp)
ffffffff80208c1a:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff80208c1d:	48 83 c4 10          	add    $0x10,%rsp
ffffffff80208c21:	5d                   	pop    %rbp
ffffffff80208c22:	c3                   	retq   
ffffffff80208c23:	0f 1f 00             	nopl   (%rax)
ffffffff80208c26:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80208c2d:	00 00 00 

ffffffff80208c30 <new_uid>:
ffffffff80208c30:	55                   	push   %rbp
ffffffff80208c31:	48 89 e5             	mov    %rsp,%rbp
ffffffff80208c34:	48 8b 04 25 68 cd 28 	mov    0xffffffff8028cd68,%rax
ffffffff80208c3b:	80 
ffffffff80208c3c:	48 ff c0             	inc    %rax
ffffffff80208c3f:	48 89 04 25 68 cd 28 	mov    %rax,0xffffffff8028cd68
ffffffff80208c46:	80 
ffffffff80208c47:	48 b9 ff ff ff ff 00 	movabs $0xffffffff,%rcx
ffffffff80208c4e:	00 00 00 
ffffffff80208c51:	48 21 c8             	and    %rcx,%rax
ffffffff80208c54:	5d                   	pop    %rbp
ffffffff80208c55:	c3                   	retq   
ffffffff80208c56:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80208c5d:	00 00 00 

ffffffff80208c60 <rand>:
ffffffff80208c60:	55                   	push   %rbp
ffffffff80208c61:	48 89 e5             	mov    %rsp,%rbp
ffffffff80208c64:	48 83 ec 0c          	sub    $0xc,%rsp
ffffffff80208c68:	89 7d fc             	mov    %edi,-0x4(%rbp)
ffffffff80208c6b:	c7 45 f8 a7 41 00 00 	movl   $0x41a7,-0x8(%rbp)
ffffffff80208c72:	c7 45 f4 ff ff ff 7f 	movl   $0x7fffffff,-0xc(%rbp)
ffffffff80208c79:	8b 7d f8             	mov    -0x8(%rbp),%edi
ffffffff80208c7c:	0f af 7d fc          	imul   -0x4(%rbp),%edi
ffffffff80208c80:	89 f8                	mov    %edi,%eax
ffffffff80208c82:	31 d2                	xor    %edx,%edx
ffffffff80208c84:	f7 75 f4             	divl   -0xc(%rbp)
ffffffff80208c87:	89 55 fc             	mov    %edx,-0x4(%rbp)
ffffffff80208c8a:	8b 55 fc             	mov    -0x4(%rbp),%edx
ffffffff80208c8d:	89 d0                	mov    %edx,%eax
ffffffff80208c8f:	31 d2                	xor    %edx,%edx
ffffffff80208c91:	f7 75 f4             	divl   -0xc(%rbp)
ffffffff80208c94:	48 83 c4 0c          	add    $0xc,%rsp
ffffffff80208c98:	5d                   	pop    %rbp
ffffffff80208c99:	c3                   	retq   
ffffffff80208c9a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

ffffffff80208ca0 <ffs>:
ffffffff80208ca0:	55                   	push   %rbp
ffffffff80208ca1:	48 89 e5             	mov    %rsp,%rbp
ffffffff80208ca4:	50                   	push   %rax
ffffffff80208ca5:	89 7d fc             	mov    %edi,-0x4(%rbp)
ffffffff80208ca8:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
ffffffff80208caf:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff80208cb2:	8b 4d f8             	mov    -0x8(%rbp),%ecx
ffffffff80208cb5:	d3 e8                	shr    %cl,%eax
ffffffff80208cb7:	83 e0 01             	and    $0x1,%eax
ffffffff80208cba:	83 f8 01             	cmp    $0x1,%eax
ffffffff80208cbd:	75 0d                	jne    ffffffff80208ccc <ffs+0x2c>
ffffffff80208cbf:	eb 00                	jmp    ffffffff80208cc1 <ffs+0x21>
ffffffff80208cc1:	8b 45 f8             	mov    -0x8(%rbp),%eax
ffffffff80208cc4:	83 c0 01             	add    $0x1,%eax
ffffffff80208cc7:	89 45 f8             	mov    %eax,-0x8(%rbp)
ffffffff80208cca:	eb e3                	jmp    ffffffff80208caf <ffs+0xf>
ffffffff80208ccc:	8b 45 f8             	mov    -0x8(%rbp),%eax
ffffffff80208ccf:	48 83 c4 08          	add    $0x8,%rsp
ffffffff80208cd3:	5d                   	pop    %rbp
ffffffff80208cd4:	c3                   	retq   
ffffffff80208cd5:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80208cdc:	00 00 00 
ffffffff80208cdf:	90                   	nop

ffffffff80208ce0 <itoa>:
ffffffff80208ce0:	55                   	push   %rbp
ffffffff80208ce1:	48 89 e5             	mov    %rsp,%rbp
ffffffff80208ce4:	48 81 ec 70 01 00 00 	sub    $0x170,%rsp
ffffffff80208ceb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff80208cef:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff80208cf3:	89 55 ec             	mov    %edx,-0x14(%rbp)
ffffffff80208cf6:	48 c7 85 d8 fe ff ff 	movq   $0xffffffff8024aed1,-0x128(%rbp)
ffffffff80208cfd:	d1 ae 24 80 
ffffffff80208d01:	83 7d ec 10          	cmpl   $0x10,-0x14(%rbp)
ffffffff80208d05:	75 78                	jne    ffffffff80208d7f <itoa+0x9f>
ffffffff80208d07:	c7 85 d4 fe ff ff 00 	movl   $0x0,-0x12c(%rbp)
ffffffff80208d0e:	00 00 00 
ffffffff80208d11:	83 bd d4 fe ff ff 10 	cmpl   $0x10,-0x12c(%rbp)
ffffffff80208d18:	7d 59                	jge    ffffffff80208d73 <itoa+0x93>
ffffffff80208d1a:	b8 0f 00 00 00       	mov    $0xf,%eax
ffffffff80208d1f:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
ffffffff80208d23:	8b 95 d4 fe ff ff    	mov    -0x12c(%rbp),%edx
ffffffff80208d29:	c1 e2 02             	shl    $0x2,%edx
ffffffff80208d2c:	89 d2                	mov    %edx,%edx
ffffffff80208d2e:	89 d6                	mov    %edx,%esi
ffffffff80208d30:	48 89 8d c0 fe ff ff 	mov    %rcx,-0x140(%rbp)
ffffffff80208d37:	48 89 f1             	mov    %rsi,%rcx
ffffffff80208d3a:	48 8b b5 c0 fe ff ff 	mov    -0x140(%rbp),%rsi
ffffffff80208d41:	48 d3 fe             	sar    %cl,%rsi
ffffffff80208d44:	48 83 e6 0f          	and    $0xf,%rsi
ffffffff80208d48:	48 8b bd d8 fe ff ff 	mov    -0x128(%rbp),%rdi
ffffffff80208d4f:	8a 0c 37             	mov    (%rdi,%rsi,1),%cl
ffffffff80208d52:	2b 85 d4 fe ff ff    	sub    -0x12c(%rbp),%eax
ffffffff80208d58:	48 63 f0             	movslq %eax,%rsi
ffffffff80208d5b:	88 8c 35 e0 fe ff ff 	mov    %cl,-0x120(%rbp,%rsi,1)
ffffffff80208d62:	8b 85 d4 fe ff ff    	mov    -0x12c(%rbp),%eax
ffffffff80208d68:	83 c0 01             	add    $0x1,%eax
ffffffff80208d6b:	89 85 d4 fe ff ff    	mov    %eax,-0x12c(%rbp)
ffffffff80208d71:	eb 9e                	jmp    ffffffff80208d11 <itoa+0x31>
ffffffff80208d73:	c6 85 f0 fe ff ff 00 	movb   $0x0,-0x110(%rbp)
ffffffff80208d7a:	e9 55 01 00 00       	jmpq   ffffffff80208ed4 <itoa+0x1f4>
ffffffff80208d7f:	83 7d ec 02          	cmpl   $0x2,-0x14(%rbp)
ffffffff80208d83:	75 73                	jne    ffffffff80208df8 <itoa+0x118>
ffffffff80208d85:	c7 85 d0 fe ff ff 00 	movl   $0x0,-0x130(%rbp)
ffffffff80208d8c:	00 00 00 
ffffffff80208d8f:	83 bd d0 fe ff ff 40 	cmpl   $0x40,-0x130(%rbp)
ffffffff80208d96:	7d 54                	jge    ffffffff80208dec <itoa+0x10c>
ffffffff80208d98:	b8 3f 00 00 00       	mov    $0x3f,%eax
ffffffff80208d9d:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
ffffffff80208da1:	8b 95 d0 fe ff ff    	mov    -0x130(%rbp),%edx
ffffffff80208da7:	89 d6                	mov    %edx,%esi
ffffffff80208da9:	48 89 8d b8 fe ff ff 	mov    %rcx,-0x148(%rbp)
ffffffff80208db0:	48 89 f1             	mov    %rsi,%rcx
ffffffff80208db3:	48 8b b5 b8 fe ff ff 	mov    -0x148(%rbp),%rsi
ffffffff80208dba:	48 d3 fe             	sar    %cl,%rsi
ffffffff80208dbd:	48 83 e6 01          	and    $0x1,%rsi
ffffffff80208dc1:	48 8b bd d8 fe ff ff 	mov    -0x128(%rbp),%rdi
ffffffff80208dc8:	8a 0c 37             	mov    (%rdi,%rsi,1),%cl
ffffffff80208dcb:	2b 85 d0 fe ff ff    	sub    -0x130(%rbp),%eax
ffffffff80208dd1:	48 63 f0             	movslq %eax,%rsi
ffffffff80208dd4:	88 8c 35 e0 fe ff ff 	mov    %cl,-0x120(%rbp,%rsi,1)
ffffffff80208ddb:	8b 85 d0 fe ff ff    	mov    -0x130(%rbp),%eax
ffffffff80208de1:	83 c0 01             	add    $0x1,%eax
ffffffff80208de4:	89 85 d0 fe ff ff    	mov    %eax,-0x130(%rbp)
ffffffff80208dea:	eb a3                	jmp    ffffffff80208d8f <itoa+0xaf>
ffffffff80208dec:	c6 85 20 ff ff ff 00 	movb   $0x0,-0xe0(%rbp)
ffffffff80208df3:	e9 da 00 00 00       	jmpq   ffffffff80208ed2 <itoa+0x1f2>
ffffffff80208df8:	83 7d ec 10          	cmpl   $0x10,-0x14(%rbp)
ffffffff80208dfc:	0f 8d c7 00 00 00    	jge    ffffffff80208ec9 <itoa+0x1e9>
ffffffff80208e02:	c7 85 cc fe ff ff 00 	movl   $0x0,-0x134(%rbp)
ffffffff80208e09:	00 00 00 
ffffffff80208e0c:	c7 85 c8 fe ff ff 00 	movl   $0x0,-0x138(%rbp)
ffffffff80208e13:	00 00 00 
ffffffff80208e16:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
ffffffff80208e1b:	7d 16                	jge    ffffffff80208e33 <itoa+0x153>
ffffffff80208e1d:	31 c0                	xor    %eax,%eax
ffffffff80208e1f:	89 c1                	mov    %eax,%ecx
ffffffff80208e21:	c7 85 c8 fe ff ff 01 	movl   $0x1,-0x138(%rbp)
ffffffff80208e28:	00 00 00 
ffffffff80208e2b:	48 2b 4d f8          	sub    -0x8(%rbp),%rcx
ffffffff80208e2f:	48 89 4d f8          	mov    %rcx,-0x8(%rbp)
ffffffff80208e33:	eb 00                	jmp    ffffffff80208e35 <itoa+0x155>
ffffffff80208e35:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80208e39:	48 63 4d ec          	movslq -0x14(%rbp),%rcx
ffffffff80208e3d:	48 99                	cqto   
ffffffff80208e3f:	48 f7 f9             	idiv   %rcx
ffffffff80208e42:	48 8b 8d d8 fe ff ff 	mov    -0x128(%rbp),%rcx
ffffffff80208e49:	40 8a 34 11          	mov    (%rcx,%rdx,1),%sil
ffffffff80208e4d:	8b bd cc fe ff ff    	mov    -0x134(%rbp),%edi
ffffffff80208e53:	41 89 f8             	mov    %edi,%r8d
ffffffff80208e56:	41 83 c0 01          	add    $0x1,%r8d
ffffffff80208e5a:	44 89 85 cc fe ff ff 	mov    %r8d,-0x134(%rbp)
ffffffff80208e61:	48 63 cf             	movslq %edi,%rcx
ffffffff80208e64:	40 88 b4 0d e0 fe ff 	mov    %sil,-0x120(%rbp,%rcx,1)
ffffffff80208e6b:	ff 
ffffffff80208e6c:	48 63 4d ec          	movslq -0x14(%rbp),%rcx
ffffffff80208e70:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
ffffffff80208e74:	48 89 d0             	mov    %rdx,%rax
ffffffff80208e77:	48 99                	cqto   
ffffffff80208e79:	48 f7 f9             	idiv   %rcx
ffffffff80208e7c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff80208e80:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
ffffffff80208e85:	75 ae                	jne    ffffffff80208e35 <itoa+0x155>
ffffffff80208e87:	83 bd c8 fe ff ff 00 	cmpl   $0x0,-0x138(%rbp)
ffffffff80208e8e:	74 1c                	je     ffffffff80208eac <itoa+0x1cc>
ffffffff80208e90:	8b 85 cc fe ff ff    	mov    -0x134(%rbp),%eax
ffffffff80208e96:	89 c1                	mov    %eax,%ecx
ffffffff80208e98:	83 c1 01             	add    $0x1,%ecx
ffffffff80208e9b:	89 8d cc fe ff ff    	mov    %ecx,-0x134(%rbp)
ffffffff80208ea1:	48 63 d0             	movslq %eax,%rdx
ffffffff80208ea4:	c6 84 15 e0 fe ff ff 	movb   $0x2d,-0x120(%rbp,%rdx,1)
ffffffff80208eab:	2d 
ffffffff80208eac:	48 8d bd e0 fe ff ff 	lea    -0x120(%rbp),%rdi
ffffffff80208eb3:	48 63 85 cc fe ff ff 	movslq -0x134(%rbp),%rax
ffffffff80208eba:	c6 84 05 e0 fe ff ff 	movb   $0x0,-0x120(%rbp,%rax,1)
ffffffff80208ec1:	00 
ffffffff80208ec2:	e8 c9 f9 ff ff       	callq  ffffffff80208890 <strrev>
ffffffff80208ec7:	eb 07                	jmp    ffffffff80208ed0 <itoa+0x1f0>
ffffffff80208ec9:	c6 85 e0 fe ff ff 00 	movb   $0x0,-0x120(%rbp)
ffffffff80208ed0:	eb 00                	jmp    ffffffff80208ed2 <itoa+0x1f2>
ffffffff80208ed2:	eb 00                	jmp    ffffffff80208ed4 <itoa+0x1f4>
ffffffff80208ed4:	48 8d 85 e0 fe ff ff 	lea    -0x120(%rbp),%rax
ffffffff80208edb:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
ffffffff80208edf:	48 89 bd b0 fe ff ff 	mov    %rdi,-0x150(%rbp)
ffffffff80208ee6:	48 89 c7             	mov    %rax,%rdi
ffffffff80208ee9:	48 89 85 a8 fe ff ff 	mov    %rax,-0x158(%rbp)
ffffffff80208ef0:	e8 2b fa ff ff       	callq  ffffffff80208920 <strlen>
ffffffff80208ef5:	48 8b bd b0 fe ff ff 	mov    -0x150(%rbp),%rdi
ffffffff80208efc:	48 8b b5 a8 fe ff ff 	mov    -0x158(%rbp),%rsi
ffffffff80208f03:	48 89 c2             	mov    %rax,%rdx
ffffffff80208f06:	e8 f5 f7 ff ff       	callq  ffffffff80208700 <memcpy>
ffffffff80208f0b:	48 8d bd e0 fe ff ff 	lea    -0x120(%rbp),%rdi
ffffffff80208f12:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff80208f16:	48 89 85 a0 fe ff ff 	mov    %rax,-0x160(%rbp)
ffffffff80208f1d:	48 89 95 98 fe ff ff 	mov    %rdx,-0x168(%rbp)
ffffffff80208f24:	e8 f7 f9 ff ff       	callq  ffffffff80208920 <strlen>
ffffffff80208f29:	48 8b 95 98 fe ff ff 	mov    -0x168(%rbp),%rdx
ffffffff80208f30:	48 01 c2             	add    %rax,%rdx
ffffffff80208f33:	48 89 d0             	mov    %rdx,%rax
ffffffff80208f36:	48 81 c4 70 01 00 00 	add    $0x170,%rsp
ffffffff80208f3d:	5d                   	pop    %rbp
ffffffff80208f3e:	c3                   	retq   
ffffffff80208f3f:	90                   	nop

ffffffff80208f40 <utoa>:
ffffffff80208f40:	55                   	push   %rbp
ffffffff80208f41:	48 89 e5             	mov    %rsp,%rbp
ffffffff80208f44:	48 81 ec 70 01 00 00 	sub    $0x170,%rsp
ffffffff80208f4b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff80208f4f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff80208f53:	89 55 ec             	mov    %edx,-0x14(%rbp)
ffffffff80208f56:	48 c7 85 d8 fe ff ff 	movq   $0xffffffff8024aed1,-0x128(%rbp)
ffffffff80208f5d:	d1 ae 24 80 
ffffffff80208f61:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
ffffffff80208f65:	75 07                	jne    ffffffff80208f6e <utoa+0x2e>
ffffffff80208f67:	c7 45 ec 10 00 00 00 	movl   $0x10,-0x14(%rbp)
ffffffff80208f6e:	83 7d ec 10          	cmpl   $0x10,-0x14(%rbp)
ffffffff80208f72:	75 78                	jne    ffffffff80208fec <utoa+0xac>
ffffffff80208f74:	c7 85 d4 fe ff ff 00 	movl   $0x0,-0x12c(%rbp)
ffffffff80208f7b:	00 00 00 
ffffffff80208f7e:	83 bd d4 fe ff ff 08 	cmpl   $0x8,-0x12c(%rbp)
ffffffff80208f85:	7d 59                	jge    ffffffff80208fe0 <utoa+0xa0>
ffffffff80208f87:	b8 07 00 00 00       	mov    $0x7,%eax
ffffffff80208f8c:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
ffffffff80208f90:	8b 95 d4 fe ff ff    	mov    -0x12c(%rbp),%edx
ffffffff80208f96:	c1 e2 02             	shl    $0x2,%edx
ffffffff80208f99:	89 d2                	mov    %edx,%edx
ffffffff80208f9b:	89 d6                	mov    %edx,%esi
ffffffff80208f9d:	48 89 8d c0 fe ff ff 	mov    %rcx,-0x140(%rbp)
ffffffff80208fa4:	48 89 f1             	mov    %rsi,%rcx
ffffffff80208fa7:	48 8b b5 c0 fe ff ff 	mov    -0x140(%rbp),%rsi
ffffffff80208fae:	48 d3 ee             	shr    %cl,%rsi
ffffffff80208fb1:	48 83 e6 0f          	and    $0xf,%rsi
ffffffff80208fb5:	48 8b bd d8 fe ff ff 	mov    -0x128(%rbp),%rdi
ffffffff80208fbc:	8a 0c 37             	mov    (%rdi,%rsi,1),%cl
ffffffff80208fbf:	2b 85 d4 fe ff ff    	sub    -0x12c(%rbp),%eax
ffffffff80208fc5:	48 63 f0             	movslq %eax,%rsi
ffffffff80208fc8:	88 8c 35 e0 fe ff ff 	mov    %cl,-0x120(%rbp,%rsi,1)
ffffffff80208fcf:	8b 85 d4 fe ff ff    	mov    -0x12c(%rbp),%eax
ffffffff80208fd5:	83 c0 01             	add    $0x1,%eax
ffffffff80208fd8:	89 85 d4 fe ff ff    	mov    %eax,-0x12c(%rbp)
ffffffff80208fde:	eb 9e                	jmp    ffffffff80208f7e <utoa+0x3e>
ffffffff80208fe0:	c6 85 e8 fe ff ff 00 	movb   $0x0,-0x118(%rbp)
ffffffff80208fe7:	e9 30 01 00 00       	jmpq   ffffffff8020911c <utoa+0x1dc>
ffffffff80208fec:	83 7d ec 02          	cmpl   $0x2,-0x14(%rbp)
ffffffff80208ff0:	75 73                	jne    ffffffff80209065 <utoa+0x125>
ffffffff80208ff2:	c7 85 d0 fe ff ff 00 	movl   $0x0,-0x130(%rbp)
ffffffff80208ff9:	00 00 00 
ffffffff80208ffc:	83 bd d0 fe ff ff 20 	cmpl   $0x20,-0x130(%rbp)
ffffffff80209003:	7d 54                	jge    ffffffff80209059 <utoa+0x119>
ffffffff80209005:	b8 1f 00 00 00       	mov    $0x1f,%eax
ffffffff8020900a:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
ffffffff8020900e:	8b 95 d0 fe ff ff    	mov    -0x130(%rbp),%edx
ffffffff80209014:	89 d6                	mov    %edx,%esi
ffffffff80209016:	48 89 8d b8 fe ff ff 	mov    %rcx,-0x148(%rbp)
ffffffff8020901d:	48 89 f1             	mov    %rsi,%rcx
ffffffff80209020:	48 8b b5 b8 fe ff ff 	mov    -0x148(%rbp),%rsi
ffffffff80209027:	48 d3 ee             	shr    %cl,%rsi
ffffffff8020902a:	48 83 e6 01          	and    $0x1,%rsi
ffffffff8020902e:	48 8b bd d8 fe ff ff 	mov    -0x128(%rbp),%rdi
ffffffff80209035:	8a 0c 37             	mov    (%rdi,%rsi,1),%cl
ffffffff80209038:	2b 85 d0 fe ff ff    	sub    -0x130(%rbp),%eax
ffffffff8020903e:	48 63 f0             	movslq %eax,%rsi
ffffffff80209041:	88 8c 35 e0 fe ff ff 	mov    %cl,-0x120(%rbp,%rsi,1)
ffffffff80209048:	8b 85 d0 fe ff ff    	mov    -0x130(%rbp),%eax
ffffffff8020904e:	83 c0 01             	add    $0x1,%eax
ffffffff80209051:	89 85 d0 fe ff ff    	mov    %eax,-0x130(%rbp)
ffffffff80209057:	eb a3                	jmp    ffffffff80208ffc <utoa+0xbc>
ffffffff80209059:	c6 85 00 ff ff ff 00 	movb   $0x0,-0x100(%rbp)
ffffffff80209060:	e9 b5 00 00 00       	jmpq   ffffffff8020911a <utoa+0x1da>
ffffffff80209065:	83 7d ec 10          	cmpl   $0x10,-0x14(%rbp)
ffffffff80209069:	0f 8d a2 00 00 00    	jge    ffffffff80209111 <utoa+0x1d1>
ffffffff8020906f:	c7 85 cc fe ff ff 00 	movl   $0x0,-0x134(%rbp)
ffffffff80209076:	00 00 00 
ffffffff80209079:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8020907d:	48 63 4d ec          	movslq -0x14(%rbp),%rcx
ffffffff80209081:	31 d2                	xor    %edx,%edx
ffffffff80209083:	48 f7 f1             	div    %rcx
ffffffff80209086:	48 8b 8d d8 fe ff ff 	mov    -0x128(%rbp),%rcx
ffffffff8020908d:	40 8a 34 11          	mov    (%rcx,%rdx,1),%sil
ffffffff80209091:	8b bd cc fe ff ff    	mov    -0x134(%rbp),%edi
ffffffff80209097:	41 89 f8             	mov    %edi,%r8d
ffffffff8020909a:	41 83 c0 01          	add    $0x1,%r8d
ffffffff8020909e:	44 89 85 cc fe ff ff 	mov    %r8d,-0x134(%rbp)
ffffffff802090a5:	48 63 cf             	movslq %edi,%rcx
ffffffff802090a8:	40 88 b4 0d e0 fe ff 	mov    %sil,-0x120(%rbp,%rcx,1)
ffffffff802090af:	ff 
ffffffff802090b0:	48 63 4d ec          	movslq -0x14(%rbp),%rcx
ffffffff802090b4:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
ffffffff802090b8:	48 89 d0             	mov    %rdx,%rax
ffffffff802090bb:	31 ff                	xor    %edi,%edi
ffffffff802090bd:	89 fa                	mov    %edi,%edx
ffffffff802090bf:	48 f7 f1             	div    %rcx
ffffffff802090c2:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff802090c6:	31 c0                	xor    %eax,%eax
ffffffff802090c8:	88 c1                	mov    %al,%cl
ffffffff802090ca:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
ffffffff802090cf:	88 8d b7 fe ff ff    	mov    %cl,-0x149(%rbp)
ffffffff802090d5:	74 13                	je     ffffffff802090ea <utoa+0x1aa>
ffffffff802090d7:	81 bd cc fe ff ff ff 	cmpl   $0x1ff,-0x134(%rbp)
ffffffff802090de:	01 00 00 
ffffffff802090e1:	0f 9c c0             	setl   %al
ffffffff802090e4:	88 85 b7 fe ff ff    	mov    %al,-0x149(%rbp)
ffffffff802090ea:	8a 85 b7 fe ff ff    	mov    -0x149(%rbp),%al
ffffffff802090f0:	a8 01                	test   $0x1,%al
ffffffff802090f2:	75 85                	jne    ffffffff80209079 <utoa+0x139>
ffffffff802090f4:	48 8d bd e0 fe ff ff 	lea    -0x120(%rbp),%rdi
ffffffff802090fb:	48 63 85 cc fe ff ff 	movslq -0x134(%rbp),%rax
ffffffff80209102:	c6 84 05 e0 fe ff ff 	movb   $0x0,-0x120(%rbp,%rax,1)
ffffffff80209109:	00 
ffffffff8020910a:	e8 81 f7 ff ff       	callq  ffffffff80208890 <strrev>
ffffffff8020910f:	eb 07                	jmp    ffffffff80209118 <utoa+0x1d8>
ffffffff80209111:	c6 85 e0 fe ff ff 00 	movb   $0x0,-0x120(%rbp)
ffffffff80209118:	eb 00                	jmp    ffffffff8020911a <utoa+0x1da>
ffffffff8020911a:	eb 00                	jmp    ffffffff8020911c <utoa+0x1dc>
ffffffff8020911c:	48 8d 85 e0 fe ff ff 	lea    -0x120(%rbp),%rax
ffffffff80209123:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
ffffffff80209127:	48 89 bd a8 fe ff ff 	mov    %rdi,-0x158(%rbp)
ffffffff8020912e:	48 89 c7             	mov    %rax,%rdi
ffffffff80209131:	48 89 85 a0 fe ff ff 	mov    %rax,-0x160(%rbp)
ffffffff80209138:	e8 e3 f7 ff ff       	callq  ffffffff80208920 <strlen>
ffffffff8020913d:	48 8b bd a8 fe ff ff 	mov    -0x158(%rbp),%rdi
ffffffff80209144:	48 8b b5 a0 fe ff ff 	mov    -0x160(%rbp),%rsi
ffffffff8020914b:	48 89 c2             	mov    %rax,%rdx
ffffffff8020914e:	e8 ad f5 ff ff       	callq  ffffffff80208700 <memcpy>
ffffffff80209153:	48 8d bd e0 fe ff ff 	lea    -0x120(%rbp),%rdi
ffffffff8020915a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff8020915e:	48 89 85 98 fe ff ff 	mov    %rax,-0x168(%rbp)
ffffffff80209165:	48 89 95 90 fe ff ff 	mov    %rdx,-0x170(%rbp)
ffffffff8020916c:	e8 af f7 ff ff       	callq  ffffffff80208920 <strlen>
ffffffff80209171:	48 8b 95 90 fe ff ff 	mov    -0x170(%rbp),%rdx
ffffffff80209178:	48 01 c2             	add    %rax,%rdx
ffffffff8020917b:	48 89 d0             	mov    %rdx,%rax
ffffffff8020917e:	48 81 c4 70 01 00 00 	add    $0x170,%rsp
ffffffff80209185:	5d                   	pop    %rbp
ffffffff80209186:	c3                   	retq   
ffffffff80209187:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff8020918e:	00 00 

ffffffff80209190 <vsnprintf>:
ffffffff80209190:	55                   	push   %rbp
ffffffff80209191:	48 89 e5             	mov    %rsp,%rbp
ffffffff80209194:	48 81 ec e0 01 00 00 	sub    $0x1e0,%rsp
ffffffff8020919b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8020919f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff802091a3:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
ffffffff802091a7:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%rbp)
ffffffff802091ae:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
ffffffff802091b5:	00 
ffffffff802091b6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff802091ba:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
ffffffff802091be:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
ffffffff802091c2:	e8 59 f7 ff ff       	callq  ffffffff80208920 <strlen>
ffffffff802091c7:	48 8b 7d a8          	mov    -0x58(%rbp),%rdi
ffffffff802091cb:	48 39 c7             	cmp    %rax,%rdi
ffffffff802091ce:	73 3c                	jae    ffffffff8020920c <vsnprintf+0x7c>
ffffffff802091d0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff802091d4:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
ffffffff802091d8:	0f be 14 01          	movsbl (%rcx,%rax,1),%edx
ffffffff802091dc:	83 fa 25             	cmp    $0x25,%edx
ffffffff802091df:	75 1b                	jne    ffffffff802091fc <vsnprintf+0x6c>
ffffffff802091e1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff802091e5:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
ffffffff802091e9:	0f be 54 01 01       	movsbl 0x1(%rcx,%rax,1),%edx
ffffffff802091ee:	83 fa 25             	cmp    $0x25,%edx
ffffffff802091f1:	74 09                	je     ffffffff802091fc <vsnprintf+0x6c>
ffffffff802091f3:	8b 45 e4             	mov    -0x1c(%rbp),%eax
ffffffff802091f6:	83 c0 01             	add    $0x1,%eax
ffffffff802091f9:	89 45 e4             	mov    %eax,-0x1c(%rbp)
ffffffff802091fc:	eb 00                	jmp    ffffffff802091fe <vsnprintf+0x6e>
ffffffff802091fe:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff80209202:	48 83 c0 01          	add    $0x1,%rax
ffffffff80209206:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
ffffffff8020920a:	eb aa                	jmp    ffffffff802091b6 <vsnprintf+0x26>
ffffffff8020920c:	48 c7 45 d0 00 00 00 	movq   $0x0,-0x30(%rbp)
ffffffff80209213:	00 
ffffffff80209214:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff80209218:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
ffffffff8020921c:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
ffffffff80209220:	e8 fb f6 ff ff       	callq  ffffffff80208920 <strlen>
ffffffff80209225:	48 8b 7d a0          	mov    -0x60(%rbp),%rdi
ffffffff80209229:	48 39 c7             	cmp    %rax,%rdi
ffffffff8020922c:	0f 83 67 08 00 00    	jae    ffffffff80209a99 <vsnprintf+0x909>
ffffffff80209232:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff80209236:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
ffffffff8020923a:	0f be 14 01          	movsbl (%rcx,%rax,1),%edx
ffffffff8020923e:	83 fa 25             	cmp    $0x25,%edx
ffffffff80209241:	74 22                	je     ffffffff80209265 <vsnprintf+0xd5>
ffffffff80209243:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff80209247:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
ffffffff8020924b:	8a 14 01             	mov    (%rcx,%rax,1),%dl
ffffffff8020924e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80209252:	88 10                	mov    %dl,(%rax)
ffffffff80209254:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80209258:	48 83 c0 01          	add    $0x1,%rax
ffffffff8020925c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff80209260:	e9 21 08 00 00       	jmpq   ffffffff80209a86 <vsnprintf+0x8f6>
ffffffff80209265:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff80209269:	48 83 c0 01          	add    $0x1,%rax
ffffffff8020926d:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
ffffffff80209271:	c7 45 cc 01 00 00 00 	movl   $0x1,-0x34(%rbp)
ffffffff80209278:	c6 45 cb 20          	movb   $0x20,-0x35(%rbp)
ffffffff8020927c:	c7 45 c4 00 00 00 00 	movl   $0x0,-0x3c(%rbp)
ffffffff80209283:	c7 45 c0 00 00 00 00 	movl   $0x0,-0x40(%rbp)
ffffffff8020928a:	83 7d cc 00          	cmpl   $0x0,-0x34(%rbp)
ffffffff8020928e:	0f 84 f0 07 00 00    	je     ffffffff80209a84 <vsnprintf+0x8f4>
ffffffff80209294:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff80209298:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
ffffffff8020929c:	0f be 14 01          	movsbl (%rcx,%rax,1),%edx
ffffffff802092a0:	89 d6                	mov    %edx,%esi
ffffffff802092a2:	83 ee 23             	sub    $0x23,%esi
ffffffff802092a5:	89 55 9c             	mov    %edx,-0x64(%rbp)
ffffffff802092a8:	89 75 98             	mov    %esi,-0x68(%rbp)
ffffffff802092ab:	0f 84 4b 01 00 00    	je     ffffffff802093fc <vsnprintf+0x26c>
ffffffff802092b1:	eb 00                	jmp    ffffffff802092b3 <vsnprintf+0x123>
ffffffff802092b3:	8b 45 9c             	mov    -0x64(%rbp),%eax
ffffffff802092b6:	83 e8 25             	sub    $0x25,%eax
ffffffff802092b9:	89 45 94             	mov    %eax,-0x6c(%rbp)
ffffffff802092bc:	0f 84 a4 07 00 00    	je     ffffffff80209a66 <vsnprintf+0x8d6>
ffffffff802092c2:	eb 00                	jmp    ffffffff802092c4 <vsnprintf+0x134>
ffffffff802092c4:	8b 45 9c             	mov    -0x64(%rbp),%eax
ffffffff802092c7:	83 e8 2a             	sub    $0x2a,%eax
ffffffff802092ca:	89 45 90             	mov    %eax,-0x70(%rbp)
ffffffff802092cd:	0f 84 d2 01 00 00    	je     ffffffff802094a5 <vsnprintf+0x315>
ffffffff802092d3:	eb 00                	jmp    ffffffff802092d5 <vsnprintf+0x145>
ffffffff802092d5:	8b 45 9c             	mov    -0x64(%rbp),%eax
ffffffff802092d8:	83 e8 2e             	sub    $0x2e,%eax
ffffffff802092db:	89 45 8c             	mov    %eax,-0x74(%rbp)
ffffffff802092de:	0f 84 29 02 00 00    	je     ffffffff8020950d <vsnprintf+0x37d>
ffffffff802092e4:	eb 00                	jmp    ffffffff802092e6 <vsnprintf+0x156>
ffffffff802092e6:	8b 45 9c             	mov    -0x64(%rbp),%eax
ffffffff802092e9:	83 e8 30             	sub    $0x30,%eax
ffffffff802092ec:	89 45 88             	mov    %eax,-0x78(%rbp)
ffffffff802092ef:	0f 84 f2 00 00 00    	je     ffffffff802093e7 <vsnprintf+0x257>
ffffffff802092f5:	eb 00                	jmp    ffffffff802092f7 <vsnprintf+0x167>
ffffffff802092f7:	8b 45 9c             	mov    -0x64(%rbp),%eax
ffffffff802092fa:	83 c0 cf             	add    $0xffffffcf,%eax
ffffffff802092fd:	83 e8 09             	sub    $0x9,%eax
ffffffff80209300:	89 45 84             	mov    %eax,-0x7c(%rbp)
ffffffff80209303:	0f 82 28 01 00 00    	jb     ffffffff80209431 <vsnprintf+0x2a1>
ffffffff80209309:	eb 00                	jmp    ffffffff8020930b <vsnprintf+0x17b>
ffffffff8020930b:	8b 45 9c             	mov    -0x64(%rbp),%eax
ffffffff8020930e:	83 e8 46             	sub    $0x46,%eax
ffffffff80209311:	89 45 80             	mov    %eax,-0x80(%rbp)
ffffffff80209314:	0f 84 f1 05 00 00    	je     ffffffff8020990b <vsnprintf+0x77b>
ffffffff8020931a:	eb 00                	jmp    ffffffff8020931c <vsnprintf+0x18c>
ffffffff8020931c:	8b 45 9c             	mov    -0x64(%rbp),%eax
ffffffff8020931f:	83 e8 58             	sub    $0x58,%eax
ffffffff80209322:	89 85 7c ff ff ff    	mov    %eax,-0x84(%rbp)
ffffffff80209328:	0f 84 52 05 00 00    	je     ffffffff80209880 <vsnprintf+0x6f0>
ffffffff8020932e:	eb 00                	jmp    ffffffff80209330 <vsnprintf+0x1a0>
ffffffff80209330:	8b 45 9c             	mov    -0x64(%rbp),%eax
ffffffff80209333:	83 e8 62             	sub    $0x62,%eax
ffffffff80209336:	89 85 78 ff ff ff    	mov    %eax,-0x88(%rbp)
ffffffff8020933c:	0f 84 28 04 00 00    	je     ffffffff8020976a <vsnprintf+0x5da>
ffffffff80209342:	eb 00                	jmp    ffffffff80209344 <vsnprintf+0x1b4>
ffffffff80209344:	8b 45 9c             	mov    -0x64(%rbp),%eax
ffffffff80209347:	83 e8 63             	sub    $0x63,%eax
ffffffff8020934a:	89 85 74 ff ff ff    	mov    %eax,-0x8c(%rbp)
ffffffff80209350:	0f 84 cd 05 00 00    	je     ffffffff80209923 <vsnprintf+0x793>
ffffffff80209356:	eb 00                	jmp    ffffffff80209358 <vsnprintf+0x1c8>
ffffffff80209358:	8b 45 9c             	mov    -0x64(%rbp),%eax
ffffffff8020935b:	83 e8 64             	sub    $0x64,%eax
ffffffff8020935e:	89 85 70 ff ff ff    	mov    %eax,-0x90(%rbp)
ffffffff80209364:	0f 84 a2 02 00 00    	je     ffffffff8020960c <vsnprintf+0x47c>
ffffffff8020936a:	eb 00                	jmp    ffffffff8020936c <vsnprintf+0x1dc>
ffffffff8020936c:	8b 45 9c             	mov    -0x64(%rbp),%eax
ffffffff8020936f:	83 e8 66             	sub    $0x66,%eax
ffffffff80209372:	89 85 6c ff ff ff    	mov    %eax,-0x94(%rbp)
ffffffff80209378:	0f 84 8d 05 00 00    	je     ffffffff8020990b <vsnprintf+0x77b>
ffffffff8020937e:	eb 00                	jmp    ffffffff80209380 <vsnprintf+0x1f0>
ffffffff80209380:	8b 45 9c             	mov    -0x64(%rbp),%eax
ffffffff80209383:	83 e8 69             	sub    $0x69,%eax
ffffffff80209386:	89 85 68 ff ff ff    	mov    %eax,-0x98(%rbp)
ffffffff8020938c:	0f 84 7a 02 00 00    	je     ffffffff8020960c <vsnprintf+0x47c>
ffffffff80209392:	eb 00                	jmp    ffffffff80209394 <vsnprintf+0x204>
ffffffff80209394:	8b 45 9c             	mov    -0x64(%rbp),%eax
ffffffff80209397:	83 e8 6f             	sub    $0x6f,%eax
ffffffff8020939a:	89 85 64 ff ff ff    	mov    %eax,-0x9c(%rbp)
ffffffff802093a0:	0f 84 4f 04 00 00    	je     ffffffff802097f5 <vsnprintf+0x665>
ffffffff802093a6:	eb 00                	jmp    ffffffff802093a8 <vsnprintf+0x218>
ffffffff802093a8:	8b 45 9c             	mov    -0x64(%rbp),%eax
ffffffff802093ab:	83 e8 73             	sub    $0x73,%eax
ffffffff802093ae:	89 85 60 ff ff ff    	mov    %eax,-0xa0(%rbp)
ffffffff802093b4:	0f 84 ee 05 00 00    	je     ffffffff802099a8 <vsnprintf+0x818>
ffffffff802093ba:	eb 00                	jmp    ffffffff802093bc <vsnprintf+0x22c>
ffffffff802093bc:	8b 45 9c             	mov    -0x64(%rbp),%eax
ffffffff802093bf:	83 e8 75             	sub    $0x75,%eax
ffffffff802093c2:	89 85 5c ff ff ff    	mov    %eax,-0xa4(%rbp)
ffffffff802093c8:	0f 84 11 03 00 00    	je     ffffffff802096df <vsnprintf+0x54f>
ffffffff802093ce:	eb 00                	jmp    ffffffff802093d0 <vsnprintf+0x240>
ffffffff802093d0:	8b 45 9c             	mov    -0x64(%rbp),%eax
ffffffff802093d3:	83 e8 78             	sub    $0x78,%eax
ffffffff802093d6:	89 85 58 ff ff ff    	mov    %eax,-0xa8(%rbp)
ffffffff802093dc:	0f 84 9e 04 00 00    	je     ffffffff80209880 <vsnprintf+0x6f0>
ffffffff802093e2:	e9 98 06 00 00       	jmpq   ffffffff80209a7f <vsnprintf+0x8ef>
ffffffff802093e7:	c6 45 cb 30          	movb   $0x30,-0x35(%rbp)
ffffffff802093eb:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff802093ef:	48 83 c0 01          	add    $0x1,%rax
ffffffff802093f3:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
ffffffff802093f7:	e9 83 06 00 00       	jmpq   ffffffff80209a7f <vsnprintf+0x8ef>
ffffffff802093fc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80209400:	48 89 c1             	mov    %rax,%rcx
ffffffff80209403:	48 83 c1 01          	add    $0x1,%rcx
ffffffff80209407:	48 89 4d f8          	mov    %rcx,-0x8(%rbp)
ffffffff8020940b:	c6 00 30             	movb   $0x30,(%rax)
ffffffff8020940e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80209412:	48 89 c1             	mov    %rax,%rcx
ffffffff80209415:	48 83 c1 01          	add    $0x1,%rcx
ffffffff80209419:	48 89 4d f8          	mov    %rcx,-0x8(%rbp)
ffffffff8020941d:	c6 00 78             	movb   $0x78,(%rax)
ffffffff80209420:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff80209424:	48 83 c0 01          	add    $0x1,%rax
ffffffff80209428:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
ffffffff8020942c:	e9 4e 06 00 00       	jmpq   ffffffff80209a7f <vsnprintf+0x8ef>
ffffffff80209431:	eb 00                	jmp    ffffffff80209433 <vsnprintf+0x2a3>
ffffffff80209433:	31 c0                	xor    %eax,%eax
ffffffff80209435:	88 c1                	mov    %al,%cl
ffffffff80209437:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
ffffffff8020943b:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
ffffffff8020943f:	0f be 04 16          	movsbl (%rsi,%rdx,1),%eax
ffffffff80209443:	83 e8 30             	sub    $0x30,%eax
ffffffff80209446:	83 f8 09             	cmp    $0x9,%eax
ffffffff80209449:	88 8d 57 ff ff ff    	mov    %cl,-0xa9(%rbp)
ffffffff8020944f:	7f 1d                	jg     ffffffff8020946e <vsnprintf+0x2de>
ffffffff80209451:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff80209455:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
ffffffff80209459:	0f be 14 01          	movsbl (%rcx,%rax,1),%edx
ffffffff8020945d:	83 ea 30             	sub    $0x30,%edx
ffffffff80209460:	83 fa 00             	cmp    $0x0,%edx
ffffffff80209463:	40 0f 9d c6          	setge  %sil
ffffffff80209467:	40 88 b5 57 ff ff ff 	mov    %sil,-0xa9(%rbp)
ffffffff8020946e:	8a 85 57 ff ff ff    	mov    -0xa9(%rbp),%al
ffffffff80209474:	a8 01                	test   $0x1,%al
ffffffff80209476:	75 02                	jne    ffffffff8020947a <vsnprintf+0x2ea>
ffffffff80209478:	eb 26                	jmp    ffffffff802094a0 <vsnprintf+0x310>
ffffffff8020947a:	6b 45 c4 0a          	imul   $0xa,-0x3c(%rbp),%eax
ffffffff8020947e:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
ffffffff80209482:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff80209486:	0f be 34 0a          	movsbl (%rdx,%rcx,1),%esi
ffffffff8020948a:	83 ee 30             	sub    $0x30,%esi
ffffffff8020948d:	01 f0                	add    %esi,%eax
ffffffff8020948f:	89 45 c4             	mov    %eax,-0x3c(%rbp)
ffffffff80209492:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
ffffffff80209496:	48 83 c1 01          	add    $0x1,%rcx
ffffffff8020949a:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
ffffffff8020949e:	eb 93                	jmp    ffffffff80209433 <vsnprintf+0x2a3>
ffffffff802094a0:	e9 da 05 00 00       	jmpq   ffffffff80209a7f <vsnprintf+0x8ef>
ffffffff802094a5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff802094a9:	8b 08                	mov    (%rax),%ecx
ffffffff802094ab:	83 f9 28             	cmp    $0x28,%ecx
ffffffff802094ae:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
ffffffff802094b5:	89 8d 44 ff ff ff    	mov    %ecx,-0xbc(%rbp)
ffffffff802094bb:	77 22                	ja     ffffffff802094df <vsnprintf+0x34f>
ffffffff802094bd:	8b 85 44 ff ff ff    	mov    -0xbc(%rbp),%eax
ffffffff802094c3:	48 63 c8             	movslq %eax,%rcx
ffffffff802094c6:	48 8b 95 48 ff ff ff 	mov    -0xb8(%rbp),%rdx
ffffffff802094cd:	48 03 4a 10          	add    0x10(%rdx),%rcx
ffffffff802094d1:	83 c0 08             	add    $0x8,%eax
ffffffff802094d4:	89 02                	mov    %eax,(%rdx)
ffffffff802094d6:	48 89 8d 38 ff ff ff 	mov    %rcx,-0xc8(%rbp)
ffffffff802094dd:	eb 1d                	jmp    ffffffff802094fc <vsnprintf+0x36c>
ffffffff802094df:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
ffffffff802094e6:	48 8b 48 08          	mov    0x8(%rax),%rcx
ffffffff802094ea:	48 89 ca             	mov    %rcx,%rdx
ffffffff802094ed:	48 83 c1 08          	add    $0x8,%rcx
ffffffff802094f1:	48 89 48 08          	mov    %rcx,0x8(%rax)
ffffffff802094f5:	48 89 95 38 ff ff ff 	mov    %rdx,-0xc8(%rbp)
ffffffff802094fc:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
ffffffff80209503:	8b 08                	mov    (%rax),%ecx
ffffffff80209505:	89 4d c4             	mov    %ecx,-0x3c(%rbp)
ffffffff80209508:	e9 72 05 00 00       	jmpq   ffffffff80209a7f <vsnprintf+0x8ef>
ffffffff8020950d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff80209511:	48 89 c1             	mov    %rax,%rcx
ffffffff80209514:	48 ff c1             	inc    %rcx
ffffffff80209517:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
ffffffff8020951b:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
ffffffff8020951f:	0f b6 54 01 01       	movzbl 0x1(%rcx,%rax,1),%edx
ffffffff80209524:	83 ea 2a             	sub    $0x2a,%edx
ffffffff80209527:	89 95 34 ff ff ff    	mov    %edx,-0xcc(%rbp)
ffffffff8020952d:	75 67                	jne    ffffffff80209596 <vsnprintf+0x406>
ffffffff8020952f:	eb 00                	jmp    ffffffff80209531 <vsnprintf+0x3a1>
ffffffff80209531:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80209535:	8b 08                	mov    (%rax),%ecx
ffffffff80209537:	83 f9 28             	cmp    $0x28,%ecx
ffffffff8020953a:	48 89 85 28 ff ff ff 	mov    %rax,-0xd8(%rbp)
ffffffff80209541:	89 8d 24 ff ff ff    	mov    %ecx,-0xdc(%rbp)
ffffffff80209547:	77 22                	ja     ffffffff8020956b <vsnprintf+0x3db>
ffffffff80209549:	8b 85 24 ff ff ff    	mov    -0xdc(%rbp),%eax
ffffffff8020954f:	48 63 c8             	movslq %eax,%rcx
ffffffff80209552:	48 8b 95 28 ff ff ff 	mov    -0xd8(%rbp),%rdx
ffffffff80209559:	48 03 4a 10          	add    0x10(%rdx),%rcx
ffffffff8020955d:	83 c0 08             	add    $0x8,%eax
ffffffff80209560:	89 02                	mov    %eax,(%rdx)
ffffffff80209562:	48 89 8d 18 ff ff ff 	mov    %rcx,-0xe8(%rbp)
ffffffff80209569:	eb 1d                	jmp    ffffffff80209588 <vsnprintf+0x3f8>
ffffffff8020956b:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
ffffffff80209572:	48 8b 48 08          	mov    0x8(%rax),%rcx
ffffffff80209576:	48 89 ca             	mov    %rcx,%rdx
ffffffff80209579:	48 83 c1 08          	add    $0x8,%rcx
ffffffff8020957d:	48 89 48 08          	mov    %rcx,0x8(%rax)
ffffffff80209581:	48 89 95 18 ff ff ff 	mov    %rdx,-0xe8(%rbp)
ffffffff80209588:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
ffffffff8020958f:	8b 08                	mov    (%rax),%ecx
ffffffff80209591:	89 4d c0             	mov    %ecx,-0x40(%rbp)
ffffffff80209594:	eb 71                	jmp    ffffffff80209607 <vsnprintf+0x477>
ffffffff80209596:	eb 00                	jmp    ffffffff80209598 <vsnprintf+0x408>
ffffffff80209598:	31 c0                	xor    %eax,%eax
ffffffff8020959a:	88 c1                	mov    %al,%cl
ffffffff8020959c:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
ffffffff802095a0:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
ffffffff802095a4:	0f be 04 16          	movsbl (%rsi,%rdx,1),%eax
ffffffff802095a8:	83 e8 30             	sub    $0x30,%eax
ffffffff802095ab:	83 f8 09             	cmp    $0x9,%eax
ffffffff802095ae:	88 8d 17 ff ff ff    	mov    %cl,-0xe9(%rbp)
ffffffff802095b4:	7f 1d                	jg     ffffffff802095d3 <vsnprintf+0x443>
ffffffff802095b6:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff802095ba:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
ffffffff802095be:	0f be 14 01          	movsbl (%rcx,%rax,1),%edx
ffffffff802095c2:	83 ea 30             	sub    $0x30,%edx
ffffffff802095c5:	83 fa 00             	cmp    $0x0,%edx
ffffffff802095c8:	40 0f 9d c6          	setge  %sil
ffffffff802095cc:	40 88 b5 17 ff ff ff 	mov    %sil,-0xe9(%rbp)
ffffffff802095d3:	8a 85 17 ff ff ff    	mov    -0xe9(%rbp),%al
ffffffff802095d9:	a8 01                	test   $0x1,%al
ffffffff802095db:	75 02                	jne    ffffffff802095df <vsnprintf+0x44f>
ffffffff802095dd:	eb 26                	jmp    ffffffff80209605 <vsnprintf+0x475>
ffffffff802095df:	6b 45 c4 0a          	imul   $0xa,-0x3c(%rbp),%eax
ffffffff802095e3:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
ffffffff802095e7:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff802095eb:	0f be 34 0a          	movsbl (%rdx,%rcx,1),%esi
ffffffff802095ef:	83 ee 30             	sub    $0x30,%esi
ffffffff802095f2:	01 f0                	add    %esi,%eax
ffffffff802095f4:	89 45 c4             	mov    %eax,-0x3c(%rbp)
ffffffff802095f7:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
ffffffff802095fb:	48 83 c1 01          	add    $0x1,%rcx
ffffffff802095ff:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
ffffffff80209603:	eb 93                	jmp    ffffffff80209598 <vsnprintf+0x408>
ffffffff80209605:	eb 00                	jmp    ffffffff80209607 <vsnprintf+0x477>
ffffffff80209607:	e9 73 04 00 00       	jmpq   ffffffff80209a7f <vsnprintf+0x8ef>
ffffffff8020960c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80209610:	8b 08                	mov    (%rax),%ecx
ffffffff80209612:	83 f9 28             	cmp    $0x28,%ecx
ffffffff80209615:	48 89 85 08 ff ff ff 	mov    %rax,-0xf8(%rbp)
ffffffff8020961c:	89 8d 04 ff ff ff    	mov    %ecx,-0xfc(%rbp)
ffffffff80209622:	77 22                	ja     ffffffff80209646 <vsnprintf+0x4b6>
ffffffff80209624:	8b 85 04 ff ff ff    	mov    -0xfc(%rbp),%eax
ffffffff8020962a:	48 63 c8             	movslq %eax,%rcx
ffffffff8020962d:	48 8b 95 08 ff ff ff 	mov    -0xf8(%rbp),%rdx
ffffffff80209634:	48 03 4a 10          	add    0x10(%rdx),%rcx
ffffffff80209638:	83 c0 08             	add    $0x8,%eax
ffffffff8020963b:	89 02                	mov    %eax,(%rdx)
ffffffff8020963d:	48 89 8d f8 fe ff ff 	mov    %rcx,-0x108(%rbp)
ffffffff80209644:	eb 1d                	jmp    ffffffff80209663 <vsnprintf+0x4d3>
ffffffff80209646:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
ffffffff8020964d:	48 8b 48 08          	mov    0x8(%rax),%rcx
ffffffff80209651:	48 89 ca             	mov    %rcx,%rdx
ffffffff80209654:	48 83 c1 08          	add    $0x8,%rcx
ffffffff80209658:	48 89 48 08          	mov    %rcx,0x8(%rax)
ffffffff8020965c:	48 89 95 f8 fe ff ff 	mov    %rdx,-0x108(%rbp)
ffffffff80209663:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
ffffffff8020966a:	b9 0a 00 00 00       	mov    $0xa,%ecx
ffffffff8020966f:	48 63 38             	movslq (%rax),%rdi
ffffffff80209672:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
ffffffff80209676:	ba 0a 00 00 00       	mov    $0xa,%edx
ffffffff8020967b:	89 8d f4 fe ff ff    	mov    %ecx,-0x10c(%rbp)
ffffffff80209681:	e8 5a f6 ff ff       	callq  ffffffff80208ce0 <itoa>
ffffffff80209686:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
ffffffff8020968a:	48 29 f0             	sub    %rsi,%rax
ffffffff8020968d:	89 c1                	mov    %eax,%ecx
ffffffff8020968f:	89 4d bc             	mov    %ecx,-0x44(%rbp)
ffffffff80209692:	8b 4d bc             	mov    -0x44(%rbp),%ecx
ffffffff80209695:	83 c1 01             	add    $0x1,%ecx
ffffffff80209698:	89 4d bc             	mov    %ecx,-0x44(%rbp)
ffffffff8020969b:	8b 4d bc             	mov    -0x44(%rbp),%ecx
ffffffff8020969e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff802096a2:	48 63 f1             	movslq %ecx,%rsi
ffffffff802096a5:	48 01 f0             	add    %rsi,%rax
ffffffff802096a8:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff802096ac:	8b 45 bc             	mov    -0x44(%rbp),%eax
ffffffff802096af:	3b 45 c4             	cmp    -0x3c(%rbp),%eax
ffffffff802096b2:	7d 1f                	jge    ffffffff802096d3 <vsnprintf+0x543>
ffffffff802096b4:	8a 45 cb             	mov    -0x35(%rbp),%al
ffffffff802096b7:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
ffffffff802096bb:	48 89 ca             	mov    %rcx,%rdx
ffffffff802096be:	48 83 c2 01          	add    $0x1,%rdx
ffffffff802096c2:	48 89 55 f8          	mov    %rdx,-0x8(%rbp)
ffffffff802096c6:	88 01                	mov    %al,(%rcx)
ffffffff802096c8:	8b 75 bc             	mov    -0x44(%rbp),%esi
ffffffff802096cb:	83 c6 01             	add    $0x1,%esi
ffffffff802096ce:	89 75 bc             	mov    %esi,-0x44(%rbp)
ffffffff802096d1:	eb d9                	jmp    ffffffff802096ac <vsnprintf+0x51c>
ffffffff802096d3:	c7 45 cc 00 00 00 00 	movl   $0x0,-0x34(%rbp)
ffffffff802096da:	e9 a0 03 00 00       	jmpq   ffffffff80209a7f <vsnprintf+0x8ef>
ffffffff802096df:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff802096e3:	8b 08                	mov    (%rax),%ecx
ffffffff802096e5:	83 f9 28             	cmp    $0x28,%ecx
ffffffff802096e8:	48 89 85 e8 fe ff ff 	mov    %rax,-0x118(%rbp)
ffffffff802096ef:	89 8d e4 fe ff ff    	mov    %ecx,-0x11c(%rbp)
ffffffff802096f5:	77 22                	ja     ffffffff80209719 <vsnprintf+0x589>
ffffffff802096f7:	8b 85 e4 fe ff ff    	mov    -0x11c(%rbp),%eax
ffffffff802096fd:	48 63 c8             	movslq %eax,%rcx
ffffffff80209700:	48 8b 95 e8 fe ff ff 	mov    -0x118(%rbp),%rdx
ffffffff80209707:	48 03 4a 10          	add    0x10(%rdx),%rcx
ffffffff8020970b:	83 c0 08             	add    $0x8,%eax
ffffffff8020970e:	89 02                	mov    %eax,(%rdx)
ffffffff80209710:	48 89 8d d8 fe ff ff 	mov    %rcx,-0x128(%rbp)
ffffffff80209717:	eb 1d                	jmp    ffffffff80209736 <vsnprintf+0x5a6>
ffffffff80209719:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
ffffffff80209720:	48 8b 48 08          	mov    0x8(%rax),%rcx
ffffffff80209724:	48 89 ca             	mov    %rcx,%rdx
ffffffff80209727:	48 83 c1 08          	add    $0x8,%rcx
ffffffff8020972b:	48 89 48 08          	mov    %rcx,0x8(%rax)
ffffffff8020972f:	48 89 95 d8 fe ff ff 	mov    %rdx,-0x128(%rbp)
ffffffff80209736:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
ffffffff8020973d:	b9 0a 00 00 00       	mov    $0xa,%ecx
ffffffff80209742:	8b 10                	mov    (%rax),%edx
ffffffff80209744:	89 d7                	mov    %edx,%edi
ffffffff80209746:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
ffffffff8020974a:	ba 0a 00 00 00       	mov    $0xa,%edx
ffffffff8020974f:	89 8d d4 fe ff ff    	mov    %ecx,-0x12c(%rbp)
ffffffff80209755:	e8 e6 f7 ff ff       	callq  ffffffff80208f40 <utoa>
ffffffff8020975a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff8020975e:	c7 45 cc 00 00 00 00 	movl   $0x0,-0x34(%rbp)
ffffffff80209765:	e9 15 03 00 00       	jmpq   ffffffff80209a7f <vsnprintf+0x8ef>
ffffffff8020976a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8020976e:	8b 08                	mov    (%rax),%ecx
ffffffff80209770:	83 f9 28             	cmp    $0x28,%ecx
ffffffff80209773:	48 89 85 c8 fe ff ff 	mov    %rax,-0x138(%rbp)
ffffffff8020977a:	89 8d c4 fe ff ff    	mov    %ecx,-0x13c(%rbp)
ffffffff80209780:	77 22                	ja     ffffffff802097a4 <vsnprintf+0x614>
ffffffff80209782:	8b 85 c4 fe ff ff    	mov    -0x13c(%rbp),%eax
ffffffff80209788:	48 63 c8             	movslq %eax,%rcx
ffffffff8020978b:	48 8b 95 c8 fe ff ff 	mov    -0x138(%rbp),%rdx
ffffffff80209792:	48 03 4a 10          	add    0x10(%rdx),%rcx
ffffffff80209796:	83 c0 08             	add    $0x8,%eax
ffffffff80209799:	89 02                	mov    %eax,(%rdx)
ffffffff8020979b:	48 89 8d b8 fe ff ff 	mov    %rcx,-0x148(%rbp)
ffffffff802097a2:	eb 1d                	jmp    ffffffff802097c1 <vsnprintf+0x631>
ffffffff802097a4:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
ffffffff802097ab:	48 8b 48 08          	mov    0x8(%rax),%rcx
ffffffff802097af:	48 89 ca             	mov    %rcx,%rdx
ffffffff802097b2:	48 83 c1 08          	add    $0x8,%rcx
ffffffff802097b6:	48 89 48 08          	mov    %rcx,0x8(%rax)
ffffffff802097ba:	48 89 95 b8 fe ff ff 	mov    %rdx,-0x148(%rbp)
ffffffff802097c1:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
ffffffff802097c8:	b9 02 00 00 00       	mov    $0x2,%ecx
ffffffff802097cd:	8b 10                	mov    (%rax),%edx
ffffffff802097cf:	89 d7                	mov    %edx,%edi
ffffffff802097d1:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
ffffffff802097d5:	ba 02 00 00 00       	mov    $0x2,%edx
ffffffff802097da:	89 8d b4 fe ff ff    	mov    %ecx,-0x14c(%rbp)
ffffffff802097e0:	e8 5b f7 ff ff       	callq  ffffffff80208f40 <utoa>
ffffffff802097e5:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff802097e9:	c7 45 cc 00 00 00 00 	movl   $0x0,-0x34(%rbp)
ffffffff802097f0:	e9 8a 02 00 00       	jmpq   ffffffff80209a7f <vsnprintf+0x8ef>
ffffffff802097f5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff802097f9:	8b 08                	mov    (%rax),%ecx
ffffffff802097fb:	83 f9 28             	cmp    $0x28,%ecx
ffffffff802097fe:	48 89 85 a8 fe ff ff 	mov    %rax,-0x158(%rbp)
ffffffff80209805:	89 8d a4 fe ff ff    	mov    %ecx,-0x15c(%rbp)
ffffffff8020980b:	77 22                	ja     ffffffff8020982f <vsnprintf+0x69f>
ffffffff8020980d:	8b 85 a4 fe ff ff    	mov    -0x15c(%rbp),%eax
ffffffff80209813:	48 63 c8             	movslq %eax,%rcx
ffffffff80209816:	48 8b 95 a8 fe ff ff 	mov    -0x158(%rbp),%rdx
ffffffff8020981d:	48 03 4a 10          	add    0x10(%rdx),%rcx
ffffffff80209821:	83 c0 08             	add    $0x8,%eax
ffffffff80209824:	89 02                	mov    %eax,(%rdx)
ffffffff80209826:	48 89 8d 98 fe ff ff 	mov    %rcx,-0x168(%rbp)
ffffffff8020982d:	eb 1d                	jmp    ffffffff8020984c <vsnprintf+0x6bc>
ffffffff8020982f:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
ffffffff80209836:	48 8b 48 08          	mov    0x8(%rax),%rcx
ffffffff8020983a:	48 89 ca             	mov    %rcx,%rdx
ffffffff8020983d:	48 83 c1 08          	add    $0x8,%rcx
ffffffff80209841:	48 89 48 08          	mov    %rcx,0x8(%rax)
ffffffff80209845:	48 89 95 98 fe ff ff 	mov    %rdx,-0x168(%rbp)
ffffffff8020984c:	48 8b 85 98 fe ff ff 	mov    -0x168(%rbp),%rax
ffffffff80209853:	b9 08 00 00 00       	mov    $0x8,%ecx
ffffffff80209858:	8b 10                	mov    (%rax),%edx
ffffffff8020985a:	89 d7                	mov    %edx,%edi
ffffffff8020985c:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
ffffffff80209860:	ba 08 00 00 00       	mov    $0x8,%edx
ffffffff80209865:	89 8d 94 fe ff ff    	mov    %ecx,-0x16c(%rbp)
ffffffff8020986b:	e8 d0 f6 ff ff       	callq  ffffffff80208f40 <utoa>
ffffffff80209870:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff80209874:	c7 45 cc 00 00 00 00 	movl   $0x0,-0x34(%rbp)
ffffffff8020987b:	e9 ff 01 00 00       	jmpq   ffffffff80209a7f <vsnprintf+0x8ef>
ffffffff80209880:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80209884:	8b 08                	mov    (%rax),%ecx
ffffffff80209886:	83 f9 28             	cmp    $0x28,%ecx
ffffffff80209889:	48 89 85 88 fe ff ff 	mov    %rax,-0x178(%rbp)
ffffffff80209890:	89 8d 84 fe ff ff    	mov    %ecx,-0x17c(%rbp)
ffffffff80209896:	77 22                	ja     ffffffff802098ba <vsnprintf+0x72a>
ffffffff80209898:	8b 85 84 fe ff ff    	mov    -0x17c(%rbp),%eax
ffffffff8020989e:	48 63 c8             	movslq %eax,%rcx
ffffffff802098a1:	48 8b 95 88 fe ff ff 	mov    -0x178(%rbp),%rdx
ffffffff802098a8:	48 03 4a 10          	add    0x10(%rdx),%rcx
ffffffff802098ac:	83 c0 08             	add    $0x8,%eax
ffffffff802098af:	89 02                	mov    %eax,(%rdx)
ffffffff802098b1:	48 89 8d 78 fe ff ff 	mov    %rcx,-0x188(%rbp)
ffffffff802098b8:	eb 1d                	jmp    ffffffff802098d7 <vsnprintf+0x747>
ffffffff802098ba:	48 8b 85 88 fe ff ff 	mov    -0x178(%rbp),%rax
ffffffff802098c1:	48 8b 48 08          	mov    0x8(%rax),%rcx
ffffffff802098c5:	48 89 ca             	mov    %rcx,%rdx
ffffffff802098c8:	48 83 c1 08          	add    $0x8,%rcx
ffffffff802098cc:	48 89 48 08          	mov    %rcx,0x8(%rax)
ffffffff802098d0:	48 89 95 78 fe ff ff 	mov    %rdx,-0x188(%rbp)
ffffffff802098d7:	48 8b 85 78 fe ff ff 	mov    -0x188(%rbp),%rax
ffffffff802098de:	b9 10 00 00 00       	mov    $0x10,%ecx
ffffffff802098e3:	8b 10                	mov    (%rax),%edx
ffffffff802098e5:	89 d7                	mov    %edx,%edi
ffffffff802098e7:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
ffffffff802098eb:	ba 10 00 00 00       	mov    $0x10,%edx
ffffffff802098f0:	89 8d 74 fe ff ff    	mov    %ecx,-0x18c(%rbp)
ffffffff802098f6:	e8 45 f6 ff ff       	callq  ffffffff80208f40 <utoa>
ffffffff802098fb:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff802098ff:	c7 45 cc 00 00 00 00 	movl   $0x0,-0x34(%rbp)
ffffffff80209906:	e9 74 01 00 00       	jmpq   ffffffff80209a7f <vsnprintf+0x8ef>
ffffffff8020990b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8020990f:	48 83 c0 01          	add    $0x1,%rax
ffffffff80209913:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff80209917:	c7 45 cc 00 00 00 00 	movl   $0x0,-0x34(%rbp)
ffffffff8020991e:	e9 5c 01 00 00       	jmpq   ffffffff80209a7f <vsnprintf+0x8ef>
ffffffff80209923:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80209927:	8b 08                	mov    (%rax),%ecx
ffffffff80209929:	83 f9 28             	cmp    $0x28,%ecx
ffffffff8020992c:	48 89 85 68 fe ff ff 	mov    %rax,-0x198(%rbp)
ffffffff80209933:	89 8d 64 fe ff ff    	mov    %ecx,-0x19c(%rbp)
ffffffff80209939:	77 22                	ja     ffffffff8020995d <vsnprintf+0x7cd>
ffffffff8020993b:	8b 85 64 fe ff ff    	mov    -0x19c(%rbp),%eax
ffffffff80209941:	48 63 c8             	movslq %eax,%rcx
ffffffff80209944:	48 8b 95 68 fe ff ff 	mov    -0x198(%rbp),%rdx
ffffffff8020994b:	48 03 4a 10          	add    0x10(%rdx),%rcx
ffffffff8020994f:	83 c0 08             	add    $0x8,%eax
ffffffff80209952:	89 02                	mov    %eax,(%rdx)
ffffffff80209954:	48 89 8d 58 fe ff ff 	mov    %rcx,-0x1a8(%rbp)
ffffffff8020995b:	eb 1d                	jmp    ffffffff8020997a <vsnprintf+0x7ea>
ffffffff8020995d:	48 8b 85 68 fe ff ff 	mov    -0x198(%rbp),%rax
ffffffff80209964:	48 8b 48 08          	mov    0x8(%rax),%rcx
ffffffff80209968:	48 89 ca             	mov    %rcx,%rdx
ffffffff8020996b:	48 83 c1 08          	add    $0x8,%rcx
ffffffff8020996f:	48 89 48 08          	mov    %rcx,0x8(%rax)
ffffffff80209973:	48 89 95 58 fe ff ff 	mov    %rdx,-0x1a8(%rbp)
ffffffff8020997a:	48 8b 85 58 fe ff ff 	mov    -0x1a8(%rbp),%rax
ffffffff80209981:	8b 08                	mov    (%rax),%ecx
ffffffff80209983:	81 e1 ff 00 00 00    	and    $0xff,%ecx
ffffffff80209989:	88 ca                	mov    %cl,%dl
ffffffff8020998b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8020998f:	48 89 c6             	mov    %rax,%rsi
ffffffff80209992:	48 83 c6 01          	add    $0x1,%rsi
ffffffff80209996:	48 89 75 f8          	mov    %rsi,-0x8(%rbp)
ffffffff8020999a:	88 10                	mov    %dl,(%rax)
ffffffff8020999c:	c7 45 cc 00 00 00 00 	movl   $0x0,-0x34(%rbp)
ffffffff802099a3:	e9 d7 00 00 00       	jmpq   ffffffff80209a7f <vsnprintf+0x8ef>
ffffffff802099a8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff802099ac:	8b 08                	mov    (%rax),%ecx
ffffffff802099ae:	83 f9 28             	cmp    $0x28,%ecx
ffffffff802099b1:	48 89 85 50 fe ff ff 	mov    %rax,-0x1b0(%rbp)
ffffffff802099b8:	89 8d 4c fe ff ff    	mov    %ecx,-0x1b4(%rbp)
ffffffff802099be:	77 22                	ja     ffffffff802099e2 <vsnprintf+0x852>
ffffffff802099c0:	8b 85 4c fe ff ff    	mov    -0x1b4(%rbp),%eax
ffffffff802099c6:	48 63 c8             	movslq %eax,%rcx
ffffffff802099c9:	48 8b 95 50 fe ff ff 	mov    -0x1b0(%rbp),%rdx
ffffffff802099d0:	48 03 4a 10          	add    0x10(%rdx),%rcx
ffffffff802099d4:	83 c0 08             	add    $0x8,%eax
ffffffff802099d7:	89 02                	mov    %eax,(%rdx)
ffffffff802099d9:	48 89 8d 40 fe ff ff 	mov    %rcx,-0x1c0(%rbp)
ffffffff802099e0:	eb 1d                	jmp    ffffffff802099ff <vsnprintf+0x86f>
ffffffff802099e2:	48 8b 85 50 fe ff ff 	mov    -0x1b0(%rbp),%rax
ffffffff802099e9:	48 8b 48 08          	mov    0x8(%rax),%rcx
ffffffff802099ed:	48 89 ca             	mov    %rcx,%rdx
ffffffff802099f0:	48 83 c1 08          	add    $0x8,%rcx
ffffffff802099f4:	48 89 48 08          	mov    %rcx,0x8(%rax)
ffffffff802099f8:	48 89 95 40 fe ff ff 	mov    %rdx,-0x1c0(%rbp)
ffffffff802099ff:	48 8b 85 40 fe ff ff 	mov    -0x1c0(%rbp),%rax
ffffffff80209a06:	48 8b 00             	mov    (%rax),%rax
ffffffff80209a09:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
ffffffff80209a0d:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
ffffffff80209a11:	48 8b 75 b0          	mov    -0x50(%rbp),%rsi
ffffffff80209a15:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
ffffffff80209a19:	48 89 bd 38 fe ff ff 	mov    %rdi,-0x1c8(%rbp)
ffffffff80209a20:	48 89 c7             	mov    %rax,%rdi
ffffffff80209a23:	48 89 b5 30 fe ff ff 	mov    %rsi,-0x1d0(%rbp)
ffffffff80209a2a:	e8 f1 ee ff ff       	callq  ffffffff80208920 <strlen>
ffffffff80209a2f:	48 8b bd 38 fe ff ff 	mov    -0x1c8(%rbp),%rdi
ffffffff80209a36:	48 8b b5 30 fe ff ff 	mov    -0x1d0(%rbp),%rsi
ffffffff80209a3d:	48 89 c2             	mov    %rax,%rdx
ffffffff80209a40:	e8 bb ec ff ff       	callq  ffffffff80208700 <memcpy>
ffffffff80209a45:	48 8b 7d b0          	mov    -0x50(%rbp),%rdi
ffffffff80209a49:	48 89 85 28 fe ff ff 	mov    %rax,-0x1d8(%rbp)
ffffffff80209a50:	e8 cb ee ff ff       	callq  ffffffff80208920 <strlen>
ffffffff80209a55:	48 03 45 f8          	add    -0x8(%rbp),%rax
ffffffff80209a59:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff80209a5d:	c7 45 cc 00 00 00 00 	movl   $0x0,-0x34(%rbp)
ffffffff80209a64:	eb 19                	jmp    ffffffff80209a7f <vsnprintf+0x8ef>
ffffffff80209a66:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80209a6a:	48 89 c1             	mov    %rax,%rcx
ffffffff80209a6d:	48 83 c1 01          	add    $0x1,%rcx
ffffffff80209a71:	48 89 4d f8          	mov    %rcx,-0x8(%rbp)
ffffffff80209a75:	c6 00 25             	movb   $0x25,(%rax)
ffffffff80209a78:	c7 45 cc 00 00 00 00 	movl   $0x0,-0x34(%rbp)
ffffffff80209a7f:	e9 06 f8 ff ff       	jmpq   ffffffff8020928a <vsnprintf+0xfa>
ffffffff80209a84:	eb 00                	jmp    ffffffff80209a86 <vsnprintf+0x8f6>
ffffffff80209a86:	eb 00                	jmp    ffffffff80209a88 <vsnprintf+0x8f8>
ffffffff80209a88:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff80209a8c:	48 83 c0 01          	add    $0x1,%rax
ffffffff80209a90:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
ffffffff80209a94:	e9 7b f7 ff ff       	jmpq   ffffffff80209214 <vsnprintf+0x84>
ffffffff80209a99:	31 c0                	xor    %eax,%eax
ffffffff80209a9b:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
ffffffff80209a9f:	c6 01 00             	movb   $0x0,(%rcx)
ffffffff80209aa2:	48 81 c4 e0 01 00 00 	add    $0x1e0,%rsp
ffffffff80209aa9:	5d                   	pop    %rbp
ffffffff80209aaa:	c3                   	retq   
ffffffff80209aab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

ffffffff80209ab0 <sprintf>:
ffffffff80209ab0:	55                   	push   %rbp
ffffffff80209ab1:	48 89 e5             	mov    %rsp,%rbp
ffffffff80209ab4:	48 83 ec 70          	sub    $0x70,%rsp
ffffffff80209ab8:	4c 89 4d c8          	mov    %r9,-0x38(%rbp)
ffffffff80209abc:	4c 89 45 c0          	mov    %r8,-0x40(%rbp)
ffffffff80209ac0:	48 89 4d b8          	mov    %rcx,-0x48(%rbp)
ffffffff80209ac4:	48 89 55 b0          	mov    %rdx,-0x50(%rbp)
ffffffff80209ac8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff80209acc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff80209ad0:	48 8d 4d a0          	lea    -0x60(%rbp),%rcx
ffffffff80209ad4:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
ffffffff80209ad8:	48 8d 4d 10          	lea    0x10(%rbp),%rcx
ffffffff80209adc:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
ffffffff80209ae0:	c7 45 d4 30 00 00 00 	movl   $0x30,-0x2c(%rbp)
ffffffff80209ae7:	c7 45 d0 10 00 00 00 	movl   $0x10,-0x30(%rbp)
ffffffff80209aee:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
ffffffff80209af2:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
ffffffff80209af6:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
ffffffff80209afa:	e8 91 f6 ff ff       	callq  ffffffff80209190 <vsnprintf>
ffffffff80209aff:	45 31 d2             	xor    %r10d,%r10d
ffffffff80209b02:	89 45 9c             	mov    %eax,-0x64(%rbp)
ffffffff80209b05:	44 89 d0             	mov    %r10d,%eax
ffffffff80209b08:	48 83 c4 70          	add    $0x70,%rsp
ffffffff80209b0c:	5d                   	pop    %rbp
ffffffff80209b0d:	c3                   	retq   
ffffffff80209b0e:	66 90                	xchg   %ax,%ax

ffffffff80209b10 <List_Create>:
ffffffff80209b10:	55                   	push   %rbp
ffffffff80209b11:	48 89 e5             	mov    %rsp,%rbp
ffffffff80209b14:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff80209b18:	b8 30 00 00 00       	mov    $0x30,%eax
ffffffff80209b1d:	89 c1                	mov    %eax,%ecx
ffffffff80209b1f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff80209b23:	b8 30 00 00 00       	mov    $0x30,%eax
ffffffff80209b28:	89 c7                	mov    %eax,%edi
ffffffff80209b2a:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
ffffffff80209b2e:	e8 cd 19 00 00       	callq  ffffffff8020b500 <kmalloc>
ffffffff80209b33:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff80209b37:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
ffffffff80209b3b:	e8 20 8a ff ff       	callq  ffffffff80202560 <LockSpinlock>
ffffffff80209b40:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
ffffffff80209b44:	48 c7 01 00 00 00 00 	movq   $0x0,(%rcx)
ffffffff80209b4b:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
ffffffff80209b4f:	48 c7 41 08 00 00 00 	movq   $0x0,0x8(%rcx)
ffffffff80209b56:	00 
ffffffff80209b57:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
ffffffff80209b5b:	48 c7 41 10 00 00 00 	movq   $0x0,0x10(%rcx)
ffffffff80209b62:	00 
ffffffff80209b63:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
ffffffff80209b67:	48 c7 41 18 00 00 00 	movq   $0x0,0x18(%rcx)
ffffffff80209b6e:	00 
ffffffff80209b6f:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
ffffffff80209b73:	48 c7 41 20 00 00 00 	movq   $0x0,0x20(%rcx)
ffffffff80209b7a:	00 
ffffffff80209b7b:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
ffffffff80209b7f:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
ffffffff80209b83:	48 89 4f 28          	mov    %rcx,0x28(%rdi)
ffffffff80209b87:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
ffffffff80209b8b:	88 45 e7             	mov    %al,-0x19(%rbp)
ffffffff80209b8e:	e8 9d 8a ff ff       	callq  ffffffff80202630 <UnlockSpinlock>
ffffffff80209b93:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
ffffffff80209b97:	88 45 e6             	mov    %al,-0x1a(%rbp)
ffffffff80209b9a:	48 89 c8             	mov    %rcx,%rax
ffffffff80209b9d:	48 83 c4 20          	add    $0x20,%rsp
ffffffff80209ba1:	5d                   	pop    %rbp
ffffffff80209ba2:	c3                   	retq   
ffffffff80209ba3:	0f 1f 00             	nopl   (%rax)
ffffffff80209ba6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80209bad:	00 00 00 

ffffffff80209bb0 <List_AddEntry>:
ffffffff80209bb0:	55                   	push   %rbp
ffffffff80209bb1:	48 89 e5             	mov    %rsp,%rbp
ffffffff80209bb4:	48 83 ec 30          	sub    $0x30,%rsp
ffffffff80209bb8:	b8 18 00 00 00       	mov    $0x18,%eax
ffffffff80209bbd:	89 c1                	mov    %eax,%ecx
ffffffff80209bbf:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
ffffffff80209bc3:	48 89 75 e8          	mov    %rsi,-0x18(%rbp)
ffffffff80209bc7:	b8 18 00 00 00       	mov    $0x18,%eax
ffffffff80209bcc:	89 c7                	mov    %eax,%edi
ffffffff80209bce:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
ffffffff80209bd2:	e8 29 19 00 00       	callq  ffffffff8020b500 <kmalloc>
ffffffff80209bd7:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
ffffffff80209bdb:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
ffffffff80209be0:	75 0c                	jne    ffffffff80209bee <List_AddEntry+0x3e>
ffffffff80209be2:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%rbp)
ffffffff80209be9:	e9 c4 00 00 00       	jmpq   ffffffff80209cb2 <List_AddEntry+0x102>
ffffffff80209bee:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80209bf2:	48 8b 78 28          	mov    0x28(%rax),%rdi
ffffffff80209bf6:	e8 65 89 ff ff       	callq  ffffffff80202560 <LockSpinlock>
ffffffff80209bfb:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
ffffffff80209bff:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
ffffffff80209c03:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
ffffffff80209c07:	48 89 79 10          	mov    %rdi,0x10(%rcx)
ffffffff80209c0b:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
ffffffff80209c0f:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
ffffffff80209c13:	48 89 0f             	mov    %rcx,(%rdi)
ffffffff80209c16:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
ffffffff80209c1a:	48 c7 41 08 00 00 00 	movq   $0x0,0x8(%rcx)
ffffffff80209c21:	00 
ffffffff80209c22:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
ffffffff80209c26:	48 83 79 08 00       	cmpq   $0x0,0x8(%rcx)
ffffffff80209c2b:	88 45 d7             	mov    %al,-0x29(%rbp)
ffffffff80209c2e:	74 10                	je     ffffffff80209c40 <List_AddEntry+0x90>
ffffffff80209c30:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80209c34:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
ffffffff80209c38:	48 8b 49 08          	mov    0x8(%rcx),%rcx
ffffffff80209c3c:	48 89 41 08          	mov    %rax,0x8(%rcx)
ffffffff80209c40:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff80209c44:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
ffffffff80209c48:	48 89 41 08          	mov    %rax,0x8(%rcx)
ffffffff80209c4c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80209c50:	48 83 38 00          	cmpq   $0x0,(%rax)
ffffffff80209c54:	75 0f                	jne    ffffffff80209c65 <List_AddEntry+0xb5>
ffffffff80209c56:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80209c5a:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff80209c5e:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
ffffffff80209c62:	48 89 01             	mov    %rax,(%rcx)
ffffffff80209c65:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80209c69:	48 83 78 10 00       	cmpq   $0x0,0x10(%rax)
ffffffff80209c6e:	75 1b                	jne    ffffffff80209c8b <List_AddEntry+0xdb>
ffffffff80209c70:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80209c74:	48 8b 00             	mov    (%rax),%rax
ffffffff80209c77:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
ffffffff80209c7b:	48 89 41 10          	mov    %rax,0x10(%rcx)
ffffffff80209c7f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80209c83:	48 c7 40 18 00 00 00 	movq   $0x0,0x18(%rax)
ffffffff80209c8a:	00 
ffffffff80209c8b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80209c8f:	48 8b 48 20          	mov    0x20(%rax),%rcx
ffffffff80209c93:	48 83 c1 01          	add    $0x1,%rcx
ffffffff80209c97:	48 89 48 20          	mov    %rcx,0x20(%rax)
ffffffff80209c9b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80209c9f:	48 8b 78 28          	mov    0x28(%rax),%rdi
ffffffff80209ca3:	e8 88 89 ff ff       	callq  ffffffff80202630 <UnlockSpinlock>
ffffffff80209ca8:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
ffffffff80209caf:	88 45 d6             	mov    %al,-0x2a(%rbp)
ffffffff80209cb2:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff80209cb5:	48 83 c4 30          	add    $0x30,%rsp
ffffffff80209cb9:	5d                   	pop    %rbp
ffffffff80209cba:	c3                   	retq   
ffffffff80209cbb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

ffffffff80209cc0 <List_Length>:
ffffffff80209cc0:	55                   	push   %rbp
ffffffff80209cc1:	48 89 e5             	mov    %rsp,%rbp
ffffffff80209cc4:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff80209cc8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff80209ccc:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
ffffffff80209cd0:	48 8b 7f 28          	mov    0x28(%rdi),%rdi
ffffffff80209cd4:	e8 87 88 ff ff       	callq  ffffffff80202560 <LockSpinlock>
ffffffff80209cd9:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
ffffffff80209cdd:	48 8b 7f 20          	mov    0x20(%rdi),%rdi
ffffffff80209ce1:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
ffffffff80209ce5:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
ffffffff80209ce9:	48 8b 7f 28          	mov    0x28(%rdi),%rdi
ffffffff80209ced:	88 45 ef             	mov    %al,-0x11(%rbp)
ffffffff80209cf0:	e8 3b 89 ff ff       	callq  ffffffff80202630 <UnlockSpinlock>
ffffffff80209cf5:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
ffffffff80209cf9:	88 45 ee             	mov    %al,-0x12(%rbp)
ffffffff80209cfc:	48 89 f8             	mov    %rdi,%rax
ffffffff80209cff:	48 83 c4 20          	add    $0x20,%rsp
ffffffff80209d03:	5d                   	pop    %rbp
ffffffff80209d04:	c3                   	retq   
ffffffff80209d05:	90                   	nop
ffffffff80209d06:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80209d0d:	00 00 00 

ffffffff80209d10 <List_Remove>:
ffffffff80209d10:	55                   	push   %rbp
ffffffff80209d11:	48 89 e5             	mov    %rsp,%rbp
ffffffff80209d14:	48 83 ec 30          	sub    $0x30,%rsp
ffffffff80209d18:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff80209d1c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff80209d20:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
ffffffff80209d24:	48 83 7e 20 00       	cmpq   $0x0,0x20(%rsi)
ffffffff80209d29:	0f 94 c0             	sete   %al
ffffffff80209d2c:	24 01                	and    $0x1,%al
ffffffff80209d2e:	0f b6 c8             	movzbl %al,%ecx
ffffffff80209d31:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
ffffffff80209d35:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
ffffffff80209d39:	48 3b 77 20          	cmp    0x20(%rdi),%rsi
ffffffff80209d3d:	0f 93 c0             	setae  %al
ffffffff80209d40:	24 01                	and    $0x1,%al
ffffffff80209d42:	0f b6 d0             	movzbl %al,%edx
ffffffff80209d45:	09 d1                	or     %edx,%ecx
ffffffff80209d47:	83 f9 00             	cmp    $0x0,%ecx
ffffffff80209d4a:	74 05                	je     ffffffff80209d51 <List_Remove+0x41>
ffffffff80209d4c:	e9 11 01 00 00       	jmpq   ffffffff80209e62 <List_Remove+0x152>
ffffffff80209d51:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
ffffffff80209d55:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
ffffffff80209d59:	e8 12 01 00 00       	callq  ffffffff80209e70 <List_EntryAt>
ffffffff80209d5e:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
ffffffff80209d62:	48 8b 7e 28          	mov    0x28(%rsi),%rdi
ffffffff80209d66:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
ffffffff80209d6a:	e8 f1 87 ff ff       	callq  ffffffff80202560 <LockSpinlock>
ffffffff80209d6f:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
ffffffff80209d73:	48 8b 76 10          	mov    0x10(%rsi),%rsi
ffffffff80209d77:	48 89 75 e8          	mov    %rsi,-0x18(%rbp)
ffffffff80209d7b:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
ffffffff80209d7f:	48 8b 76 10          	mov    0x10(%rsi),%rsi
ffffffff80209d83:	48 83 7e 10 00       	cmpq   $0x0,0x10(%rsi)
ffffffff80209d88:	88 45 df             	mov    %al,-0x21(%rbp)
ffffffff80209d8b:	74 1c                	je     ffffffff80209da9 <List_Remove+0x99>
ffffffff80209d8d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80209d91:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff80209d95:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff80209d99:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
ffffffff80209d9d:	48 8b 49 10          	mov    0x10(%rcx),%rcx
ffffffff80209da1:	48 8b 49 10          	mov    0x10(%rcx),%rcx
ffffffff80209da5:	48 89 41 08          	mov    %rax,0x8(%rcx)
ffffffff80209da9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80209dad:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff80209db1:	48 83 78 08 00       	cmpq   $0x0,0x8(%rax)
ffffffff80209db6:	74 1c                	je     ffffffff80209dd4 <List_Remove+0xc4>
ffffffff80209db8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80209dbc:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff80209dc0:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff80209dc4:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
ffffffff80209dc8:	48 8b 49 10          	mov    0x10(%rcx),%rcx
ffffffff80209dcc:	48 8b 49 08          	mov    0x8(%rcx),%rcx
ffffffff80209dd0:	48 89 41 10          	mov    %rax,0x10(%rcx)
ffffffff80209dd4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80209dd8:	48 8b 00             	mov    (%rax),%rax
ffffffff80209ddb:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
ffffffff80209ddf:	48 3b 41 10          	cmp    0x10(%rcx),%rax
ffffffff80209de3:	75 13                	jne    ffffffff80209df8 <List_Remove+0xe8>
ffffffff80209de5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80209de9:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff80209ded:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff80209df1:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
ffffffff80209df5:	48 89 01             	mov    %rax,(%rcx)
ffffffff80209df8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80209dfc:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff80209e00:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
ffffffff80209e04:	48 3b 41 10          	cmp    0x10(%rcx),%rax
ffffffff80209e08:	75 14                	jne    ffffffff80209e1e <List_Remove+0x10e>
ffffffff80209e0a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80209e0e:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff80209e12:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff80209e16:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
ffffffff80209e1a:	48 89 41 08          	mov    %rax,0x8(%rcx)
ffffffff80209e1e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80209e22:	48 8b 00             	mov    (%rax),%rax
ffffffff80209e25:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
ffffffff80209e29:	48 89 41 10          	mov    %rax,0x10(%rcx)
ffffffff80209e2d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80209e31:	48 c7 40 18 00 00 00 	movq   $0x0,0x18(%rax)
ffffffff80209e38:	00 
ffffffff80209e39:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
ffffffff80209e3d:	e8 4e 19 00 00       	callq  ffffffff8020b790 <kfree>
ffffffff80209e42:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80209e46:	48 8b 48 20          	mov    0x20(%rax),%rcx
ffffffff80209e4a:	48 83 c1 ff          	add    $0xffffffffffffffff,%rcx
ffffffff80209e4e:	48 89 48 20          	mov    %rcx,0x20(%rax)
ffffffff80209e52:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80209e56:	48 8b 78 28          	mov    0x28(%rax),%rdi
ffffffff80209e5a:	e8 d1 87 ff ff       	callq  ffffffff80202630 <UnlockSpinlock>
ffffffff80209e5f:	88 45 de             	mov    %al,-0x22(%rbp)
ffffffff80209e62:	48 83 c4 30          	add    $0x30,%rsp
ffffffff80209e66:	5d                   	pop    %rbp
ffffffff80209e67:	c3                   	retq   
ffffffff80209e68:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff80209e6f:	00 

ffffffff80209e70 <List_EntryAt>:
ffffffff80209e70:	55                   	push   %rbp
ffffffff80209e71:	48 89 e5             	mov    %rsp,%rbp
ffffffff80209e74:	48 83 ec 30          	sub    $0x30,%rsp
ffffffff80209e78:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
ffffffff80209e7c:	48 89 75 e8          	mov    %rsi,-0x18(%rbp)
ffffffff80209e80:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
ffffffff80209e84:	48 8b 7e 28          	mov    0x28(%rsi),%rdi
ffffffff80209e88:	e8 d3 86 ff ff       	callq  ffffffff80202560 <LockSpinlock>
ffffffff80209e8d:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
ffffffff80209e91:	48 8b 76 18          	mov    0x18(%rsi),%rsi
ffffffff80209e95:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
ffffffff80209e99:	48 3b 77 20          	cmp    0x20(%rdi),%rsi
ffffffff80209e9d:	88 45 df             	mov    %al,-0x21(%rbp)
ffffffff80209ea0:	72 1b                	jb     ffffffff80209ebd <List_EntryAt+0x4d>
ffffffff80209ea2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80209ea6:	48 c7 40 18 00 00 00 	movq   $0x0,0x18(%rax)
ffffffff80209ead:	00 
ffffffff80209eae:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80209eb2:	48 8b 00             	mov    (%rax),%rax
ffffffff80209eb5:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
ffffffff80209eb9:	48 89 41 10          	mov    %rax,0x10(%rcx)
ffffffff80209ebd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff80209ec1:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
ffffffff80209ec5:	48 3b 41 20          	cmp    0x20(%rcx),%rax
ffffffff80209ec9:	72 0d                	jb     ffffffff80209ed8 <List_EntryAt+0x68>
ffffffff80209ecb:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
ffffffff80209ed2:	00 
ffffffff80209ed3:	e9 93 00 00 00       	jmpq   ffffffff80209f6b <List_EntryAt+0xfb>
ffffffff80209ed8:	eb 00                	jmp    ffffffff80209eda <List_EntryAt+0x6a>
ffffffff80209eda:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80209ede:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff80209ee2:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
ffffffff80209ee6:	76 26                	jbe    ffffffff80209f0e <List_EntryAt+0x9e>
ffffffff80209ee8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80209eec:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff80209ef0:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff80209ef4:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
ffffffff80209ef8:	48 89 41 10          	mov    %rax,0x10(%rcx)
ffffffff80209efc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80209f00:	48 8b 48 18          	mov    0x18(%rax),%rcx
ffffffff80209f04:	48 83 c1 ff          	add    $0xffffffffffffffff,%rcx
ffffffff80209f08:	48 89 48 18          	mov    %rcx,0x18(%rax)
ffffffff80209f0c:	eb cc                	jmp    ffffffff80209eda <List_EntryAt+0x6a>
ffffffff80209f0e:	eb 00                	jmp    ffffffff80209f10 <List_EntryAt+0xa0>
ffffffff80209f10:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80209f14:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff80209f18:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
ffffffff80209f1c:	73 26                	jae    ffffffff80209f44 <List_EntryAt+0xd4>
ffffffff80209f1e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80209f22:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff80209f26:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff80209f2a:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
ffffffff80209f2e:	48 89 41 10          	mov    %rax,0x10(%rcx)
ffffffff80209f32:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80209f36:	48 8b 48 18          	mov    0x18(%rax),%rcx
ffffffff80209f3a:	48 83 c1 01          	add    $0x1,%rcx
ffffffff80209f3e:	48 89 48 18          	mov    %rcx,0x18(%rax)
ffffffff80209f42:	eb cc                	jmp    ffffffff80209f10 <List_EntryAt+0xa0>
ffffffff80209f44:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80209f48:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff80209f4c:	48 8b 00             	mov    (%rax),%rax
ffffffff80209f4f:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
ffffffff80209f53:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff80209f57:	48 8b 78 28          	mov    0x28(%rax),%rdi
ffffffff80209f5b:	e8 d0 86 ff ff       	callq  ffffffff80202630 <UnlockSpinlock>
ffffffff80209f60:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
ffffffff80209f64:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff80209f68:	88 45 de             	mov    %al,-0x22(%rbp)
ffffffff80209f6b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80209f6f:	48 83 c4 30          	add    $0x30,%rsp
ffffffff80209f73:	5d                   	pop    %rbp
ffffffff80209f74:	c3                   	retq   
ffffffff80209f75:	90                   	nop
ffffffff80209f76:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff80209f7d:	00 00 00 

ffffffff80209f80 <List_Free>:
ffffffff80209f80:	55                   	push   %rbp
ffffffff80209f81:	48 89 e5             	mov    %rsp,%rbp
ffffffff80209f84:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff80209f88:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff80209f8c:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
ffffffff80209f90:	e8 2b fd ff ff       	callq  ffffffff80209cc0 <List_Length>
ffffffff80209f95:	48 83 f8 00          	cmp    $0x0,%rax
ffffffff80209f99:	76 17                	jbe    ffffffff80209fb2 <List_Free+0x32>
ffffffff80209f9b:	31 c0                	xor    %eax,%eax
ffffffff80209f9d:	89 c1                	mov    %eax,%ecx
ffffffff80209f9f:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
ffffffff80209fa3:	31 c0                	xor    %eax,%eax
ffffffff80209fa5:	89 c6                	mov    %eax,%esi
ffffffff80209fa7:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
ffffffff80209fab:	e8 60 fd ff ff       	callq  ffffffff80209d10 <List_Remove>
ffffffff80209fb0:	eb da                	jmp    ffffffff80209f8c <List_Free+0xc>
ffffffff80209fb2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80209fb6:	48 8b 40 28          	mov    0x28(%rax),%rax
ffffffff80209fba:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff80209fbe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff80209fc2:	48 89 c7             	mov    %rax,%rdi
ffffffff80209fc5:	e8 c6 17 00 00       	callq  ffffffff8020b790 <kfree>
ffffffff80209fca:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
ffffffff80209fce:	e8 ad 86 ff ff       	callq  ffffffff80202680 <FreeSpinlock>
ffffffff80209fd3:	48 83 c4 20          	add    $0x20,%rsp
ffffffff80209fd7:	5d                   	pop    %rbp
ffffffff80209fd8:	c3                   	retq   
ffffffff80209fd9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

ffffffff80209fe0 <List_Next>:
ffffffff80209fe0:	55                   	push   %rbp
ffffffff80209fe1:	48 89 e5             	mov    %rsp,%rbp
ffffffff80209fe4:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff80209fe8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff80209fec:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
ffffffff80209ff0:	48 8b 7f 28          	mov    0x28(%rdi),%rdi
ffffffff80209ff4:	e8 67 85 ff ff       	callq  ffffffff80202560 <LockSpinlock>
ffffffff80209ff9:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
ffffffff80209ffd:	48 8b 7f 18          	mov    0x18(%rdi),%rdi
ffffffff8020a001:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
ffffffff8020a005:	48 8b 49 20          	mov    0x20(%rcx),%rcx
ffffffff8020a009:	48 83 e9 01          	sub    $0x1,%rcx
ffffffff8020a00d:	48 39 cf             	cmp    %rcx,%rdi
ffffffff8020a010:	88 45 ef             	mov    %al,-0x11(%rbp)
ffffffff8020a013:	73 24                	jae    ffffffff8020a039 <List_Next+0x59>
ffffffff8020a015:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8020a019:	48 8b 48 18          	mov    0x18(%rax),%rcx
ffffffff8020a01d:	48 83 c1 01          	add    $0x1,%rcx
ffffffff8020a021:	48 89 48 18          	mov    %rcx,0x18(%rax)
ffffffff8020a025:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8020a029:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff8020a02d:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff8020a031:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
ffffffff8020a035:	48 89 41 10          	mov    %rax,0x10(%rcx)
ffffffff8020a039:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8020a03d:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff8020a041:	48 8b 00             	mov    (%rax),%rax
ffffffff8020a044:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff8020a048:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8020a04c:	48 8b 78 28          	mov    0x28(%rax),%rdi
ffffffff8020a050:	e8 db 85 ff ff       	callq  ffffffff80202630 <UnlockSpinlock>
ffffffff8020a055:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
ffffffff8020a059:	88 45 ee             	mov    %al,-0x12(%rbp)
ffffffff8020a05c:	48 89 f8             	mov    %rdi,%rax
ffffffff8020a05f:	48 83 c4 20          	add    $0x20,%rsp
ffffffff8020a063:	5d                   	pop    %rbp
ffffffff8020a064:	c3                   	retq   
ffffffff8020a065:	90                   	nop
ffffffff8020a066:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8020a06d:	00 00 00 

ffffffff8020a070 <List_Prev>:
ffffffff8020a070:	55                   	push   %rbp
ffffffff8020a071:	48 89 e5             	mov    %rsp,%rbp
ffffffff8020a074:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff8020a078:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8020a07c:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
ffffffff8020a080:	48 8b 7f 28          	mov    0x28(%rdi),%rdi
ffffffff8020a084:	e8 d7 84 ff ff       	callq  ffffffff80202560 <LockSpinlock>
ffffffff8020a089:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
ffffffff8020a08d:	48 83 7f 18 00       	cmpq   $0x0,0x18(%rdi)
ffffffff8020a092:	88 45 ef             	mov    %al,-0x11(%rbp)
ffffffff8020a095:	76 24                	jbe    ffffffff8020a0bb <List_Prev+0x4b>
ffffffff8020a097:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8020a09b:	48 8b 48 18          	mov    0x18(%rax),%rcx
ffffffff8020a09f:	48 83 c1 ff          	add    $0xffffffffffffffff,%rcx
ffffffff8020a0a3:	48 89 48 18          	mov    %rcx,0x18(%rax)
ffffffff8020a0a7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8020a0ab:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff8020a0af:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff8020a0b3:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
ffffffff8020a0b7:	48 89 41 10          	mov    %rax,0x10(%rcx)
ffffffff8020a0bb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8020a0bf:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff8020a0c3:	48 8b 00             	mov    (%rax),%rax
ffffffff8020a0c6:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff8020a0ca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8020a0ce:	48 8b 78 28          	mov    0x28(%rax),%rdi
ffffffff8020a0d2:	e8 59 85 ff ff       	callq  ffffffff80202630 <UnlockSpinlock>
ffffffff8020a0d7:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
ffffffff8020a0db:	88 45 ee             	mov    %al,-0x12(%rbp)
ffffffff8020a0de:	48 89 f8             	mov    %rdi,%rax
ffffffff8020a0e1:	48 83 c4 20          	add    $0x20,%rsp
ffffffff8020a0e5:	5d                   	pop    %rbp
ffffffff8020a0e6:	c3                   	retq   
ffffffff8020a0e7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff8020a0ee:	00 00 

ffffffff8020a0f0 <VerifyElf>:
ffffffff8020a0f0:	55                   	push   %rbp
ffffffff8020a0f1:	48 89 e5             	mov    %rsp,%rbp
ffffffff8020a0f4:	48 83 ec 38          	sub    $0x38,%rsp
ffffffff8020a0f8:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
ffffffff8020a0fc:	48 89 75 e8          	mov    %rsi,-0x18(%rbp)
ffffffff8020a100:	48 89 55 e0          	mov    %rdx,-0x20(%rbp)
ffffffff8020a104:	89 4d dc             	mov    %ecx,-0x24(%rbp)
ffffffff8020a107:	48 83 7d e8 18       	cmpq   $0x18,-0x18(%rbp)
ffffffff8020a10c:	73 0c                	jae    ffffffff8020a11a <VerifyElf+0x2a>
ffffffff8020a10e:	c7 45 fc 02 00 00 00 	movl   $0x2,-0x4(%rbp)
ffffffff8020a115:	e9 58 01 00 00       	jmpq   ffffffff8020a272 <VerifyElf+0x182>
ffffffff8020a11a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8020a11e:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
ffffffff8020a122:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff8020a126:	0f b6 08             	movzbl (%rax),%ecx
ffffffff8020a129:	83 f9 7f             	cmp    $0x7f,%ecx
ffffffff8020a12c:	74 0c                	je     ffffffff8020a13a <VerifyElf+0x4a>
ffffffff8020a12e:	c7 45 fc 02 00 00 00 	movl   $0x2,-0x4(%rbp)
ffffffff8020a135:	e9 38 01 00 00       	jmpq   ffffffff8020a272 <VerifyElf+0x182>
ffffffff8020a13a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff8020a13e:	0f b6 48 01          	movzbl 0x1(%rax),%ecx
ffffffff8020a142:	83 f9 45             	cmp    $0x45,%ecx
ffffffff8020a145:	74 0c                	je     ffffffff8020a153 <VerifyElf+0x63>
ffffffff8020a147:	c7 45 fc 02 00 00 00 	movl   $0x2,-0x4(%rbp)
ffffffff8020a14e:	e9 1f 01 00 00       	jmpq   ffffffff8020a272 <VerifyElf+0x182>
ffffffff8020a153:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff8020a157:	0f b6 48 02          	movzbl 0x2(%rax),%ecx
ffffffff8020a15b:	83 f9 4c             	cmp    $0x4c,%ecx
ffffffff8020a15e:	74 0c                	je     ffffffff8020a16c <VerifyElf+0x7c>
ffffffff8020a160:	c7 45 fc 02 00 00 00 	movl   $0x2,-0x4(%rbp)
ffffffff8020a167:	e9 06 01 00 00       	jmpq   ffffffff8020a272 <VerifyElf+0x182>
ffffffff8020a16c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff8020a170:	0f b6 48 03          	movzbl 0x3(%rax),%ecx
ffffffff8020a174:	83 f9 46             	cmp    $0x46,%ecx
ffffffff8020a177:	74 0c                	je     ffffffff8020a185 <VerifyElf+0x95>
ffffffff8020a179:	c7 45 fc 02 00 00 00 	movl   $0x2,-0x4(%rbp)
ffffffff8020a180:	e9 ed 00 00 00       	jmpq   ffffffff8020a272 <VerifyElf+0x182>
ffffffff8020a185:	8b 45 dc             	mov    -0x24(%rbp),%eax
ffffffff8020a188:	83 e0 01             	and    $0x1,%eax
ffffffff8020a18b:	88 c1                	mov    %al,%cl
ffffffff8020a18d:	88 4d cf             	mov    %cl,-0x31(%rbp)
ffffffff8020a190:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
ffffffff8020a194:	0f b6 42 04          	movzbl 0x4(%rdx),%eax
ffffffff8020a198:	83 f8 01             	cmp    $0x1,%eax
ffffffff8020a19b:	0f 94 c1             	sete   %cl
ffffffff8020a19e:	80 e1 01             	and    $0x1,%cl
ffffffff8020a1a1:	0f b6 c1             	movzbl %cl,%eax
ffffffff8020a1a4:	0f b6 75 cf          	movzbl -0x31(%rbp),%esi
ffffffff8020a1a8:	39 f0                	cmp    %esi,%eax
ffffffff8020a1aa:	74 0c                	je     ffffffff8020a1b8 <VerifyElf+0xc8>
ffffffff8020a1ac:	c7 45 fc 04 00 00 00 	movl   $0x4,-0x4(%rbp)
ffffffff8020a1b3:	e9 ba 00 00 00       	jmpq   ffffffff8020a272 <VerifyElf+0x182>
ffffffff8020a1b8:	8b 45 dc             	mov    -0x24(%rbp),%eax
ffffffff8020a1bb:	d1 e8                	shr    %eax
ffffffff8020a1bd:	83 e0 01             	and    $0x1,%eax
ffffffff8020a1c0:	88 c1                	mov    %al,%cl
ffffffff8020a1c2:	88 4d cf             	mov    %cl,-0x31(%rbp)
ffffffff8020a1c5:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
ffffffff8020a1c9:	0f b6 42 05          	movzbl 0x5(%rdx),%eax
ffffffff8020a1cd:	83 f8 02             	cmp    $0x2,%eax
ffffffff8020a1d0:	0f 94 c1             	sete   %cl
ffffffff8020a1d3:	80 e1 01             	and    $0x1,%cl
ffffffff8020a1d6:	0f b6 c1             	movzbl %cl,%eax
ffffffff8020a1d9:	0f b6 75 cf          	movzbl -0x31(%rbp),%esi
ffffffff8020a1dd:	39 f0                	cmp    %esi,%eax
ffffffff8020a1df:	74 0c                	je     ffffffff8020a1ed <VerifyElf+0xfd>
ffffffff8020a1e1:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%rbp)
ffffffff8020a1e8:	e9 85 00 00 00       	jmpq   ffffffff8020a272 <VerifyElf+0x182>
ffffffff8020a1ed:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff8020a1f1:	0f b7 48 10          	movzwl 0x10(%rax),%ecx
ffffffff8020a1f5:	83 f9 00             	cmp    $0x0,%ecx
ffffffff8020a1f8:	75 09                	jne    ffffffff8020a203 <VerifyElf+0x113>
ffffffff8020a1fa:	c7 45 fc 02 00 00 00 	movl   $0x2,-0x4(%rbp)
ffffffff8020a201:	eb 6f                	jmp    ffffffff8020a272 <VerifyElf+0x182>
ffffffff8020a203:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff8020a207:	0f b7 48 12          	movzwl 0x12(%rax),%ecx
ffffffff8020a20b:	83 f9 00             	cmp    $0x0,%ecx
ffffffff8020a20e:	75 09                	jne    ffffffff8020a219 <VerifyElf+0x129>
ffffffff8020a210:	c7 45 fc 03 00 00 00 	movl   $0x3,-0x4(%rbp)
ffffffff8020a217:	eb 59                	jmp    ffffffff8020a272 <VerifyElf+0x182>
ffffffff8020a219:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff8020a21d:	83 78 14 01          	cmpl   $0x1,0x14(%rax)
ffffffff8020a221:	74 09                	je     ffffffff8020a22c <VerifyElf+0x13c>
ffffffff8020a223:	c7 45 fc 02 00 00 00 	movl   $0x2,-0x4(%rbp)
ffffffff8020a22a:	eb 46                	jmp    ffffffff8020a272 <VerifyElf+0x182>
ffffffff8020a22c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff8020a230:	0f b6 48 07          	movzbl 0x7(%rax),%ecx
ffffffff8020a234:	83 f9 03             	cmp    $0x3,%ecx
ffffffff8020a237:	74 16                	je     ffffffff8020a24f <VerifyElf+0x15f>
ffffffff8020a239:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff8020a23d:	0f b6 48 07          	movzbl 0x7(%rax),%ecx
ffffffff8020a241:	83 f9 00             	cmp    $0x0,%ecx
ffffffff8020a244:	74 09                	je     ffffffff8020a24f <VerifyElf+0x15f>
ffffffff8020a246:	c7 45 fc 03 00 00 00 	movl   $0x3,-0x4(%rbp)
ffffffff8020a24d:	eb 23                	jmp    ffffffff8020a272 <VerifyElf+0x182>
ffffffff8020a24f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff8020a253:	0f b6 48 04          	movzbl 0x4(%rax),%ecx
ffffffff8020a257:	83 f9 02             	cmp    $0x2,%ecx
ffffffff8020a25a:	0f 94 c2             	sete   %dl
ffffffff8020a25d:	80 e2 01             	and    $0x1,%dl
ffffffff8020a260:	0f b6 ca             	movzbl %dl,%ecx
ffffffff8020a263:	88 ca                	mov    %cl,%dl
ffffffff8020a265:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8020a269:	88 10                	mov    %dl,(%rax)
ffffffff8020a26b:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
ffffffff8020a272:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff8020a275:	48 83 c4 38          	add    $0x38,%rsp
ffffffff8020a279:	5d                   	pop    %rbp
ffffffff8020a27a:	c3                   	retq   
ffffffff8020a27b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

ffffffff8020a280 <LoadElf32>:
ffffffff8020a280:	55                   	push   %rbp
ffffffff8020a281:	48 89 e5             	mov    %rsp,%rbp
ffffffff8020a284:	48 83 ec 38          	sub    $0x38,%rsp
ffffffff8020a288:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
ffffffff8020a28c:	48 89 75 e8          	mov    %rsi,-0x18(%rbp)
ffffffff8020a290:	89 55 e4             	mov    %edx,-0x1c(%rbp)
ffffffff8020a293:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
ffffffff8020a297:	4c 89 45 d0          	mov    %r8,-0x30(%rbp)
ffffffff8020a29b:	4c 89 4d c8          	mov    %r9,-0x38(%rbp)
ffffffff8020a29f:	48 c7 45 c8 00 00 00 	movq   $0x0,-0x38(%rbp)
ffffffff8020a2a6:	00 
ffffffff8020a2a7:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
ffffffff8020a2ae:	00 
ffffffff8020a2af:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
ffffffff8020a2b3:	48 c7 01 00 00 00 00 	movq   $0x0,(%rcx)
ffffffff8020a2ba:	48 83 7d e8 34       	cmpq   $0x34,-0x18(%rbp)
ffffffff8020a2bf:	73 09                	jae    ffffffff8020a2ca <LoadElf32+0x4a>
ffffffff8020a2c1:	c7 45 fc 02 00 00 00 	movl   $0x2,-0x4(%rbp)
ffffffff8020a2c8:	eb 0f                	jmp    ffffffff8020a2d9 <LoadElf32+0x59>
ffffffff8020a2ca:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
ffffffff8020a2d1:	00 
ffffffff8020a2d2:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
ffffffff8020a2d9:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff8020a2dc:	48 83 c4 38          	add    $0x38,%rsp
ffffffff8020a2e0:	5d                   	pop    %rbp
ffffffff8020a2e1:	c3                   	retq   
ffffffff8020a2e2:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff8020a2e6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8020a2ed:	00 00 00 

ffffffff8020a2f0 <LoadElf64>:
ffffffff8020a2f0:	55                   	push   %rbp
ffffffff8020a2f1:	48 89 e5             	mov    %rsp,%rbp
ffffffff8020a2f4:	41 56                	push   %r14
ffffffff8020a2f6:	53                   	push   %rbx
ffffffff8020a2f7:	48 81 ec 80 01 00 00 	sub    $0x180,%rsp
ffffffff8020a2fe:	48 89 7d e0          	mov    %rdi,-0x20(%rbp)
ffffffff8020a302:	48 89 75 d8          	mov    %rsi,-0x28(%rbp)
ffffffff8020a306:	89 55 d4             	mov    %edx,-0x2c(%rbp)
ffffffff8020a309:	48 89 4d c8          	mov    %rcx,-0x38(%rbp)
ffffffff8020a30d:	4c 89 45 c0          	mov    %r8,-0x40(%rbp)
ffffffff8020a311:	4c 89 4d b8          	mov    %r9,-0x48(%rbp)
ffffffff8020a315:	48 83 7d d8 40       	cmpq   $0x40,-0x28(%rbp)
ffffffff8020a31a:	73 0c                	jae    ffffffff8020a328 <LoadElf64+0x38>
ffffffff8020a31c:	c7 45 ec 02 00 00 00 	movl   $0x2,-0x14(%rbp)
ffffffff8020a323:	e9 71 05 00 00       	jmpq   ffffffff8020a899 <LoadElf64+0x5a9>
ffffffff8020a328:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8020a32c:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
ffffffff8020a330:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
ffffffff8020a334:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff8020a338:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
ffffffff8020a33c:	48 89 01             	mov    %rax,(%rcx)
ffffffff8020a33f:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
ffffffff8020a343:	48 8b 40 28          	mov    0x28(%rax),%rax
ffffffff8020a347:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
ffffffff8020a34b:	48 01 c8             	add    %rcx,%rax
ffffffff8020a34e:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
ffffffff8020a352:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
ffffffff8020a356:	0f b7 50 3a          	movzwl 0x3a(%rax),%edx
ffffffff8020a35a:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
ffffffff8020a35e:	0f b7 70 3c          	movzwl 0x3c(%rax),%esi
ffffffff8020a362:	0f af d6             	imul   %esi,%edx
ffffffff8020a365:	48 63 c2             	movslq %edx,%rax
ffffffff8020a368:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
ffffffff8020a36c:	48 89 41 10          	mov    %rax,0x10(%rcx)
ffffffff8020a370:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff8020a374:	48 8b 78 10          	mov    0x10(%rax),%rdi
ffffffff8020a378:	e8 83 11 00 00       	callq  ffffffff8020b500 <kmalloc>
ffffffff8020a37d:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
ffffffff8020a381:	48 89 41 08          	mov    %rax,0x8(%rcx)
ffffffff8020a385:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff8020a389:	48 8b 78 08          	mov    0x8(%rax),%rdi
ffffffff8020a38d:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff8020a391:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
ffffffff8020a395:	48 8b 51 10          	mov    0x10(%rcx),%rdx
ffffffff8020a399:	48 89 c6             	mov    %rax,%rsi
ffffffff8020a39c:	e8 5f e3 ff ff       	callq  ffffffff80208700 <memcpy>
ffffffff8020a3a1:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
ffffffff8020a3a5:	44 0f b7 41 3c       	movzwl 0x3c(%rcx),%r8d
ffffffff8020a3aa:	44 89 45 a4          	mov    %r8d,-0x5c(%rbp)
ffffffff8020a3ae:	c7 45 a0 00 00 00 00 	movl   $0x0,-0x60(%rbp)
ffffffff8020a3b5:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
ffffffff8020a3bc:	8b 45 a0             	mov    -0x60(%rbp),%eax
ffffffff8020a3bf:	3b 45 a4             	cmp    -0x5c(%rbp),%eax
ffffffff8020a3c2:	0f 8d ca 04 00 00    	jge    ffffffff8020a892 <LoadElf64+0x5a2>
ffffffff8020a3c8:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff8020a3cc:	83 78 04 00          	cmpl   $0x0,0x4(%rax)
ffffffff8020a3d0:	75 05                	jne    ffffffff8020a3d7 <LoadElf64+0xe7>
ffffffff8020a3d2:	e9 98 04 00 00       	jmpq   ffffffff8020a86f <LoadElf64+0x57f>
ffffffff8020a3d7:	c7 45 9c 08 00 00 00 	movl   $0x8,-0x64(%rbp)
ffffffff8020a3de:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff8020a3e2:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff8020a3e6:	48 83 e0 04          	and    $0x4,%rax
ffffffff8020a3ea:	48 83 f8 00          	cmp    $0x0,%rax
ffffffff8020a3ee:	74 09                	je     ffffffff8020a3f9 <LoadElf64+0x109>
ffffffff8020a3f0:	8b 45 9c             	mov    -0x64(%rbp),%eax
ffffffff8020a3f3:	83 c8 02             	or     $0x2,%eax
ffffffff8020a3f6:	89 45 9c             	mov    %eax,-0x64(%rbp)
ffffffff8020a3f9:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff8020a3fd:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff8020a401:	48 83 e0 01          	and    $0x1,%rax
ffffffff8020a405:	48 83 f8 00          	cmp    $0x0,%rax
ffffffff8020a409:	74 09                	je     ffffffff8020a414 <LoadElf64+0x124>
ffffffff8020a40b:	8b 45 9c             	mov    -0x64(%rbp),%eax
ffffffff8020a40e:	83 c8 04             	or     $0x4,%eax
ffffffff8020a411:	89 45 9c             	mov    %eax,-0x64(%rbp)
ffffffff8020a414:	b8 40 00 00 00       	mov    $0x40,%eax
ffffffff8020a419:	89 c1                	mov    %eax,%ecx
ffffffff8020a41b:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
ffffffff8020a41f:	48 8b 52 10          	mov    0x10(%rdx),%rdx
ffffffff8020a423:	48 89 55 90          	mov    %rdx,-0x70(%rbp)
ffffffff8020a427:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
ffffffff8020a42b:	48 8b 52 20          	mov    0x20(%rdx),%rdx
ffffffff8020a42f:	48 89 55 88          	mov    %rdx,-0x78(%rbp)
ffffffff8020a433:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
ffffffff8020a437:	48 8b 75 90          	mov    -0x70(%rbp),%rsi
ffffffff8020a43b:	48 81 e6 ff 0f 00 00 	and    $0xfff,%rsi
ffffffff8020a442:	48 29 f2             	sub    %rsi,%rdx
ffffffff8020a445:	48 89 55 80          	mov    %rdx,-0x80(%rbp)
ffffffff8020a449:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
ffffffff8020a44d:	48 81 e2 ff 0f 00 00 	and    $0xfff,%rdx
ffffffff8020a454:	48 89 95 78 ff ff ff 	mov    %rdx,-0x88(%rbp)
ffffffff8020a45b:	b8 40 00 00 00       	mov    $0x40,%eax
ffffffff8020a460:	89 c7                	mov    %eax,%edi
ffffffff8020a462:	48 89 8d 48 ff ff ff 	mov    %rcx,-0xb8(%rbp)
ffffffff8020a469:	e8 92 10 00 00       	callq  ffffffff8020b500 <kmalloc>
ffffffff8020a46e:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
ffffffff8020a475:	48 c7 85 68 ff ff ff 	movq   $0x0,-0x98(%rbp)
ffffffff8020a47c:	00 00 00 00 
ffffffff8020a480:	e8 3b 79 ff ff       	callq  ffffffff80201dc0 <GetActiveVirtualMemoryInstance>
ffffffff8020a485:	48 8d 8d 68 ff ff ff 	lea    -0x98(%rbp),%rcx
ffffffff8020a48c:	41 b8 00 10 00 00    	mov    $0x1000,%r8d
ffffffff8020a492:	44 89 c2             	mov    %r8d,%edx
ffffffff8020a495:	45 31 c0             	xor    %r8d,%r8d
ffffffff8020a498:	41 b9 04 00 00 00    	mov    $0x4,%r9d
ffffffff8020a49e:	41 ba 00 10 00 00    	mov    $0x1000,%r10d
ffffffff8020a4a4:	44 89 d6             	mov    %r10d,%esi
ffffffff8020a4a7:	48 8d bd 68 ff ff ff 	lea    -0x98(%rbp),%rdi
ffffffff8020a4ae:	45 31 d2             	xor    %r10d,%r10d
ffffffff8020a4b1:	41 bb 04 00 00 00    	mov    $0x4,%r11d
ffffffff8020a4b7:	48 89 bd 40 ff ff ff 	mov    %rdi,-0xc0(%rbp)
ffffffff8020a4be:	48 89 c7             	mov    %rax,%rdi
ffffffff8020a4c1:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
ffffffff8020a4c8:	48 89 b5 38 ff ff ff 	mov    %rsi,-0xc8(%rbp)
ffffffff8020a4cf:	48 89 c6             	mov    %rax,%rsi
ffffffff8020a4d2:	48 8b 9d 38 ff ff ff 	mov    -0xc8(%rbp),%rbx
ffffffff8020a4d9:	48 89 95 30 ff ff ff 	mov    %rdx,-0xd0(%rbp)
ffffffff8020a4e0:	48 89 da             	mov    %rbx,%rdx
ffffffff8020a4e3:	48 89 8d 28 ff ff ff 	mov    %rcx,-0xd8(%rbp)
ffffffff8020a4ea:	44 89 d1             	mov    %r10d,%ecx
ffffffff8020a4ed:	44 89 85 24 ff ff ff 	mov    %r8d,-0xdc(%rbp)
ffffffff8020a4f4:	45 89 d8             	mov    %r11d,%r8d
ffffffff8020a4f7:	44 89 8d 20 ff ff ff 	mov    %r9d,-0xe0(%rbp)
ffffffff8020a4fe:	e8 fd 7b ff ff       	callq  ffffffff80202100 <FindFreeVirtualAddress>
ffffffff8020a503:	48 8b 55 80          	mov    -0x80(%rbp),%rdx
ffffffff8020a507:	48 89 95 60 ff ff ff 	mov    %rdx,-0xa0(%rbp)
ffffffff8020a50e:	89 85 1c ff ff ff    	mov    %eax,-0xe4(%rbp)
ffffffff8020a514:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
ffffffff8020a51b:	48 8b 4d 90          	mov    -0x70(%rbp),%rcx
ffffffff8020a51f:	48 03 4d 88          	add    -0x78(%rbp),%rcx
ffffffff8020a523:	48 39 c8             	cmp    %rcx,%rax
ffffffff8020a526:	0f 83 41 03 00 00    	jae    ffffffff8020a86d <LoadElf64+0x57d>
ffffffff8020a52c:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
ffffffff8020a530:	48 8b 75 90          	mov    -0x70(%rbp),%rsi
ffffffff8020a534:	e8 57 78 ff ff       	callq  ffffffff80201d90 <GetPhysicalAddressUID>
ffffffff8020a539:	48 83 f8 00          	cmp    $0x0,%rax
ffffffff8020a53d:	0f 85 0f 03 00 00    	jne    ffffffff8020a852 <LoadElf64+0x562>
ffffffff8020a543:	e8 e8 7d ff ff       	callq  ffffffff80202330 <AllocatePhysicalPage>
ffffffff8020a548:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
ffffffff8020a54f:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
ffffffff8020a556:	48 3b 45 90          	cmp    -0x70(%rbp),%rax
ffffffff8020a55a:	76 16                	jbe    ffffffff8020a572 <LoadElf64+0x282>
ffffffff8020a55c:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
ffffffff8020a563:	48 89 45 80          	mov    %rax,-0x80(%rbp)
ffffffff8020a567:	48 c7 85 78 ff ff ff 	movq   $0x0,-0x88(%rbp)
ffffffff8020a56e:	00 00 00 00 
ffffffff8020a572:	b8 00 10 00 00       	mov    $0x1000,%eax
ffffffff8020a577:	89 c1                	mov    %eax,%ecx
ffffffff8020a579:	31 c0                	xor    %eax,%eax
ffffffff8020a57b:	ba 40 00 00 00       	mov    $0x40,%edx
ffffffff8020a580:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
ffffffff8020a584:	48 8b b5 70 ff ff ff 	mov    -0x90(%rbp),%rsi
ffffffff8020a58b:	4c 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%r8
ffffffff8020a592:	4c 8b 8d 60 ff ff ff 	mov    -0xa0(%rbp),%r9
ffffffff8020a599:	44 8b 55 9c          	mov    -0x64(%rbp),%r10d
ffffffff8020a59d:	49 89 e3             	mov    %rsp,%r11
ffffffff8020a5a0:	45 89 53 08          	mov    %r10d,0x8(%r11)
ffffffff8020a5a4:	41 c7 03 40 00 00 00 	movl   $0x40,(%r11)
ffffffff8020a5ab:	41 ba 00 10 00 00    	mov    $0x1000,%r10d
ffffffff8020a5b1:	45 89 d3             	mov    %r10d,%r11d
ffffffff8020a5b4:	45 31 d2             	xor    %r10d,%r10d
ffffffff8020a5b7:	89 95 18 ff ff ff    	mov    %edx,-0xe8(%rbp)
ffffffff8020a5bd:	4c 89 c2             	mov    %r8,%rdx
ffffffff8020a5c0:	48 89 8d 10 ff ff ff 	mov    %rcx,-0xf0(%rbp)
ffffffff8020a5c7:	4c 89 c9             	mov    %r9,%rcx
ffffffff8020a5ca:	4d 89 d8             	mov    %r11,%r8
ffffffff8020a5cd:	45 89 d1             	mov    %r10d,%r9d
ffffffff8020a5d0:	89 85 0c ff ff ff    	mov    %eax,-0xf4(%rbp)
ffffffff8020a5d6:	e8 15 79 ff ff       	callq  ffffffff80201ef0 <MapPage>
ffffffff8020a5db:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
ffffffff8020a5df:	48 83 39 00          	cmpq   $0x0,(%rcx)
ffffffff8020a5e3:	89 85 08 ff ff ff    	mov    %eax,-0xf8(%rbp)
ffffffff8020a5e9:	74 20                	je     ffffffff8020a60b <LoadElf64+0x31b>
ffffffff8020a5eb:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8020a5ef:	48 8b 00             	mov    (%rax),%rax
ffffffff8020a5f2:	48 8b 8d 70 ff ff ff 	mov    -0x90(%rbp),%rcx
ffffffff8020a5f9:	48 89 41 38          	mov    %rax,0x38(%rcx)
ffffffff8020a5fd:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
ffffffff8020a604:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
ffffffff8020a608:	48 89 01             	mov    %rax,(%rcx)
ffffffff8020a60b:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff8020a60f:	8b 48 04             	mov    0x4(%rax),%ecx
ffffffff8020a612:	89 c8                	mov    %ecx,%eax
ffffffff8020a614:	48 89 c2             	mov    %rax,%rdx
ffffffff8020a617:	48 83 ea 12          	sub    $0x12,%rdx
ffffffff8020a61b:	48 89 85 00 ff ff ff 	mov    %rax,-0x100(%rbp)
ffffffff8020a622:	48 89 95 f8 fe ff ff 	mov    %rdx,-0x108(%rbp)
ffffffff8020a629:	0f 87 1f 02 00 00    	ja     ffffffff8020a84e <LoadElf64+0x55e>
ffffffff8020a62f:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
ffffffff8020a636:	48 8b 0c c5 e0 f4 20 	mov    -0x7fdf0b20(,%rax,8),%rcx
ffffffff8020a63d:	80 
ffffffff8020a63e:	ff e1                	jmpq   *%rcx
ffffffff8020a640:	e9 0b 02 00 00       	jmpq   ffffffff8020a850 <LoadElf64+0x560>
ffffffff8020a645:	e8 76 77 ff ff       	callq  ffffffff80201dc0 <GetActiveVirtualMemoryInstance>
ffffffff8020a64a:	31 c9                	xor    %ecx,%ecx
ffffffff8020a64c:	89 ca                	mov    %ecx,%edx
ffffffff8020a64e:	b9 00 10 00 00       	mov    $0x1000,%ecx
ffffffff8020a653:	89 ce                	mov    %ecx,%esi
ffffffff8020a655:	31 c9                	xor    %ecx,%ecx
ffffffff8020a657:	bf 04 00 00 00       	mov    $0x4,%edi
ffffffff8020a65c:	4c 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%r8
ffffffff8020a663:	4c 8b 8d 68 ff ff ff 	mov    -0x98(%rbp),%r9
ffffffff8020a66a:	49 89 e2             	mov    %rsp,%r10
ffffffff8020a66d:	41 c7 42 08 04 00 00 	movl   $0x4,0x8(%r10)
ffffffff8020a674:	00 
ffffffff8020a675:	41 c7 02 00 00 00 00 	movl   $0x0,(%r10)
ffffffff8020a67c:	45 31 db             	xor    %r11d,%r11d
ffffffff8020a67f:	45 89 da             	mov    %r11d,%r10d
ffffffff8020a682:	bb 00 10 00 00       	mov    $0x1000,%ebx
ffffffff8020a687:	41 89 de             	mov    %ebx,%r14d
ffffffff8020a68a:	89 bd f4 fe ff ff    	mov    %edi,-0x10c(%rbp)
ffffffff8020a690:	48 89 c7             	mov    %rax,%rdi
ffffffff8020a693:	48 89 b5 e8 fe ff ff 	mov    %rsi,-0x118(%rbp)
ffffffff8020a69a:	4c 89 d6             	mov    %r10,%rsi
ffffffff8020a69d:	48 89 95 e0 fe ff ff 	mov    %rdx,-0x120(%rbp)
ffffffff8020a6a4:	4c 89 c2             	mov    %r8,%rdx
ffffffff8020a6a7:	89 8d dc fe ff ff    	mov    %ecx,-0x124(%rbp)
ffffffff8020a6ad:	4c 89 c9             	mov    %r9,%rcx
ffffffff8020a6b0:	4d 89 f0             	mov    %r14,%r8
ffffffff8020a6b3:	45 89 d9             	mov    %r11d,%r9d
ffffffff8020a6b6:	e8 35 78 ff ff       	callq  ffffffff80201ef0 <MapPage>
ffffffff8020a6bb:	41 b9 00 10 00 00    	mov    $0x1000,%r9d
ffffffff8020a6c1:	44 89 c9             	mov    %r9d,%ecx
ffffffff8020a6c4:	48 8b 95 68 ff ff ff 	mov    -0x98(%rbp),%rdx
ffffffff8020a6cb:	48 03 95 78 ff ff ff 	add    -0x88(%rbp),%rdx
ffffffff8020a6d2:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
ffffffff8020a6d6:	48 8b 7d a8          	mov    -0x58(%rbp),%rdi
ffffffff8020a6da:	48 03 77 18          	add    0x18(%rdi),%rsi
ffffffff8020a6de:	48 2b 8d 78 ff ff ff 	sub    -0x88(%rbp),%rcx
ffffffff8020a6e5:	48 89 d7             	mov    %rdx,%rdi
ffffffff8020a6e8:	48 89 ca             	mov    %rcx,%rdx
ffffffff8020a6eb:	89 85 d8 fe ff ff    	mov    %eax,-0x128(%rbp)
ffffffff8020a6f1:	e8 0a e0 ff ff       	callq  ffffffff80208700 <memcpy>
ffffffff8020a6f6:	48 89 85 d0 fe ff ff 	mov    %rax,-0x130(%rbp)
ffffffff8020a6fd:	e8 be 76 ff ff       	callq  ffffffff80201dc0 <GetActiveVirtualMemoryInstance>
ffffffff8020a702:	41 b9 00 10 00 00    	mov    $0x1000,%r9d
ffffffff8020a708:	44 89 c9             	mov    %r9d,%ecx
ffffffff8020a70b:	48 8b b5 68 ff ff ff 	mov    -0x98(%rbp),%rsi
ffffffff8020a712:	41 b9 00 10 00 00    	mov    $0x1000,%r9d
ffffffff8020a718:	44 89 ca             	mov    %r9d,%edx
ffffffff8020a71b:	48 89 c7             	mov    %rax,%rdi
ffffffff8020a71e:	48 89 8d c8 fe ff ff 	mov    %rcx,-0x138(%rbp)
ffffffff8020a725:	e8 86 79 ff ff       	callq  ffffffff802020b0 <UnmapPage>
ffffffff8020a72a:	89 85 c4 fe ff ff    	mov    %eax,-0x13c(%rbp)
ffffffff8020a730:	e9 1b 01 00 00       	jmpq   ffffffff8020a850 <LoadElf64+0x560>
ffffffff8020a735:	e9 16 01 00 00       	jmpq   ffffffff8020a850 <LoadElf64+0x560>
ffffffff8020a73a:	e9 11 01 00 00       	jmpq   ffffffff8020a850 <LoadElf64+0x560>
ffffffff8020a73f:	e9 0c 01 00 00       	jmpq   ffffffff8020a850 <LoadElf64+0x560>
ffffffff8020a744:	e9 07 01 00 00       	jmpq   ffffffff8020a850 <LoadElf64+0x560>
ffffffff8020a749:	e9 02 01 00 00       	jmpq   ffffffff8020a850 <LoadElf64+0x560>
ffffffff8020a74e:	e9 fd 00 00 00       	jmpq   ffffffff8020a850 <LoadElf64+0x560>
ffffffff8020a753:	e8 68 76 ff ff       	callq  ffffffff80201dc0 <GetActiveVirtualMemoryInstance>
ffffffff8020a758:	31 c9                	xor    %ecx,%ecx
ffffffff8020a75a:	89 ca                	mov    %ecx,%edx
ffffffff8020a75c:	b9 00 10 00 00       	mov    $0x1000,%ecx
ffffffff8020a761:	89 ce                	mov    %ecx,%esi
ffffffff8020a763:	31 c9                	xor    %ecx,%ecx
ffffffff8020a765:	bf 04 00 00 00       	mov    $0x4,%edi
ffffffff8020a76a:	4c 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%r8
ffffffff8020a771:	4c 8b 8d 68 ff ff ff 	mov    -0x98(%rbp),%r9
ffffffff8020a778:	49 89 e2             	mov    %rsp,%r10
ffffffff8020a77b:	41 c7 42 08 04 00 00 	movl   $0x4,0x8(%r10)
ffffffff8020a782:	00 
ffffffff8020a783:	41 c7 02 00 00 00 00 	movl   $0x0,(%r10)
ffffffff8020a78a:	45 31 db             	xor    %r11d,%r11d
ffffffff8020a78d:	45 89 da             	mov    %r11d,%r10d
ffffffff8020a790:	bb 00 10 00 00       	mov    $0x1000,%ebx
ffffffff8020a795:	41 89 de             	mov    %ebx,%r14d
ffffffff8020a798:	89 bd c0 fe ff ff    	mov    %edi,-0x140(%rbp)
ffffffff8020a79e:	48 89 c7             	mov    %rax,%rdi
ffffffff8020a7a1:	48 89 b5 b8 fe ff ff 	mov    %rsi,-0x148(%rbp)
ffffffff8020a7a8:	4c 89 d6             	mov    %r10,%rsi
ffffffff8020a7ab:	48 89 95 b0 fe ff ff 	mov    %rdx,-0x150(%rbp)
ffffffff8020a7b2:	4c 89 c2             	mov    %r8,%rdx
ffffffff8020a7b5:	89 8d ac fe ff ff    	mov    %ecx,-0x154(%rbp)
ffffffff8020a7bb:	4c 89 c9             	mov    %r9,%rcx
ffffffff8020a7be:	4d 89 f0             	mov    %r14,%r8
ffffffff8020a7c1:	45 89 d9             	mov    %r11d,%r9d
ffffffff8020a7c4:	e8 27 77 ff ff       	callq  ffffffff80201ef0 <MapPage>
ffffffff8020a7c9:	45 31 c9             	xor    %r9d,%r9d
ffffffff8020a7cc:	41 bb 00 10 00 00    	mov    $0x1000,%r11d
ffffffff8020a7d2:	44 89 d9             	mov    %r11d,%ecx
ffffffff8020a7d5:	48 8b 95 68 ff ff ff 	mov    -0x98(%rbp),%rdx
ffffffff8020a7dc:	48 03 95 78 ff ff ff 	add    -0x88(%rbp),%rdx
ffffffff8020a7e3:	48 2b 8d 78 ff ff ff 	sub    -0x88(%rbp),%rcx
ffffffff8020a7ea:	31 f6                	xor    %esi,%esi
ffffffff8020a7ec:	48 89 d7             	mov    %rdx,%rdi
ffffffff8020a7ef:	48 89 ca             	mov    %rcx,%rdx
ffffffff8020a7f2:	89 85 a8 fe ff ff    	mov    %eax,-0x158(%rbp)
ffffffff8020a7f8:	44 89 8d a4 fe ff ff 	mov    %r9d,-0x15c(%rbp)
ffffffff8020a7ff:	e8 5c df ff ff       	callq  ffffffff80208760 <memset>
ffffffff8020a804:	48 89 85 98 fe ff ff 	mov    %rax,-0x168(%rbp)
ffffffff8020a80b:	e8 b0 75 ff ff       	callq  ffffffff80201dc0 <GetActiveVirtualMemoryInstance>
ffffffff8020a810:	be 00 10 00 00       	mov    $0x1000,%esi
ffffffff8020a815:	89 f1                	mov    %esi,%ecx
ffffffff8020a817:	48 8b b5 68 ff ff ff 	mov    -0x98(%rbp),%rsi
ffffffff8020a81e:	41 b9 00 10 00 00    	mov    $0x1000,%r9d
ffffffff8020a824:	44 89 ca             	mov    %r9d,%edx
ffffffff8020a827:	48 89 c7             	mov    %rax,%rdi
ffffffff8020a82a:	48 89 8d 90 fe ff ff 	mov    %rcx,-0x170(%rbp)
ffffffff8020a831:	e8 7a 78 ff ff       	callq  ffffffff802020b0 <UnmapPage>
ffffffff8020a836:	89 85 8c fe ff ff    	mov    %eax,-0x174(%rbp)
ffffffff8020a83c:	eb 12                	jmp    ffffffff8020a850 <LoadElf64+0x560>
ffffffff8020a83e:	eb 10                	jmp    ffffffff8020a850 <LoadElf64+0x560>
ffffffff8020a840:	eb 0e                	jmp    ffffffff8020a850 <LoadElf64+0x560>
ffffffff8020a842:	eb 0c                	jmp    ffffffff8020a850 <LoadElf64+0x560>
ffffffff8020a844:	eb 0a                	jmp    ffffffff8020a850 <LoadElf64+0x560>
ffffffff8020a846:	eb 08                	jmp    ffffffff8020a850 <LoadElf64+0x560>
ffffffff8020a848:	eb 06                	jmp    ffffffff8020a850 <LoadElf64+0x560>
ffffffff8020a84a:	eb 04                	jmp    ffffffff8020a850 <LoadElf64+0x560>
ffffffff8020a84c:	eb 02                	jmp    ffffffff8020a850 <LoadElf64+0x560>
ffffffff8020a84e:	eb 00                	jmp    ffffffff8020a850 <LoadElf64+0x560>
ffffffff8020a850:	eb 00                	jmp    ffffffff8020a852 <LoadElf64+0x562>
ffffffff8020a852:	eb 00                	jmp    ffffffff8020a854 <LoadElf64+0x564>
ffffffff8020a854:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
ffffffff8020a85b:	48 05 00 10 00 00    	add    $0x1000,%rax
ffffffff8020a861:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
ffffffff8020a868:	e9 a7 fc ff ff       	jmpq   ffffffff8020a514 <LoadElf64+0x224>
ffffffff8020a86d:	eb 00                	jmp    ffffffff8020a86f <LoadElf64+0x57f>
ffffffff8020a86f:	8b 45 a0             	mov    -0x60(%rbp),%eax
ffffffff8020a872:	83 c0 01             	add    $0x1,%eax
ffffffff8020a875:	89 45 a0             	mov    %eax,-0x60(%rbp)
ffffffff8020a878:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
ffffffff8020a87c:	0f b7 41 3a          	movzwl 0x3a(%rcx),%eax
ffffffff8020a880:	89 c1                	mov    %eax,%ecx
ffffffff8020a882:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
ffffffff8020a886:	48 01 d1             	add    %rdx,%rcx
ffffffff8020a889:	48 89 4d a8          	mov    %rcx,-0x58(%rbp)
ffffffff8020a88d:	e9 2a fb ff ff       	jmpq   ffffffff8020a3bc <LoadElf64+0xcc>
ffffffff8020a892:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
ffffffff8020a899:	8b 45 ec             	mov    -0x14(%rbp),%eax
ffffffff8020a89c:	48 81 c4 80 01 00 00 	add    $0x180,%rsp
ffffffff8020a8a3:	5b                   	pop    %rbx
ffffffff8020a8a4:	41 5e                	pop    %r14
ffffffff8020a8a6:	5d                   	pop    %rbp
ffffffff8020a8a7:	c3                   	retq   
ffffffff8020a8a8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff8020a8af:	00 

ffffffff8020a8b0 <LoadElf>:
ffffffff8020a8b0:	55                   	push   %rbp
ffffffff8020a8b1:	48 89 e5             	mov    %rsp,%rbp
ffffffff8020a8b4:	48 83 ec 50          	sub    $0x50,%rsp
ffffffff8020a8b8:	48 8d 45 c7          	lea    -0x39(%rbp),%rax
ffffffff8020a8bc:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
ffffffff8020a8c0:	48 89 75 e8          	mov    %rsi,-0x18(%rbp)
ffffffff8020a8c4:	89 55 e4             	mov    %edx,-0x1c(%rbp)
ffffffff8020a8c7:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
ffffffff8020a8cb:	4c 89 45 d0          	mov    %r8,-0x30(%rbp)
ffffffff8020a8cf:	4c 89 4d c8          	mov    %r9,-0x38(%rbp)
ffffffff8020a8d3:	c6 45 c7 00          	movb   $0x0,-0x39(%rbp)
ffffffff8020a8d7:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
ffffffff8020a8db:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
ffffffff8020a8df:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
ffffffff8020a8e2:	48 8d 55 c7          	lea    -0x39(%rbp),%rdx
ffffffff8020a8e6:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
ffffffff8020a8ea:	e8 01 f8 ff ff       	callq  ffffffff8020a0f0 <VerifyElf>
ffffffff8020a8ef:	89 45 c0             	mov    %eax,-0x40(%rbp)
ffffffff8020a8f2:	83 7d c0 00          	cmpl   $0x0,-0x40(%rbp)
ffffffff8020a8f6:	74 08                	je     ffffffff8020a900 <LoadElf+0x50>
ffffffff8020a8f8:	8b 45 c0             	mov    -0x40(%rbp),%eax
ffffffff8020a8fb:	89 45 fc             	mov    %eax,-0x4(%rbp)
ffffffff8020a8fe:	eb 46                	jmp    ffffffff8020a946 <LoadElf+0x96>
ffffffff8020a900:	80 7d c7 00          	cmpb   $0x0,-0x39(%rbp)
ffffffff8020a904:	74 21                	je     ffffffff8020a927 <LoadElf+0x77>
ffffffff8020a906:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
ffffffff8020a90a:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
ffffffff8020a90e:	8b 55 e4             	mov    -0x1c(%rbp),%edx
ffffffff8020a911:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
ffffffff8020a915:	4c 8b 45 d0          	mov    -0x30(%rbp),%r8
ffffffff8020a919:	4c 8b 4d c8          	mov    -0x38(%rbp),%r9
ffffffff8020a91d:	e8 ce f9 ff ff       	callq  ffffffff8020a2f0 <LoadElf64>
ffffffff8020a922:	89 45 fc             	mov    %eax,-0x4(%rbp)
ffffffff8020a925:	eb 1f                	jmp    ffffffff8020a946 <LoadElf+0x96>
ffffffff8020a927:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
ffffffff8020a92b:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
ffffffff8020a92f:	8b 55 e4             	mov    -0x1c(%rbp),%edx
ffffffff8020a932:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
ffffffff8020a936:	4c 8b 45 d0          	mov    -0x30(%rbp),%r8
ffffffff8020a93a:	4c 8b 4d c8          	mov    -0x38(%rbp),%r9
ffffffff8020a93e:	e8 3d f9 ff ff       	callq  ffffffff8020a280 <LoadElf32>
ffffffff8020a943:	89 45 fc             	mov    %eax,-0x4(%rbp)
ffffffff8020a946:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff8020a949:	48 83 c4 50          	add    $0x50,%rsp
ffffffff8020a94d:	5d                   	pop    %rbp
ffffffff8020a94e:	c3                   	retq   
ffffffff8020a94f:	90                   	nop

ffffffff8020a950 <getsize>:
ffffffff8020a950:	55                   	push   %rbp
ffffffff8020a951:	48 89 e5             	mov    %rsp,%rbp
ffffffff8020a954:	48 83 ec 18          	sub    $0x18,%rsp
ffffffff8020a958:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8020a95c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
ffffffff8020a963:	c7 45 ec 01 00 00 00 	movl   $0x1,-0x14(%rbp)
ffffffff8020a96a:	c7 45 f0 0b 00 00 00 	movl   $0xb,-0x10(%rbp)
ffffffff8020a971:	83 7d f0 00          	cmpl   $0x0,-0x10(%rbp)
ffffffff8020a975:	76 33                	jbe    ffffffff8020a9aa <getsize+0x5a>
ffffffff8020a977:	8b 45 f0             	mov    -0x10(%rbp),%eax
ffffffff8020a97a:	83 e8 01             	sub    $0x1,%eax
ffffffff8020a97d:	89 c0                	mov    %eax,%eax
ffffffff8020a97f:	89 c1                	mov    %eax,%ecx
ffffffff8020a981:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
ffffffff8020a985:	0f be 04 0a          	movsbl (%rdx,%rcx,1),%eax
ffffffff8020a989:	83 e8 30             	sub    $0x30,%eax
ffffffff8020a98c:	0f af 45 ec          	imul   -0x14(%rbp),%eax
ffffffff8020a990:	03 45 f4             	add    -0xc(%rbp),%eax
ffffffff8020a993:	89 45 f4             	mov    %eax,-0xc(%rbp)
ffffffff8020a996:	8b 45 f0             	mov    -0x10(%rbp),%eax
ffffffff8020a999:	83 c0 ff             	add    $0xffffffff,%eax
ffffffff8020a99c:	89 45 f0             	mov    %eax,-0x10(%rbp)
ffffffff8020a99f:	8b 45 ec             	mov    -0x14(%rbp),%eax
ffffffff8020a9a2:	c1 e0 03             	shl    $0x3,%eax
ffffffff8020a9a5:	89 45 ec             	mov    %eax,-0x14(%rbp)
ffffffff8020a9a8:	eb c7                	jmp    ffffffff8020a971 <getsize+0x21>
ffffffff8020a9aa:	8b 45 f4             	mov    -0xc(%rbp),%eax
ffffffff8020a9ad:	48 83 c4 18          	add    $0x18,%rsp
ffffffff8020a9b1:	5d                   	pop    %rbp
ffffffff8020a9b2:	c3                   	retq   
ffffffff8020a9b3:	0f 1f 00             	nopl   (%rax)
ffffffff8020a9b6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8020a9bd:	00 00 00 

ffffffff8020a9c0 <Initrd_GetFile>:
ffffffff8020a9c0:	55                   	push   %rbp
ffffffff8020a9c1:	48 89 e5             	mov    %rsp,%rbp
ffffffff8020a9c4:	48 83 ec 40          	sub    $0x40,%rsp
ffffffff8020a9c8:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
ffffffff8020a9cc:	48 89 75 e8          	mov    %rsi,-0x18(%rbp)
ffffffff8020a9d0:	48 89 55 e0          	mov    %rdx,-0x20(%rbp)
ffffffff8020a9d4:	e8 f7 04 00 00       	callq  ffffffff8020aed0 <GetBootInfo>
ffffffff8020a9d9:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
ffffffff8020a9dd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8020a9e1:	48 83 78 30 00       	cmpq   $0x0,0x30(%rax)
ffffffff8020a9e6:	0f 94 c1             	sete   %cl
ffffffff8020a9e9:	80 e1 01             	and    $0x1,%cl
ffffffff8020a9ec:	44 0f b6 c1          	movzbl %cl,%r8d
ffffffff8020a9f0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8020a9f4:	48 83 78 38 00       	cmpq   $0x0,0x38(%rax)
ffffffff8020a9f9:	0f 94 c1             	sete   %cl
ffffffff8020a9fc:	80 e1 01             	and    $0x1,%cl
ffffffff8020a9ff:	44 0f b6 c9          	movzbl %cl,%r9d
ffffffff8020aa03:	45 09 c8             	or     %r9d,%r8d
ffffffff8020aa06:	41 83 f8 00          	cmp    $0x0,%r8d
ffffffff8020aa0a:	74 09                	je     ffffffff8020aa15 <Initrd_GetFile+0x55>
ffffffff8020aa0c:	c6 45 ff 00          	movb   $0x0,-0x1(%rbp)
ffffffff8020aa10:	e9 dc 00 00 00       	jmpq   ffffffff8020aaf1 <Initrd_GetFile+0x131>
ffffffff8020aa15:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8020aa19:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
ffffffff8020aa20:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8020aa24:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
ffffffff8020aa2b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8020aa2f:	48 8b 40 30          	mov    0x30(%rax),%rax
ffffffff8020aa33:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
ffffffff8020aa37:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff8020aa3b:	0f be 08             	movsbl (%rax),%ecx
ffffffff8020aa3e:	83 f9 00             	cmp    $0x0,%ecx
ffffffff8020aa41:	0f 84 96 00 00 00    	je     ffffffff8020aadd <Initrd_GetFile+0x11d>
ffffffff8020aa47:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
ffffffff8020aa4b:	e8 d0 de ff ff       	callq  ffffffff80208920 <strlen>
ffffffff8020aa50:	89 c1                	mov    %eax,%ecx
ffffffff8020aa52:	89 4d cc             	mov    %ecx,-0x34(%rbp)
ffffffff8020aa55:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
ffffffff8020aa59:	e8 c2 de ff ff       	callq  ffffffff80208920 <strlen>
ffffffff8020aa5e:	8b 4d cc             	mov    -0x34(%rbp),%ecx
ffffffff8020aa61:	89 cf                	mov    %ecx,%edi
ffffffff8020aa63:	48 39 f8             	cmp    %rdi,%rax
ffffffff8020aa66:	75 43                	jne    ffffffff8020aaab <Initrd_GetFile+0xeb>
ffffffff8020aa68:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
ffffffff8020aa6c:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
ffffffff8020aa70:	8b 45 cc             	mov    -0x34(%rbp),%eax
ffffffff8020aa73:	89 c2                	mov    %eax,%edx
ffffffff8020aa75:	e8 e6 de ff ff       	callq  ffffffff80208960 <strncmp>
ffffffff8020aa7a:	83 f8 00             	cmp    $0x0,%eax
ffffffff8020aa7d:	75 2c                	jne    ffffffff8020aaab <Initrd_GetFile+0xeb>
ffffffff8020aa7f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff8020aa83:	48 05 00 02 00 00    	add    $0x200,%rax
ffffffff8020aa89:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
ffffffff8020aa8d:	48 89 01             	mov    %rax,(%rcx)
ffffffff8020aa90:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff8020aa94:	48 83 c0 7c          	add    $0x7c,%rax
ffffffff8020aa98:	48 89 c7             	mov    %rax,%rdi
ffffffff8020aa9b:	e8 b0 fe ff ff       	callq  ffffffff8020a950 <getsize>
ffffffff8020aaa0:	89 c0                	mov    %eax,%eax
ffffffff8020aaa2:	89 c1                	mov    %eax,%ecx
ffffffff8020aaa4:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
ffffffff8020aaa8:	48 89 0f             	mov    %rcx,(%rdi)
ffffffff8020aaab:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff8020aaaf:	48 05 00 02 00 00    	add    $0x200,%rax
ffffffff8020aab5:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
ffffffff8020aab9:	48 83 c1 7c          	add    $0x7c,%rcx
ffffffff8020aabd:	48 89 cf             	mov    %rcx,%rdi
ffffffff8020aac0:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
ffffffff8020aac4:	e8 87 fe ff ff       	callq  ffffffff8020a950 <getsize>
ffffffff8020aac9:	89 c0                	mov    %eax,%eax
ffffffff8020aacb:	89 c1                	mov    %eax,%ecx
ffffffff8020aacd:	48 8b 7d c0          	mov    -0x40(%rbp),%rdi
ffffffff8020aad1:	48 01 cf             	add    %rcx,%rdi
ffffffff8020aad4:	48 89 7d d0          	mov    %rdi,-0x30(%rbp)
ffffffff8020aad8:	e9 5a ff ff ff       	jmpq   ffffffff8020aa37 <Initrd_GetFile+0x77>
ffffffff8020aadd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8020aae1:	48 83 38 00          	cmpq   $0x0,(%rax)
ffffffff8020aae5:	75 06                	jne    ffffffff8020aaed <Initrd_GetFile+0x12d>
ffffffff8020aae7:	c6 45 ff 00          	movb   $0x0,-0x1(%rbp)
ffffffff8020aaeb:	eb 04                	jmp    ffffffff8020aaf1 <Initrd_GetFile+0x131>
ffffffff8020aaed:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
ffffffff8020aaf1:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
ffffffff8020aaf5:	48 83 c4 40          	add    $0x40,%rsp
ffffffff8020aaf9:	5d                   	pop    %rbp
ffffffff8020aafa:	c3                   	retq   
ffffffff8020aafb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

ffffffff8020ab00 <bootstrap_malloc>:
ffffffff8020ab00:	55                   	push   %rbp
ffffffff8020ab01:	48 89 e5             	mov    %rsp,%rbp
ffffffff8020ab04:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff8020ab08:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8020ab0c:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
ffffffff8020ab10:	48 83 e7 03          	and    $0x3,%rdi
ffffffff8020ab14:	48 83 ff 00          	cmp    $0x0,%rdi
ffffffff8020ab18:	74 14                	je     ffffffff8020ab2e <bootstrap_malloc+0x2e>
ffffffff8020ab1a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8020ab1e:	48 c1 e8 02          	shr    $0x2,%rax
ffffffff8020ab22:	48 83 c0 01          	add    $0x1,%rax
ffffffff8020ab26:	48 c1 e0 02          	shl    $0x2,%rax
ffffffff8020ab2a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff8020ab2e:	8b 04 25 70 cd 28 80 	mov    0xffffffff8028cd70,%eax
ffffffff8020ab35:	89 c0                	mov    %eax,%eax
ffffffff8020ab37:	89 c1                	mov    %eax,%ecx
ffffffff8020ab39:	48 03 4d f8          	add    -0x8(%rbp),%rcx
ffffffff8020ab3d:	48 81 f9 00 00 a0 00 	cmp    $0xa00000,%rcx
ffffffff8020ab44:	76 02                	jbe    ffffffff8020ab48 <bootstrap_malloc+0x48>
ffffffff8020ab46:	fa                   	cli    
ffffffff8020ab47:	f4                   	hlt    
ffffffff8020ab48:	31 c0                	xor    %eax,%eax
ffffffff8020ab4a:	8b 0c 25 70 cd 28 80 	mov    0xffffffff8028cd70,%ecx
ffffffff8020ab51:	89 ca                	mov    %ecx,%edx
ffffffff8020ab53:	48 8d 92 80 cd 28 80 	lea    -0x7fd73280(%rdx),%rdx
ffffffff8020ab5a:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
ffffffff8020ab5e:	8b 4d f8             	mov    -0x8(%rbp),%ecx
ffffffff8020ab61:	8b 34 25 70 cd 28 80 	mov    0xffffffff8028cd70,%esi
ffffffff8020ab68:	01 ce                	add    %ecx,%esi
ffffffff8020ab6a:	89 34 25 70 cd 28 80 	mov    %esi,0xffffffff8028cd70
ffffffff8020ab71:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
ffffffff8020ab75:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
ffffffff8020ab79:	31 f6                	xor    %esi,%esi
ffffffff8020ab7b:	89 45 ec             	mov    %eax,-0x14(%rbp)
ffffffff8020ab7e:	e8 dd db ff ff       	callq  ffffffff80208760 <memset>
ffffffff8020ab83:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff8020ab87:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
ffffffff8020ab8b:	48 89 d0             	mov    %rdx,%rax
ffffffff8020ab8e:	48 83 c4 20          	add    $0x20,%rsp
ffffffff8020ab92:	5d                   	pop    %rbp
ffffffff8020ab93:	c3                   	retq   
ffffffff8020ab94:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8020ab9b:	00 00 00 
ffffffff8020ab9e:	66 90                	xchg   %ax,%ax

ffffffff8020aba0 <ParseAndSaveBootInformation>:
ffffffff8020aba0:	55                   	push   %rbp
ffffffff8020aba1:	48 89 e5             	mov    %rsp,%rbp
ffffffff8020aba4:	48 81 ec 90 00 00 00 	sub    $0x90,%rsp
ffffffff8020abab:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8020abaf:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
ffffffff8020abb3:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
ffffffff8020abb7:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
ffffffff8020abbb:	8b 07                	mov    (%rdi),%eax
ffffffff8020abbd:	89 45 ec             	mov    %eax,-0x14(%rbp)
ffffffff8020abc0:	48 c7 c7 80 cd c8 80 	mov    $0xffffffff80c8cd80,%rdi
ffffffff8020abc7:	b8 60 00 00 00       	mov    $0x60,%eax
ffffffff8020abcc:	89 c2                	mov    %eax,%edx
ffffffff8020abce:	31 f6                	xor    %esi,%esi
ffffffff8020abd0:	e8 8b db ff ff       	callq  ffffffff80208760 <memset>
ffffffff8020abd5:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%rbp)
ffffffff8020abdc:	c7 45 e4 08 00 00 00 	movl   $0x8,-0x1c(%rbp)
ffffffff8020abe3:	48 89 45 90          	mov    %rax,-0x70(%rbp)
ffffffff8020abe7:	8b 45 e4             	mov    -0x1c(%rbp),%eax
ffffffff8020abea:	3b 45 ec             	cmp    -0x14(%rbp),%eax
ffffffff8020abed:	0f 83 d3 02 00 00    	jae    ffffffff8020aec6 <ParseAndSaveBootInformation+0x326>
ffffffff8020abf3:	8b 45 e4             	mov    -0x1c(%rbp),%eax
ffffffff8020abf6:	89 c1                	mov    %eax,%ecx
ffffffff8020abf8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff8020abfc:	8b 04 0a             	mov    (%rdx,%rcx,1),%eax
ffffffff8020abff:	89 45 e0             	mov    %eax,-0x20(%rbp)
ffffffff8020ac02:	8b 45 e0             	mov    -0x20(%rbp),%eax
ffffffff8020ac05:	89 c1                	mov    %eax,%ecx
ffffffff8020ac07:	48 89 ca             	mov    %rcx,%rdx
ffffffff8020ac0a:	48 83 ea 0f          	sub    $0xf,%rdx
ffffffff8020ac0e:	48 89 4d 88          	mov    %rcx,-0x78(%rbp)
ffffffff8020ac12:	48 89 55 80          	mov    %rdx,-0x80(%rbp)
ffffffff8020ac16:	0f 87 6a 02 00 00    	ja     ffffffff8020ae86 <ParseAndSaveBootInformation+0x2e6>
ffffffff8020ac1c:	48 8b 45 88          	mov    -0x78(%rbp),%rax
ffffffff8020ac20:	48 8b 0c c5 78 f5 20 	mov    -0x7fdf0a88(,%rax,8),%rcx
ffffffff8020ac27:	80 
ffffffff8020ac28:	ff e1                	jmpq   *%rcx
ffffffff8020ac2a:	8b 45 e4             	mov    -0x1c(%rbp),%eax
ffffffff8020ac2d:	89 c1                	mov    %eax,%ecx
ffffffff8020ac2f:	48 03 4d f0          	add    -0x10(%rbp),%rcx
ffffffff8020ac33:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
ffffffff8020ac37:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
ffffffff8020ac3b:	8b 41 04             	mov    0x4(%rcx),%eax
ffffffff8020ac3e:	83 e8 10             	sub    $0x10,%eax
ffffffff8020ac41:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
ffffffff8020ac45:	31 d2                	xor    %edx,%edx
ffffffff8020ac47:	f7 71 08             	divl   0x8(%rcx)
ffffffff8020ac4a:	89 45 d4             	mov    %eax,-0x2c(%rbp)
ffffffff8020ac4d:	48 63 4d d4          	movslq -0x2c(%rbp),%rcx
ffffffff8020ac51:	48 6b f9 18          	imul   $0x18,%rcx,%rdi
ffffffff8020ac55:	e8 a6 fe ff ff       	callq  ffffffff8020ab00 <bootstrap_malloc>
ffffffff8020ac5a:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
ffffffff8020ac5e:	c7 45 c4 00 00 00 00 	movl   $0x0,-0x3c(%rbp)
ffffffff8020ac65:	8b 45 c4             	mov    -0x3c(%rbp),%eax
ffffffff8020ac68:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
ffffffff8020ac6c:	8b 51 04             	mov    0x4(%rcx),%edx
ffffffff8020ac6f:	83 ea 10             	sub    $0x10,%edx
ffffffff8020ac72:	39 d0                	cmp    %edx,%eax
ffffffff8020ac74:	0f 83 cb 00 00 00    	jae    ffffffff8020ad45 <ParseAndSaveBootInformation+0x1a5>
ffffffff8020ac7a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8020ac7e:	8b 4d c4             	mov    -0x3c(%rbp),%ecx
ffffffff8020ac81:	89 ca                	mov    %ecx,%edx
ffffffff8020ac83:	48 8d 74 10 10       	lea    0x10(%rax,%rdx,1),%rsi
ffffffff8020ac88:	48 89 75 b8          	mov    %rsi,-0x48(%rbp)
ffffffff8020ac8c:	48 8b 74 10 10       	mov    0x10(%rax,%rdx,1),%rsi
ffffffff8020ac91:	48 8b 44 10 18       	mov    0x18(%rax,%rdx,1),%rax
ffffffff8020ac96:	48 01 c6             	add    %rax,%rsi
ffffffff8020ac99:	48 89 34 25 80 cd c8 	mov    %rsi,0xffffffff80c8cd80
ffffffff8020aca0:	80 
ffffffff8020aca1:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff8020aca5:	48 8b 00             	mov    (%rax),%rax
ffffffff8020aca8:	8b 4d c4             	mov    -0x3c(%rbp),%ecx
ffffffff8020acab:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
ffffffff8020acaf:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
ffffffff8020acb6:	89 c8                	mov    %ecx,%eax
ffffffff8020acb8:	31 c9                	xor    %ecx,%ecx
ffffffff8020acba:	48 89 95 70 ff ff ff 	mov    %rdx,-0x90(%rbp)
ffffffff8020acc1:	89 ca                	mov    %ecx,%edx
ffffffff8020acc3:	48 8b b5 70 ff ff ff 	mov    -0x90(%rbp),%rsi
ffffffff8020acca:	f7 76 08             	divl   0x8(%rsi)
ffffffff8020accd:	89 c0                	mov    %eax,%eax
ffffffff8020accf:	89 c7                	mov    %eax,%edi
ffffffff8020acd1:	48 6b ff 18          	imul   $0x18,%rdi,%rdi
ffffffff8020acd5:	48 03 7d c8          	add    -0x38(%rbp),%rdi
ffffffff8020acd9:	4c 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%r8
ffffffff8020ace0:	4c 89 07             	mov    %r8,(%rdi)
ffffffff8020ace3:	48 8b 7d b8          	mov    -0x48(%rbp),%rdi
ffffffff8020ace7:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
ffffffff8020aceb:	8b 45 c4             	mov    -0x3c(%rbp),%eax
ffffffff8020acee:	4c 8b 45 d8          	mov    -0x28(%rbp),%r8
ffffffff8020acf2:	31 c9                	xor    %ecx,%ecx
ffffffff8020acf4:	89 ca                	mov    %ecx,%edx
ffffffff8020acf6:	41 f7 70 08          	divl   0x8(%r8)
ffffffff8020acfa:	89 c0                	mov    %eax,%eax
ffffffff8020acfc:	41 89 c0             	mov    %eax,%r8d
ffffffff8020acff:	4d 6b c0 18          	imul   $0x18,%r8,%r8
ffffffff8020ad03:	4c 03 45 c8          	add    -0x38(%rbp),%r8
ffffffff8020ad07:	49 89 78 08          	mov    %rdi,0x8(%r8)
ffffffff8020ad0b:	48 8b 7d b8          	mov    -0x48(%rbp),%rdi
ffffffff8020ad0f:	8b 47 10             	mov    0x10(%rdi),%eax
ffffffff8020ad12:	41 88 c1             	mov    %al,%r9b
ffffffff8020ad15:	8b 45 c4             	mov    -0x3c(%rbp),%eax
ffffffff8020ad18:	48 8b 7d d8          	mov    -0x28(%rbp),%rdi
ffffffff8020ad1c:	31 c9                	xor    %ecx,%ecx
ffffffff8020ad1e:	89 ca                	mov    %ecx,%edx
ffffffff8020ad20:	f7 77 08             	divl   0x8(%rdi)
ffffffff8020ad23:	89 c0                	mov    %eax,%eax
ffffffff8020ad25:	89 c7                	mov    %eax,%edi
ffffffff8020ad27:	48 6b ff 18          	imul   $0x18,%rdi,%rdi
ffffffff8020ad2b:	48 03 7d c8          	add    -0x38(%rbp),%rdi
ffffffff8020ad2f:	44 88 4f 10          	mov    %r9b,0x10(%rdi)
ffffffff8020ad33:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8020ad37:	8b 48 08             	mov    0x8(%rax),%ecx
ffffffff8020ad3a:	03 4d c4             	add    -0x3c(%rbp),%ecx
ffffffff8020ad3d:	89 4d c4             	mov    %ecx,-0x3c(%rbp)
ffffffff8020ad40:	e9 20 ff ff ff       	jmpq   ffffffff8020ac65 <ParseAndSaveBootInformation+0xc5>
ffffffff8020ad45:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8020ad49:	48 89 04 25 c0 cd c8 	mov    %rax,0xffffffff80c8cdc0
ffffffff8020ad50:	80 
ffffffff8020ad51:	8b 4d d4             	mov    -0x2c(%rbp),%ecx
ffffffff8020ad54:	c1 e1 03             	shl    $0x3,%ecx
ffffffff8020ad57:	89 c8                	mov    %ecx,%eax
ffffffff8020ad59:	8d 0c 40             	lea    (%rax,%rax,2),%ecx
ffffffff8020ad5c:	89 0c 25 9c cd c8 80 	mov    %ecx,0xffffffff80c8cd9c
ffffffff8020ad63:	e9 1e 01 00 00       	jmpq   ffffffff8020ae86 <ParseAndSaveBootInformation+0x2e6>
ffffffff8020ad68:	8b 45 e4             	mov    -0x1c(%rbp),%eax
ffffffff8020ad6b:	89 c1                	mov    %eax,%ecx
ffffffff8020ad6d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff8020ad71:	48 89 d6             	mov    %rdx,%rsi
ffffffff8020ad74:	48 01 ce             	add    %rcx,%rsi
ffffffff8020ad77:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
ffffffff8020ad7b:	48 8b 4c 0a 08       	mov    0x8(%rdx,%rcx,1),%rcx
ffffffff8020ad80:	48 89 0c 25 c8 cd c8 	mov    %rcx,0xffffffff80c8cdc8
ffffffff8020ad87:	80 
ffffffff8020ad88:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
ffffffff8020ad8c:	8b 41 10             	mov    0x10(%rcx),%eax
ffffffff8020ad8f:	89 04 25 d0 cd c8 80 	mov    %eax,0xffffffff80c8cdd0
ffffffff8020ad96:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
ffffffff8020ad9a:	8b 41 14             	mov    0x14(%rcx),%eax
ffffffff8020ad9d:	89 04 25 d4 cd c8 80 	mov    %eax,0xffffffff80c8cdd4
ffffffff8020ada4:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
ffffffff8020ada8:	8b 41 18             	mov    0x18(%rcx),%eax
ffffffff8020adab:	89 04 25 d8 cd c8 80 	mov    %eax,0xffffffff80c8cdd8
ffffffff8020adb2:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
ffffffff8020adb6:	40 8a 79 1c          	mov    0x1c(%rcx),%dil
ffffffff8020adba:	40 88 3c 25 dc cd c8 	mov    %dil,0xffffffff80c8cddc
ffffffff8020adc1:	80 
ffffffff8020adc2:	e9 bf 00 00 00       	jmpq   ffffffff8020ae86 <ParseAndSaveBootInformation+0x2e6>
ffffffff8020adc7:	8b 45 e4             	mov    -0x1c(%rbp),%eax
ffffffff8020adca:	89 c1                	mov    %eax,%ecx
ffffffff8020adcc:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff8020add0:	48 89 d6             	mov    %rdx,%rsi
ffffffff8020add3:	48 01 ce             	add    %rcx,%rsi
ffffffff8020add6:	48 89 75 a8          	mov    %rsi,-0x58(%rbp)
ffffffff8020adda:	8b 04 0a             	mov    (%rdx,%rcx,1),%eax
ffffffff8020addd:	89 04 25 88 cd c8 80 	mov    %eax,0xffffffff80c8cd88
ffffffff8020ade4:	48 8b 4d a8          	mov    -0x58(%rbp),%rcx
ffffffff8020ade8:	8b 41 04             	mov    0x4(%rcx),%eax
ffffffff8020adeb:	89 04 25 8c cd c8 80 	mov    %eax,0xffffffff80c8cd8c
ffffffff8020adf2:	48 8b 4d a8          	mov    -0x58(%rbp),%rcx
ffffffff8020adf6:	8b 41 08             	mov    0x8(%rcx),%eax
ffffffff8020adf9:	89 04 25 90 cd c8 80 	mov    %eax,0xffffffff80c8cd90
ffffffff8020ae00:	48 8b 4d a8          	mov    -0x58(%rbp),%rcx
ffffffff8020ae04:	8b 41 0c             	mov    0xc(%rcx),%eax
ffffffff8020ae07:	89 04 25 94 cd c8 80 	mov    %eax,0xffffffff80c8cd94
ffffffff8020ae0e:	48 8b 4d a8          	mov    -0x58(%rbp),%rcx
ffffffff8020ae12:	8b 41 10             	mov    0x10(%rcx),%eax
ffffffff8020ae15:	89 04 25 98 cd c8 80 	mov    %eax,0xffffffff80c8cd98
ffffffff8020ae1c:	48 8b 4d a8          	mov    -0x58(%rbp),%rcx
ffffffff8020ae20:	48 83 c1 14          	add    $0x14,%rcx
ffffffff8020ae24:	48 89 0c 25 a0 cd c8 	mov    %rcx,0xffffffff80c8cda0
ffffffff8020ae2b:	80 
ffffffff8020ae2c:	eb 58                	jmp    ffffffff8020ae86 <ParseAndSaveBootInformation+0x2e6>
ffffffff8020ae2e:	8b 45 e4             	mov    -0x1c(%rbp),%eax
ffffffff8020ae31:	89 c1                	mov    %eax,%ecx
ffffffff8020ae33:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff8020ae37:	48 89 d6             	mov    %rdx,%rsi
ffffffff8020ae3a:	48 01 ce             	add    %rcx,%rsi
ffffffff8020ae3d:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
ffffffff8020ae41:	48 8d 4c 0a 08       	lea    0x8(%rdx,%rcx,1),%rcx
ffffffff8020ae46:	48 89 0c 25 a8 cd c8 	mov    %rcx,0xffffffff80c8cda8
ffffffff8020ae4d:	80 
ffffffff8020ae4e:	eb 36                	jmp    ffffffff8020ae86 <ParseAndSaveBootInformation+0x2e6>
ffffffff8020ae50:	8b 45 e4             	mov    -0x1c(%rbp),%eax
ffffffff8020ae53:	89 c1                	mov    %eax,%ecx
ffffffff8020ae55:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff8020ae59:	48 89 d6             	mov    %rdx,%rsi
ffffffff8020ae5c:	48 01 ce             	add    %rcx,%rsi
ffffffff8020ae5f:	48 89 75 98          	mov    %rsi,-0x68(%rbp)
ffffffff8020ae63:	8b 44 0a 08          	mov    0x8(%rdx,%rcx,1),%eax
ffffffff8020ae67:	89 c1                	mov    %eax,%ecx
ffffffff8020ae69:	48 89 0c 25 b0 cd c8 	mov    %rcx,0xffffffff80c8cdb0
ffffffff8020ae70:	80 
ffffffff8020ae71:	48 8b 4d 98          	mov    -0x68(%rbp),%rcx
ffffffff8020ae75:	8b 41 04             	mov    0x4(%rcx),%eax
ffffffff8020ae78:	89 c1                	mov    %eax,%ecx
ffffffff8020ae7a:	48 89 0c 25 b8 cd c8 	mov    %rcx,0xffffffff80c8cdb8
ffffffff8020ae81:	80 
ffffffff8020ae82:	eb 02                	jmp    ffffffff8020ae86 <ParseAndSaveBootInformation+0x2e6>
ffffffff8020ae84:	eb 00                	jmp    ffffffff8020ae86 <ParseAndSaveBootInformation+0x2e6>
ffffffff8020ae86:	8b 45 e4             	mov    -0x1c(%rbp),%eax
ffffffff8020ae89:	83 c0 04             	add    $0x4,%eax
ffffffff8020ae8c:	89 c0                	mov    %eax,%eax
ffffffff8020ae8e:	89 c1                	mov    %eax,%ecx
ffffffff8020ae90:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff8020ae94:	8b 04 0a             	mov    (%rdx,%rcx,1),%eax
ffffffff8020ae97:	89 45 e8             	mov    %eax,-0x18(%rbp)
ffffffff8020ae9a:	8b 45 e8             	mov    -0x18(%rbp),%eax
ffffffff8020ae9d:	83 e0 07             	and    $0x7,%eax
ffffffff8020aea0:	83 f8 00             	cmp    $0x0,%eax
ffffffff8020aea3:	74 13                	je     ffffffff8020aeb8 <ParseAndSaveBootInformation+0x318>
ffffffff8020aea5:	b8 08 00 00 00       	mov    $0x8,%eax
ffffffff8020aeaa:	8b 4d e8             	mov    -0x18(%rbp),%ecx
ffffffff8020aead:	83 e1 07             	and    $0x7,%ecx
ffffffff8020aeb0:	29 c8                	sub    %ecx,%eax
ffffffff8020aeb2:	03 45 e8             	add    -0x18(%rbp),%eax
ffffffff8020aeb5:	89 45 e8             	mov    %eax,-0x18(%rbp)
ffffffff8020aeb8:	8b 45 e8             	mov    -0x18(%rbp),%eax
ffffffff8020aebb:	03 45 e4             	add    -0x1c(%rbp),%eax
ffffffff8020aebe:	89 45 e4             	mov    %eax,-0x1c(%rbp)
ffffffff8020aec1:	e9 21 fd ff ff       	jmpq   ffffffff8020abe7 <ParseAndSaveBootInformation+0x47>
ffffffff8020aec6:	48 81 c4 90 00 00 00 	add    $0x90,%rsp
ffffffff8020aecd:	5d                   	pop    %rbp
ffffffff8020aece:	c3                   	retq   
ffffffff8020aecf:	90                   	nop

ffffffff8020aed0 <GetBootInfo>:
ffffffff8020aed0:	55                   	push   %rbp
ffffffff8020aed1:	48 89 e5             	mov    %rsp,%rbp
ffffffff8020aed4:	48 c7 c0 80 cd c8 80 	mov    $0xffffffff80c8cd80,%rax
ffffffff8020aedb:	5d                   	pop    %rbp
ffffffff8020aedc:	c3                   	retq   
ffffffff8020aedd:	0f 1f 00             	nopl   (%rax)

ffffffff8020aee0 <ACPITables_Initialize>:
ffffffff8020aee0:	55                   	push   %rbp
ffffffff8020aee1:	48 89 e5             	mov    %rsp,%rbp
ffffffff8020aee4:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff8020aee8:	48 c7 04 25 e0 cd c8 	movq   $0x0,0xffffffff80c8cde0
ffffffff8020aeef:	80 00 00 00 00 
ffffffff8020aef4:	e8 d7 ff ff ff       	callq  ffffffff8020aed0 <GetBootInfo>
ffffffff8020aef9:	48 8b 40 28          	mov    0x28(%rax),%rax
ffffffff8020aefd:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff8020af01:	0f b6 08             	movzbl (%rax),%ecx
ffffffff8020af04:	8a 14 25 e2 ae 24 80 	mov    0xffffffff8024aee2,%dl
ffffffff8020af0b:	0f be f2             	movsbl %dl,%esi
ffffffff8020af0e:	39 f1                	cmp    %esi,%ecx
ffffffff8020af10:	0f 85 90 00 00 00    	jne    ffffffff8020afa6 <ACPITables_Initialize+0xc6>
ffffffff8020af16:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
ffffffff8020af1a:	48 c7 c6 e2 ae 24 80 	mov    $0xffffffff8024aee2,%rsi
ffffffff8020af21:	b8 08 00 00 00       	mov    $0x8,%eax
ffffffff8020af26:	89 c2                	mov    %eax,%edx
ffffffff8020af28:	e8 33 da ff ff       	callq  ffffffff80208960 <strncmp>
ffffffff8020af2d:	83 f8 00             	cmp    $0x0,%eax
ffffffff8020af30:	75 72                	jne    ffffffff8020afa4 <ACPITables_Initialize+0xc4>
ffffffff8020af32:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8020af36:	48 89 04 25 e0 cd c8 	mov    %rax,0xffffffff80c8cde0
ffffffff8020af3d:	80 
ffffffff8020af3e:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
ffffffff8020af45:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8020af49:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
ffffffff8020af4d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8020af51:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
ffffffff8020af55:	48 83 c1 14          	add    $0x14,%rcx
ffffffff8020af59:	48 39 c8             	cmp    %rcx,%rax
ffffffff8020af5c:	73 1b                	jae    ffffffff8020af79 <ACPITables_Initialize+0x99>
ffffffff8020af5e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8020af62:	0f b6 08             	movzbl (%rax),%ecx
ffffffff8020af65:	03 4d ec             	add    -0x14(%rbp),%ecx
ffffffff8020af68:	89 4d ec             	mov    %ecx,-0x14(%rbp)
ffffffff8020af6b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8020af6f:	48 83 c0 01          	add    $0x1,%rax
ffffffff8020af73:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
ffffffff8020af77:	eb d4                	jmp    ffffffff8020af4d <ACPITables_Initialize+0x6d>
ffffffff8020af79:	8b 45 ec             	mov    -0x14(%rbp),%eax
ffffffff8020af7c:	25 ff 00 00 00       	and    $0xff,%eax
ffffffff8020af81:	83 f8 00             	cmp    $0x0,%eax
ffffffff8020af84:	75 10                	jne    ffffffff8020af96 <ACPITables_Initialize+0xb6>
ffffffff8020af86:	48 8b 04 25 e0 cd c8 	mov    0xffffffff80c8cde0,%rax
ffffffff8020af8d:	80 
ffffffff8020af8e:	8a 48 0f             	mov    0xf(%rax),%cl
ffffffff8020af91:	88 4d ff             	mov    %cl,-0x1(%rbp)
ffffffff8020af94:	eb 14                	jmp    ffffffff8020afaa <ACPITables_Initialize+0xca>
ffffffff8020af96:	48 c7 04 25 e0 cd c8 	movq   $0x0,0xffffffff80c8cde0
ffffffff8020af9d:	80 00 00 00 00 
ffffffff8020afa2:	eb 00                	jmp    ffffffff8020afa4 <ACPITables_Initialize+0xc4>
ffffffff8020afa4:	eb 00                	jmp    ffffffff8020afa6 <ACPITables_Initialize+0xc6>
ffffffff8020afa6:	c6 45 ff ff          	movb   $0xff,-0x1(%rbp)
ffffffff8020afaa:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
ffffffff8020afae:	48 83 c4 20          	add    $0x20,%rsp
ffffffff8020afb2:	5d                   	pop    %rbp
ffffffff8020afb3:	c3                   	retq   
ffffffff8020afb4:	66 90                	xchg   %ax,%ax
ffffffff8020afb6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8020afbd:	00 00 00 

ffffffff8020afc0 <ACPITables_ValidateChecksum>:
ffffffff8020afc0:	55                   	push   %rbp
ffffffff8020afc1:	48 89 e5             	mov    %rsp,%rbp
ffffffff8020afc4:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff8020afc8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8020afcc:	c6 45 f7 00          	movb   $0x0,-0x9(%rbp)
ffffffff8020afd0:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
ffffffff8020afd7:	8b 45 f0             	mov    -0x10(%rbp),%eax
ffffffff8020afda:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
ffffffff8020afde:	3b 41 04             	cmp    0x4(%rcx),%eax
ffffffff8020afe1:	73 25                	jae    ffffffff8020b008 <ACPITables_ValidateChecksum+0x48>
ffffffff8020afe3:	8b 45 f0             	mov    -0x10(%rbp),%eax
ffffffff8020afe6:	89 c1                	mov    %eax,%ecx
ffffffff8020afe8:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
ffffffff8020afec:	0f be 04 0a          	movsbl (%rdx,%rcx,1),%eax
ffffffff8020aff0:	0f b6 75 f7          	movzbl -0x9(%rbp),%esi
ffffffff8020aff4:	01 c6                	add    %eax,%esi
ffffffff8020aff6:	40 88 f7             	mov    %sil,%dil
ffffffff8020aff9:	40 88 7d f7          	mov    %dil,-0x9(%rbp)
ffffffff8020affd:	8b 45 f0             	mov    -0x10(%rbp),%eax
ffffffff8020b000:	83 c0 01             	add    $0x1,%eax
ffffffff8020b003:	89 45 f0             	mov    %eax,-0x10(%rbp)
ffffffff8020b006:	eb cf                	jmp    ffffffff8020afd7 <ACPITables_ValidateChecksum+0x17>
ffffffff8020b008:	0f b6 45 f7          	movzbl -0x9(%rbp),%eax
ffffffff8020b00c:	83 f8 00             	cmp    $0x0,%eax
ffffffff8020b00f:	0f 94 c1             	sete   %cl
ffffffff8020b012:	80 e1 01             	and    $0x1,%cl
ffffffff8020b015:	0f b6 c1             	movzbl %cl,%eax
ffffffff8020b018:	88 c1                	mov    %al,%cl
ffffffff8020b01a:	0f b6 c1             	movzbl %cl,%eax
ffffffff8020b01d:	48 83 c4 10          	add    $0x10,%rsp
ffffffff8020b021:	5d                   	pop    %rbp
ffffffff8020b022:	c3                   	retq   
ffffffff8020b023:	0f 1f 00             	nopl   (%rax)
ffffffff8020b026:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8020b02d:	00 00 00 

ffffffff8020b030 <ACPITables_FindTable>:
ffffffff8020b030:	55                   	push   %rbp
ffffffff8020b031:	48 89 e5             	mov    %rsp,%rbp
ffffffff8020b034:	48 81 ec 80 00 00 00 	sub    $0x80,%rsp
ffffffff8020b03b:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
ffffffff8020b03f:	89 75 ec             	mov    %esi,-0x14(%rbp)
ffffffff8020b042:	48 8b 3c 25 e0 cd c8 	mov    0xffffffff80c8cde0,%rdi
ffffffff8020b049:	80 
ffffffff8020b04a:	48 83 ff 00          	cmp    $0x0,%rdi
ffffffff8020b04e:	75 0d                	jne    ffffffff8020b05d <ACPITables_FindTable+0x2d>
ffffffff8020b050:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
ffffffff8020b057:	00 
ffffffff8020b058:	e9 4c 02 00 00       	jmpq   ffffffff8020b2a9 <ACPITables_FindTable+0x279>
ffffffff8020b05d:	48 8b 04 25 e0 cd c8 	mov    0xffffffff80c8cde0,%rax
ffffffff8020b064:	80 
ffffffff8020b065:	0f b6 48 0f          	movzbl 0xf(%rax),%ecx
ffffffff8020b069:	83 f9 00             	cmp    $0x0,%ecx
ffffffff8020b06c:	0f 84 18 01 00 00    	je     ffffffff8020b18a <ACPITables_FindTable+0x15a>
ffffffff8020b072:	48 8b 04 25 e0 cd c8 	mov    0xffffffff80c8cde0,%rax
ffffffff8020b079:	80 
ffffffff8020b07a:	48 83 78 18 00       	cmpq   $0x0,0x18(%rax)
ffffffff8020b07f:	0f 84 05 01 00 00    	je     ffffffff8020b18a <ACPITables_FindTable+0x15a>
ffffffff8020b085:	31 c0                	xor    %eax,%eax
ffffffff8020b087:	48 8b 0c 25 e0 cd c8 	mov    0xffffffff80c8cde0,%rcx
ffffffff8020b08e:	80 
ffffffff8020b08f:	48 8b 71 18          	mov    0x18(%rcx),%rsi
ffffffff8020b093:	31 ff                	xor    %edi,%edi
ffffffff8020b095:	89 45 a4             	mov    %eax,-0x5c(%rbp)
ffffffff8020b098:	e8 93 6c ff ff       	callq  ffffffff80201d30 <GetVirtualAddress>
ffffffff8020b09d:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
ffffffff8020b0a1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8020b0a5:	48 89 c7             	mov    %rax,%rdi
ffffffff8020b0a8:	e8 13 ff ff ff       	callq  ffffffff8020afc0 <ACPITables_ValidateChecksum>
ffffffff8020b0ad:	3c 00                	cmp    $0x0,%al
ffffffff8020b0af:	75 10                	jne    ffffffff8020b0c1 <ACPITables_FindTable+0x91>
ffffffff8020b0b1:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
ffffffff8020b0b8:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff8020b0bc:	e9 e8 01 00 00       	jmpq   ffffffff8020b2a9 <ACPITables_FindTable+0x279>
ffffffff8020b0c1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8020b0c5:	8b 48 04             	mov    0x4(%rax),%ecx
ffffffff8020b0c8:	89 c8                	mov    %ecx,%eax
ffffffff8020b0ca:	48 83 e8 24          	sub    $0x24,%rax
ffffffff8020b0ce:	48 c1 e8 03          	shr    $0x3,%rax
ffffffff8020b0d2:	89 c1                	mov    %eax,%ecx
ffffffff8020b0d4:	89 4d dc             	mov    %ecx,-0x24(%rbp)
ffffffff8020b0d7:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%rbp)
ffffffff8020b0de:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%rbp)
ffffffff8020b0e5:	8b 45 d4             	mov    -0x2c(%rbp),%eax
ffffffff8020b0e8:	3b 45 dc             	cmp    -0x24(%rbp),%eax
ffffffff8020b0eb:	0f 8d 94 00 00 00    	jge    ffffffff8020b185 <ACPITables_FindTable+0x155>
ffffffff8020b0f1:	48 63 45 d4          	movslq -0x2c(%rbp),%rax
ffffffff8020b0f5:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
ffffffff8020b0f9:	48 83 7c c1 24 00    	cmpq   $0x0,0x24(%rcx,%rax,8)
ffffffff8020b0ff:	75 02                	jne    ffffffff8020b103 <ACPITables_FindTable+0xd3>
ffffffff8020b101:	eb 74                	jmp    ffffffff8020b177 <ACPITables_FindTable+0x147>
ffffffff8020b103:	31 c0                	xor    %eax,%eax
ffffffff8020b105:	48 63 4d d4          	movslq -0x2c(%rbp),%rcx
ffffffff8020b109:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
ffffffff8020b10d:	48 8b 74 ca 24       	mov    0x24(%rdx,%rcx,8),%rsi
ffffffff8020b112:	31 ff                	xor    %edi,%edi
ffffffff8020b114:	89 45 a0             	mov    %eax,-0x60(%rbp)
ffffffff8020b117:	e8 14 6c ff ff       	callq  ffffffff80201d30 <GetVirtualAddress>
ffffffff8020b11c:	bf 04 00 00 00       	mov    $0x4,%edi
ffffffff8020b121:	89 f9                	mov    %edi,%ecx
ffffffff8020b123:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
ffffffff8020b127:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
ffffffff8020b12b:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
ffffffff8020b12f:	41 b8 04 00 00 00    	mov    $0x4,%r8d
ffffffff8020b135:	44 89 c2             	mov    %r8d,%edx
ffffffff8020b138:	48 89 4d 98          	mov    %rcx,-0x68(%rbp)
ffffffff8020b13c:	e8 1f d8 ff ff       	callq  ffffffff80208960 <strncmp>
ffffffff8020b141:	83 f8 00             	cmp    $0x0,%eax
ffffffff8020b144:	75 2f                	jne    ffffffff8020b175 <ACPITables_FindTable+0x145>
ffffffff8020b146:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
ffffffff8020b14a:	e8 71 fe ff ff       	callq  ffffffff8020afc0 <ACPITables_ValidateChecksum>
ffffffff8020b14f:	0f b6 c8             	movzbl %al,%ecx
ffffffff8020b152:	83 f9 00             	cmp    $0x0,%ecx
ffffffff8020b155:	74 1e                	je     ffffffff8020b175 <ACPITables_FindTable+0x145>
ffffffff8020b157:	8b 45 d8             	mov    -0x28(%rbp),%eax
ffffffff8020b15a:	3b 45 ec             	cmp    -0x14(%rbp),%eax
ffffffff8020b15d:	75 0d                	jne    ffffffff8020b16c <ACPITables_FindTable+0x13c>
ffffffff8020b15f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8020b163:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff8020b167:	e9 3d 01 00 00       	jmpq   ffffffff8020b2a9 <ACPITables_FindTable+0x279>
ffffffff8020b16c:	8b 45 d8             	mov    -0x28(%rbp),%eax
ffffffff8020b16f:	83 c0 01             	add    $0x1,%eax
ffffffff8020b172:	89 45 d8             	mov    %eax,-0x28(%rbp)
ffffffff8020b175:	eb 00                	jmp    ffffffff8020b177 <ACPITables_FindTable+0x147>
ffffffff8020b177:	8b 45 d4             	mov    -0x2c(%rbp),%eax
ffffffff8020b17a:	83 c0 01             	add    $0x1,%eax
ffffffff8020b17d:	89 45 d4             	mov    %eax,-0x2c(%rbp)
ffffffff8020b180:	e9 60 ff ff ff       	jmpq   ffffffff8020b0e5 <ACPITables_FindTable+0xb5>
ffffffff8020b185:	e9 17 01 00 00       	jmpq   ffffffff8020b2a1 <ACPITables_FindTable+0x271>
ffffffff8020b18a:	48 8b 04 25 e0 cd c8 	mov    0xffffffff80c8cde0,%rax
ffffffff8020b191:	80 
ffffffff8020b192:	8a 48 0f             	mov    0xf(%rax),%cl
ffffffff8020b195:	84 c9                	test   %cl,%cl
ffffffff8020b197:	0f 94 c1             	sete   %cl
ffffffff8020b19a:	0f b6 d1             	movzbl %cl,%edx
ffffffff8020b19d:	48 83 78 18 00       	cmpq   $0x0,0x18(%rax)
ffffffff8020b1a2:	0f 95 c1             	setne  %cl
ffffffff8020b1a5:	80 f1 ff             	xor    $0xff,%cl
ffffffff8020b1a8:	80 e1 01             	and    $0x1,%cl
ffffffff8020b1ab:	0f b6 f1             	movzbl %cl,%esi
ffffffff8020b1ae:	09 f2                	or     %esi,%edx
ffffffff8020b1b0:	83 fa 00             	cmp    $0x0,%edx
ffffffff8020b1b3:	0f 84 e6 00 00 00    	je     ffffffff8020b29f <ACPITables_FindTable+0x26f>
ffffffff8020b1b9:	31 c0                	xor    %eax,%eax
ffffffff8020b1bb:	48 8b 0c 25 e0 cd c8 	mov    0xffffffff80c8cde0,%rcx
ffffffff8020b1c2:	80 
ffffffff8020b1c3:	8b 51 10             	mov    0x10(%rcx),%edx
ffffffff8020b1c6:	89 d6                	mov    %edx,%esi
ffffffff8020b1c8:	31 ff                	xor    %edi,%edi
ffffffff8020b1ca:	89 45 94             	mov    %eax,-0x6c(%rbp)
ffffffff8020b1cd:	e8 5e 6b ff ff       	callq  ffffffff80201d30 <GetVirtualAddress>
ffffffff8020b1d2:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
ffffffff8020b1d6:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8020b1da:	48 89 c7             	mov    %rax,%rdi
ffffffff8020b1dd:	e8 de fd ff ff       	callq  ffffffff8020afc0 <ACPITables_ValidateChecksum>
ffffffff8020b1e2:	3c 00                	cmp    $0x0,%al
ffffffff8020b1e4:	75 0d                	jne    ffffffff8020b1f3 <ACPITables_FindTable+0x1c3>
ffffffff8020b1e6:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
ffffffff8020b1ed:	00 
ffffffff8020b1ee:	e9 b6 00 00 00       	jmpq   ffffffff8020b2a9 <ACPITables_FindTable+0x279>
ffffffff8020b1f3:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8020b1f7:	8b 48 04             	mov    0x4(%rax),%ecx
ffffffff8020b1fa:	89 c8                	mov    %ecx,%eax
ffffffff8020b1fc:	48 83 e8 24          	sub    $0x24,%rax
ffffffff8020b200:	48 c1 e8 02          	shr    $0x2,%rax
ffffffff8020b204:	89 c1                	mov    %eax,%ecx
ffffffff8020b206:	89 4d bc             	mov    %ecx,-0x44(%rbp)
ffffffff8020b209:	c7 45 b8 00 00 00 00 	movl   $0x0,-0x48(%rbp)
ffffffff8020b210:	c7 45 b4 00 00 00 00 	movl   $0x0,-0x4c(%rbp)
ffffffff8020b217:	8b 45 b4             	mov    -0x4c(%rbp),%eax
ffffffff8020b21a:	3b 45 bc             	cmp    -0x44(%rbp),%eax
ffffffff8020b21d:	7d 7e                	jge    ffffffff8020b29d <ACPITables_FindTable+0x26d>
ffffffff8020b21f:	31 c0                	xor    %eax,%eax
ffffffff8020b221:	48 63 4d b4          	movslq -0x4c(%rbp),%rcx
ffffffff8020b225:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
ffffffff8020b229:	8b 74 8a 24          	mov    0x24(%rdx,%rcx,4),%esi
ffffffff8020b22d:	31 ff                	xor    %edi,%edi
ffffffff8020b22f:	89 45 90             	mov    %eax,-0x70(%rbp)
ffffffff8020b232:	e8 f9 6a ff ff       	callq  ffffffff80201d30 <GetVirtualAddress>
ffffffff8020b237:	bf 04 00 00 00       	mov    $0x4,%edi
ffffffff8020b23c:	89 f9                	mov    %edi,%ecx
ffffffff8020b23e:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
ffffffff8020b242:	48 8b 7d a8          	mov    -0x58(%rbp),%rdi
ffffffff8020b246:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
ffffffff8020b24a:	41 b8 04 00 00 00    	mov    $0x4,%r8d
ffffffff8020b250:	44 89 c2             	mov    %r8d,%edx
ffffffff8020b253:	48 89 4d 88          	mov    %rcx,-0x78(%rbp)
ffffffff8020b257:	e8 04 d7 ff ff       	callq  ffffffff80208960 <strncmp>
ffffffff8020b25c:	83 f8 00             	cmp    $0x0,%eax
ffffffff8020b25f:	75 2c                	jne    ffffffff8020b28d <ACPITables_FindTable+0x25d>
ffffffff8020b261:	48 8b 7d a8          	mov    -0x58(%rbp),%rdi
ffffffff8020b265:	e8 56 fd ff ff       	callq  ffffffff8020afc0 <ACPITables_ValidateChecksum>
ffffffff8020b26a:	0f b6 c8             	movzbl %al,%ecx
ffffffff8020b26d:	83 f9 00             	cmp    $0x0,%ecx
ffffffff8020b270:	74 1b                	je     ffffffff8020b28d <ACPITables_FindTable+0x25d>
ffffffff8020b272:	8b 45 b8             	mov    -0x48(%rbp),%eax
ffffffff8020b275:	3b 45 ec             	cmp    -0x14(%rbp),%eax
ffffffff8020b278:	75 0a                	jne    ffffffff8020b284 <ACPITables_FindTable+0x254>
ffffffff8020b27a:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
ffffffff8020b27e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff8020b282:	eb 25                	jmp    ffffffff8020b2a9 <ACPITables_FindTable+0x279>
ffffffff8020b284:	8b 45 b8             	mov    -0x48(%rbp),%eax
ffffffff8020b287:	83 c0 01             	add    $0x1,%eax
ffffffff8020b28a:	89 45 b8             	mov    %eax,-0x48(%rbp)
ffffffff8020b28d:	eb 00                	jmp    ffffffff8020b28f <ACPITables_FindTable+0x25f>
ffffffff8020b28f:	8b 45 b4             	mov    -0x4c(%rbp),%eax
ffffffff8020b292:	83 c0 01             	add    $0x1,%eax
ffffffff8020b295:	89 45 b4             	mov    %eax,-0x4c(%rbp)
ffffffff8020b298:	e9 7a ff ff ff       	jmpq   ffffffff8020b217 <ACPITables_FindTable+0x1e7>
ffffffff8020b29d:	eb 00                	jmp    ffffffff8020b29f <ACPITables_FindTable+0x26f>
ffffffff8020b29f:	eb 00                	jmp    ffffffff8020b2a1 <ACPITables_FindTable+0x271>
ffffffff8020b2a1:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
ffffffff8020b2a8:	00 
ffffffff8020b2a9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8020b2ad:	48 81 c4 80 00 00 00 	add    $0x80,%rsp
ffffffff8020b2b4:	5d                   	pop    %rbp
ffffffff8020b2b5:	c3                   	retq   
ffffffff8020b2b6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8020b2bd:	00 00 00 

ffffffff8020b2c0 <kmalloc_init>:
ffffffff8020b2c0:	55                   	push   %rbp
ffffffff8020b2c1:	48 89 e5             	mov    %rsp,%rbp
ffffffff8020b2c4:	48 83 ec 50          	sub    $0x50,%rsp
ffffffff8020b2c8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8020b2cc:	e8 3f 72 ff ff       	callq  ffffffff80202510 <CreateBootstrapSpinlock>
ffffffff8020b2d1:	48 89 04 25 10 44 28 	mov    %rax,0xffffffff80284410
ffffffff8020b2d8:	80 
ffffffff8020b2d9:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
ffffffff8020b2e0:	00 
ffffffff8020b2e1:	e8 da 6a ff ff       	callq  ffffffff80201dc0 <GetActiveVirtualMemoryInstance>
ffffffff8020b2e6:	b9 00 00 00 10       	mov    $0x10000000,%ecx
ffffffff8020b2eb:	89 cf                	mov    %ecx,%edi
ffffffff8020b2ed:	48 8d 75 f0          	lea    -0x10(%rbp),%rsi
ffffffff8020b2f1:	31 c9                	xor    %ecx,%ecx
ffffffff8020b2f3:	41 b8 04 00 00 00    	mov    $0x4,%r8d
ffffffff8020b2f9:	48 89 7d e0          	mov    %rdi,-0x20(%rbp)
ffffffff8020b2fd:	48 89 c7             	mov    %rax,%rdi
ffffffff8020b300:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
ffffffff8020b304:	89 4d dc             	mov    %ecx,-0x24(%rbp)
ffffffff8020b307:	e8 f4 6d ff ff       	callq  ffffffff80202100 <FindFreeVirtualAddress>
ffffffff8020b30c:	bf 00 00 01 00       	mov    $0x10000,%edi
ffffffff8020b311:	89 45 d8             	mov    %eax,-0x28(%rbp)
ffffffff8020b314:	e8 97 70 ff ff       	callq  ffffffff802023b0 <AllocatePhysicalPageCont>
ffffffff8020b319:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff8020b31d:	e8 9e 6a ff ff       	callq  ffffffff80201dc0 <GetActiveVirtualMemoryInstance>
ffffffff8020b322:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff8020b326:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
ffffffff8020b32a:	48 89 e6             	mov    %rsp,%rsi
ffffffff8020b32d:	c7 46 08 04 00 00 00 	movl   $0x4,0x8(%rsi)
ffffffff8020b334:	c7 06 00 00 00 00    	movl   $0x0,(%rsi)
ffffffff8020b33a:	8b 7d dc             	mov    -0x24(%rbp),%edi
ffffffff8020b33d:	89 fe                	mov    %edi,%esi
ffffffff8020b33f:	48 89 c7             	mov    %rax,%rdi
ffffffff8020b342:	4c 8b 45 e0          	mov    -0x20(%rbp),%r8
ffffffff8020b346:	44 8b 4d dc          	mov    -0x24(%rbp),%r9d
ffffffff8020b34a:	e8 a1 6b ff ff       	callq  ffffffff80201ef0 <MapPage>
ffffffff8020b34f:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
ffffffff8020b353:	c7 01 00 00 00 00    	movl   $0x0,(%rcx)
ffffffff8020b359:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
ffffffff8020b35d:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
ffffffff8020b361:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
ffffffff8020b365:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
ffffffff8020b369:	48 c7 41 18 00 00 00 	movq   $0x0,0x18(%rcx)
ffffffff8020b370:	00 
ffffffff8020b371:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
ffffffff8020b375:	c7 41 24 00 00 00 00 	movl   $0x0,0x24(%rcx)
ffffffff8020b37c:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
ffffffff8020b380:	48 c7 41 28 00 00 00 	movq   $0x0,0x28(%rcx)
ffffffff8020b387:	00 
ffffffff8020b388:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
ffffffff8020b38c:	48 c7 41 30 00 00 00 	movq   $0x0,0x30(%rcx)
ffffffff8020b393:	00 
ffffffff8020b394:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
ffffffff8020b398:	48 89 0c 25 f0 cd c8 	mov    %rcx,0xffffffff80c8cdf0
ffffffff8020b39f:	80 
ffffffff8020b3a0:	48 89 0c 25 f8 cd c8 	mov    %rcx,0xffffffff80c8cdf8
ffffffff8020b3a7:	80 
ffffffff8020b3a8:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
ffffffff8020b3ac:	48 81 c1 00 00 10 00 	add    $0x100000,%rcx
ffffffff8020b3b3:	48 89 0c 25 08 44 28 	mov    %rcx,0xffffffff80284408
ffffffff8020b3ba:	80 
ffffffff8020b3bb:	c7 04 25 e8 cd c8 80 	movl   $0xaaaa,0xffffffff80c8cde8
ffffffff8020b3c2:	aa aa 00 00 
ffffffff8020b3c6:	c7 04 25 ec cd c8 80 	movl   $0xff00000,0xffffffff80c8cdec
ffffffff8020b3cd:	00 00 f0 0f 
ffffffff8020b3d1:	48 8b 3c 25 f0 cd c8 	mov    0xffffffff80c8cdf0,%rdi
ffffffff8020b3d8:	80 
ffffffff8020b3d9:	41 b9 00 00 10 00    	mov    $0x100000,%r9d
ffffffff8020b3df:	44 89 ca             	mov    %r9d,%edx
ffffffff8020b3e2:	8b 75 dc             	mov    -0x24(%rbp),%esi
ffffffff8020b3e5:	89 45 d4             	mov    %eax,-0x2c(%rbp)
ffffffff8020b3e8:	e8 73 d3 ff ff       	callq  ffffffff80208760 <memset>
ffffffff8020b3ed:	48 8b 0c 25 08 44 28 	mov    0xffffffff80284408,%rcx
ffffffff8020b3f4:	80 
ffffffff8020b3f5:	48 8b 14 25 f0 cd c8 	mov    0xffffffff80c8cdf0,%rdx
ffffffff8020b3fc:	80 
ffffffff8020b3fd:	48 89 0a             	mov    %rcx,(%rdx)
ffffffff8020b400:	8b 34 25 ec cd c8 80 	mov    0xffffffff80c8cdec,%esi
ffffffff8020b407:	89 f1                	mov    %esi,%ecx
ffffffff8020b409:	48 8b 14 25 f0 cd c8 	mov    0xffffffff80c8cdf0,%rdx
ffffffff8020b410:	80 
ffffffff8020b411:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
ffffffff8020b415:	48 8b 0c 25 f0 cd c8 	mov    0xffffffff80c8cdf0,%rcx
ffffffff8020b41c:	80 
ffffffff8020b41d:	48 c7 41 10 00 00 00 	movq   $0x0,0x10(%rcx)
ffffffff8020b424:	00 
ffffffff8020b425:	48 8b 0c 25 f0 cd c8 	mov    0xffffffff80c8cdf0,%rcx
ffffffff8020b42c:	80 
ffffffff8020b42d:	48 8b 11             	mov    (%rcx),%rdx
ffffffff8020b430:	48 83 e2 fe          	and    $0xfffffffffffffffe,%rdx
ffffffff8020b434:	48 89 11             	mov    %rdx,(%rcx)
ffffffff8020b437:	48 8b 0c 25 f8 cd c8 	mov    0xffffffff80c8cdf8,%rcx
ffffffff8020b43e:	80 
ffffffff8020b43f:	48 83 c1 18          	add    $0x18,%rcx
ffffffff8020b443:	48 89 0c 25 f8 cd c8 	mov    %rcx,0xffffffff80c8cdf8
ffffffff8020b44a:	80 
ffffffff8020b44b:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
ffffffff8020b44f:	48 83 c4 50          	add    $0x50,%rsp
ffffffff8020b453:	5d                   	pop    %rbp
ffffffff8020b454:	c3                   	retq   
ffffffff8020b455:	90                   	nop
ffffffff8020b456:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8020b45d:	00 00 00 

ffffffff8020b460 <kcompact>:
ffffffff8020b460:	55                   	push   %rbp
ffffffff8020b461:	48 89 e5             	mov    %rsp,%rbp
ffffffff8020b464:	50                   	push   %rax
ffffffff8020b465:	48 8b 04 25 f0 cd c8 	mov    0xffffffff80c8cdf0,%rax
ffffffff8020b46c:	80 
ffffffff8020b46d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff8020b471:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8020b475:	48 83 78 10 00       	cmpq   $0x0,0x10(%rax)
ffffffff8020b47a:	74 73                	je     ffffffff8020b4ef <kcompact+0x8f>
ffffffff8020b47c:	eb 00                	jmp    ffffffff8020b47e <kcompact+0x1e>
ffffffff8020b47e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8020b482:	48 83 78 10 00       	cmpq   $0x0,0x10(%rax)
ffffffff8020b487:	74 21                	je     ffffffff8020b4aa <kcompact+0x4a>
ffffffff8020b489:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8020b48d:	48 8b 00             	mov    (%rax),%rax
ffffffff8020b490:	48 83 e0 01          	and    $0x1,%rax
ffffffff8020b494:	48 83 f8 00          	cmp    $0x0,%rax
ffffffff8020b498:	75 02                	jne    ffffffff8020b49c <kcompact+0x3c>
ffffffff8020b49a:	eb 0e                	jmp    ffffffff8020b4aa <kcompact+0x4a>
ffffffff8020b49c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8020b4a0:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff8020b4a4:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff8020b4a8:	eb d4                	jmp    ffffffff8020b47e <kcompact+0x1e>
ffffffff8020b4aa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8020b4ae:	48 83 78 10 00       	cmpq   $0x0,0x10(%rax)
ffffffff8020b4b3:	74 38                	je     ffffffff8020b4ed <kcompact+0x8d>
ffffffff8020b4b5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8020b4b9:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff8020b4bd:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff8020b4c1:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
ffffffff8020b4c5:	48 03 41 08          	add    0x8(%rcx),%rax
ffffffff8020b4c9:	48 89 41 08          	mov    %rax,0x8(%rcx)
ffffffff8020b4cd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8020b4d1:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff8020b4d5:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff8020b4d9:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
ffffffff8020b4dd:	48 89 41 10          	mov    %rax,0x10(%rcx)
ffffffff8020b4e1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8020b4e5:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff8020b4e9:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff8020b4ed:	eb 82                	jmp    ffffffff8020b471 <kcompact+0x11>
ffffffff8020b4ef:	48 83 c4 08          	add    $0x8,%rsp
ffffffff8020b4f3:	5d                   	pop    %rbp
ffffffff8020b4f4:	c3                   	retq   
ffffffff8020b4f5:	90                   	nop
ffffffff8020b4f6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8020b4fd:	00 00 00 

ffffffff8020b500 <kmalloc>:
ffffffff8020b500:	55                   	push   %rbp
ffffffff8020b501:	48 89 e5             	mov    %rsp,%rbp
ffffffff8020b504:	48 83 ec 40          	sub    $0x40,%rsp
ffffffff8020b508:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
ffffffff8020b50c:	48 8b 3c 25 10 44 28 	mov    0xffffffff80284410,%rdi
ffffffff8020b513:	80 
ffffffff8020b514:	e8 47 70 ff ff       	callq  ffffffff80202560 <LockSpinlock>
ffffffff8020b519:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
ffffffff8020b51d:	48 83 c7 30          	add    $0x30,%rdi
ffffffff8020b521:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
ffffffff8020b525:	48 8b 3c 25 f0 cd c8 	mov    0xffffffff80c8cdf0,%rdi
ffffffff8020b52c:	80 
ffffffff8020b52d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff8020b531:	88 45 cf             	mov    %al,-0x31(%rbp)
ffffffff8020b534:	31 c0                	xor    %eax,%eax
ffffffff8020b536:	88 c1                	mov    %al,%cl
ffffffff8020b538:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
ffffffff8020b53d:	88 4d ce             	mov    %cl,-0x32(%rbp)
ffffffff8020b540:	74 0f                	je     ffffffff8020b551 <kmalloc+0x51>
ffffffff8020b542:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8020b546:	48 83 78 10 00       	cmpq   $0x0,0x10(%rax)
ffffffff8020b54b:	0f 95 c1             	setne  %cl
ffffffff8020b54e:	88 4d ce             	mov    %cl,-0x32(%rbp)
ffffffff8020b551:	8a 45 ce             	mov    -0x32(%rbp),%al
ffffffff8020b554:	a8 01                	test   $0x1,%al
ffffffff8020b556:	75 02                	jne    ffffffff8020b55a <kmalloc+0x5a>
ffffffff8020b558:	eb 2f                	jmp    ffffffff8020b589 <kmalloc+0x89>
ffffffff8020b55a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8020b55e:	48 8b 00             	mov    (%rax),%rax
ffffffff8020b561:	48 83 e0 01          	and    $0x1,%rax
ffffffff8020b565:	48 83 f8 00          	cmp    $0x0,%rax
ffffffff8020b569:	75 10                	jne    ffffffff8020b57b <kmalloc+0x7b>
ffffffff8020b56b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8020b56f:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff8020b573:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
ffffffff8020b577:	72 02                	jb     ffffffff8020b57b <kmalloc+0x7b>
ffffffff8020b579:	eb 0e                	jmp    ffffffff8020b589 <kmalloc+0x89>
ffffffff8020b57b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8020b57f:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff8020b583:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff8020b587:	eb ab                	jmp    ffffffff8020b534 <kmalloc+0x34>
ffffffff8020b589:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8020b58d:	48 8b 00             	mov    (%rax),%rax
ffffffff8020b590:	48 83 e0 01          	and    $0x1,%rax
ffffffff8020b594:	48 83 f8 01          	cmp    $0x1,%rax
ffffffff8020b598:	0f 94 c1             	sete   %cl
ffffffff8020b59b:	80 e1 01             	and    $0x1,%cl
ffffffff8020b59e:	0f b6 d1             	movzbl %cl,%edx
ffffffff8020b5a1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8020b5a5:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff8020b5a9:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
ffffffff8020b5ad:	0f 92 c1             	setb   %cl
ffffffff8020b5b0:	80 e1 01             	and    $0x1,%cl
ffffffff8020b5b3:	0f b6 f1             	movzbl %cl,%esi
ffffffff8020b5b6:	09 f2                	or     %esi,%edx
ffffffff8020b5b8:	83 fa 00             	cmp    $0x0,%edx
ffffffff8020b5bb:	74 5c                	je     ffffffff8020b619 <kmalloc+0x119>
ffffffff8020b5bd:	48 8b 3c 25 10 44 28 	mov    0xffffffff80284410,%rdi
ffffffff8020b5c4:	80 
ffffffff8020b5c5:	e8 66 70 ff ff       	callq  ffffffff80202630 <UnlockSpinlock>
ffffffff8020b5ca:	8a 0c 25 00 ce c8 80 	mov    0xffffffff80c8ce00,%cl
ffffffff8020b5d1:	80 f9 00             	cmp    $0x0,%cl
ffffffff8020b5d4:	88 45 cd             	mov    %al,-0x33(%rbp)
ffffffff8020b5d7:	75 33                	jne    ffffffff8020b60c <kmalloc+0x10c>
ffffffff8020b5d9:	c6 04 25 00 ce c8 80 	movb   $0x1,0xffffffff80c8ce00
ffffffff8020b5e0:	01 
ffffffff8020b5e1:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
ffffffff8020b5e5:	e8 16 ff ff ff       	callq  ffffffff8020b500 <kmalloc>
ffffffff8020b5ea:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
ffffffff8020b5ee:	c6 04 25 00 ce c8 80 	movb   $0x0,0xffffffff80c8ce00
ffffffff8020b5f5:	00 
ffffffff8020b5f6:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
ffffffff8020b5fa:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
ffffffff8020b5fe:	e8 fd 00 00 00       	callq  ffffffff8020b700 <ksetup_instrumentation>
ffffffff8020b603:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff8020b607:	e9 de 00 00 00       	jmpq   ffffffff8020b6ea <kmalloc+0x1ea>
ffffffff8020b60c:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
ffffffff8020b613:	00 
ffffffff8020b614:	e9 d1 00 00 00       	jmpq   ffffffff8020b6ea <kmalloc+0x1ea>
ffffffff8020b619:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8020b61d:	48 8b 00             	mov    (%rax),%rax
ffffffff8020b620:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
ffffffff8020b624:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
ffffffff8020b628:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8020b62c:	48 8b 40 08          	mov    0x8(%rax),%rax
ffffffff8020b630:	48 2b 45 f0          	sub    -0x10(%rbp),%rax
ffffffff8020b634:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
ffffffff8020b638:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
ffffffff8020b63d:	74 70                	je     ffffffff8020b6af <kmalloc+0x1af>
ffffffff8020b63f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8020b643:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
ffffffff8020b647:	48 01 c8             	add    %rcx,%rax
ffffffff8020b64a:	48 8b 0c 25 f8 cd c8 	mov    0xffffffff80c8cdf8,%rcx
ffffffff8020b651:	80 
ffffffff8020b652:	48 89 01             	mov    %rax,(%rcx)
ffffffff8020b655:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff8020b659:	48 8b 0c 25 f8 cd c8 	mov    0xffffffff80c8cdf8,%rcx
ffffffff8020b660:	80 
ffffffff8020b661:	48 89 41 08          	mov    %rax,0x8(%rcx)
ffffffff8020b665:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8020b669:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff8020b66d:	48 8b 0c 25 f8 cd c8 	mov    0xffffffff80c8cdf8,%rcx
ffffffff8020b674:	80 
ffffffff8020b675:	48 89 41 10          	mov    %rax,0x10(%rcx)
ffffffff8020b679:	48 8b 04 25 f8 cd c8 	mov    0xffffffff80c8cdf8,%rax
ffffffff8020b680:	80 
ffffffff8020b681:	48 8b 08             	mov    (%rax),%rcx
ffffffff8020b684:	48 83 e1 fe          	and    $0xfffffffffffffffe,%rcx
ffffffff8020b688:	48 89 08             	mov    %rcx,(%rax)
ffffffff8020b68b:	48 8b 04 25 f8 cd c8 	mov    0xffffffff80c8cdf8,%rax
ffffffff8020b692:	80 
ffffffff8020b693:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
ffffffff8020b697:	48 89 41 10          	mov    %rax,0x10(%rcx)
ffffffff8020b69b:	48 8b 04 25 f8 cd c8 	mov    0xffffffff80c8cdf8,%rax
ffffffff8020b6a2:	80 
ffffffff8020b6a3:	48 83 c0 18          	add    $0x18,%rax
ffffffff8020b6a7:	48 89 04 25 f8 cd c8 	mov    %rax,0xffffffff80c8cdf8
ffffffff8020b6ae:	80 
ffffffff8020b6af:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8020b6b3:	48 8b 08             	mov    (%rax),%rcx
ffffffff8020b6b6:	48 83 c9 01          	or     $0x1,%rcx
ffffffff8020b6ba:	48 89 08             	mov    %rcx,(%rax)
ffffffff8020b6bd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8020b6c1:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
ffffffff8020b6c5:	48 89 41 08          	mov    %rax,0x8(%rcx)
ffffffff8020b6c9:	48 8b 3c 25 10 44 28 	mov    0xffffffff80284410,%rdi
ffffffff8020b6d0:	80 
ffffffff8020b6d1:	e8 5a 6f ff ff       	callq  ffffffff80202630 <UnlockSpinlock>
ffffffff8020b6d6:	48 8b 7d d8          	mov    -0x28(%rbp),%rdi
ffffffff8020b6da:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
ffffffff8020b6de:	88 45 cc             	mov    %al,-0x34(%rbp)
ffffffff8020b6e1:	e8 1a 00 00 00       	callq  ffffffff8020b700 <ksetup_instrumentation>
ffffffff8020b6e6:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff8020b6ea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8020b6ee:	48 83 c4 40          	add    $0x40,%rsp
ffffffff8020b6f2:	5d                   	pop    %rbp
ffffffff8020b6f3:	c3                   	retq   
ffffffff8020b6f4:	66 90                	xchg   %ax,%ax
ffffffff8020b6f6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8020b6fd:	00 00 00 

ffffffff8020b700 <ksetup_instrumentation>:
ffffffff8020b700:	55                   	push   %rbp
ffffffff8020b701:	48 89 e5             	mov    %rsp,%rbp
ffffffff8020b704:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff8020b708:	48 b8 e5 1e 0b b0 de 	movabs $0xdeadc0deb00b1ee5,%rax
ffffffff8020b70f:	c0 ad de 
ffffffff8020b712:	48 b9 be ba fe ca ef 	movabs $0xdeadbeefcafebabe,%rcx
ffffffff8020b719:	be ad de 
ffffffff8020b71c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8020b720:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff8020b724:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
ffffffff8020b728:	48 83 ee 30          	sub    $0x30,%rsi
ffffffff8020b72c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff8020b730:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
ffffffff8020b734:	48 89 75 e8          	mov    %rsi,-0x18(%rbp)
ffffffff8020b738:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
ffffffff8020b73c:	48 89 0e             	mov    %rcx,(%rsi)
ffffffff8020b73f:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
ffffffff8020b743:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
ffffffff8020b747:	48 89 77 08          	mov    %rsi,0x8(%rdi)
ffffffff8020b74b:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
ffffffff8020b74f:	48 89 4e 10          	mov    %rcx,0x10(%rsi)
ffffffff8020b753:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
ffffffff8020b757:	48 83 c1 18          	add    $0x18,%rcx
ffffffff8020b75b:	48 03 4d f0          	add    -0x10(%rbp),%rcx
ffffffff8020b75f:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
ffffffff8020b763:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
ffffffff8020b767:	48 89 01             	mov    %rax,(%rcx)
ffffffff8020b76a:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
ffffffff8020b76e:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
ffffffff8020b772:	48 89 4e 08          	mov    %rcx,0x8(%rsi)
ffffffff8020b776:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
ffffffff8020b77a:	48 89 41 10          	mov    %rax,0x10(%rcx)
ffffffff8020b77e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8020b782:	48 83 c0 18          	add    $0x18,%rax
ffffffff8020b786:	48 83 c4 20          	add    $0x20,%rsp
ffffffff8020b78a:	5d                   	pop    %rbp
ffffffff8020b78b:	c3                   	retq   
ffffffff8020b78c:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff8020b790 <kfree>:
ffffffff8020b790:	55                   	push   %rbp
ffffffff8020b791:	48 89 e5             	mov    %rsp,%rbp
ffffffff8020b794:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff8020b798:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8020b79c:	48 8b 3c 25 10 44 28 	mov    0xffffffff80284410,%rdi
ffffffff8020b7a3:	80 
ffffffff8020b7a4:	e8 b7 6d ff ff       	callq  ffffffff80202560 <LockSpinlock>
ffffffff8020b7a9:	48 bf be ba fe ca ef 	movabs $0xdeadbeefcafebabe,%rdi
ffffffff8020b7b0:	be ad de 
ffffffff8020b7b3:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
ffffffff8020b7b7:	48 83 e9 18          	sub    $0x18,%rcx
ffffffff8020b7bb:	48 89 4d f0          	mov    %rcx,-0x10(%rbp)
ffffffff8020b7bf:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
ffffffff8020b7c3:	48 39 39             	cmp    %rdi,(%rcx)
ffffffff8020b7c6:	88 45 e7             	mov    %al,-0x19(%rbp)
ffffffff8020b7c9:	74 0b                	je     ffffffff8020b7d6 <kfree+0x46>
ffffffff8020b7cb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8020b7cf:	48 83 c4 28          	add    $0x28,%rsp
ffffffff8020b7d3:	5b                   	pop    %rbx
ffffffff8020b7d4:	fa                   	cli    
ffffffff8020b7d5:	f4                   	hlt    
ffffffff8020b7d6:	48 8b 04 25 f0 cd c8 	mov    0xffffffff80c8cdf0,%rax
ffffffff8020b7dd:	80 
ffffffff8020b7de:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff8020b7e2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8020b7e6:	48 83 78 10 00       	cmpq   $0x0,0x10(%rax)
ffffffff8020b7eb:	74 31                	je     ffffffff8020b81e <kfree+0x8e>
ffffffff8020b7ed:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8020b7f1:	48 8b 00             	mov    (%rax),%rax
ffffffff8020b7f4:	48 83 e0 01          	and    $0x1,%rax
ffffffff8020b7f8:	48 83 f8 01          	cmp    $0x1,%rax
ffffffff8020b7fc:	75 12                	jne    ffffffff8020b810 <kfree+0x80>
ffffffff8020b7fe:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8020b802:	48 8b 00             	mov    (%rax),%rax
ffffffff8020b805:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
ffffffff8020b809:	48 39 c8             	cmp    %rcx,%rax
ffffffff8020b80c:	75 02                	jne    ffffffff8020b810 <kfree+0x80>
ffffffff8020b80e:	eb 0e                	jmp    ffffffff8020b81e <kfree+0x8e>
ffffffff8020b810:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8020b814:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff8020b818:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff8020b81c:	eb c4                	jmp    ffffffff8020b7e2 <kfree+0x52>
ffffffff8020b81e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8020b822:	48 8b 08             	mov    (%rax),%rcx
ffffffff8020b825:	48 83 e1 fe          	and    $0xfffffffffffffffe,%rcx
ffffffff8020b829:	48 89 08             	mov    %rcx,(%rax)
ffffffff8020b82c:	48 8b 3c 25 10 44 28 	mov    0xffffffff80284410,%rdi
ffffffff8020b833:	80 
ffffffff8020b834:	e8 f7 6d ff ff       	callq  ffffffff80202630 <UnlockSpinlock>
ffffffff8020b839:	88 45 e6             	mov    %al,-0x1a(%rbp)
ffffffff8020b83c:	48 83 c4 20          	add    $0x20,%rsp
ffffffff8020b840:	5d                   	pop    %rbp
ffffffff8020b841:	c3                   	retq   
ffffffff8020b842:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8020b849:	00 00 00 
ffffffff8020b84c:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff8020b850 <Balloc_Initialize>:
ffffffff8020b850:	55                   	push   %rbp
ffffffff8020b851:	48 89 e5             	mov    %rsp,%rbp
ffffffff8020b854:	48 83 ec 30          	sub    $0x30,%rsp
ffffffff8020b858:	8a 04 25 10 ce c8 80 	mov    0xffffffff80c8ce10,%al
ffffffff8020b85f:	3c 00                	cmp    $0x0,%al
ffffffff8020b861:	74 0c                	je     ffffffff8020b86f <Balloc_Initialize+0x1f>
ffffffff8020b863:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
ffffffff8020b86a:	e9 86 00 00 00       	jmpq   ffffffff8020b8f5 <Balloc_Initialize+0xa5>
ffffffff8020b86f:	b8 00 00 00 04       	mov    $0x4000000,%eax
ffffffff8020b874:	89 c7                	mov    %eax,%edi
ffffffff8020b876:	e8 85 fc ff ff       	callq  ffffffff8020b500 <kmalloc>
ffffffff8020b87b:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff8020b87f:	48 89 04 25 18 ce c8 	mov    %rax,0xffffffff80c8ce18
ffffffff8020b886:	80 
ffffffff8020b887:	48 c7 04 25 20 ce c8 	movq   $0x4000000,0xffffffff80c8ce20
ffffffff8020b88e:	80 00 00 00 04 
ffffffff8020b893:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8020b897:	48 05 00 00 00 04    	add    $0x4000000,%rax
ffffffff8020b89d:	48 89 04 25 28 ce c8 	mov    %rax,0xffffffff80c8ce28
ffffffff8020b8a4:	80 
ffffffff8020b8a5:	48 c7 04 25 30 ce c8 	movq   $0x0,0xffffffff80c8ce30
ffffffff8020b8ac:	80 00 00 00 00 
ffffffff8020b8b1:	48 c7 c7 40 ce c8 80 	mov    $0xffffffff80c8ce40,%rdi
ffffffff8020b8b8:	b9 00 00 20 00       	mov    $0x200000,%ecx
ffffffff8020b8bd:	89 ca                	mov    %ecx,%edx
ffffffff8020b8bf:	31 c9                	xor    %ecx,%ecx
ffffffff8020b8c1:	89 ce                	mov    %ecx,%esi
ffffffff8020b8c3:	89 4d ec             	mov    %ecx,-0x14(%rbp)
ffffffff8020b8c6:	e8 95 ce ff ff       	callq  ffffffff80208760 <memset>
ffffffff8020b8cb:	48 c7 c7 40 ce e8 80 	mov    $0xffffffff80e8ce40,%rdi
ffffffff8020b8d2:	8b 4d ec             	mov    -0x14(%rbp),%ecx
ffffffff8020b8d5:	89 ca                	mov    %ecx,%edx
ffffffff8020b8d7:	89 ce                	mov    %ecx,%esi
ffffffff8020b8d9:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
ffffffff8020b8dd:	e8 7e ce ff ff       	callq  ffffffff80208760 <memset>
ffffffff8020b8e2:	c6 04 25 10 ce c8 80 	movb   $0x1,0xffffffff80c8ce10
ffffffff8020b8e9:	01 
ffffffff8020b8ea:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
ffffffff8020b8f1:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
ffffffff8020b8f5:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff8020b8f8:	48 83 c4 30          	add    $0x30,%rsp
ffffffff8020b8fc:	5d                   	pop    %rbp
ffffffff8020b8fd:	c3                   	retq   
ffffffff8020b8fe:	66 90                	xchg   %ax,%ax

ffffffff8020b900 <_allocBlockSet>:
ffffffff8020b900:	55                   	push   %rbp
ffffffff8020b901:	48 89 e5             	mov    %rsp,%rbp
ffffffff8020b904:	48 83 ec 60          	sub    $0x60,%rsp
ffffffff8020b908:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
ffffffff8020b90c:	48 89 75 e8          	mov    %rsi,-0x18(%rbp)
ffffffff8020b910:	48 89 55 e0          	mov    %rdx,-0x20(%rbp)
ffffffff8020b914:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
ffffffff8020b918:	4c 89 45 d0          	mov    %r8,-0x30(%rbp)
ffffffff8020b91c:	4c 89 4d c8          	mov    %r9,-0x38(%rbp)
ffffffff8020b920:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
ffffffff8020b924:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
ffffffff8020b928:	31 c0                	xor    %eax,%eax
ffffffff8020b92a:	88 c1                	mov    %al,%cl
ffffffff8020b92c:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
ffffffff8020b930:	48 3b 55 d8          	cmp    -0x28(%rbp),%rdx
ffffffff8020b934:	88 4d b7             	mov    %cl,-0x49(%rbp)
ffffffff8020b937:	73 17                	jae    ffffffff8020b950 <_allocBlockSet+0x50>
ffffffff8020b939:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8020b93d:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
ffffffff8020b941:	0f b6 14 01          	movzbl (%rcx,%rax,1),%edx
ffffffff8020b945:	83 fa 00             	cmp    $0x0,%edx
ffffffff8020b948:	40 0f 95 c6          	setne  %sil
ffffffff8020b94c:	40 88 75 b7          	mov    %sil,-0x49(%rbp)
ffffffff8020b950:	8a 45 b7             	mov    -0x49(%rbp),%al
ffffffff8020b953:	a8 01                	test   $0x1,%al
ffffffff8020b955:	75 02                	jne    ffffffff8020b959 <_allocBlockSet+0x59>
ffffffff8020b957:	eb 10                	jmp    ffffffff8020b969 <_allocBlockSet+0x69>
ffffffff8020b959:	eb 00                	jmp    ffffffff8020b95b <_allocBlockSet+0x5b>
ffffffff8020b95b:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8020b95f:	48 83 c0 01          	add    $0x1,%rax
ffffffff8020b963:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
ffffffff8020b967:	eb bf                	jmp    ffffffff8020b928 <_allocBlockSet+0x28>
ffffffff8020b969:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8020b96d:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
ffffffff8020b971:	0f 94 c1             	sete   %cl
ffffffff8020b974:	80 e1 01             	and    $0x1,%cl
ffffffff8020b977:	0f b6 d1             	movzbl %cl,%edx
ffffffff8020b97a:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8020b97e:	48 03 45 e8          	add    -0x18(%rbp),%rax
ffffffff8020b982:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
ffffffff8020b986:	0f 97 c1             	seta   %cl
ffffffff8020b989:	80 e1 01             	and    $0x1,%cl
ffffffff8020b98c:	0f b6 f1             	movzbl %cl,%esi
ffffffff8020b98f:	09 f2                	or     %esi,%edx
ffffffff8020b991:	83 fa 00             	cmp    $0x0,%edx
ffffffff8020b994:	74 0d                	je     ffffffff8020b9a3 <_allocBlockSet+0xa3>
ffffffff8020b996:	48 c7 45 f8 ff ff ff 	movq   $0xffffffffffffffff,-0x8(%rbp)
ffffffff8020b99d:	ff 
ffffffff8020b99e:	e9 dd 00 00 00       	jmpq   ffffffff8020ba80 <_allocBlockSet+0x180>
ffffffff8020b9a3:	48 c7 45 b8 00 00 00 	movq   $0x0,-0x48(%rbp)
ffffffff8020b9aa:	00 
ffffffff8020b9ab:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff8020b9af:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
ffffffff8020b9b3:	73 56                	jae    ffffffff8020ba0b <_allocBlockSet+0x10b>
ffffffff8020b9b5:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8020b9b9:	48 03 45 b8          	add    -0x48(%rbp),%rax
ffffffff8020b9bd:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
ffffffff8020b9c1:	0f b6 14 01          	movzbl (%rcx,%rax,1),%edx
ffffffff8020b9c5:	83 fa 00             	cmp    $0x0,%edx
ffffffff8020b9c8:	74 31                	je     ffffffff8020b9fb <_allocBlockSet+0xfb>
ffffffff8020b9ca:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8020b9ce:	48 03 45 b8          	add    -0x48(%rbp),%rax
ffffffff8020b9d2:	48 83 c0 01          	add    $0x1,%rax
ffffffff8020b9d6:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
ffffffff8020b9da:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
ffffffff8020b9de:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
ffffffff8020b9e2:	4c 8b 45 d0          	mov    -0x30(%rbp),%r8
ffffffff8020b9e6:	4c 8b 4d c8          	mov    -0x38(%rbp),%r9
ffffffff8020b9ea:	48 89 c7             	mov    %rax,%rdi
ffffffff8020b9ed:	e8 0e ff ff ff       	callq  ffffffff8020b900 <_allocBlockSet>
ffffffff8020b9f2:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff8020b9f6:	e9 85 00 00 00       	jmpq   ffffffff8020ba80 <_allocBlockSet+0x180>
ffffffff8020b9fb:	eb 00                	jmp    ffffffff8020b9fd <_allocBlockSet+0xfd>
ffffffff8020b9fd:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff8020ba01:	48 83 c0 01          	add    $0x1,%rax
ffffffff8020ba05:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
ffffffff8020ba09:	eb a0                	jmp    ffffffff8020b9ab <_allocBlockSet+0xab>
ffffffff8020ba0b:	48 83 7d e8 02       	cmpq   $0x2,-0x18(%rbp)
ffffffff8020ba10:	76 31                	jbe    ffffffff8020ba43 <_allocBlockSet+0x143>
ffffffff8020ba12:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff8020ba17:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
ffffffff8020ba1b:	48 83 c1 01          	add    $0x1,%rcx
ffffffff8020ba1f:	48 03 4d e0          	add    -0x20(%rbp),%rcx
ffffffff8020ba23:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff8020ba27:	48 83 ea 02          	sub    $0x2,%rdx
ffffffff8020ba2b:	48 c1 e2 02          	shl    $0x2,%rdx
ffffffff8020ba2f:	be 01 00 00 00       	mov    $0x1,%esi
ffffffff8020ba34:	48 89 cf             	mov    %rcx,%rdi
ffffffff8020ba37:	89 45 b0             	mov    %eax,-0x50(%rbp)
ffffffff8020ba3a:	e8 21 cd ff ff       	callq  ffffffff80208760 <memset>
ffffffff8020ba3f:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
ffffffff8020ba43:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8020ba47:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
ffffffff8020ba4b:	c6 04 01 02          	movb   $0x2,(%rcx,%rax,1)
ffffffff8020ba4f:	48 83 7d e8 02       	cmpq   $0x2,-0x18(%rbp)
ffffffff8020ba54:	72 16                	jb     ffffffff8020ba6c <_allocBlockSet+0x16c>
ffffffff8020ba56:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8020ba5a:	48 03 45 e8          	add    -0x18(%rbp),%rax
ffffffff8020ba5e:	48 83 e8 01          	sub    $0x1,%rax
ffffffff8020ba62:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
ffffffff8020ba66:	c6 04 01 04          	movb   $0x4,(%rcx,%rax,1)
ffffffff8020ba6a:	eb 0c                	jmp    ffffffff8020ba78 <_allocBlockSet+0x178>
ffffffff8020ba6c:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8020ba70:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
ffffffff8020ba74:	c6 04 01 06          	movb   $0x6,(%rcx,%rax,1)
ffffffff8020ba78:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8020ba7c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff8020ba80:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8020ba84:	48 83 c4 60          	add    $0x60,%rsp
ffffffff8020ba88:	5d                   	pop    %rbp
ffffffff8020ba89:	c3                   	retq   
ffffffff8020ba8a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

ffffffff8020ba90 <Balloc_Alloc>:
ffffffff8020ba90:	55                   	push   %rbp
ffffffff8020ba91:	48 89 e5             	mov    %rsp,%rbp
ffffffff8020ba94:	48 83 ec 40          	sub    $0x40,%rsp
ffffffff8020ba98:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8020ba9c:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
ffffffff8020baa3:	00 
ffffffff8020baa4:	8a 04 25 10 ce c8 80 	mov    0xffffffff80c8ce10,%al
ffffffff8020baab:	3c 00                	cmp    $0x0,%al
ffffffff8020baad:	75 08                	jne    ffffffff8020bab7 <Balloc_Alloc+0x27>
ffffffff8020baaf:	e8 9c fd ff ff       	callq  ffffffff8020b850 <Balloc_Initialize>
ffffffff8020bab4:	89 45 dc             	mov    %eax,-0x24(%rbp)
ffffffff8020bab7:	48 81 7d f8 00 10 00 	cmpq   $0x1000,-0x8(%rbp)
ffffffff8020babe:	00 
ffffffff8020babf:	72 66                	jb     ffffffff8020bb27 <Balloc_Alloc+0x97>
ffffffff8020bac1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8020bac5:	48 c1 e8 0c          	shr    $0xc,%rax
ffffffff8020bac9:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff8020bacd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8020bad1:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
ffffffff8020bad5:	48 c1 e1 0c          	shl    $0xc,%rcx
ffffffff8020bad9:	48 39 c8             	cmp    %rcx,%rax
ffffffff8020badc:	76 0c                	jbe    ffffffff8020baea <Balloc_Alloc+0x5a>
ffffffff8020bade:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8020bae2:	48 83 c0 01          	add    $0x1,%rax
ffffffff8020bae6:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff8020baea:	31 c0                	xor    %eax,%eax
ffffffff8020baec:	89 c1                	mov    %eax,%ecx
ffffffff8020baee:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
ffffffff8020baf2:	4c 8b 04 25 28 ce c8 	mov    0xffffffff80c8ce28,%r8
ffffffff8020baf9:	80 
ffffffff8020bafa:	48 c7 c2 40 ce e8 80 	mov    $0xffffffff80e8ce40,%rdx
ffffffff8020bb01:	31 c0                	xor    %eax,%eax
ffffffff8020bb03:	89 c7                	mov    %eax,%edi
ffffffff8020bb05:	b8 00 10 00 00       	mov    $0x1000,%eax
ffffffff8020bb0a:	41 89 c1             	mov    %eax,%r9d
ffffffff8020bb0d:	48 89 7d d0          	mov    %rdi,-0x30(%rbp)
ffffffff8020bb11:	4c 8b 55 d0          	mov    -0x30(%rbp),%r10
ffffffff8020bb15:	48 89 4d c8          	mov    %rcx,-0x38(%rbp)
ffffffff8020bb19:	4c 89 d1             	mov    %r10,%rcx
ffffffff8020bb1c:	e8 df fd ff ff       	callq  ffffffff8020b900 <_allocBlockSet>
ffffffff8020bb21:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff8020bb25:	eb 7c                	jmp    ffffffff8020bba3 <Balloc_Alloc+0x113>
ffffffff8020bb27:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8020bb2b:	48 c1 e8 05          	shr    $0x5,%rax
ffffffff8020bb2f:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
ffffffff8020bb33:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8020bb37:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
ffffffff8020bb3b:	48 c1 e1 05          	shl    $0x5,%rcx
ffffffff8020bb3f:	48 39 c8             	cmp    %rcx,%rax
ffffffff8020bb42:	76 0c                	jbe    ffffffff8020bb50 <Balloc_Alloc+0xc0>
ffffffff8020bb44:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8020bb48:	48 83 c0 01          	add    $0x1,%rax
ffffffff8020bb4c:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
ffffffff8020bb50:	31 c0                	xor    %eax,%eax
ffffffff8020bb52:	89 c1                	mov    %eax,%ecx
ffffffff8020bb54:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
ffffffff8020bb58:	4c 8b 04 25 18 ce c8 	mov    0xffffffff80c8ce18,%r8
ffffffff8020bb5f:	80 
ffffffff8020bb60:	48 c7 c2 40 ce c8 80 	mov    $0xffffffff80c8ce40,%rdx
ffffffff8020bb67:	31 c0                	xor    %eax,%eax
ffffffff8020bb69:	89 c7                	mov    %eax,%edi
ffffffff8020bb6b:	b8 00 00 20 00       	mov    $0x200000,%eax
ffffffff8020bb70:	41 89 c1             	mov    %eax,%r9d
ffffffff8020bb73:	b8 20 00 00 00       	mov    $0x20,%eax
ffffffff8020bb78:	41 89 c2             	mov    %eax,%r10d
ffffffff8020bb7b:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
ffffffff8020bb7f:	4c 89 c9             	mov    %r9,%rcx
ffffffff8020bb82:	4d 89 d1             	mov    %r10,%r9
ffffffff8020bb85:	e8 76 fd ff ff       	callq  ffffffff8020b900 <_allocBlockSet>
ffffffff8020bb8a:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff8020bb8e:	48 83 7d f0 ff       	cmpq   $0xffffffffffffffff,-0x10(%rbp)
ffffffff8020bb93:	74 0c                	je     ffffffff8020bba1 <Balloc_Alloc+0x111>
ffffffff8020bb95:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8020bb99:	48 83 c0 00          	add    $0x0,%rax
ffffffff8020bb9d:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff8020bba1:	eb 00                	jmp    ffffffff8020bba3 <Balloc_Alloc+0x113>
ffffffff8020bba3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8020bba7:	48 83 c4 40          	add    $0x40,%rsp
ffffffff8020bbab:	5d                   	pop    %rbp
ffffffff8020bbac:	c3                   	retq   
ffffffff8020bbad:	0f 1f 00             	nopl   (%rax)

ffffffff8020bbb0 <Balloc_GetBaseAddress>:
ffffffff8020bbb0:	55                   	push   %rbp
ffffffff8020bbb1:	48 89 e5             	mov    %rsp,%rbp
ffffffff8020bbb4:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff8020bbb8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8020bbbc:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
ffffffff8020bbc0:	48 8b 3c 25 28 ce c8 	mov    0xffffffff80c8ce28,%rdi
ffffffff8020bbc7:	80 
ffffffff8020bbc8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff8020bbcc:	48 c7 45 e0 00 10 00 	movq   $0x1000,-0x20(%rbp)
ffffffff8020bbd3:	00 
ffffffff8020bbd4:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
ffffffff8020bbd9:	72 14                	jb     ffffffff8020bbef <Balloc_GetBaseAddress+0x3f>
ffffffff8020bbdb:	48 8b 04 25 18 ce c8 	mov    0xffffffff80c8ce18,%rax
ffffffff8020bbe2:	80 
ffffffff8020bbe3:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff8020bbe7:	48 c7 45 e0 20 00 00 	movq   $0x20,-0x20(%rbp)
ffffffff8020bbee:	00 
ffffffff8020bbef:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8020bbf3:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
ffffffff8020bbf7:	48 0f af 4d f0       	imul   -0x10(%rbp),%rcx
ffffffff8020bbfc:	48 01 c8             	add    %rcx,%rax
ffffffff8020bbff:	48 83 c4 20          	add    $0x20,%rsp
ffffffff8020bc03:	5d                   	pop    %rbp
ffffffff8020bc04:	c3                   	retq   
ffffffff8020bc05:	90                   	nop
ffffffff8020bc06:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8020bc0d:	00 00 00 

ffffffff8020bc10 <Balloc_GetUID>:
ffffffff8020bc10:	55                   	push   %rbp
ffffffff8020bc11:	48 89 e5             	mov    %rsp,%rbp
ffffffff8020bc14:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff8020bc18:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
ffffffff8020bc1c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
ffffffff8020bc20:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
ffffffff8020bc27:	00 
ffffffff8020bc28:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
ffffffff8020bc2c:	48 8b 04 25 28 ce c8 	mov    0xffffffff80c8ce28,%rax
ffffffff8020bc33:	80 
ffffffff8020bc34:	48 39 c7             	cmp    %rax,%rdi
ffffffff8020bc37:	72 4c                	jb     ffffffff8020bc85 <Balloc_GetUID+0x75>
ffffffff8020bc39:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8020bc3d:	48 8b 0c 25 28 ce c8 	mov    0xffffffff80c8ce28,%rcx
ffffffff8020bc44:	80 
ffffffff8020bc45:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
ffffffff8020bc49:	48 81 c2 00 10 00 00 	add    $0x1000,%rdx
ffffffff8020bc50:	48 6b d2 00          	imul   $0x0,%rdx,%rdx
ffffffff8020bc54:	48 01 d1             	add    %rdx,%rcx
ffffffff8020bc57:	48 39 c8             	cmp    %rcx,%rax
ffffffff8020bc5a:	73 29                	jae    ffffffff8020bc85 <Balloc_GetUID+0x75>
ffffffff8020bc5c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8020bc60:	48 05 00 10 00 00    	add    $0x1000,%rax
ffffffff8020bc66:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
ffffffff8020bc6a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8020bc6e:	48 8b 0c 25 28 ce c8 	mov    0xffffffff80c8ce28,%rcx
ffffffff8020bc75:	80 
ffffffff8020bc76:	48 29 c8             	sub    %rcx,%rax
ffffffff8020bc79:	31 d2                	xor    %edx,%edx
ffffffff8020bc7b:	48 f7 75 e0          	divq   -0x20(%rbp)
ffffffff8020bc7f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff8020bc83:	eb 64                	jmp    ffffffff8020bce9 <Balloc_GetUID+0xd9>
ffffffff8020bc85:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8020bc89:	48 8b 0c 25 18 ce c8 	mov    0xffffffff80c8ce18,%rcx
ffffffff8020bc90:	80 
ffffffff8020bc91:	48 39 c8             	cmp    %rcx,%rax
ffffffff8020bc94:	72 4b                	jb     ffffffff8020bce1 <Balloc_GetUID+0xd1>
ffffffff8020bc96:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8020bc9a:	48 8b 0c 25 18 ce c8 	mov    0xffffffff80c8ce18,%rcx
ffffffff8020bca1:	80 
ffffffff8020bca2:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
ffffffff8020bca6:	48 83 c2 20          	add    $0x20,%rdx
ffffffff8020bcaa:	48 c1 e2 15          	shl    $0x15,%rdx
ffffffff8020bcae:	48 01 d1             	add    %rdx,%rcx
ffffffff8020bcb1:	48 39 c8             	cmp    %rcx,%rax
ffffffff8020bcb4:	73 2b                	jae    ffffffff8020bce1 <Balloc_GetUID+0xd1>
ffffffff8020bcb6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8020bcba:	48 83 c0 20          	add    $0x20,%rax
ffffffff8020bcbe:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
ffffffff8020bcc2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8020bcc6:	48 8b 0c 25 18 ce c8 	mov    0xffffffff80c8ce18,%rcx
ffffffff8020bccd:	80 
ffffffff8020bcce:	48 29 c8             	sub    %rcx,%rax
ffffffff8020bcd1:	31 d2                	xor    %edx,%edx
ffffffff8020bcd3:	48 f7 75 e0          	divq   -0x20(%rbp)
ffffffff8020bcd7:	48 83 c0 00          	add    $0x0,%rax
ffffffff8020bcdb:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff8020bcdf:	eb 08                	jmp    ffffffff8020bce9 <Balloc_GetUID+0xd9>
ffffffff8020bce1:	48 c7 45 f8 ff ff ff 	movq   $0xffffffffffffffff,-0x8(%rbp)
ffffffff8020bce8:	ff 
ffffffff8020bce9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8020bced:	48 83 c4 20          	add    $0x20,%rsp
ffffffff8020bcf1:	5d                   	pop    %rbp
ffffffff8020bcf2:	c3                   	retq   
ffffffff8020bcf3:	0f 1f 00             	nopl   (%rax)
ffffffff8020bcf6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8020bcfd:	00 00 00 

ffffffff8020bd00 <Balloc_Free>:
ffffffff8020bd00:	55                   	push   %rbp
ffffffff8020bd01:	48 89 e5             	mov    %rsp,%rbp
ffffffff8020bd04:	48 83 ec 28          	sub    $0x28,%rsp
ffffffff8020bd08:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8020bd0c:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
ffffffff8020bd10:	48 c7 45 e8 40 ce e8 	movq   $0xffffffff80e8ce40,-0x18(%rbp)
ffffffff8020bd17:	80 
ffffffff8020bd18:	48 8b 3c 25 28 ce c8 	mov    0xffffffff80c8ce28,%rdi
ffffffff8020bd1f:	80 
ffffffff8020bd20:	48 89 7d e0          	mov    %rdi,-0x20(%rbp)
ffffffff8020bd24:	48 c7 45 d8 00 10 00 	movq   $0x1000,-0x28(%rbp)
ffffffff8020bd2b:	00 
ffffffff8020bd2c:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
ffffffff8020bd31:	72 1c                	jb     ffffffff8020bd4f <Balloc_Free+0x4f>
ffffffff8020bd33:	48 c7 45 e8 40 ce c8 	movq   $0xffffffff80c8ce40,-0x18(%rbp)
ffffffff8020bd3a:	80 
ffffffff8020bd3b:	48 8b 04 25 18 ce c8 	mov    0xffffffff80c8ce18,%rax
ffffffff8020bd42:	80 
ffffffff8020bd43:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
ffffffff8020bd47:	48 c7 45 d8 20 00 00 	movq   $0x20,-0x28(%rbp)
ffffffff8020bd4e:	00 
ffffffff8020bd4f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8020bd53:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
ffffffff8020bd57:	0f b6 14 01          	movzbl (%rcx,%rax,1),%edx
ffffffff8020bd5b:	83 e2 02             	and    $0x2,%edx
ffffffff8020bd5e:	83 fa 00             	cmp    $0x0,%edx
ffffffff8020bd61:	74 4a                	je     ffffffff8020bdad <Balloc_Free+0xad>
ffffffff8020bd63:	eb 00                	jmp    ffffffff8020bd65 <Balloc_Free+0x65>
ffffffff8020bd65:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8020bd69:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
ffffffff8020bd6d:	0f b6 14 01          	movzbl (%rcx,%rax,1),%edx
ffffffff8020bd71:	83 e2 04             	and    $0x4,%edx
ffffffff8020bd74:	83 fa 00             	cmp    $0x0,%edx
ffffffff8020bd77:	40 0f 95 c6          	setne  %sil
ffffffff8020bd7b:	40 80 f6 ff          	xor    $0xff,%sil
ffffffff8020bd7f:	40 f6 c6 01          	test   $0x1,%sil
ffffffff8020bd83:	75 02                	jne    ffffffff8020bd87 <Balloc_Free+0x87>
ffffffff8020bd85:	eb 1a                	jmp    ffffffff8020bda1 <Balloc_Free+0xa1>
ffffffff8020bd87:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8020bd8b:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
ffffffff8020bd8f:	c6 04 01 00          	movb   $0x0,(%rcx,%rax,1)
ffffffff8020bd93:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8020bd97:	48 83 c0 01          	add    $0x1,%rax
ffffffff8020bd9b:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff8020bd9f:	eb c4                	jmp    ffffffff8020bd65 <Balloc_Free+0x65>
ffffffff8020bda1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8020bda5:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
ffffffff8020bda9:	c6 04 01 00          	movb   $0x0,(%rcx,%rax,1)
ffffffff8020bdad:	48 83 c4 28          	add    $0x28,%rsp
ffffffff8020bdb1:	5d                   	pop    %rbp
ffffffff8020bdb2:	c3                   	retq   
ffffffff8020bdb3:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8020bdba:	00 00 00 
ffffffff8020bdbd:	0f 1f 00             	nopl   (%rax)

ffffffff8020bdc0 <ProcessSys_Initialize>:
ffffffff8020bdc0:	55                   	push   %rbp
ffffffff8020bdc1:	48 89 e5             	mov    %rsp,%rbp
ffffffff8020bdc4:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff8020bdc8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8020bdcc:	b8 f0 01 00 00       	mov    $0x1f0,%eax
ffffffff8020bdd1:	89 c7                	mov    %eax,%edi
ffffffff8020bdd3:	e8 28 f7 ff ff       	callq  ffffffff8020b500 <kmalloc>
ffffffff8020bdd8:	48 89 04 25 48 ce e8 	mov    %rax,0xffffffff80e8ce48
ffffffff8020bddf:	80 
ffffffff8020bde0:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
ffffffff8020bde7:	48 8b 04 25 48 ce e8 	mov    0xffffffff80e8ce48,%rax
ffffffff8020bdee:	80 
ffffffff8020bdef:	48 83 c0 08          	add    $0x8,%rax
ffffffff8020bdf3:	48 c7 c6 eb ae 24 80 	mov    $0xffffffff8024aeeb,%rsi
ffffffff8020bdfa:	48 89 c7             	mov    %rax,%rdi
ffffffff8020bdfd:	e8 de cb ff ff       	callq  ffffffff802089e0 <strcpy>
ffffffff8020be02:	48 8b 34 25 48 ce e8 	mov    0xffffffff80e8ce48,%rsi
ffffffff8020be09:	80 
ffffffff8020be0a:	c7 86 08 01 00 00 03 	movl   $0x3,0x108(%rsi)
ffffffff8020be11:	00 00 00 
ffffffff8020be14:	48 8b 34 25 48 ce e8 	mov    0xffffffff80e8ce48,%rsi
ffffffff8020be1b:	80 
ffffffff8020be1c:	c7 86 0c 01 00 00 01 	movl   $0x1,0x10c(%rsi)
ffffffff8020be23:	00 00 00 
ffffffff8020be26:	48 8b 34 25 48 ce e8 	mov    0xffffffff80e8ce48,%rsi
ffffffff8020be2d:	80 
ffffffff8020be2e:	c7 86 10 01 00 00 04 	movl   $0x4,0x110(%rsi)
ffffffff8020be35:	00 00 00 
ffffffff8020be38:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff8020be3c:	e8 7f 5f ff ff       	callq  ffffffff80201dc0 <GetActiveVirtualMemoryInstance>
ffffffff8020be41:	48 8b 34 25 48 ce e8 	mov    0xffffffff80e8ce48,%rsi
ffffffff8020be48:	80 
ffffffff8020be49:	48 89 86 c8 01 00 00 	mov    %rax,0x1c8(%rsi)
ffffffff8020be50:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8020be54:	48 8b 34 25 48 ce e8 	mov    0xffffffff80e8ce48,%rsi
ffffffff8020be5b:	80 
ffffffff8020be5c:	48 89 86 d0 01 00 00 	mov    %rax,0x1d0(%rsi)
ffffffff8020be63:	e8 48 66 ff ff       	callq  ffffffff802024b0 <CreateSpinlock>
ffffffff8020be68:	48 89 c7             	mov    %rax,%rdi
ffffffff8020be6b:	e8 a0 dc ff ff       	callq  ffffffff80209b10 <List_Create>
ffffffff8020be70:	48 8b 34 25 48 ce e8 	mov    0xffffffff80e8ce48,%rsi
ffffffff8020be77:	80 
ffffffff8020be78:	48 89 86 d8 01 00 00 	mov    %rax,0x1d8(%rsi)
ffffffff8020be7f:	48 8b 04 25 48 ce e8 	mov    0xffffffff80e8ce48,%rax
ffffffff8020be86:	80 
ffffffff8020be87:	48 c7 80 e0 01 00 00 	movq   $0x0,0x1e0(%rax)
ffffffff8020be8e:	00 00 00 00 
ffffffff8020be92:	e8 19 66 ff ff       	callq  ffffffff802024b0 <CreateSpinlock>
ffffffff8020be97:	48 8b 34 25 48 ce e8 	mov    0xffffffff80e8ce48,%rsi
ffffffff8020be9e:	80 
ffffffff8020be9f:	48 89 86 e8 01 00 00 	mov    %rax,0x1e8(%rsi)
ffffffff8020bea6:	e8 05 66 ff ff       	callq  ffffffff802024b0 <CreateSpinlock>
ffffffff8020beab:	48 89 c7             	mov    %rax,%rdi
ffffffff8020beae:	e8 5d dc ff ff       	callq  ffffffff80209b10 <List_Create>
ffffffff8020beb3:	48 89 04 25 50 ce e8 	mov    %rax,0xffffffff80e8ce50
ffffffff8020beba:	80 
ffffffff8020bebb:	48 8b 34 25 48 ce e8 	mov    0xffffffff80e8ce48,%rsi
ffffffff8020bec2:	80 
ffffffff8020bec3:	48 89 c7             	mov    %rax,%rdi
ffffffff8020bec6:	e8 e5 dc ff ff       	callq  ffffffff80209bb0 <List_AddEntry>
ffffffff8020becb:	89 45 ec             	mov    %eax,-0x14(%rbp)
ffffffff8020bece:	48 83 c4 20          	add    $0x20,%rsp
ffffffff8020bed2:	5d                   	pop    %rbp
ffffffff8020bed3:	c3                   	retq   
ffffffff8020bed4:	66 90                	xchg   %ax,%ax
ffffffff8020bed6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8020bedd:	00 00 00 

ffffffff8020bee0 <ForkProcess>:
ffffffff8020bee0:	55                   	push   %rbp
ffffffff8020bee1:	48 89 e5             	mov    %rsp,%rbp
ffffffff8020bee4:	48 83 ec 40          	sub    $0x40,%rsp
ffffffff8020bee8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8020beec:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff8020bef0:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
ffffffff8020bef4:	48 8b be e8 01 00 00 	mov    0x1e8(%rsi),%rdi
ffffffff8020befb:	e8 60 66 ff ff       	callq  ffffffff80202560 <LockSpinlock>
ffffffff8020bf00:	b9 f0 01 00 00       	mov    $0x1f0,%ecx
ffffffff8020bf05:	89 ce                	mov    %ecx,%esi
ffffffff8020bf07:	b9 f0 01 00 00       	mov    $0x1f0,%ecx
ffffffff8020bf0c:	89 cf                	mov    %ecx,%edi
ffffffff8020bf0e:	88 45 e3             	mov    %al,-0x1d(%rbp)
ffffffff8020bf11:	48 89 75 d8          	mov    %rsi,-0x28(%rbp)
ffffffff8020bf15:	e8 e6 f5 ff ff       	callq  ffffffff8020b500 <kmalloc>
ffffffff8020bf1a:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff8020bf1e:	e8 0d cd ff ff       	callq  ffffffff80208c30 <new_uid>
ffffffff8020bf23:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
ffffffff8020bf27:	48 89 06             	mov    %rax,(%rsi)
ffffffff8020bf2a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8020bf2e:	8b 88 08 01 00 00    	mov    0x108(%rax),%ecx
ffffffff8020bf34:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8020bf38:	89 88 08 01 00 00    	mov    %ecx,0x108(%rax)
ffffffff8020bf3e:	e8 6d 65 ff ff       	callq  ffffffff802024b0 <CreateSpinlock>
ffffffff8020bf43:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
ffffffff8020bf47:	48 89 86 e8 01 00 00 	mov    %rax,0x1e8(%rsi)
ffffffff8020bf4e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8020bf52:	8b 88 0c 01 00 00    	mov    0x10c(%rax),%ecx
ffffffff8020bf58:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8020bf5c:	89 88 0c 01 00 00    	mov    %ecx,0x10c(%rax)
ffffffff8020bf62:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8020bf66:	8b 88 10 01 00 00    	mov    0x110(%rax),%ecx
ffffffff8020bf6c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8020bf70:	89 88 10 01 00 00    	mov    %ecx,0x110(%rax)
ffffffff8020bf76:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%rbp)
ffffffff8020bf7d:	83 7d e4 16          	cmpl   $0x16,-0x1c(%rbp)
ffffffff8020bf81:	7d 2b                	jge    ffffffff8020bfae <ForkProcess+0xce>
ffffffff8020bf83:	48 63 45 e4          	movslq -0x1c(%rbp),%rax
ffffffff8020bf87:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
ffffffff8020bf8b:	48 8b 84 c1 18 01 00 	mov    0x118(%rcx,%rax,8),%rax
ffffffff8020bf92:	00 
ffffffff8020bf93:	48 63 4d e4          	movslq -0x1c(%rbp),%rcx
ffffffff8020bf97:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff8020bf9b:	48 89 84 ca 18 01 00 	mov    %rax,0x118(%rdx,%rcx,8)
ffffffff8020bfa2:	00 
ffffffff8020bfa3:	8b 45 e4             	mov    -0x1c(%rbp),%eax
ffffffff8020bfa6:	83 c0 01             	add    $0x1,%eax
ffffffff8020bfa9:	89 45 e4             	mov    %eax,-0x1c(%rbp)
ffffffff8020bfac:	eb cf                	jmp    ffffffff8020bf7d <ForkProcess+0x9d>
ffffffff8020bfae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8020bfb2:	48 8b b8 c8 01 00 00 	mov    0x1c8(%rax),%rdi
ffffffff8020bfb9:	48 8b b0 d0 01 00 00 	mov    0x1d0(%rax),%rsi
ffffffff8020bfc0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8020bfc4:	48 89 c1             	mov    %rax,%rcx
ffffffff8020bfc7:	48 81 c1 c8 01 00 00 	add    $0x1c8,%rcx
ffffffff8020bfce:	48 05 d0 01 00 00    	add    $0x1d0,%rax
ffffffff8020bfd4:	48 89 ca             	mov    %rcx,%rdx
ffffffff8020bfd7:	48 89 c1             	mov    %rax,%rcx
ffffffff8020bfda:	e8 d1 61 ff ff       	callq  ffffffff802021b0 <ForkTable>
ffffffff8020bfdf:	89 45 d4             	mov    %eax,-0x2c(%rbp)
ffffffff8020bfe2:	e8 c9 64 ff ff       	callq  ffffffff802024b0 <CreateSpinlock>
ffffffff8020bfe7:	48 89 c7             	mov    %rax,%rdi
ffffffff8020bfea:	e8 21 db ff ff       	callq  ffffffff80209b10 <List_Create>
ffffffff8020bfef:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
ffffffff8020bff3:	48 89 81 d8 01 00 00 	mov    %rax,0x1d8(%rcx)
ffffffff8020bffa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8020bffe:	48 8b b8 e8 01 00 00 	mov    0x1e8(%rax),%rdi
ffffffff8020c005:	e8 26 66 ff ff       	callq  ffffffff80202630 <UnlockSpinlock>
ffffffff8020c00a:	48 8b 3c 25 50 ce e8 	mov    0xffffffff80e8ce50,%rdi
ffffffff8020c011:	80 
ffffffff8020c012:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
ffffffff8020c016:	48 89 ce             	mov    %rcx,%rsi
ffffffff8020c019:	88 45 d3             	mov    %al,-0x2d(%rbp)
ffffffff8020c01c:	e8 8f db ff ff       	callq  ffffffff80209bb0 <List_AddEntry>
ffffffff8020c021:	45 31 c0             	xor    %r8d,%r8d
ffffffff8020c024:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
ffffffff8020c028:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff8020c02c:	48 89 0a             	mov    %rcx,(%rdx)
ffffffff8020c02f:	89 45 cc             	mov    %eax,-0x34(%rbp)
ffffffff8020c032:	44 89 c0             	mov    %r8d,%eax
ffffffff8020c035:	48 83 c4 40          	add    $0x40,%rsp
ffffffff8020c039:	5d                   	pop    %rbp
ffffffff8020c03a:	c3                   	retq   
ffffffff8020c03b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

ffffffff8020c040 <GetProcessInformation>:
ffffffff8020c040:	55                   	push   %rbp
ffffffff8020c041:	48 89 e5             	mov    %rsp,%rbp
ffffffff8020c044:	48 83 ec 60          	sub    $0x60,%rsp
ffffffff8020c048:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
ffffffff8020c04c:	48 89 75 e8          	mov    %rsi,-0x18(%rbp)
ffffffff8020c050:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
ffffffff8020c057:	00 
ffffffff8020c058:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8020c05c:	48 8b 3c 25 50 ce e8 	mov    0xffffffff80e8ce50,%rdi
ffffffff8020c063:	80 
ffffffff8020c064:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
ffffffff8020c068:	e8 53 dc ff ff       	callq  ffffffff80209cc0 <List_Length>
ffffffff8020c06d:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
ffffffff8020c071:	48 39 c7             	cmp    %rax,%rdi
ffffffff8020c074:	0f 83 bc 00 00 00    	jae    ffffffff8020c136 <GetProcessInformation+0xf6>
ffffffff8020c07a:	48 8b 3c 25 50 ce e8 	mov    0xffffffff80e8ce50,%rdi
ffffffff8020c081:	80 
ffffffff8020c082:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
ffffffff8020c086:	e8 e5 dd ff ff       	callq  ffffffff80209e70 <List_EntryAt>
ffffffff8020c08b:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
ffffffff8020c08f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8020c093:	48 8b b8 e8 01 00 00 	mov    0x1e8(%rax),%rdi
ffffffff8020c09a:	e8 c1 64 ff ff       	callq  ffffffff80202560 <LockSpinlock>
ffffffff8020c09f:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
ffffffff8020c0a3:	48 8b 36             	mov    (%rsi),%rsi
ffffffff8020c0a6:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
ffffffff8020c0aa:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
ffffffff8020c0ae:	48 8b be e8 01 00 00 	mov    0x1e8(%rsi),%rdi
ffffffff8020c0b5:	88 45 c7             	mov    %al,-0x39(%rbp)
ffffffff8020c0b8:	e8 73 65 ff ff       	callq  ffffffff80202630 <UnlockSpinlock>
ffffffff8020c0bd:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
ffffffff8020c0c1:	48 3b 75 f0          	cmp    -0x10(%rbp),%rsi
ffffffff8020c0c5:	88 45 c6             	mov    %al,-0x3a(%rbp)
ffffffff8020c0c8:	75 59                	jne    ffffffff8020c123 <GetProcessInformation+0xe3>
ffffffff8020c0ca:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8020c0ce:	48 8b b8 e8 01 00 00 	mov    0x1e8(%rax),%rdi
ffffffff8020c0d5:	e8 86 64 ff ff       	callq  ffffffff80202560 <LockSpinlock>
ffffffff8020c0da:	b9 f0 01 00 00       	mov    $0x1f0,%ecx
ffffffff8020c0df:	89 cf                	mov    %ecx,%edi
ffffffff8020c0e1:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff8020c0e5:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
ffffffff8020c0e9:	b9 f0 01 00 00       	mov    $0x1f0,%ecx
ffffffff8020c0ee:	41 89 c8             	mov    %ecx,%r8d
ffffffff8020c0f1:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
ffffffff8020c0f5:	48 89 d7             	mov    %rdx,%rdi
ffffffff8020c0f8:	4c 89 c2             	mov    %r8,%rdx
ffffffff8020c0fb:	88 45 b7             	mov    %al,-0x49(%rbp)
ffffffff8020c0fe:	e8 fd c5 ff ff       	callq  ffffffff80208700 <memcpy>
ffffffff8020c103:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
ffffffff8020c107:	48 8b ba e8 01 00 00 	mov    0x1e8(%rdx),%rdi
ffffffff8020c10e:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
ffffffff8020c112:	e8 19 65 ff ff       	callq  ffffffff80202630 <UnlockSpinlock>
ffffffff8020c117:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
ffffffff8020c11e:	88 45 a7             	mov    %al,-0x59(%rbp)
ffffffff8020c121:	eb 1a                	jmp    ffffffff8020c13d <GetProcessInformation+0xfd>
ffffffff8020c123:	eb 00                	jmp    ffffffff8020c125 <GetProcessInformation+0xe5>
ffffffff8020c125:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8020c129:	48 83 c0 01          	add    $0x1,%rax
ffffffff8020c12d:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
ffffffff8020c131:	e9 22 ff ff ff       	jmpq   ffffffff8020c058 <GetProcessInformation+0x18>
ffffffff8020c136:	c7 45 fc 02 00 00 00 	movl   $0x2,-0x4(%rbp)
ffffffff8020c13d:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff8020c140:	48 83 c4 60          	add    $0x60,%rsp
ffffffff8020c144:	5d                   	pop    %rbp
ffffffff8020c145:	c3                   	retq   
ffffffff8020c146:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8020c14d:	00 00 00 

ffffffff8020c150 <GetProcessReference>:
ffffffff8020c150:	55                   	push   %rbp
ffffffff8020c151:	48 89 e5             	mov    %rsp,%rbp
ffffffff8020c154:	48 83 ec 40          	sub    $0x40,%rsp
ffffffff8020c158:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
ffffffff8020c15c:	48 89 75 e8          	mov    %rsi,-0x18(%rbp)
ffffffff8020c160:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
ffffffff8020c167:	00 
ffffffff8020c168:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8020c16c:	48 8b 3c 25 50 ce e8 	mov    0xffffffff80e8ce50,%rdi
ffffffff8020c173:	80 
ffffffff8020c174:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
ffffffff8020c178:	e8 43 db ff ff       	callq  ffffffff80209cc0 <List_Length>
ffffffff8020c17d:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
ffffffff8020c181:	48 39 c7             	cmp    %rax,%rdi
ffffffff8020c184:	73 77                	jae    ffffffff8020c1fd <GetProcessReference+0xad>
ffffffff8020c186:	48 8b 3c 25 50 ce e8 	mov    0xffffffff80e8ce50,%rdi
ffffffff8020c18d:	80 
ffffffff8020c18e:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
ffffffff8020c192:	e8 d9 dc ff ff       	callq  ffffffff80209e70 <List_EntryAt>
ffffffff8020c197:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
ffffffff8020c19b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8020c19f:	48 8b b8 e8 01 00 00 	mov    0x1e8(%rax),%rdi
ffffffff8020c1a6:	e8 b5 63 ff ff       	callq  ffffffff80202560 <LockSpinlock>
ffffffff8020c1ab:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
ffffffff8020c1af:	48 8b 36             	mov    (%rsi),%rsi
ffffffff8020c1b2:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
ffffffff8020c1b6:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
ffffffff8020c1ba:	48 8b be e8 01 00 00 	mov    0x1e8(%rsi),%rdi
ffffffff8020c1c1:	88 45 c7             	mov    %al,-0x39(%rbp)
ffffffff8020c1c4:	e8 67 64 ff ff       	callq  ffffffff80202630 <UnlockSpinlock>
ffffffff8020c1c9:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
ffffffff8020c1cd:	48 3b 75 f0          	cmp    -0x10(%rbp),%rsi
ffffffff8020c1d1:	88 45 c6             	mov    %al,-0x3a(%rbp)
ffffffff8020c1d4:	75 14                	jne    ffffffff8020c1ea <GetProcessReference+0x9a>
ffffffff8020c1d6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8020c1da:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
ffffffff8020c1de:	48 89 01             	mov    %rax,(%rcx)
ffffffff8020c1e1:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
ffffffff8020c1e8:	eb 1a                	jmp    ffffffff8020c204 <GetProcessReference+0xb4>
ffffffff8020c1ea:	eb 00                	jmp    ffffffff8020c1ec <GetProcessReference+0x9c>
ffffffff8020c1ec:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8020c1f0:	48 83 c0 01          	add    $0x1,%rax
ffffffff8020c1f4:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
ffffffff8020c1f8:	e9 6b ff ff ff       	jmpq   ffffffff8020c168 <GetProcessReference+0x18>
ffffffff8020c1fd:	c7 45 fc 02 00 00 00 	movl   $0x2,-0x4(%rbp)
ffffffff8020c204:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff8020c207:	48 83 c4 40          	add    $0x40,%rsp
ffffffff8020c20b:	5d                   	pop    %rbp
ffffffff8020c20c:	c3                   	retq   
ffffffff8020c20d:	0f 1f 00             	nopl   (%rax)

ffffffff8020c210 <KillProcess>:
ffffffff8020c210:	55                   	push   %rbp
ffffffff8020c211:	48 89 e5             	mov    %rsp,%rbp
ffffffff8020c214:	48 83 ec 70          	sub    $0x70,%rsp
ffffffff8020c218:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
ffffffff8020c21c:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
ffffffff8020c223:	00 
ffffffff8020c224:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8020c228:	48 8b 3c 25 50 ce e8 	mov    0xffffffff80e8ce50,%rdi
ffffffff8020c22f:	80 
ffffffff8020c230:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
ffffffff8020c234:	e8 87 da ff ff       	callq  ffffffff80209cc0 <List_Length>
ffffffff8020c239:	48 8b 7d b0          	mov    -0x50(%rbp),%rdi
ffffffff8020c23d:	48 39 c7             	cmp    %rax,%rdi
ffffffff8020c240:	0f 83 0e 02 00 00    	jae    ffffffff8020c454 <KillProcess+0x244>
ffffffff8020c246:	48 8b 3c 25 50 ce e8 	mov    0xffffffff80e8ce50,%rdi
ffffffff8020c24d:	80 
ffffffff8020c24e:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
ffffffff8020c252:	e8 19 dc ff ff       	callq  ffffffff80209e70 <List_EntryAt>
ffffffff8020c257:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
ffffffff8020c25b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8020c25f:	48 8b b8 e8 01 00 00 	mov    0x1e8(%rax),%rdi
ffffffff8020c266:	e8 f5 62 ff ff       	callq  ffffffff80202560 <LockSpinlock>
ffffffff8020c26b:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
ffffffff8020c26f:	48 8b 36             	mov    (%rsi),%rsi
ffffffff8020c272:	48 89 75 d8          	mov    %rsi,-0x28(%rbp)
ffffffff8020c276:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
ffffffff8020c27a:	48 8b be e8 01 00 00 	mov    0x1e8(%rsi),%rdi
ffffffff8020c281:	88 45 af             	mov    %al,-0x51(%rbp)
ffffffff8020c284:	e8 a7 63 ff ff       	callq  ffffffff80202630 <UnlockSpinlock>
ffffffff8020c289:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
ffffffff8020c28d:	48 3b 75 f0          	cmp    -0x10(%rbp),%rsi
ffffffff8020c291:	88 45 ae             	mov    %al,-0x52(%rbp)
ffffffff8020c294:	0f 85 a7 01 00 00    	jne    ffffffff8020c441 <KillProcess+0x231>
ffffffff8020c29a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8020c29e:	48 8b b8 e8 01 00 00 	mov    0x1e8(%rax),%rdi
ffffffff8020c2a5:	e8 b6 62 ff ff       	callq  ffffffff80202560 <LockSpinlock>
ffffffff8020c2aa:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
ffffffff8020c2ae:	48 8b bf d8 01 00 00 	mov    0x1d8(%rdi),%rdi
ffffffff8020c2b5:	88 45 ad             	mov    %al,-0x53(%rbp)
ffffffff8020c2b8:	e8 03 da ff ff       	callq  ffffffff80209cc0 <List_Length>
ffffffff8020c2bd:	48 83 f8 00          	cmp    $0x0,%rax
ffffffff8020c2c1:	0f 84 86 00 00 00    	je     ffffffff8020c34d <KillProcess+0x13d>
ffffffff8020c2c7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8020c2cb:	c7 80 08 01 00 00 02 	movl   $0x2,0x108(%rax)
ffffffff8020c2d2:	00 00 00 
ffffffff8020c2d5:	48 c7 45 d0 00 00 00 	movq   $0x0,-0x30(%rbp)
ffffffff8020c2dc:	00 
ffffffff8020c2dd:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff8020c2e1:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
ffffffff8020c2e5:	48 8b b9 d8 01 00 00 	mov    0x1d8(%rcx),%rdi
ffffffff8020c2ec:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
ffffffff8020c2f0:	e8 cb d9 ff ff       	callq  ffffffff80209cc0 <List_Length>
ffffffff8020c2f5:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
ffffffff8020c2f9:	48 39 c1             	cmp    %rax,%rcx
ffffffff8020c2fc:	73 37                	jae    ffffffff8020c335 <KillProcess+0x125>
ffffffff8020c2fe:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8020c302:	48 8b b8 d8 01 00 00 	mov    0x1d8(%rax),%rdi
ffffffff8020c309:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
ffffffff8020c30d:	e8 5e db ff ff       	callq  ffffffff80209e70 <List_EntryAt>
ffffffff8020c312:	b9 04 00 00 00       	mov    $0x4,%ecx
ffffffff8020c317:	be 04 00 00 00       	mov    $0x4,%esi
ffffffff8020c31c:	48 89 c7             	mov    %rax,%rdi
ffffffff8020c31f:	89 4d 9c             	mov    %ecx,-0x64(%rbp)
ffffffff8020c322:	e8 d9 17 00 00       	callq  ffffffff8020db00 <SetThreadState>
ffffffff8020c327:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff8020c32b:	48 83 c0 01          	add    $0x1,%rax
ffffffff8020c32f:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
ffffffff8020c333:	eb a8                	jmp    ffffffff8020c2dd <KillProcess+0xcd>
ffffffff8020c335:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8020c339:	48 8b b8 e8 01 00 00 	mov    0x1e8(%rax),%rdi
ffffffff8020c340:	e8 eb 62 ff ff       	callq  ffffffff80202630 <UnlockSpinlock>
ffffffff8020c345:	88 45 9b             	mov    %al,-0x65(%rbp)
ffffffff8020c348:	e9 eb 00 00 00       	jmpq   ffffffff8020c438 <KillProcess+0x228>
ffffffff8020c34d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8020c351:	48 8b b8 e8 01 00 00 	mov    0x1e8(%rax),%rdi
ffffffff8020c358:	e8 03 62 ff ff       	callq  ffffffff80202560 <LockSpinlock>
ffffffff8020c35d:	48 8b 3c 25 50 ce e8 	mov    0xffffffff80e8ce50,%rdi
ffffffff8020c364:	80 
ffffffff8020c365:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
ffffffff8020c369:	88 45 9a             	mov    %al,-0x66(%rbp)
ffffffff8020c36c:	e8 9f d9 ff ff       	callq  ffffffff80209d10 <List_Remove>
ffffffff8020c371:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
ffffffff8020c375:	48 8b b6 d0 01 00 00 	mov    0x1d0(%rsi),%rsi
ffffffff8020c37c:	48 89 75 c8          	mov    %rsi,-0x38(%rbp)
ffffffff8020c380:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
ffffffff8020c385:	74 71                	je     ffffffff8020c3f8 <KillProcess+0x1e8>
ffffffff8020c387:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8020c38b:	8b 48 24             	mov    0x24(%rax),%ecx
ffffffff8020c38e:	89 4d c4             	mov    %ecx,-0x3c(%rbp)
ffffffff8020c391:	8b 4d c4             	mov    -0x3c(%rbp),%ecx
ffffffff8020c394:	83 e1 04             	and    $0x4,%ecx
ffffffff8020c397:	83 f9 00             	cmp    $0x0,%ecx
ffffffff8020c39a:	75 3a                	jne    ffffffff8020c3d6 <KillProcess+0x1c6>
ffffffff8020c39c:	8b 45 c4             	mov    -0x3c(%rbp),%eax
ffffffff8020c39f:	83 e0 fb             	and    $0xfffffffb,%eax
ffffffff8020c3a2:	89 45 c4             	mov    %eax,-0x3c(%rbp)
ffffffff8020c3a5:	83 7d c4 20          	cmpl   $0x20,-0x3c(%rbp)
ffffffff8020c3a9:	74 29                	je     ffffffff8020c3d4 <KillProcess+0x1c4>
ffffffff8020c3ab:	83 7d c4 10          	cmpl   $0x10,-0x3c(%rbp)
ffffffff8020c3af:	74 23                	je     ffffffff8020c3d4 <KillProcess+0x1c4>
ffffffff8020c3b1:	83 7d c4 08          	cmpl   $0x8,-0x3c(%rbp)
ffffffff8020c3b5:	74 1d                	je     ffffffff8020c3d4 <KillProcess+0x1c4>
ffffffff8020c3b7:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8020c3bb:	48 8b 78 10          	mov    0x10(%rax),%rdi
ffffffff8020c3bf:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8020c3c3:	48 8b 40 18          	mov    0x18(%rax),%rax
ffffffff8020c3c7:	48 c1 e8 0c          	shr    $0xc,%rax
ffffffff8020c3cb:	89 c1                	mov    %eax,%ecx
ffffffff8020c3cd:	89 ce                	mov    %ecx,%esi
ffffffff8020c3cf:	e8 2c 60 ff ff       	callq  ffffffff80202400 <FreePhysicalPageCont>
ffffffff8020c3d4:	eb 00                	jmp    ffffffff8020c3d6 <KillProcess+0x1c6>
ffffffff8020c3d6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8020c3da:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
ffffffff8020c3de:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8020c3e2:	48 8b 40 38          	mov    0x38(%rax),%rax
ffffffff8020c3e6:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
ffffffff8020c3ea:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff8020c3ee:	48 89 c7             	mov    %rax,%rdi
ffffffff8020c3f1:	e8 9a f3 ff ff       	callq  ffffffff8020b790 <kfree>
ffffffff8020c3f6:	eb 88                	jmp    ffffffff8020c380 <KillProcess+0x170>
ffffffff8020c3f8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8020c3fc:	48 8b b8 c8 01 00 00 	mov    0x1c8(%rax),%rdi
ffffffff8020c403:	e8 38 5a ff ff       	callq  ffffffff80201e40 <FreeVirtualMemoryInstance>
ffffffff8020c408:	48 8b 04 25 48 ce e8 	mov    0xffffffff80e8ce48,%rax
ffffffff8020c40f:	80 
ffffffff8020c410:	48 8b b8 d8 01 00 00 	mov    0x1d8(%rax),%rdi
ffffffff8020c417:	e8 64 db ff ff       	callq  ffffffff80209f80 <List_Free>
ffffffff8020c41c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8020c420:	48 8b b8 e8 01 00 00 	mov    0x1e8(%rax),%rdi
ffffffff8020c427:	e8 54 62 ff ff       	callq  ffffffff80202680 <FreeSpinlock>
ffffffff8020c42c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8020c430:	48 89 c7             	mov    %rax,%rdi
ffffffff8020c433:	e8 58 f3 ff ff       	callq  ffffffff8020b790 <kfree>
ffffffff8020c438:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
ffffffff8020c43f:	eb 1a                	jmp    ffffffff8020c45b <KillProcess+0x24b>
ffffffff8020c441:	eb 00                	jmp    ffffffff8020c443 <KillProcess+0x233>
ffffffff8020c443:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8020c447:	48 83 c0 01          	add    $0x1,%rax
ffffffff8020c44b:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff8020c44f:	e9 d0 fd ff ff       	jmpq   ffffffff8020c224 <KillProcess+0x14>
ffffffff8020c454:	c7 45 fc 02 00 00 00 	movl   $0x2,-0x4(%rbp)
ffffffff8020c45b:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff8020c45e:	48 83 c4 70          	add    $0x70,%rsp
ffffffff8020c462:	5d                   	pop    %rbp
ffffffff8020c463:	c3                   	retq   
ffffffff8020c464:	66 90                	xchg   %ax,%ax
ffffffff8020c466:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8020c46d:	00 00 00 

ffffffff8020c470 <SleepProcess>:
ffffffff8020c470:	55                   	push   %rbp
ffffffff8020c471:	48 89 e5             	mov    %rsp,%rbp
ffffffff8020c474:	48 83 ec 40          	sub    $0x40,%rsp
ffffffff8020c478:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
ffffffff8020c47c:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
ffffffff8020c483:	00 
ffffffff8020c484:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8020c488:	48 8b 3c 25 50 ce e8 	mov    0xffffffff80e8ce50,%rdi
ffffffff8020c48f:	80 
ffffffff8020c490:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
ffffffff8020c494:	e8 27 d8 ff ff       	callq  ffffffff80209cc0 <List_Length>
ffffffff8020c499:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
ffffffff8020c49d:	48 39 c7             	cmp    %rax,%rdi
ffffffff8020c4a0:	0f 83 a0 00 00 00    	jae    ffffffff8020c546 <SleepProcess+0xd6>
ffffffff8020c4a6:	48 8b 3c 25 50 ce e8 	mov    0xffffffff80e8ce50,%rdi
ffffffff8020c4ad:	80 
ffffffff8020c4ae:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
ffffffff8020c4b2:	e8 b9 d9 ff ff       	callq  ffffffff80209e70 <List_EntryAt>
ffffffff8020c4b7:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
ffffffff8020c4bb:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8020c4bf:	48 8b b8 e8 01 00 00 	mov    0x1e8(%rax),%rdi
ffffffff8020c4c6:	e8 95 60 ff ff       	callq  ffffffff80202560 <LockSpinlock>
ffffffff8020c4cb:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
ffffffff8020c4cf:	48 8b 36             	mov    (%rsi),%rsi
ffffffff8020c4d2:	48 89 75 d8          	mov    %rsi,-0x28(%rbp)
ffffffff8020c4d6:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
ffffffff8020c4da:	48 8b be e8 01 00 00 	mov    0x1e8(%rsi),%rdi
ffffffff8020c4e1:	88 45 cf             	mov    %al,-0x31(%rbp)
ffffffff8020c4e4:	e8 47 61 ff ff       	callq  ffffffff80202630 <UnlockSpinlock>
ffffffff8020c4e9:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
ffffffff8020c4ed:	48 3b 75 f0          	cmp    -0x10(%rbp),%rsi
ffffffff8020c4f1:	88 45 ce             	mov    %al,-0x32(%rbp)
ffffffff8020c4f4:	75 3d                	jne    ffffffff8020c533 <SleepProcess+0xc3>
ffffffff8020c4f6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8020c4fa:	48 8b b8 e8 01 00 00 	mov    0x1e8(%rax),%rdi
ffffffff8020c501:	e8 5a 60 ff ff       	callq  ffffffff80202560 <LockSpinlock>
ffffffff8020c506:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
ffffffff8020c50a:	c7 87 08 01 00 00 01 	movl   $0x1,0x108(%rdi)
ffffffff8020c511:	00 00 00 
ffffffff8020c514:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
ffffffff8020c518:	48 8b bf e8 01 00 00 	mov    0x1e8(%rdi),%rdi
ffffffff8020c51f:	88 45 cd             	mov    %al,-0x33(%rbp)
ffffffff8020c522:	e8 09 61 ff ff       	callq  ffffffff80202630 <UnlockSpinlock>
ffffffff8020c527:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
ffffffff8020c52e:	88 45 cc             	mov    %al,-0x34(%rbp)
ffffffff8020c531:	eb 1a                	jmp    ffffffff8020c54d <SleepProcess+0xdd>
ffffffff8020c533:	eb 00                	jmp    ffffffff8020c535 <SleepProcess+0xc5>
ffffffff8020c535:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8020c539:	48 83 c0 01          	add    $0x1,%rax
ffffffff8020c53d:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff8020c541:	e9 3e ff ff ff       	jmpq   ffffffff8020c484 <SleepProcess+0x14>
ffffffff8020c546:	c7 45 fc 02 00 00 00 	movl   $0x2,-0x4(%rbp)
ffffffff8020c54d:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff8020c550:	48 83 c4 40          	add    $0x40,%rsp
ffffffff8020c554:	5d                   	pop    %rbp
ffffffff8020c555:	c3                   	retq   
ffffffff8020c556:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8020c55d:	00 00 00 

ffffffff8020c560 <SetTLSSize>:
ffffffff8020c560:	55                   	push   %rbp
ffffffff8020c561:	48 89 e5             	mov    %rsp,%rbp
ffffffff8020c564:	48 83 ec 50          	sub    $0x50,%rsp
ffffffff8020c568:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
ffffffff8020c56c:	48 89 75 e8          	mov    %rsi,-0x18(%rbp)
ffffffff8020c570:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
ffffffff8020c574:	48 81 e6 ff 0f 00 00 	and    $0xfff,%rsi
ffffffff8020c57b:	48 83 fe 00          	cmp    $0x0,%rsi
ffffffff8020c57f:	74 1d                	je     ffffffff8020c59e <SetTLSSize+0x3e>
ffffffff8020c581:	b8 00 10 00 00       	mov    $0x1000,%eax
ffffffff8020c586:	89 c1                	mov    %eax,%ecx
ffffffff8020c588:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
ffffffff8020c58c:	48 81 e2 ff 0f 00 00 	and    $0xfff,%rdx
ffffffff8020c593:	48 29 d1             	sub    %rdx,%rcx
ffffffff8020c596:	48 03 4d e8          	add    -0x18(%rbp),%rcx
ffffffff8020c59a:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
ffffffff8020c59e:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
ffffffff8020c5a5:	00 
ffffffff8020c5a6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8020c5aa:	48 8b 3c 25 50 ce e8 	mov    0xffffffff80e8ce50,%rdi
ffffffff8020c5b1:	80 
ffffffff8020c5b2:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
ffffffff8020c5b6:	e8 05 d7 ff ff       	callq  ffffffff80209cc0 <List_Length>
ffffffff8020c5bb:	48 8b 7d c0          	mov    -0x40(%rbp),%rdi
ffffffff8020c5bf:	48 39 c7             	cmp    %rax,%rdi
ffffffff8020c5c2:	0f 83 0b 01 00 00    	jae    ffffffff8020c6d3 <SetTLSSize+0x173>
ffffffff8020c5c8:	48 8b 3c 25 50 ce e8 	mov    0xffffffff80e8ce50,%rdi
ffffffff8020c5cf:	80 
ffffffff8020c5d0:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
ffffffff8020c5d4:	e8 97 d8 ff ff       	callq  ffffffff80209e70 <List_EntryAt>
ffffffff8020c5d9:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
ffffffff8020c5dd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8020c5e1:	48 8b b8 e8 01 00 00 	mov    0x1e8(%rax),%rdi
ffffffff8020c5e8:	e8 73 5f ff ff       	callq  ffffffff80202560 <LockSpinlock>
ffffffff8020c5ed:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
ffffffff8020c5f1:	48 8b 36             	mov    (%rsi),%rsi
ffffffff8020c5f4:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
ffffffff8020c5f8:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
ffffffff8020c5fc:	48 8b be e8 01 00 00 	mov    0x1e8(%rsi),%rdi
ffffffff8020c603:	88 45 bf             	mov    %al,-0x41(%rbp)
ffffffff8020c606:	e8 25 60 ff ff       	callq  ffffffff80202630 <UnlockSpinlock>
ffffffff8020c60b:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
ffffffff8020c60f:	48 3b 75 f0          	cmp    -0x10(%rbp),%rsi
ffffffff8020c613:	88 45 be             	mov    %al,-0x42(%rbp)
ffffffff8020c616:	0f 85 a4 00 00 00    	jne    ffffffff8020c6c0 <SetTLSSize+0x160>
ffffffff8020c61c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8020c620:	48 8b b8 e8 01 00 00 	mov    0x1e8(%rax),%rdi
ffffffff8020c627:	e8 34 5f ff ff       	callq  ffffffff80202560 <LockSpinlock>
ffffffff8020c62c:	48 8b 7d d8          	mov    -0x28(%rbp),%rdi
ffffffff8020c630:	48 8b bf d8 01 00 00 	mov    0x1d8(%rdi),%rdi
ffffffff8020c637:	88 45 bd             	mov    %al,-0x43(%rbp)
ffffffff8020c63a:	e8 81 d6 ff ff       	callq  ffffffff80209cc0 <List_Length>
ffffffff8020c63f:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
ffffffff8020c643:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8020c647:	48 8b b8 e8 01 00 00 	mov    0x1e8(%rax),%rdi
ffffffff8020c64e:	e8 dd 5f ff ff       	callq  ffffffff80202630 <UnlockSpinlock>
ffffffff8020c653:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
ffffffff8020c658:	0f 94 c1             	sete   %cl
ffffffff8020c65b:	80 e1 01             	and    $0x1,%cl
ffffffff8020c65e:	0f b6 d1             	movzbl %cl,%edx
ffffffff8020c661:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
ffffffff8020c666:	0f 94 c1             	sete   %cl
ffffffff8020c669:	80 e1 01             	and    $0x1,%cl
ffffffff8020c66c:	0f b6 f1             	movzbl %cl,%esi
ffffffff8020c66f:	09 f2                	or     %esi,%edx
ffffffff8020c671:	83 fa 00             	cmp    $0x0,%edx
ffffffff8020c674:	88 45 bc             	mov    %al,-0x44(%rbp)
ffffffff8020c677:	74 3e                	je     ffffffff8020c6b7 <SetTLSSize+0x157>
ffffffff8020c679:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8020c67d:	48 8b b8 e8 01 00 00 	mov    0x1e8(%rax),%rdi
ffffffff8020c684:	e8 d7 5e ff ff       	callq  ffffffff80202560 <LockSpinlock>
ffffffff8020c689:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
ffffffff8020c68d:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
ffffffff8020c691:	48 89 b9 e0 01 00 00 	mov    %rdi,0x1e0(%rcx)
ffffffff8020c698:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
ffffffff8020c69c:	48 8b b9 e8 01 00 00 	mov    0x1e8(%rcx),%rdi
ffffffff8020c6a3:	88 45 bb             	mov    %al,-0x45(%rbp)
ffffffff8020c6a6:	e8 85 5f ff ff       	callq  ffffffff80202630 <UnlockSpinlock>
ffffffff8020c6ab:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
ffffffff8020c6b2:	88 45 ba             	mov    %al,-0x46(%rbp)
ffffffff8020c6b5:	eb 23                	jmp    ffffffff8020c6da <SetTLSSize+0x17a>
ffffffff8020c6b7:	c7 45 fc 04 00 00 00 	movl   $0x4,-0x4(%rbp)
ffffffff8020c6be:	eb 1a                	jmp    ffffffff8020c6da <SetTLSSize+0x17a>
ffffffff8020c6c0:	eb 00                	jmp    ffffffff8020c6c2 <SetTLSSize+0x162>
ffffffff8020c6c2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8020c6c6:	48 83 c0 01          	add    $0x1,%rax
ffffffff8020c6ca:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
ffffffff8020c6ce:	e9 d3 fe ff ff       	jmpq   ffffffff8020c5a6 <SetTLSSize+0x46>
ffffffff8020c6d3:	c7 45 fc 02 00 00 00 	movl   $0x2,-0x4(%rbp)
ffffffff8020c6da:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff8020c6dd:	48 83 c4 50          	add    $0x50,%rsp
ffffffff8020c6e1:	5d                   	pop    %rbp
ffffffff8020c6e2:	c3                   	retq   
ffffffff8020c6e3:	0f 1f 00             	nopl   (%rax)
ffffffff8020c6e6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8020c6ed:	00 00 00 

ffffffff8020c6f0 <RegisterSignalHandler>:
ffffffff8020c6f0:	55                   	push   %rbp
ffffffff8020c6f1:	48 89 e5             	mov    %rsp,%rbp
ffffffff8020c6f4:	48 83 ec 50          	sub    $0x50,%rsp
ffffffff8020c6f8:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
ffffffff8020c6fc:	89 75 ec             	mov    %esi,-0x14(%rbp)
ffffffff8020c6ff:	48 89 55 e0          	mov    %rdx,-0x20(%rbp)
ffffffff8020c703:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
ffffffff8020c70a:	00 
ffffffff8020c70b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8020c70f:	48 8b 3c 25 50 ce e8 	mov    0xffffffff80e8ce50,%rdi
ffffffff8020c716:	80 
ffffffff8020c717:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
ffffffff8020c71b:	e8 a0 d5 ff ff       	callq  ffffffff80209cc0 <List_Length>
ffffffff8020c720:	48 8b 7d b8          	mov    -0x48(%rbp),%rdi
ffffffff8020c724:	48 39 c7             	cmp    %rax,%rdi
ffffffff8020c727:	0f 83 d0 00 00 00    	jae    ffffffff8020c7fd <RegisterSignalHandler+0x10d>
ffffffff8020c72d:	48 8b 3c 25 50 ce e8 	mov    0xffffffff80e8ce50,%rdi
ffffffff8020c734:	80 
ffffffff8020c735:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
ffffffff8020c739:	e8 32 d7 ff ff       	callq  ffffffff80209e70 <List_EntryAt>
ffffffff8020c73e:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
ffffffff8020c742:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff8020c746:	48 8b b8 e8 01 00 00 	mov    0x1e8(%rax),%rdi
ffffffff8020c74d:	e8 0e 5e ff ff       	callq  ffffffff80202560 <LockSpinlock>
ffffffff8020c752:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
ffffffff8020c756:	48 8b 36             	mov    (%rsi),%rsi
ffffffff8020c759:	48 89 75 c8          	mov    %rsi,-0x38(%rbp)
ffffffff8020c75d:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
ffffffff8020c761:	48 8b be e8 01 00 00 	mov    0x1e8(%rsi),%rdi
ffffffff8020c768:	88 45 b7             	mov    %al,-0x49(%rbp)
ffffffff8020c76b:	e8 c0 5e ff ff       	callq  ffffffff80202630 <UnlockSpinlock>
ffffffff8020c770:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
ffffffff8020c774:	48 3b 75 f0          	cmp    -0x10(%rbp),%rsi
ffffffff8020c778:	88 45 b6             	mov    %al,-0x4a(%rbp)
ffffffff8020c77b:	75 6d                	jne    ffffffff8020c7ea <RegisterSignalHandler+0xfa>
ffffffff8020c77d:	c7 45 c4 00 00 00 00 	movl   $0x0,-0x3c(%rbp)
ffffffff8020c784:	83 7d c4 16          	cmpl   $0x16,-0x3c(%rbp)
ffffffff8020c788:	7d 57                	jge    ffffffff8020c7e1 <RegisterSignalHandler+0xf1>
ffffffff8020c78a:	8b 45 ec             	mov    -0x14(%rbp),%eax
ffffffff8020c78d:	8b 4d c4             	mov    -0x3c(%rbp),%ecx
ffffffff8020c790:	d3 e8                	shr    %cl,%eax
ffffffff8020c792:	83 e0 01             	and    $0x1,%eax
ffffffff8020c795:	83 f8 00             	cmp    $0x0,%eax
ffffffff8020c798:	74 3a                	je     ffffffff8020c7d4 <RegisterSignalHandler+0xe4>
ffffffff8020c79a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff8020c79e:	48 8b b8 e8 01 00 00 	mov    0x1e8(%rax),%rdi
ffffffff8020c7a5:	e8 b6 5d ff ff       	callq  ffffffff80202560 <LockSpinlock>
ffffffff8020c7aa:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
ffffffff8020c7ae:	48 63 4d c4          	movslq -0x3c(%rbp),%rcx
ffffffff8020c7b2:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
ffffffff8020c7b6:	48 89 bc ca 18 01 00 	mov    %rdi,0x118(%rdx,%rcx,8)
ffffffff8020c7bd:	00 
ffffffff8020c7be:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
ffffffff8020c7c2:	48 8b b9 e8 01 00 00 	mov    0x1e8(%rcx),%rdi
ffffffff8020c7c9:	88 45 b5             	mov    %al,-0x4b(%rbp)
ffffffff8020c7cc:	e8 5f 5e ff ff       	callq  ffffffff80202630 <UnlockSpinlock>
ffffffff8020c7d1:	88 45 b4             	mov    %al,-0x4c(%rbp)
ffffffff8020c7d4:	eb 00                	jmp    ffffffff8020c7d6 <RegisterSignalHandler+0xe6>
ffffffff8020c7d6:	8b 45 c4             	mov    -0x3c(%rbp),%eax
ffffffff8020c7d9:	83 c0 01             	add    $0x1,%eax
ffffffff8020c7dc:	89 45 c4             	mov    %eax,-0x3c(%rbp)
ffffffff8020c7df:	eb a3                	jmp    ffffffff8020c784 <RegisterSignalHandler+0x94>
ffffffff8020c7e1:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
ffffffff8020c7e8:	eb 1a                	jmp    ffffffff8020c804 <RegisterSignalHandler+0x114>
ffffffff8020c7ea:	eb 00                	jmp    ffffffff8020c7ec <RegisterSignalHandler+0xfc>
ffffffff8020c7ec:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8020c7f0:	48 83 c0 01          	add    $0x1,%rax
ffffffff8020c7f4:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
ffffffff8020c7f8:	e9 0e ff ff ff       	jmpq   ffffffff8020c70b <RegisterSignalHandler+0x1b>
ffffffff8020c7fd:	c7 45 fc 02 00 00 00 	movl   $0x2,-0x4(%rbp)
ffffffff8020c804:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff8020c807:	48 83 c4 50          	add    $0x50,%rsp
ffffffff8020c80b:	5d                   	pop    %rbp
ffffffff8020c80c:	c3                   	retq   
ffffffff8020c80d:	0f 1f 00             	nopl   (%rax)

ffffffff8020c810 <get_thread_Parent>:
ffffffff8020c810:	55                   	push   %rbp
ffffffff8020c811:	48 89 e5             	mov    %rsp,%rbp
ffffffff8020c814:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff8020c818:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8020c81c:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
ffffffff8020c821:	75 08                	jne    ffffffff8020c82b <get_thread_Parent+0x1b>
ffffffff8020c823:	48 83 c4 20          	add    $0x20,%rsp
ffffffff8020c827:	58                   	pop    %rax
ffffffff8020c828:	58                   	pop    %rax
ffffffff8020c829:	fa                   	cli    
ffffffff8020c82a:	f4                   	hlt    
ffffffff8020c82b:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
ffffffff8020c832:	00 
ffffffff8020c833:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8020c837:	48 8b 78 70          	mov    0x70(%rax),%rdi
ffffffff8020c83b:	e8 20 5d ff ff       	callq  ffffffff80202560 <LockSpinlock>
ffffffff8020c840:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
ffffffff8020c844:	48 8b 3f             	mov    (%rdi),%rdi
ffffffff8020c847:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
ffffffff8020c84b:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
ffffffff8020c84f:	48 8b 7f 70          	mov    0x70(%rdi),%rdi
ffffffff8020c853:	88 45 ef             	mov    %al,-0x11(%rbp)
ffffffff8020c856:	e8 d5 5d ff ff       	callq  ffffffff80202630 <UnlockSpinlock>
ffffffff8020c85b:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
ffffffff8020c85f:	88 45 ee             	mov    %al,-0x12(%rbp)
ffffffff8020c862:	48 89 f8             	mov    %rdi,%rax
ffffffff8020c865:	48 83 c4 20          	add    $0x20,%rsp
ffffffff8020c869:	5d                   	pop    %rbp
ffffffff8020c86a:	c3                   	retq   
ffffffff8020c86b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

ffffffff8020c870 <set_thread_Parent>:
ffffffff8020c870:	55                   	push   %rbp
ffffffff8020c871:	48 89 e5             	mov    %rsp,%rbp
ffffffff8020c874:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff8020c878:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8020c87c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff8020c880:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
ffffffff8020c884:	48 8b 7e 70          	mov    0x70(%rsi),%rdi
ffffffff8020c888:	e8 d3 5c ff ff       	callq  ffffffff80202560 <LockSpinlock>
ffffffff8020c88d:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
ffffffff8020c891:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
ffffffff8020c895:	48 89 37             	mov    %rsi,(%rdi)
ffffffff8020c898:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
ffffffff8020c89c:	48 8b 7e 70          	mov    0x70(%rsi),%rdi
ffffffff8020c8a0:	88 45 ef             	mov    %al,-0x11(%rbp)
ffffffff8020c8a3:	e8 88 5d ff ff       	callq  ffffffff80202630 <UnlockSpinlock>
ffffffff8020c8a8:	88 45 ee             	mov    %al,-0x12(%rbp)
ffffffff8020c8ab:	48 83 c4 20          	add    $0x20,%rsp
ffffffff8020c8af:	5d                   	pop    %rbp
ffffffff8020c8b0:	c3                   	retq   
ffffffff8020c8b1:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff8020c8b6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8020c8bd:	00 00 00 

ffffffff8020c8c0 <get_thread_ID>:
ffffffff8020c8c0:	55                   	push   %rbp
ffffffff8020c8c1:	48 89 e5             	mov    %rsp,%rbp
ffffffff8020c8c4:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff8020c8c8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8020c8cc:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
ffffffff8020c8d1:	75 08                	jne    ffffffff8020c8db <get_thread_ID+0x1b>
ffffffff8020c8d3:	48 83 c4 20          	add    $0x20,%rsp
ffffffff8020c8d7:	58                   	pop    %rax
ffffffff8020c8d8:	58                   	pop    %rax
ffffffff8020c8d9:	fa                   	cli    
ffffffff8020c8da:	f4                   	hlt    
ffffffff8020c8db:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
ffffffff8020c8e2:	00 
ffffffff8020c8e3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8020c8e7:	48 8b 78 70          	mov    0x70(%rax),%rdi
ffffffff8020c8eb:	e8 70 5c ff ff       	callq  ffffffff80202560 <LockSpinlock>
ffffffff8020c8f0:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
ffffffff8020c8f4:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
ffffffff8020c8f8:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
ffffffff8020c8fc:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
ffffffff8020c900:	48 8b 7f 70          	mov    0x70(%rdi),%rdi
ffffffff8020c904:	88 45 ef             	mov    %al,-0x11(%rbp)
ffffffff8020c907:	e8 24 5d ff ff       	callq  ffffffff80202630 <UnlockSpinlock>
ffffffff8020c90c:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
ffffffff8020c910:	88 45 ee             	mov    %al,-0x12(%rbp)
ffffffff8020c913:	48 89 f8             	mov    %rdi,%rax
ffffffff8020c916:	48 83 c4 20          	add    $0x20,%rsp
ffffffff8020c91a:	5d                   	pop    %rbp
ffffffff8020c91b:	c3                   	retq   
ffffffff8020c91c:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff8020c920 <set_thread_ID>:
ffffffff8020c920:	55                   	push   %rbp
ffffffff8020c921:	48 89 e5             	mov    %rsp,%rbp
ffffffff8020c924:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff8020c928:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8020c92c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff8020c930:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
ffffffff8020c934:	48 8b 7e 70          	mov    0x70(%rsi),%rdi
ffffffff8020c938:	e8 23 5c ff ff       	callq  ffffffff80202560 <LockSpinlock>
ffffffff8020c93d:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
ffffffff8020c941:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
ffffffff8020c945:	48 89 77 08          	mov    %rsi,0x8(%rdi)
ffffffff8020c949:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
ffffffff8020c94d:	48 8b 7e 70          	mov    0x70(%rsi),%rdi
ffffffff8020c951:	88 45 ef             	mov    %al,-0x11(%rbp)
ffffffff8020c954:	e8 d7 5c ff ff       	callq  ffffffff80202630 <UnlockSpinlock>
ffffffff8020c959:	88 45 ee             	mov    %al,-0x12(%rbp)
ffffffff8020c95c:	48 83 c4 20          	add    $0x20,%rsp
ffffffff8020c960:	5d                   	pop    %rbp
ffffffff8020c961:	c3                   	retq   
ffffffff8020c962:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff8020c966:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8020c96d:	00 00 00 

ffffffff8020c970 <get_thread_ParentProcess>:
ffffffff8020c970:	55                   	push   %rbp
ffffffff8020c971:	48 89 e5             	mov    %rsp,%rbp
ffffffff8020c974:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff8020c978:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8020c97c:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
ffffffff8020c981:	75 08                	jne    ffffffff8020c98b <get_thread_ParentProcess+0x1b>
ffffffff8020c983:	48 83 c4 20          	add    $0x20,%rsp
ffffffff8020c987:	58                   	pop    %rax
ffffffff8020c988:	58                   	pop    %rax
ffffffff8020c989:	fa                   	cli    
ffffffff8020c98a:	f4                   	hlt    
ffffffff8020c98b:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
ffffffff8020c992:	00 
ffffffff8020c993:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8020c997:	48 8b 78 70          	mov    0x70(%rax),%rdi
ffffffff8020c99b:	e8 c0 5b ff ff       	callq  ffffffff80202560 <LockSpinlock>
ffffffff8020c9a0:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
ffffffff8020c9a4:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
ffffffff8020c9a8:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
ffffffff8020c9ac:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
ffffffff8020c9b0:	48 8b 7f 70          	mov    0x70(%rdi),%rdi
ffffffff8020c9b4:	88 45 ef             	mov    %al,-0x11(%rbp)
ffffffff8020c9b7:	e8 74 5c ff ff       	callq  ffffffff80202630 <UnlockSpinlock>
ffffffff8020c9bc:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
ffffffff8020c9c0:	88 45 ee             	mov    %al,-0x12(%rbp)
ffffffff8020c9c3:	48 89 f8             	mov    %rdi,%rax
ffffffff8020c9c6:	48 83 c4 20          	add    $0x20,%rsp
ffffffff8020c9ca:	5d                   	pop    %rbp
ffffffff8020c9cb:	c3                   	retq   
ffffffff8020c9cc:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff8020c9d0 <set_thread_ParentProcess>:
ffffffff8020c9d0:	55                   	push   %rbp
ffffffff8020c9d1:	48 89 e5             	mov    %rsp,%rbp
ffffffff8020c9d4:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff8020c9d8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8020c9dc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff8020c9e0:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
ffffffff8020c9e4:	48 8b 7e 70          	mov    0x70(%rsi),%rdi
ffffffff8020c9e8:	e8 73 5b ff ff       	callq  ffffffff80202560 <LockSpinlock>
ffffffff8020c9ed:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
ffffffff8020c9f1:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
ffffffff8020c9f5:	48 89 77 10          	mov    %rsi,0x10(%rdi)
ffffffff8020c9f9:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
ffffffff8020c9fd:	48 8b 7e 70          	mov    0x70(%rsi),%rdi
ffffffff8020ca01:	88 45 ef             	mov    %al,-0x11(%rbp)
ffffffff8020ca04:	e8 27 5c ff ff       	callq  ffffffff80202630 <UnlockSpinlock>
ffffffff8020ca09:	88 45 ee             	mov    %al,-0x12(%rbp)
ffffffff8020ca0c:	48 83 c4 20          	add    $0x20,%rsp
ffffffff8020ca10:	5d                   	pop    %rbp
ffffffff8020ca11:	c3                   	retq   
ffffffff8020ca12:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff8020ca16:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8020ca1d:	00 00 00 

ffffffff8020ca20 <get_proc_ID>:
ffffffff8020ca20:	55                   	push   %rbp
ffffffff8020ca21:	48 89 e5             	mov    %rsp,%rbp
ffffffff8020ca24:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff8020ca28:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8020ca2c:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
ffffffff8020ca31:	75 08                	jne    ffffffff8020ca3b <get_proc_ID+0x1b>
ffffffff8020ca33:	48 83 c4 20          	add    $0x20,%rsp
ffffffff8020ca37:	58                   	pop    %rax
ffffffff8020ca38:	58                   	pop    %rax
ffffffff8020ca39:	fa                   	cli    
ffffffff8020ca3a:	f4                   	hlt    
ffffffff8020ca3b:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
ffffffff8020ca42:	00 
ffffffff8020ca43:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8020ca47:	48 8b b8 e8 01 00 00 	mov    0x1e8(%rax),%rdi
ffffffff8020ca4e:	e8 0d 5b ff ff       	callq  ffffffff80202560 <LockSpinlock>
ffffffff8020ca53:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
ffffffff8020ca57:	48 8b 3f             	mov    (%rdi),%rdi
ffffffff8020ca5a:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
ffffffff8020ca5e:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
ffffffff8020ca62:	48 8b bf e8 01 00 00 	mov    0x1e8(%rdi),%rdi
ffffffff8020ca69:	88 45 ef             	mov    %al,-0x11(%rbp)
ffffffff8020ca6c:	e8 bf 5b ff ff       	callq  ffffffff80202630 <UnlockSpinlock>
ffffffff8020ca71:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
ffffffff8020ca75:	88 45 ee             	mov    %al,-0x12(%rbp)
ffffffff8020ca78:	48 89 f8             	mov    %rdi,%rax
ffffffff8020ca7b:	48 83 c4 20          	add    $0x20,%rsp
ffffffff8020ca7f:	5d                   	pop    %rbp
ffffffff8020ca80:	c3                   	retq   
ffffffff8020ca81:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff8020ca86:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8020ca8d:	00 00 00 

ffffffff8020ca90 <get_proc_TLSSize>:
ffffffff8020ca90:	55                   	push   %rbp
ffffffff8020ca91:	48 89 e5             	mov    %rsp,%rbp
ffffffff8020ca94:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff8020ca98:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8020ca9c:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
ffffffff8020caa1:	75 08                	jne    ffffffff8020caab <get_proc_TLSSize+0x1b>
ffffffff8020caa3:	48 83 c4 20          	add    $0x20,%rsp
ffffffff8020caa7:	58                   	pop    %rax
ffffffff8020caa8:	58                   	pop    %rax
ffffffff8020caa9:	fa                   	cli    
ffffffff8020caaa:	f4                   	hlt    
ffffffff8020caab:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
ffffffff8020cab2:	00 
ffffffff8020cab3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8020cab7:	48 8b b8 e8 01 00 00 	mov    0x1e8(%rax),%rdi
ffffffff8020cabe:	e8 9d 5a ff ff       	callq  ffffffff80202560 <LockSpinlock>
ffffffff8020cac3:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
ffffffff8020cac7:	48 8b bf e0 01 00 00 	mov    0x1e0(%rdi),%rdi
ffffffff8020cace:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
ffffffff8020cad2:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
ffffffff8020cad6:	48 8b bf e8 01 00 00 	mov    0x1e8(%rdi),%rdi
ffffffff8020cadd:	88 45 ef             	mov    %al,-0x11(%rbp)
ffffffff8020cae0:	e8 4b 5b ff ff       	callq  ffffffff80202630 <UnlockSpinlock>
ffffffff8020cae5:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
ffffffff8020cae9:	88 45 ee             	mov    %al,-0x12(%rbp)
ffffffff8020caec:	48 89 f8             	mov    %rdi,%rax
ffffffff8020caef:	48 83 c4 20          	add    $0x20,%rsp
ffffffff8020caf3:	5d                   	pop    %rbp
ffffffff8020caf4:	c3                   	retq   
ffffffff8020caf5:	90                   	nop
ffffffff8020caf6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8020cafd:	00 00 00 

ffffffff8020cb00 <get_proc_PageTable>:
ffffffff8020cb00:	55                   	push   %rbp
ffffffff8020cb01:	48 89 e5             	mov    %rsp,%rbp
ffffffff8020cb04:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff8020cb08:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8020cb0c:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
ffffffff8020cb11:	75 08                	jne    ffffffff8020cb1b <get_proc_PageTable+0x1b>
ffffffff8020cb13:	48 83 c4 20          	add    $0x20,%rsp
ffffffff8020cb17:	58                   	pop    %rax
ffffffff8020cb18:	58                   	pop    %rax
ffffffff8020cb19:	fa                   	cli    
ffffffff8020cb1a:	f4                   	hlt    
ffffffff8020cb1b:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
ffffffff8020cb22:	00 
ffffffff8020cb23:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8020cb27:	48 8b b8 e8 01 00 00 	mov    0x1e8(%rax),%rdi
ffffffff8020cb2e:	e8 2d 5a ff ff       	callq  ffffffff80202560 <LockSpinlock>
ffffffff8020cb33:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
ffffffff8020cb37:	48 8b bf c8 01 00 00 	mov    0x1c8(%rdi),%rdi
ffffffff8020cb3e:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
ffffffff8020cb42:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
ffffffff8020cb46:	48 8b bf e8 01 00 00 	mov    0x1e8(%rdi),%rdi
ffffffff8020cb4d:	88 45 ef             	mov    %al,-0x11(%rbp)
ffffffff8020cb50:	e8 db 5a ff ff       	callq  ffffffff80202630 <UnlockSpinlock>
ffffffff8020cb55:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
ffffffff8020cb59:	88 45 ee             	mov    %al,-0x12(%rbp)
ffffffff8020cb5c:	48 89 f8             	mov    %rdi,%rax
ffffffff8020cb5f:	48 83 c4 20          	add    $0x20,%rsp
ffffffff8020cb63:	5d                   	pop    %rbp
ffffffff8020cb64:	c3                   	retq   
ffffffff8020cb65:	90                   	nop
ffffffff8020cb66:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8020cb6d:	00 00 00 

ffffffff8020cb70 <get_proc_AllocationMap>:
ffffffff8020cb70:	55                   	push   %rbp
ffffffff8020cb71:	48 89 e5             	mov    %rsp,%rbp
ffffffff8020cb74:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff8020cb78:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8020cb7c:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
ffffffff8020cb81:	75 08                	jne    ffffffff8020cb8b <get_proc_AllocationMap+0x1b>
ffffffff8020cb83:	48 83 c4 20          	add    $0x20,%rsp
ffffffff8020cb87:	58                   	pop    %rax
ffffffff8020cb88:	58                   	pop    %rax
ffffffff8020cb89:	fa                   	cli    
ffffffff8020cb8a:	f4                   	hlt    
ffffffff8020cb8b:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
ffffffff8020cb92:	00 
ffffffff8020cb93:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8020cb97:	48 8b b8 e8 01 00 00 	mov    0x1e8(%rax),%rdi
ffffffff8020cb9e:	e8 bd 59 ff ff       	callq  ffffffff80202560 <LockSpinlock>
ffffffff8020cba3:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
ffffffff8020cba7:	48 8b bf d0 01 00 00 	mov    0x1d0(%rdi),%rdi
ffffffff8020cbae:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
ffffffff8020cbb2:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
ffffffff8020cbb6:	48 8b bf e8 01 00 00 	mov    0x1e8(%rdi),%rdi
ffffffff8020cbbd:	88 45 ef             	mov    %al,-0x11(%rbp)
ffffffff8020cbc0:	e8 6b 5a ff ff       	callq  ffffffff80202630 <UnlockSpinlock>
ffffffff8020cbc5:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
ffffffff8020cbc9:	88 45 ee             	mov    %al,-0x12(%rbp)
ffffffff8020cbcc:	48 89 f8             	mov    %rdi,%rax
ffffffff8020cbcf:	48 83 c4 20          	add    $0x20,%rsp
ffffffff8020cbd3:	5d                   	pop    %rbp
ffffffff8020cbd4:	c3                   	retq   
ffffffff8020cbd5:	90                   	nop
ffffffff8020cbd6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8020cbdd:	00 00 00 

ffffffff8020cbe0 <get_thread_entry_point>:
ffffffff8020cbe0:	55                   	push   %rbp
ffffffff8020cbe1:	48 89 e5             	mov    %rsp,%rbp
ffffffff8020cbe4:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff8020cbe8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8020cbec:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
ffffffff8020cbf1:	75 08                	jne    ffffffff8020cbfb <get_thread_entry_point+0x1b>
ffffffff8020cbf3:	48 83 c4 20          	add    $0x20,%rsp
ffffffff8020cbf7:	58                   	pop    %rax
ffffffff8020cbf8:	58                   	pop    %rax
ffffffff8020cbf9:	fa                   	cli    
ffffffff8020cbfa:	f4                   	hlt    
ffffffff8020cbfb:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
ffffffff8020cc02:	00 
ffffffff8020cc03:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8020cc07:	48 8b 78 70          	mov    0x70(%rax),%rdi
ffffffff8020cc0b:	e8 50 59 ff ff       	callq  ffffffff80202560 <LockSpinlock>
ffffffff8020cc10:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
ffffffff8020cc14:	48 8b 7f 18          	mov    0x18(%rdi),%rdi
ffffffff8020cc18:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
ffffffff8020cc1c:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
ffffffff8020cc20:	48 8b 7f 70          	mov    0x70(%rdi),%rdi
ffffffff8020cc24:	88 45 ef             	mov    %al,-0x11(%rbp)
ffffffff8020cc27:	e8 04 5a ff ff       	callq  ffffffff80202630 <UnlockSpinlock>
ffffffff8020cc2c:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
ffffffff8020cc30:	88 45 ee             	mov    %al,-0x12(%rbp)
ffffffff8020cc33:	48 89 f8             	mov    %rdi,%rax
ffffffff8020cc36:	48 83 c4 20          	add    $0x20,%rsp
ffffffff8020cc3a:	5d                   	pop    %rbp
ffffffff8020cc3b:	c3                   	retq   
ffffffff8020cc3c:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff8020cc40 <set_thread_entry_point>:
ffffffff8020cc40:	55                   	push   %rbp
ffffffff8020cc41:	48 89 e5             	mov    %rsp,%rbp
ffffffff8020cc44:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff8020cc48:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8020cc4c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff8020cc50:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
ffffffff8020cc54:	48 8b 7e 70          	mov    0x70(%rsi),%rdi
ffffffff8020cc58:	e8 03 59 ff ff       	callq  ffffffff80202560 <LockSpinlock>
ffffffff8020cc5d:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
ffffffff8020cc61:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
ffffffff8020cc65:	48 89 77 18          	mov    %rsi,0x18(%rdi)
ffffffff8020cc69:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
ffffffff8020cc6d:	48 8b 7e 70          	mov    0x70(%rsi),%rdi
ffffffff8020cc71:	88 45 ef             	mov    %al,-0x11(%rbp)
ffffffff8020cc74:	e8 b7 59 ff ff       	callq  ffffffff80202630 <UnlockSpinlock>
ffffffff8020cc79:	88 45 ee             	mov    %al,-0x12(%rbp)
ffffffff8020cc7c:	48 83 c4 20          	add    $0x20,%rsp
ffffffff8020cc80:	5d                   	pop    %rbp
ffffffff8020cc81:	c3                   	retq   
ffffffff8020cc82:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff8020cc86:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8020cc8d:	00 00 00 

ffffffff8020cc90 <get_thread_state>:
ffffffff8020cc90:	55                   	push   %rbp
ffffffff8020cc91:	48 89 e5             	mov    %rsp,%rbp
ffffffff8020cc94:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff8020cc98:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8020cc9c:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
ffffffff8020cca1:	75 08                	jne    ffffffff8020ccab <get_thread_state+0x1b>
ffffffff8020cca3:	48 83 c4 20          	add    $0x20,%rsp
ffffffff8020cca7:	58                   	pop    %rax
ffffffff8020cca8:	58                   	pop    %rax
ffffffff8020cca9:	fa                   	cli    
ffffffff8020ccaa:	f4                   	hlt    
ffffffff8020ccab:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
ffffffff8020ccb2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8020ccb6:	48 8b 78 70          	mov    0x70(%rax),%rdi
ffffffff8020ccba:	e8 a1 58 ff ff       	callq  ffffffff80202560 <LockSpinlock>
ffffffff8020ccbf:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
ffffffff8020ccc3:	8b 4f 20             	mov    0x20(%rdi),%ecx
ffffffff8020ccc6:	89 4d f4             	mov    %ecx,-0xc(%rbp)
ffffffff8020ccc9:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
ffffffff8020cccd:	48 8b 7f 70          	mov    0x70(%rdi),%rdi
ffffffff8020ccd1:	88 45 f3             	mov    %al,-0xd(%rbp)
ffffffff8020ccd4:	e8 57 59 ff ff       	callq  ffffffff80202630 <UnlockSpinlock>
ffffffff8020ccd9:	8b 4d f4             	mov    -0xc(%rbp),%ecx
ffffffff8020ccdc:	88 45 f2             	mov    %al,-0xe(%rbp)
ffffffff8020ccdf:	89 c8                	mov    %ecx,%eax
ffffffff8020cce1:	48 83 c4 10          	add    $0x10,%rsp
ffffffff8020cce5:	5d                   	pop    %rbp
ffffffff8020cce6:	c3                   	retq   
ffffffff8020cce7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff8020ccee:	00 00 

ffffffff8020ccf0 <set_thread_state>:
ffffffff8020ccf0:	55                   	push   %rbp
ffffffff8020ccf1:	48 89 e5             	mov    %rsp,%rbp
ffffffff8020ccf4:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff8020ccf8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8020ccfc:	89 75 f4             	mov    %esi,-0xc(%rbp)
ffffffff8020ccff:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
ffffffff8020cd03:	48 8b 7f 70          	mov    0x70(%rdi),%rdi
ffffffff8020cd07:	e8 54 58 ff ff       	callq  ffffffff80202560 <LockSpinlock>
ffffffff8020cd0c:	8b 75 f4             	mov    -0xc(%rbp),%esi
ffffffff8020cd0f:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
ffffffff8020cd13:	89 77 20             	mov    %esi,0x20(%rdi)
ffffffff8020cd16:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
ffffffff8020cd1a:	48 8b 7f 70          	mov    0x70(%rdi),%rdi
ffffffff8020cd1e:	88 45 f3             	mov    %al,-0xd(%rbp)
ffffffff8020cd21:	e8 0a 59 ff ff       	callq  ffffffff80202630 <UnlockSpinlock>
ffffffff8020cd26:	88 45 f2             	mov    %al,-0xe(%rbp)
ffffffff8020cd29:	48 83 c4 10          	add    $0x10,%rsp
ffffffff8020cd2d:	5d                   	pop    %rbp
ffffffff8020cd2e:	c3                   	retq   
ffffffff8020cd2f:	90                   	nop

ffffffff8020cd30 <get_thread_priority>:
ffffffff8020cd30:	55                   	push   %rbp
ffffffff8020cd31:	48 89 e5             	mov    %rsp,%rbp
ffffffff8020cd34:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff8020cd38:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8020cd3c:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
ffffffff8020cd41:	75 08                	jne    ffffffff8020cd4b <get_thread_priority+0x1b>
ffffffff8020cd43:	48 83 c4 20          	add    $0x20,%rsp
ffffffff8020cd47:	58                   	pop    %rax
ffffffff8020cd48:	58                   	pop    %rax
ffffffff8020cd49:	fa                   	cli    
ffffffff8020cd4a:	f4                   	hlt    
ffffffff8020cd4b:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
ffffffff8020cd52:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8020cd56:	48 8b 78 70          	mov    0x70(%rax),%rdi
ffffffff8020cd5a:	e8 01 58 ff ff       	callq  ffffffff80202560 <LockSpinlock>
ffffffff8020cd5f:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
ffffffff8020cd63:	8b 4f 24             	mov    0x24(%rdi),%ecx
ffffffff8020cd66:	89 4d f4             	mov    %ecx,-0xc(%rbp)
ffffffff8020cd69:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
ffffffff8020cd6d:	48 8b 7f 70          	mov    0x70(%rdi),%rdi
ffffffff8020cd71:	88 45 f3             	mov    %al,-0xd(%rbp)
ffffffff8020cd74:	e8 b7 58 ff ff       	callq  ffffffff80202630 <UnlockSpinlock>
ffffffff8020cd79:	8b 4d f4             	mov    -0xc(%rbp),%ecx
ffffffff8020cd7c:	88 45 f2             	mov    %al,-0xe(%rbp)
ffffffff8020cd7f:	89 c8                	mov    %ecx,%eax
ffffffff8020cd81:	48 83 c4 10          	add    $0x10,%rsp
ffffffff8020cd85:	5d                   	pop    %rbp
ffffffff8020cd86:	c3                   	retq   
ffffffff8020cd87:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff8020cd8e:	00 00 

ffffffff8020cd90 <set_thread_priority>:
ffffffff8020cd90:	55                   	push   %rbp
ffffffff8020cd91:	48 89 e5             	mov    %rsp,%rbp
ffffffff8020cd94:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff8020cd98:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8020cd9c:	89 75 f4             	mov    %esi,-0xc(%rbp)
ffffffff8020cd9f:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
ffffffff8020cda3:	48 8b 7f 70          	mov    0x70(%rdi),%rdi
ffffffff8020cda7:	e8 b4 57 ff ff       	callq  ffffffff80202560 <LockSpinlock>
ffffffff8020cdac:	8b 75 f4             	mov    -0xc(%rbp),%esi
ffffffff8020cdaf:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
ffffffff8020cdb3:	89 77 24             	mov    %esi,0x24(%rdi)
ffffffff8020cdb6:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
ffffffff8020cdba:	48 8b 7f 70          	mov    0x70(%rdi),%rdi
ffffffff8020cdbe:	88 45 f3             	mov    %al,-0xd(%rbp)
ffffffff8020cdc1:	e8 6a 58 ff ff       	callq  ffffffff80202630 <UnlockSpinlock>
ffffffff8020cdc6:	88 45 f2             	mov    %al,-0xe(%rbp)
ffffffff8020cdc9:	48 83 c4 10          	add    $0x10,%rsp
ffffffff8020cdcd:	5d                   	pop    %rbp
ffffffff8020cdce:	c3                   	retq   
ffffffff8020cdcf:	90                   	nop

ffffffff8020cdd0 <get_thread_interrupt_stack_base>:
ffffffff8020cdd0:	55                   	push   %rbp
ffffffff8020cdd1:	48 89 e5             	mov    %rsp,%rbp
ffffffff8020cdd4:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff8020cdd8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8020cddc:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
ffffffff8020cde1:	75 08                	jne    ffffffff8020cdeb <get_thread_interrupt_stack_base+0x1b>
ffffffff8020cde3:	48 83 c4 20          	add    $0x20,%rsp
ffffffff8020cde7:	58                   	pop    %rax
ffffffff8020cde8:	58                   	pop    %rax
ffffffff8020cde9:	fa                   	cli    
ffffffff8020cdea:	f4                   	hlt    
ffffffff8020cdeb:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
ffffffff8020cdf2:	00 
ffffffff8020cdf3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8020cdf7:	48 8b 78 70          	mov    0x70(%rax),%rdi
ffffffff8020cdfb:	e8 60 57 ff ff       	callq  ffffffff80202560 <LockSpinlock>
ffffffff8020ce00:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
ffffffff8020ce04:	48 8b 7f 28          	mov    0x28(%rdi),%rdi
ffffffff8020ce08:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
ffffffff8020ce0c:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
ffffffff8020ce10:	48 8b 7f 70          	mov    0x70(%rdi),%rdi
ffffffff8020ce14:	88 45 ef             	mov    %al,-0x11(%rbp)
ffffffff8020ce17:	e8 14 58 ff ff       	callq  ffffffff80202630 <UnlockSpinlock>
ffffffff8020ce1c:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
ffffffff8020ce20:	88 45 ee             	mov    %al,-0x12(%rbp)
ffffffff8020ce23:	48 89 f8             	mov    %rdi,%rax
ffffffff8020ce26:	48 83 c4 20          	add    $0x20,%rsp
ffffffff8020ce2a:	5d                   	pop    %rbp
ffffffff8020ce2b:	c3                   	retq   
ffffffff8020ce2c:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff8020ce30 <set_thread_interrupt_stack_base>:
ffffffff8020ce30:	55                   	push   %rbp
ffffffff8020ce31:	48 89 e5             	mov    %rsp,%rbp
ffffffff8020ce34:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff8020ce38:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8020ce3c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff8020ce40:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
ffffffff8020ce44:	48 8b 7e 70          	mov    0x70(%rsi),%rdi
ffffffff8020ce48:	e8 13 57 ff ff       	callq  ffffffff80202560 <LockSpinlock>
ffffffff8020ce4d:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
ffffffff8020ce51:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
ffffffff8020ce55:	48 89 77 28          	mov    %rsi,0x28(%rdi)
ffffffff8020ce59:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
ffffffff8020ce5d:	48 8b 7e 70          	mov    0x70(%rsi),%rdi
ffffffff8020ce61:	88 45 ef             	mov    %al,-0x11(%rbp)
ffffffff8020ce64:	e8 c7 57 ff ff       	callq  ffffffff80202630 <UnlockSpinlock>
ffffffff8020ce69:	88 45 ee             	mov    %al,-0x12(%rbp)
ffffffff8020ce6c:	48 83 c4 20          	add    $0x20,%rsp
ffffffff8020ce70:	5d                   	pop    %rbp
ffffffff8020ce71:	c3                   	retq   
ffffffff8020ce72:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff8020ce76:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8020ce7d:	00 00 00 

ffffffff8020ce80 <get_thread_user_stack_base>:
ffffffff8020ce80:	55                   	push   %rbp
ffffffff8020ce81:	48 89 e5             	mov    %rsp,%rbp
ffffffff8020ce84:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff8020ce88:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8020ce8c:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
ffffffff8020ce91:	75 08                	jne    ffffffff8020ce9b <get_thread_user_stack_base+0x1b>
ffffffff8020ce93:	48 83 c4 20          	add    $0x20,%rsp
ffffffff8020ce97:	58                   	pop    %rax
ffffffff8020ce98:	58                   	pop    %rax
ffffffff8020ce99:	fa                   	cli    
ffffffff8020ce9a:	f4                   	hlt    
ffffffff8020ce9b:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
ffffffff8020cea2:	00 
ffffffff8020cea3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8020cea7:	48 8b 78 70          	mov    0x70(%rax),%rdi
ffffffff8020ceab:	e8 b0 56 ff ff       	callq  ffffffff80202560 <LockSpinlock>
ffffffff8020ceb0:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
ffffffff8020ceb4:	48 8b 7f 38          	mov    0x38(%rdi),%rdi
ffffffff8020ceb8:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
ffffffff8020cebc:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
ffffffff8020cec0:	48 8b 7f 70          	mov    0x70(%rdi),%rdi
ffffffff8020cec4:	88 45 ef             	mov    %al,-0x11(%rbp)
ffffffff8020cec7:	e8 64 57 ff ff       	callq  ffffffff80202630 <UnlockSpinlock>
ffffffff8020cecc:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
ffffffff8020ced0:	88 45 ee             	mov    %al,-0x12(%rbp)
ffffffff8020ced3:	48 89 f8             	mov    %rdi,%rax
ffffffff8020ced6:	48 83 c4 20          	add    $0x20,%rsp
ffffffff8020ceda:	5d                   	pop    %rbp
ffffffff8020cedb:	c3                   	retq   
ffffffff8020cedc:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff8020cee0 <set_thread_user_stack_base>:
ffffffff8020cee0:	55                   	push   %rbp
ffffffff8020cee1:	48 89 e5             	mov    %rsp,%rbp
ffffffff8020cee4:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff8020cee8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8020ceec:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff8020cef0:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
ffffffff8020cef4:	48 8b 7e 70          	mov    0x70(%rsi),%rdi
ffffffff8020cef8:	e8 63 56 ff ff       	callq  ffffffff80202560 <LockSpinlock>
ffffffff8020cefd:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
ffffffff8020cf01:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
ffffffff8020cf05:	48 89 77 38          	mov    %rsi,0x38(%rdi)
ffffffff8020cf09:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
ffffffff8020cf0d:	48 8b 7e 70          	mov    0x70(%rsi),%rdi
ffffffff8020cf11:	88 45 ef             	mov    %al,-0x11(%rbp)
ffffffff8020cf14:	e8 17 57 ff ff       	callq  ffffffff80202630 <UnlockSpinlock>
ffffffff8020cf19:	88 45 ee             	mov    %al,-0x12(%rbp)
ffffffff8020cf1c:	48 83 c4 20          	add    $0x20,%rsp
ffffffff8020cf20:	5d                   	pop    %rbp
ffffffff8020cf21:	c3                   	retq   
ffffffff8020cf22:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff8020cf26:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8020cf2d:	00 00 00 

ffffffff8020cf30 <get_thread_kernel_stack_base>:
ffffffff8020cf30:	55                   	push   %rbp
ffffffff8020cf31:	48 89 e5             	mov    %rsp,%rbp
ffffffff8020cf34:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff8020cf38:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8020cf3c:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
ffffffff8020cf41:	75 08                	jne    ffffffff8020cf4b <get_thread_kernel_stack_base+0x1b>
ffffffff8020cf43:	48 83 c4 20          	add    $0x20,%rsp
ffffffff8020cf47:	58                   	pop    %rax
ffffffff8020cf48:	58                   	pop    %rax
ffffffff8020cf49:	fa                   	cli    
ffffffff8020cf4a:	f4                   	hlt    
ffffffff8020cf4b:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
ffffffff8020cf52:	00 
ffffffff8020cf53:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8020cf57:	48 8b 78 70          	mov    0x70(%rax),%rdi
ffffffff8020cf5b:	e8 00 56 ff ff       	callq  ffffffff80202560 <LockSpinlock>
ffffffff8020cf60:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
ffffffff8020cf64:	48 8b 7f 30          	mov    0x30(%rdi),%rdi
ffffffff8020cf68:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
ffffffff8020cf6c:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
ffffffff8020cf70:	48 8b 7f 70          	mov    0x70(%rdi),%rdi
ffffffff8020cf74:	88 45 ef             	mov    %al,-0x11(%rbp)
ffffffff8020cf77:	e8 b4 56 ff ff       	callq  ffffffff80202630 <UnlockSpinlock>
ffffffff8020cf7c:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
ffffffff8020cf80:	88 45 ee             	mov    %al,-0x12(%rbp)
ffffffff8020cf83:	48 89 f8             	mov    %rdi,%rax
ffffffff8020cf86:	48 83 c4 20          	add    $0x20,%rsp
ffffffff8020cf8a:	5d                   	pop    %rbp
ffffffff8020cf8b:	c3                   	retq   
ffffffff8020cf8c:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff8020cf90 <set_thread_kernel_stack_base>:
ffffffff8020cf90:	55                   	push   %rbp
ffffffff8020cf91:	48 89 e5             	mov    %rsp,%rbp
ffffffff8020cf94:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff8020cf98:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8020cf9c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff8020cfa0:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
ffffffff8020cfa4:	48 8b 7e 70          	mov    0x70(%rsi),%rdi
ffffffff8020cfa8:	e8 b3 55 ff ff       	callq  ffffffff80202560 <LockSpinlock>
ffffffff8020cfad:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
ffffffff8020cfb1:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
ffffffff8020cfb5:	48 89 77 30          	mov    %rsi,0x30(%rdi)
ffffffff8020cfb9:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
ffffffff8020cfbd:	48 8b 7e 70          	mov    0x70(%rsi),%rdi
ffffffff8020cfc1:	88 45 ef             	mov    %al,-0x11(%rbp)
ffffffff8020cfc4:	e8 67 56 ff ff       	callq  ffffffff80202630 <UnlockSpinlock>
ffffffff8020cfc9:	88 45 ee             	mov    %al,-0x12(%rbp)
ffffffff8020cfcc:	48 83 c4 20          	add    $0x20,%rsp
ffffffff8020cfd0:	5d                   	pop    %rbp
ffffffff8020cfd1:	c3                   	retq   
ffffffff8020cfd2:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff8020cfd6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8020cfdd:	00 00 00 

ffffffff8020cfe0 <get_thread_current_stack>:
ffffffff8020cfe0:	55                   	push   %rbp
ffffffff8020cfe1:	48 89 e5             	mov    %rsp,%rbp
ffffffff8020cfe4:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff8020cfe8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8020cfec:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
ffffffff8020cff1:	75 08                	jne    ffffffff8020cffb <get_thread_current_stack+0x1b>
ffffffff8020cff3:	48 83 c4 20          	add    $0x20,%rsp
ffffffff8020cff7:	58                   	pop    %rax
ffffffff8020cff8:	58                   	pop    %rax
ffffffff8020cff9:	fa                   	cli    
ffffffff8020cffa:	f4                   	hlt    
ffffffff8020cffb:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
ffffffff8020d002:	00 
ffffffff8020d003:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8020d007:	48 8b 78 70          	mov    0x70(%rax),%rdi
ffffffff8020d00b:	e8 50 55 ff ff       	callq  ffffffff80202560 <LockSpinlock>
ffffffff8020d010:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
ffffffff8020d014:	48 8b 7f 40          	mov    0x40(%rdi),%rdi
ffffffff8020d018:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
ffffffff8020d01c:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
ffffffff8020d020:	48 8b 7f 70          	mov    0x70(%rdi),%rdi
ffffffff8020d024:	88 45 ef             	mov    %al,-0x11(%rbp)
ffffffff8020d027:	e8 04 56 ff ff       	callq  ffffffff80202630 <UnlockSpinlock>
ffffffff8020d02c:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
ffffffff8020d030:	88 45 ee             	mov    %al,-0x12(%rbp)
ffffffff8020d033:	48 89 f8             	mov    %rdi,%rax
ffffffff8020d036:	48 83 c4 20          	add    $0x20,%rsp
ffffffff8020d03a:	5d                   	pop    %rbp
ffffffff8020d03b:	c3                   	retq   
ffffffff8020d03c:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff8020d040 <set_thread_current_stack>:
ffffffff8020d040:	55                   	push   %rbp
ffffffff8020d041:	48 89 e5             	mov    %rsp,%rbp
ffffffff8020d044:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff8020d048:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8020d04c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff8020d050:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
ffffffff8020d054:	48 8b 7e 70          	mov    0x70(%rsi),%rdi
ffffffff8020d058:	e8 03 55 ff ff       	callq  ffffffff80202560 <LockSpinlock>
ffffffff8020d05d:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
ffffffff8020d061:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
ffffffff8020d065:	48 89 77 40          	mov    %rsi,0x40(%rdi)
ffffffff8020d069:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
ffffffff8020d06d:	48 8b 7e 70          	mov    0x70(%rsi),%rdi
ffffffff8020d071:	88 45 ef             	mov    %al,-0x11(%rbp)
ffffffff8020d074:	e8 b7 55 ff ff       	callq  ffffffff80202630 <UnlockSpinlock>
ffffffff8020d079:	88 45 ee             	mov    %al,-0x12(%rbp)
ffffffff8020d07c:	48 83 c4 20          	add    $0x20,%rsp
ffffffff8020d080:	5d                   	pop    %rbp
ffffffff8020d081:	c3                   	retq   
ffffffff8020d082:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff8020d086:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8020d08d:	00 00 00 

ffffffff8020d090 <get_thread_tls_base>:
ffffffff8020d090:	55                   	push   %rbp
ffffffff8020d091:	48 89 e5             	mov    %rsp,%rbp
ffffffff8020d094:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff8020d098:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8020d09c:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
ffffffff8020d0a1:	75 08                	jne    ffffffff8020d0ab <get_thread_tls_base+0x1b>
ffffffff8020d0a3:	48 83 c4 20          	add    $0x20,%rsp
ffffffff8020d0a7:	58                   	pop    %rax
ffffffff8020d0a8:	58                   	pop    %rax
ffffffff8020d0a9:	fa                   	cli    
ffffffff8020d0aa:	f4                   	hlt    
ffffffff8020d0ab:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
ffffffff8020d0b2:	00 
ffffffff8020d0b3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8020d0b7:	48 8b 78 70          	mov    0x70(%rax),%rdi
ffffffff8020d0bb:	e8 a0 54 ff ff       	callq  ffffffff80202560 <LockSpinlock>
ffffffff8020d0c0:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
ffffffff8020d0c4:	48 8b 7f 48          	mov    0x48(%rdi),%rdi
ffffffff8020d0c8:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
ffffffff8020d0cc:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
ffffffff8020d0d0:	48 8b 7f 70          	mov    0x70(%rdi),%rdi
ffffffff8020d0d4:	88 45 ef             	mov    %al,-0x11(%rbp)
ffffffff8020d0d7:	e8 54 55 ff ff       	callq  ffffffff80202630 <UnlockSpinlock>
ffffffff8020d0dc:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
ffffffff8020d0e0:	88 45 ee             	mov    %al,-0x12(%rbp)
ffffffff8020d0e3:	48 89 f8             	mov    %rdi,%rax
ffffffff8020d0e6:	48 83 c4 20          	add    $0x20,%rsp
ffffffff8020d0ea:	5d                   	pop    %rbp
ffffffff8020d0eb:	c3                   	retq   
ffffffff8020d0ec:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff8020d0f0 <set_thread_tls_base>:
ffffffff8020d0f0:	55                   	push   %rbp
ffffffff8020d0f1:	48 89 e5             	mov    %rsp,%rbp
ffffffff8020d0f4:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff8020d0f8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8020d0fc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff8020d100:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
ffffffff8020d104:	48 8b 7e 70          	mov    0x70(%rsi),%rdi
ffffffff8020d108:	e8 53 54 ff ff       	callq  ffffffff80202560 <LockSpinlock>
ffffffff8020d10d:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
ffffffff8020d111:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
ffffffff8020d115:	48 89 77 48          	mov    %rsi,0x48(%rdi)
ffffffff8020d119:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
ffffffff8020d11d:	48 8b 7e 70          	mov    0x70(%rsi),%rdi
ffffffff8020d121:	88 45 ef             	mov    %al,-0x11(%rbp)
ffffffff8020d124:	e8 07 55 ff ff       	callq  ffffffff80202630 <UnlockSpinlock>
ffffffff8020d129:	88 45 ee             	mov    %al,-0x12(%rbp)
ffffffff8020d12c:	48 83 c4 20          	add    $0x20,%rsp
ffffffff8020d130:	5d                   	pop    %rbp
ffffffff8020d131:	c3                   	retq   
ffffffff8020d132:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff8020d136:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8020d13d:	00 00 00 

ffffffff8020d140 <get_thread_core_affinity>:
ffffffff8020d140:	55                   	push   %rbp
ffffffff8020d141:	48 89 e5             	mov    %rsp,%rbp
ffffffff8020d144:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff8020d148:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8020d14c:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
ffffffff8020d151:	75 08                	jne    ffffffff8020d15b <get_thread_core_affinity+0x1b>
ffffffff8020d153:	48 83 c4 20          	add    $0x20,%rsp
ffffffff8020d157:	58                   	pop    %rax
ffffffff8020d158:	58                   	pop    %rax
ffffffff8020d159:	fa                   	cli    
ffffffff8020d15a:	f4                   	hlt    
ffffffff8020d15b:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
ffffffff8020d162:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8020d166:	48 8b 78 70          	mov    0x70(%rax),%rdi
ffffffff8020d16a:	e8 f1 53 ff ff       	callq  ffffffff80202560 <LockSpinlock>
ffffffff8020d16f:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
ffffffff8020d173:	8b 4f 50             	mov    0x50(%rdi),%ecx
ffffffff8020d176:	89 4d f4             	mov    %ecx,-0xc(%rbp)
ffffffff8020d179:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
ffffffff8020d17d:	48 8b 7f 70          	mov    0x70(%rdi),%rdi
ffffffff8020d181:	88 45 f3             	mov    %al,-0xd(%rbp)
ffffffff8020d184:	e8 a7 54 ff ff       	callq  ffffffff80202630 <UnlockSpinlock>
ffffffff8020d189:	8b 4d f4             	mov    -0xc(%rbp),%ecx
ffffffff8020d18c:	88 45 f2             	mov    %al,-0xe(%rbp)
ffffffff8020d18f:	89 c8                	mov    %ecx,%eax
ffffffff8020d191:	48 83 c4 10          	add    $0x10,%rsp
ffffffff8020d195:	5d                   	pop    %rbp
ffffffff8020d196:	c3                   	retq   
ffffffff8020d197:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff8020d19e:	00 00 

ffffffff8020d1a0 <set_thread_core_affinity>:
ffffffff8020d1a0:	55                   	push   %rbp
ffffffff8020d1a1:	48 89 e5             	mov    %rsp,%rbp
ffffffff8020d1a4:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff8020d1a8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8020d1ac:	89 75 f4             	mov    %esi,-0xc(%rbp)
ffffffff8020d1af:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
ffffffff8020d1b3:	48 8b 7f 70          	mov    0x70(%rdi),%rdi
ffffffff8020d1b7:	e8 a4 53 ff ff       	callq  ffffffff80202560 <LockSpinlock>
ffffffff8020d1bc:	8b 75 f4             	mov    -0xc(%rbp),%esi
ffffffff8020d1bf:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
ffffffff8020d1c3:	89 77 50             	mov    %esi,0x50(%rdi)
ffffffff8020d1c6:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
ffffffff8020d1ca:	48 8b 7f 70          	mov    0x70(%rdi),%rdi
ffffffff8020d1ce:	88 45 f3             	mov    %al,-0xd(%rbp)
ffffffff8020d1d1:	e8 5a 54 ff ff       	callq  ffffffff80202630 <UnlockSpinlock>
ffffffff8020d1d6:	88 45 f2             	mov    %al,-0xe(%rbp)
ffffffff8020d1d9:	48 83 c4 10          	add    $0x10,%rsp
ffffffff8020d1dd:	5d                   	pop    %rbp
ffffffff8020d1de:	c3                   	retq   
ffffffff8020d1df:	90                   	nop

ffffffff8020d1e0 <get_thread_sleep_duration_ms>:
ffffffff8020d1e0:	55                   	push   %rbp
ffffffff8020d1e1:	48 89 e5             	mov    %rsp,%rbp
ffffffff8020d1e4:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff8020d1e8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8020d1ec:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
ffffffff8020d1f1:	75 08                	jne    ffffffff8020d1fb <get_thread_sleep_duration_ms+0x1b>
ffffffff8020d1f3:	48 83 c4 20          	add    $0x20,%rsp
ffffffff8020d1f7:	58                   	pop    %rax
ffffffff8020d1f8:	58                   	pop    %rax
ffffffff8020d1f9:	fa                   	cli    
ffffffff8020d1fa:	f4                   	hlt    
ffffffff8020d1fb:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
ffffffff8020d202:	00 
ffffffff8020d203:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8020d207:	48 8b 78 70          	mov    0x70(%rax),%rdi
ffffffff8020d20b:	e8 50 53 ff ff       	callq  ffffffff80202560 <LockSpinlock>
ffffffff8020d210:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
ffffffff8020d214:	48 8b 7f 58          	mov    0x58(%rdi),%rdi
ffffffff8020d218:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
ffffffff8020d21c:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
ffffffff8020d220:	48 8b 7f 70          	mov    0x70(%rdi),%rdi
ffffffff8020d224:	88 45 ef             	mov    %al,-0x11(%rbp)
ffffffff8020d227:	e8 04 54 ff ff       	callq  ffffffff80202630 <UnlockSpinlock>
ffffffff8020d22c:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
ffffffff8020d230:	88 45 ee             	mov    %al,-0x12(%rbp)
ffffffff8020d233:	48 89 f8             	mov    %rdi,%rax
ffffffff8020d236:	48 83 c4 20          	add    $0x20,%rsp
ffffffff8020d23a:	5d                   	pop    %rbp
ffffffff8020d23b:	c3                   	retq   
ffffffff8020d23c:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff8020d240 <set_thread_sleep_duration_ms>:
ffffffff8020d240:	55                   	push   %rbp
ffffffff8020d241:	48 89 e5             	mov    %rsp,%rbp
ffffffff8020d244:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff8020d248:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8020d24c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff8020d250:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
ffffffff8020d254:	48 8b 7e 70          	mov    0x70(%rsi),%rdi
ffffffff8020d258:	e8 03 53 ff ff       	callq  ffffffff80202560 <LockSpinlock>
ffffffff8020d25d:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
ffffffff8020d261:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
ffffffff8020d265:	48 89 77 58          	mov    %rsi,0x58(%rdi)
ffffffff8020d269:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
ffffffff8020d26d:	48 8b 7e 70          	mov    0x70(%rsi),%rdi
ffffffff8020d271:	88 45 ef             	mov    %al,-0x11(%rbp)
ffffffff8020d274:	e8 b7 53 ff ff       	callq  ffffffff80202630 <UnlockSpinlock>
ffffffff8020d279:	88 45 ee             	mov    %al,-0x12(%rbp)
ffffffff8020d27c:	48 83 c4 20          	add    $0x20,%rsp
ffffffff8020d280:	5d                   	pop    %rbp
ffffffff8020d281:	c3                   	retq   
ffffffff8020d282:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff8020d286:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8020d28d:	00 00 00 

ffffffff8020d290 <get_thread_cur_executing>:
ffffffff8020d290:	55                   	push   %rbp
ffffffff8020d291:	48 89 e5             	mov    %rsp,%rbp
ffffffff8020d294:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff8020d298:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8020d29c:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
ffffffff8020d2a1:	75 08                	jne    ffffffff8020d2ab <get_thread_cur_executing+0x1b>
ffffffff8020d2a3:	48 83 c4 20          	add    $0x20,%rsp
ffffffff8020d2a7:	58                   	pop    %rax
ffffffff8020d2a8:	58                   	pop    %rax
ffffffff8020d2a9:	fa                   	cli    
ffffffff8020d2aa:	f4                   	hlt    
ffffffff8020d2ab:	c6 45 f7 00          	movb   $0x0,-0x9(%rbp)
ffffffff8020d2af:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8020d2b3:	48 8b 78 70          	mov    0x70(%rax),%rdi
ffffffff8020d2b7:	e8 a4 52 ff ff       	callq  ffffffff80202560 <LockSpinlock>
ffffffff8020d2bc:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
ffffffff8020d2c0:	8a 4f 60             	mov    0x60(%rdi),%cl
ffffffff8020d2c3:	88 4d f7             	mov    %cl,-0x9(%rbp)
ffffffff8020d2c6:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
ffffffff8020d2ca:	48 8b 7f 70          	mov    0x70(%rdi),%rdi
ffffffff8020d2ce:	88 45 f6             	mov    %al,-0xa(%rbp)
ffffffff8020d2d1:	e8 5a 53 ff ff       	callq  ffffffff80202630 <UnlockSpinlock>
ffffffff8020d2d6:	0f b6 55 f7          	movzbl -0x9(%rbp),%edx
ffffffff8020d2da:	88 45 f5             	mov    %al,-0xb(%rbp)
ffffffff8020d2dd:	89 d0                	mov    %edx,%eax
ffffffff8020d2df:	48 83 c4 10          	add    $0x10,%rsp
ffffffff8020d2e3:	5d                   	pop    %rbp
ffffffff8020d2e4:	c3                   	retq   
ffffffff8020d2e5:	90                   	nop
ffffffff8020d2e6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8020d2ed:	00 00 00 

ffffffff8020d2f0 <set_thread_cur_executing>:
ffffffff8020d2f0:	55                   	push   %rbp
ffffffff8020d2f1:	48 89 e5             	mov    %rsp,%rbp
ffffffff8020d2f4:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff8020d2f8:	40 88 f0             	mov    %sil,%al
ffffffff8020d2fb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8020d2ff:	88 45 f7             	mov    %al,-0x9(%rbp)
ffffffff8020d302:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
ffffffff8020d306:	48 8b 7f 70          	mov    0x70(%rdi),%rdi
ffffffff8020d30a:	e8 51 52 ff ff       	callq  ffffffff80202560 <LockSpinlock>
ffffffff8020d30f:	8a 4d f7             	mov    -0x9(%rbp),%cl
ffffffff8020d312:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
ffffffff8020d316:	88 4f 60             	mov    %cl,0x60(%rdi)
ffffffff8020d319:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
ffffffff8020d31d:	48 8b 7f 70          	mov    0x70(%rdi),%rdi
ffffffff8020d321:	88 45 f6             	mov    %al,-0xa(%rbp)
ffffffff8020d324:	e8 07 53 ff ff       	callq  ffffffff80202630 <UnlockSpinlock>
ffffffff8020d329:	88 45 f5             	mov    %al,-0xb(%rbp)
ffffffff8020d32c:	48 83 c4 10          	add    $0x10,%rsp
ffffffff8020d330:	5d                   	pop    %rbp
ffffffff8020d331:	c3                   	retq   
ffffffff8020d332:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff8020d336:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8020d33d:	00 00 00 

ffffffff8020d340 <get_thread_fpu_state>:
ffffffff8020d340:	55                   	push   %rbp
ffffffff8020d341:	48 89 e5             	mov    %rsp,%rbp
ffffffff8020d344:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff8020d348:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8020d34c:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
ffffffff8020d351:	75 08                	jne    ffffffff8020d35b <get_thread_fpu_state+0x1b>
ffffffff8020d353:	48 83 c4 20          	add    $0x20,%rsp
ffffffff8020d357:	58                   	pop    %rax
ffffffff8020d358:	58                   	pop    %rax
ffffffff8020d359:	fa                   	cli    
ffffffff8020d35a:	f4                   	hlt    
ffffffff8020d35b:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
ffffffff8020d362:	00 
ffffffff8020d363:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8020d367:	48 8b 78 70          	mov    0x70(%rax),%rdi
ffffffff8020d36b:	e8 f0 51 ff ff       	callq  ffffffff80202560 <LockSpinlock>
ffffffff8020d370:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
ffffffff8020d374:	48 8b 7f 68          	mov    0x68(%rdi),%rdi
ffffffff8020d378:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
ffffffff8020d37c:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
ffffffff8020d380:	48 8b 7f 70          	mov    0x70(%rdi),%rdi
ffffffff8020d384:	88 45 ef             	mov    %al,-0x11(%rbp)
ffffffff8020d387:	e8 a4 52 ff ff       	callq  ffffffff80202630 <UnlockSpinlock>
ffffffff8020d38c:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
ffffffff8020d390:	88 45 ee             	mov    %al,-0x12(%rbp)
ffffffff8020d393:	48 89 f8             	mov    %rdi,%rax
ffffffff8020d396:	48 83 c4 20          	add    $0x20,%rsp
ffffffff8020d39a:	5d                   	pop    %rbp
ffffffff8020d39b:	c3                   	retq   
ffffffff8020d39c:	0f 1f 40 00          	nopl   0x0(%rax)

ffffffff8020d3a0 <set_thread_fpu_state>:
ffffffff8020d3a0:	55                   	push   %rbp
ffffffff8020d3a1:	48 89 e5             	mov    %rsp,%rbp
ffffffff8020d3a4:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff8020d3a8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8020d3ac:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff8020d3b0:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
ffffffff8020d3b4:	48 8b 7e 70          	mov    0x70(%rsi),%rdi
ffffffff8020d3b8:	e8 a3 51 ff ff       	callq  ffffffff80202560 <LockSpinlock>
ffffffff8020d3bd:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
ffffffff8020d3c1:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
ffffffff8020d3c5:	48 89 77 68          	mov    %rsi,0x68(%rdi)
ffffffff8020d3c9:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
ffffffff8020d3cd:	48 8b 7e 70          	mov    0x70(%rsi),%rdi
ffffffff8020d3d1:	88 45 ef             	mov    %al,-0x11(%rbp)
ffffffff8020d3d4:	e8 57 52 ff ff       	callq  ffffffff80202630 <UnlockSpinlock>
ffffffff8020d3d9:	88 45 ee             	mov    %al,-0x12(%rbp)
ffffffff8020d3dc:	48 83 c4 20          	add    $0x20,%rsp
ffffffff8020d3e0:	5d                   	pop    %rbp
ffffffff8020d3e1:	c3                   	retq   
ffffffff8020d3e2:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff8020d3e6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8020d3ed:	00 00 00 

ffffffff8020d3f0 <GetCurrentThreadUID>:
ffffffff8020d3f0:	55                   	push   %rbp
ffffffff8020d3f1:	48 89 e5             	mov    %rsp,%rbp
ffffffff8020d3f4:	48 8b 04 25 58 ce e8 	mov    0xffffffff80e8ce58,%rax
ffffffff8020d3fb:	80 
ffffffff8020d3fc:	48 8b 38             	mov    (%rax),%rdi
ffffffff8020d3ff:	e8 bc f4 ff ff       	callq  ffffffff8020c8c0 <get_thread_ID>
ffffffff8020d404:	5d                   	pop    %rbp
ffffffff8020d405:	c3                   	retq   
ffffffff8020d406:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8020d40d:	00 00 00 

ffffffff8020d410 <GetCurrentProcessUID>:
ffffffff8020d410:	55                   	push   %rbp
ffffffff8020d411:	48 89 e5             	mov    %rsp,%rbp
ffffffff8020d414:	48 8b 04 25 58 ce e8 	mov    0xffffffff80e8ce58,%rax
ffffffff8020d41b:	80 
ffffffff8020d41c:	48 8b 38             	mov    (%rax),%rdi
ffffffff8020d41f:	e8 4c f5 ff ff       	callq  ffffffff8020c970 <get_thread_ParentProcess>
ffffffff8020d424:	48 8b 00             	mov    (%rax),%rax
ffffffff8020d427:	5d                   	pop    %rbp
ffffffff8020d428:	c3                   	retq   
ffffffff8020d429:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

ffffffff8020d430 <Thread_Initialize>:
ffffffff8020d430:	55                   	push   %rbp
ffffffff8020d431:	48 89 e5             	mov    %rsp,%rbp
ffffffff8020d434:	e8 77 50 ff ff       	callq  ffffffff802024b0 <CreateSpinlock>
ffffffff8020d439:	48 89 c7             	mov    %rax,%rdi
ffffffff8020d43c:	e8 cf c6 ff ff       	callq  ffffffff80209b10 <List_Create>
ffffffff8020d441:	48 89 04 25 60 ce e8 	mov    %rax,0xffffffff80e8ce60
ffffffff8020d448:	80 
ffffffff8020d449:	e8 62 50 ff ff       	callq  ffffffff802024b0 <CreateSpinlock>
ffffffff8020d44e:	48 89 c7             	mov    %rax,%rdi
ffffffff8020d451:	e8 ba c6 ff ff       	callq  ffffffff80209b10 <List_Create>
ffffffff8020d456:	48 89 04 25 68 ce e8 	mov    %rax,0xffffffff80e8ce68
ffffffff8020d45d:	80 
ffffffff8020d45e:	e8 4d 50 ff ff       	callq  ffffffff802024b0 <CreateSpinlock>
ffffffff8020d463:	48 89 c7             	mov    %rax,%rdi
ffffffff8020d466:	e8 a5 c6 ff ff       	callq  ffffffff80209b10 <List_Create>
ffffffff8020d46b:	48 89 04 25 70 ce e8 	mov    %rax,0xffffffff80e8ce70
ffffffff8020d472:	80 
ffffffff8020d473:	e8 38 50 ff ff       	callq  ffffffff802024b0 <CreateSpinlock>
ffffffff8020d478:	48 89 c7             	mov    %rax,%rdi
ffffffff8020d47b:	e8 90 c6 ff ff       	callq  ffffffff80209b10 <List_Create>
ffffffff8020d480:	48 89 04 25 78 ce e8 	mov    %rax,0xffffffff80e8ce78
ffffffff8020d487:	80 
ffffffff8020d488:	e8 23 50 ff ff       	callq  ffffffff802024b0 <CreateSpinlock>
ffffffff8020d48d:	48 89 c7             	mov    %rax,%rdi
ffffffff8020d490:	e8 7b c6 ff ff       	callq  ffffffff80209b10 <List_Create>
ffffffff8020d495:	48 89 04 25 80 ce e8 	mov    %rax,0xffffffff80e8ce80
ffffffff8020d49c:	80 
ffffffff8020d49d:	e8 0e 50 ff ff       	callq  ffffffff802024b0 <CreateSpinlock>
ffffffff8020d4a2:	48 89 c7             	mov    %rax,%rdi
ffffffff8020d4a5:	e8 66 c6 ff ff       	callq  ffffffff80209b10 <List_Create>
ffffffff8020d4aa:	48 89 04 25 88 ce e8 	mov    %rax,0xffffffff80e8ce88
ffffffff8020d4b1:	80 
ffffffff8020d4b2:	e8 f9 4f ff ff       	callq  ffffffff802024b0 <CreateSpinlock>
ffffffff8020d4b7:	48 89 c7             	mov    %rax,%rdi
ffffffff8020d4ba:	e8 51 c6 ff ff       	callq  ffffffff80209b10 <List_Create>
ffffffff8020d4bf:	48 89 04 25 90 ce e8 	mov    %rax,0xffffffff80e8ce90
ffffffff8020d4c6:	80 
ffffffff8020d4c7:	e8 e4 4f ff ff       	callq  ffffffff802024b0 <CreateSpinlock>
ffffffff8020d4cc:	48 89 c7             	mov    %rax,%rdi
ffffffff8020d4cf:	e8 3c c6 ff ff       	callq  ffffffff80209b10 <List_Create>
ffffffff8020d4d4:	48 89 04 25 98 ce e8 	mov    %rax,0xffffffff80e8ce98
ffffffff8020d4db:	80 
ffffffff8020d4dc:	e8 cf 4f ff ff       	callq  ffffffff802024b0 <CreateSpinlock>
ffffffff8020d4e1:	48 89 c7             	mov    %rax,%rdi
ffffffff8020d4e4:	e8 27 c6 ff ff       	callq  ffffffff80209b10 <List_Create>
ffffffff8020d4e9:	48 89 04 25 a0 ce e8 	mov    %rax,0xffffffff80e8cea0
ffffffff8020d4f0:	80 
ffffffff8020d4f1:	e8 ba 4f ff ff       	callq  ffffffff802024b0 <CreateSpinlock>
ffffffff8020d4f6:	48 89 04 25 a8 ce e8 	mov    %rax,0xffffffff80e8cea8
ffffffff8020d4fd:	80 
ffffffff8020d4fe:	5d                   	pop    %rbp
ffffffff8020d4ff:	c3                   	retq   

ffffffff8020d500 <CreateThread>:
ffffffff8020d500:	55                   	push   %rbp
ffffffff8020d501:	48 89 e5             	mov    %rsp,%rbp
ffffffff8020d504:	48 81 ec 80 01 00 00 	sub    $0x180,%rsp
ffffffff8020d50b:	b8 78 00 00 00       	mov    $0x78,%eax
ffffffff8020d510:	89 c1                	mov    %eax,%ecx
ffffffff8020d512:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
ffffffff8020d516:	48 89 75 e8          	mov    %rsi,-0x18(%rbp)
ffffffff8020d51a:	b8 78 00 00 00       	mov    $0x78,%eax
ffffffff8020d51f:	89 c7                	mov    %eax,%edi
ffffffff8020d521:	48 89 4d a8          	mov    %rcx,-0x58(%rbp)
ffffffff8020d525:	e8 d6 df ff ff       	callq  ffffffff8020b500 <kmalloc>
ffffffff8020d52a:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
ffffffff8020d52e:	e8 7d 4f ff ff       	callq  ffffffff802024b0 <CreateSpinlock>
ffffffff8020d533:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
ffffffff8020d537:	48 89 41 70          	mov    %rax,0x70(%rcx)
ffffffff8020d53b:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
ffffffff8020d53f:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
ffffffff8020d543:	e8 f8 f6 ff ff       	callq  ffffffff8020cc40 <set_thread_entry_point>
ffffffff8020d548:	31 d2                	xor    %edx,%edx
ffffffff8020d54a:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
ffffffff8020d54e:	31 f6                	xor    %esi,%esi
ffffffff8020d550:	89 55 a4             	mov    %edx,-0x5c(%rbp)
ffffffff8020d553:	e8 98 f7 ff ff       	callq  ffffffff8020ccf0 <set_thread_state>
ffffffff8020d558:	ba 03 00 00 00       	mov    $0x3,%edx
ffffffff8020d55d:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
ffffffff8020d561:	be 03 00 00 00       	mov    $0x3,%esi
ffffffff8020d566:	89 55 a0             	mov    %edx,-0x60(%rbp)
ffffffff8020d569:	e8 22 f8 ff ff       	callq  ffffffff8020cd90 <set_thread_priority>
ffffffff8020d56e:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
ffffffff8020d572:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
ffffffff8020d576:	e8 f5 f2 ff ff       	callq  ffffffff8020c870 <set_thread_Parent>
ffffffff8020d57b:	31 d2                	xor    %edx,%edx
ffffffff8020d57d:	89 d0                	mov    %edx,%eax
ffffffff8020d57f:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
ffffffff8020d583:	31 d2                	xor    %edx,%edx
ffffffff8020d585:	89 d6                	mov    %edx,%esi
ffffffff8020d587:	48 89 45 98          	mov    %rax,-0x68(%rbp)
ffffffff8020d58b:	e8 b0 fc ff ff       	callq  ffffffff8020d240 <set_thread_sleep_duration_ms>
ffffffff8020d590:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
ffffffff8020d594:	48 89 7d 90          	mov    %rdi,-0x70(%rbp)
ffffffff8020d598:	e8 33 3f ff ff       	callq  ffffffff802014d0 <GetFPUStateSize>
ffffffff8020d59d:	48 83 c0 10          	add    $0x10,%rax
ffffffff8020d5a1:	48 89 c7             	mov    %rax,%rdi
ffffffff8020d5a4:	e8 57 df ff ff       	callq  ffffffff8020b500 <kmalloc>
ffffffff8020d5a9:	48 8b 7d 90          	mov    -0x70(%rbp),%rdi
ffffffff8020d5ad:	48 89 c6             	mov    %rax,%rsi
ffffffff8020d5b0:	e8 eb fd ff ff       	callq  ffffffff8020d3a0 <set_thread_fpu_state>
ffffffff8020d5b5:	31 d2                	xor    %edx,%edx
ffffffff8020d5b7:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
ffffffff8020d5bb:	31 f6                	xor    %esi,%esi
ffffffff8020d5bd:	89 55 8c             	mov    %edx,-0x74(%rbp)
ffffffff8020d5c0:	e8 2b fd ff ff       	callq  ffffffff8020d2f0 <set_thread_cur_executing>
ffffffff8020d5c5:	ba 00 20 00 00       	mov    $0x2000,%edx
ffffffff8020d5ca:	89 d0                	mov    %edx,%eax
ffffffff8020d5cc:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
ffffffff8020d5d0:	ba 00 20 00 00       	mov    $0x2000,%edx
ffffffff8020d5d5:	89 d1                	mov    %edx,%ecx
ffffffff8020d5d7:	48 89 7d 80          	mov    %rdi,-0x80(%rbp)
ffffffff8020d5db:	48 89 cf             	mov    %rcx,%rdi
ffffffff8020d5de:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
ffffffff8020d5e5:	e8 16 df ff ff       	callq  ffffffff8020b500 <kmalloc>
ffffffff8020d5ea:	48 05 00 20 00 00    	add    $0x2000,%rax
ffffffff8020d5f0:	48 2d 80 00 00 00    	sub    $0x80,%rax
ffffffff8020d5f6:	48 8b 7d 80          	mov    -0x80(%rbp),%rdi
ffffffff8020d5fa:	48 89 c6             	mov    %rax,%rsi
ffffffff8020d5fd:	e8 2e f8 ff ff       	callq  ffffffff8020ce30 <set_thread_interrupt_stack_base>
ffffffff8020d602:	ba 00 20 00 00       	mov    $0x2000,%edx
ffffffff8020d607:	89 d0                	mov    %edx,%eax
ffffffff8020d609:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
ffffffff8020d60d:	ba 00 20 00 00       	mov    $0x2000,%edx
ffffffff8020d612:	89 d1                	mov    %edx,%ecx
ffffffff8020d614:	48 89 bd 70 ff ff ff 	mov    %rdi,-0x90(%rbp)
ffffffff8020d61b:	48 89 cf             	mov    %rcx,%rdi
ffffffff8020d61e:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
ffffffff8020d625:	e8 d6 de ff ff       	callq  ffffffff8020b500 <kmalloc>
ffffffff8020d62a:	48 05 00 20 00 00    	add    $0x2000,%rax
ffffffff8020d630:	48 2d 80 00 00 00    	sub    $0x80,%rax
ffffffff8020d636:	48 8b bd 70 ff ff ff 	mov    -0x90(%rbp),%rdi
ffffffff8020d63d:	48 89 c6             	mov    %rax,%rsi
ffffffff8020d640:	e8 4b f9 ff ff       	callq  ffffffff8020cf90 <set_thread_kernel_stack_base>
ffffffff8020d645:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
ffffffff8020d649:	e8 f2 fc ff ff       	callq  ffffffff8020d340 <get_thread_fpu_state>
ffffffff8020d64e:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
ffffffff8020d652:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8020d656:	48 83 e0 0f          	and    $0xf,%rax
ffffffff8020d65a:	48 83 f8 00          	cmp    $0x0,%rax
ffffffff8020d65e:	74 1a                	je     ffffffff8020d67a <CreateThread+0x17a>
ffffffff8020d660:	b8 10 00 00 00       	mov    $0x10,%eax
ffffffff8020d665:	89 c1                	mov    %eax,%ecx
ffffffff8020d667:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
ffffffff8020d66b:	48 83 e2 0f          	and    $0xf,%rdx
ffffffff8020d66f:	48 29 d1             	sub    %rdx,%rcx
ffffffff8020d672:	48 03 4d d8          	add    -0x28(%rbp),%rcx
ffffffff8020d676:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
ffffffff8020d67a:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
ffffffff8020d67e:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
ffffffff8020d682:	e8 19 fd ff ff       	callq  ffffffff8020d3a0 <set_thread_fpu_state>
ffffffff8020d687:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
ffffffff8020d68b:	e8 b0 fc ff ff       	callq  ffffffff8020d340 <get_thread_fpu_state>
ffffffff8020d690:	48 89 c7             	mov    %rax,%rdi
ffffffff8020d693:	e8 48 3e ff ff       	callq  ffffffff802014e0 <SaveFPUState>
ffffffff8020d698:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
ffffffff8020d69c:	48 c7 45 d0 00 00 00 	movq   $0x0,-0x30(%rbp)
ffffffff8020d6a3:	00 
ffffffff8020d6a4:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
ffffffff8020d6a8:	48 8d 75 d0          	lea    -0x30(%rbp),%rsi
ffffffff8020d6ac:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
ffffffff8020d6b3:	e8 98 ea ff ff       	callq  ffffffff8020c150 <GetProcessReference>
ffffffff8020d6b8:	83 f8 02             	cmp    $0x2,%eax
ffffffff8020d6bb:	75 05                	jne    ffffffff8020d6c2 <CreateThread+0x1c2>
ffffffff8020d6bd:	e9 0b 04 00 00       	jmpq   ffffffff8020dacd <CreateThread+0x5cd>
ffffffff8020d6c2:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
ffffffff8020d6c6:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
ffffffff8020d6ca:	e8 01 f3 ff ff       	callq  ffffffff8020c9d0 <set_thread_ParentProcess>
ffffffff8020d6cf:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
ffffffff8020d6d3:	e8 98 f2 ff ff       	callq  ffffffff8020c970 <get_thread_ParentProcess>
ffffffff8020d6d8:	48 89 c7             	mov    %rax,%rdi
ffffffff8020d6db:	e8 b0 f3 ff ff       	callq  ffffffff8020ca90 <get_proc_TLSSize>
ffffffff8020d6e0:	48 83 f8 00          	cmp    $0x0,%rax
ffffffff8020d6e4:	0f 84 d7 01 00 00    	je     ffffffff8020d8c1 <CreateThread+0x3c1>
ffffffff8020d6ea:	48 c7 45 c8 00 00 00 	movq   $0x0,-0x38(%rbp)
ffffffff8020d6f1:	00 
ffffffff8020d6f2:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
ffffffff8020d6f6:	e8 75 f2 ff ff       	callq  ffffffff8020c970 <get_thread_ParentProcess>
ffffffff8020d6fb:	48 89 c7             	mov    %rax,%rdi
ffffffff8020d6fe:	e8 fd f3 ff ff       	callq  ffffffff8020cb00 <get_proc_PageTable>
ffffffff8020d703:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
ffffffff8020d707:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
ffffffff8020d70e:	e8 5d f2 ff ff       	callq  ffffffff8020c970 <get_thread_ParentProcess>
ffffffff8020d713:	48 89 c7             	mov    %rax,%rdi
ffffffff8020d716:	e8 75 f3 ff ff       	callq  ffffffff8020ca90 <get_proc_TLSSize>
ffffffff8020d71b:	48 8d 7d c8          	lea    -0x38(%rbp),%rdi
ffffffff8020d71f:	b9 40 00 00 00       	mov    $0x40,%ecx
ffffffff8020d724:	ba 0c 00 00 00       	mov    $0xc,%edx
ffffffff8020d729:	48 8d 75 c8          	lea    -0x38(%rbp),%rsi
ffffffff8020d72d:	41 b8 40 00 00 00    	mov    $0x40,%r8d
ffffffff8020d733:	41 b9 0c 00 00 00    	mov    $0xc,%r9d
ffffffff8020d739:	4c 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%r10
ffffffff8020d740:	48 89 bd 50 ff ff ff 	mov    %rdi,-0xb0(%rbp)
ffffffff8020d747:	4c 89 d7             	mov    %r10,%rdi
ffffffff8020d74a:	89 95 4c ff ff ff    	mov    %edx,-0xb4(%rbp)
ffffffff8020d750:	48 89 c2             	mov    %rax,%rdx
ffffffff8020d753:	89 8d 48 ff ff ff    	mov    %ecx,-0xb8(%rbp)
ffffffff8020d759:	44 89 c1             	mov    %r8d,%ecx
ffffffff8020d75c:	45 89 c8             	mov    %r9d,%r8d
ffffffff8020d75f:	e8 9c 49 ff ff       	callq  ffffffff80202100 <FindFreeVirtualAddress>
ffffffff8020d764:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
ffffffff8020d769:	89 85 44 ff ff ff    	mov    %eax,-0xbc(%rbp)
ffffffff8020d76f:	0f 84 45 01 00 00    	je     ffffffff8020d8ba <CreateThread+0x3ba>
ffffffff8020d775:	b8 40 00 00 00       	mov    $0x40,%eax
ffffffff8020d77a:	89 c1                	mov    %eax,%ecx
ffffffff8020d77c:	b8 40 00 00 00       	mov    $0x40,%eax
ffffffff8020d781:	89 c7                	mov    %eax,%edi
ffffffff8020d783:	48 89 8d 38 ff ff ff 	mov    %rcx,-0xc8(%rbp)
ffffffff8020d78a:	e8 71 dd ff ff       	callq  ffffffff8020b500 <kmalloc>
ffffffff8020d78f:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
ffffffff8020d793:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
ffffffff8020d798:	75 05                	jne    ffffffff8020d79f <CreateThread+0x29f>
ffffffff8020d79a:	e9 2e 03 00 00       	jmpq   ffffffff8020dacd <CreateThread+0x5cd>
ffffffff8020d79f:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
ffffffff8020d7a3:	e8 c8 f1 ff ff       	callq  ffffffff8020c970 <get_thread_ParentProcess>
ffffffff8020d7a8:	48 89 c7             	mov    %rax,%rdi
ffffffff8020d7ab:	e8 50 f3 ff ff       	callq  ffffffff8020cb00 <get_proc_PageTable>
ffffffff8020d7b0:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
ffffffff8020d7b4:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
ffffffff8020d7b8:	48 89 85 30 ff ff ff 	mov    %rax,-0xd0(%rbp)
ffffffff8020d7bf:	48 89 b5 28 ff ff ff 	mov    %rsi,-0xd8(%rbp)
ffffffff8020d7c6:	e8 a5 f1 ff ff       	callq  ffffffff8020c970 <get_thread_ParentProcess>
ffffffff8020d7cb:	48 89 c7             	mov    %rax,%rdi
ffffffff8020d7ce:	e8 bd f2 ff ff       	callq  ffffffff8020ca90 <get_proc_TLSSize>
ffffffff8020d7d3:	48 c1 e8 0c          	shr    $0xc,%rax
ffffffff8020d7d7:	89 c1                	mov    %eax,%ecx
ffffffff8020d7d9:	89 cf                	mov    %ecx,%edi
ffffffff8020d7db:	e8 d0 4b ff ff       	callq  ffffffff802023b0 <AllocatePhysicalPageCont>
ffffffff8020d7e0:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
ffffffff8020d7e4:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
ffffffff8020d7e8:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
ffffffff8020d7ef:	48 89 8d 18 ff ff ff 	mov    %rcx,-0xe8(%rbp)
ffffffff8020d7f6:	e8 75 f1 ff ff       	callq  ffffffff8020c970 <get_thread_ParentProcess>
ffffffff8020d7fb:	48 89 c7             	mov    %rax,%rdi
ffffffff8020d7fe:	e8 8d f2 ff ff       	callq  ffffffff8020ca90 <get_proc_TLSSize>
ffffffff8020d803:	31 d2                	xor    %edx,%edx
ffffffff8020d805:	41 b8 40 00 00 00    	mov    $0x40,%r8d
ffffffff8020d80b:	41 b9 0c 00 00 00    	mov    $0xc,%r9d
ffffffff8020d811:	48 89 e1             	mov    %rsp,%rcx
ffffffff8020d814:	c7 41 08 0c 00 00 00 	movl   $0xc,0x8(%rcx)
ffffffff8020d81b:	c7 01 40 00 00 00    	movl   $0x40,(%rcx)
ffffffff8020d821:	45 31 d2             	xor    %r10d,%r10d
ffffffff8020d824:	48 8b bd 30 ff ff ff 	mov    -0xd0(%rbp),%rdi
ffffffff8020d82b:	48 8b b5 28 ff ff ff 	mov    -0xd8(%rbp),%rsi
ffffffff8020d832:	48 8b 8d 20 ff ff ff 	mov    -0xe0(%rbp),%rcx
ffffffff8020d839:	89 95 14 ff ff ff    	mov    %edx,-0xec(%rbp)
ffffffff8020d83f:	48 89 ca             	mov    %rcx,%rdx
ffffffff8020d842:	48 8b 8d 18 ff ff ff 	mov    -0xe8(%rbp),%rcx
ffffffff8020d849:	44 89 85 10 ff ff ff 	mov    %r8d,-0xf0(%rbp)
ffffffff8020d850:	49 89 c0             	mov    %rax,%r8
ffffffff8020d853:	44 89 8d 0c ff ff ff 	mov    %r9d,-0xf4(%rbp)
ffffffff8020d85a:	45 89 d1             	mov    %r10d,%r9d
ffffffff8020d85d:	e8 8e 46 ff ff       	callq  ffffffff80201ef0 <MapPage>
ffffffff8020d862:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
ffffffff8020d866:	89 85 08 ff ff ff    	mov    %eax,-0xf8(%rbp)
ffffffff8020d86c:	e8 ff f0 ff ff       	callq  ffffffff8020c970 <get_thread_ParentProcess>
ffffffff8020d871:	48 89 c7             	mov    %rax,%rdi
ffffffff8020d874:	e8 f7 f2 ff ff       	callq  ffffffff8020cb70 <get_proc_AllocationMap>
ffffffff8020d879:	48 8b 40 38          	mov    0x38(%rax),%rax
ffffffff8020d87d:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
ffffffff8020d881:	48 89 41 38          	mov    %rax,0x38(%rcx)
ffffffff8020d885:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8020d889:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
ffffffff8020d88d:	48 89 85 00 ff ff ff 	mov    %rax,-0x100(%rbp)
ffffffff8020d894:	e8 d7 f0 ff ff       	callq  ffffffff8020c970 <get_thread_ParentProcess>
ffffffff8020d899:	48 89 c7             	mov    %rax,%rdi
ffffffff8020d89c:	e8 cf f2 ff ff       	callq  ffffffff8020cb70 <get_proc_AllocationMap>
ffffffff8020d8a1:	48 8b 8d 00 ff ff ff 	mov    -0x100(%rbp),%rcx
ffffffff8020d8a8:	48 89 48 38          	mov    %rcx,0x38(%rax)
ffffffff8020d8ac:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8020d8b0:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
ffffffff8020d8b4:	48 89 41 48          	mov    %rax,0x48(%rcx)
ffffffff8020d8b8:	eb 05                	jmp    ffffffff8020d8bf <CreateThread+0x3bf>
ffffffff8020d8ba:	e9 0e 02 00 00       	jmpq   ffffffff8020dacd <CreateThread+0x5cd>
ffffffff8020d8bf:	eb 00                	jmp    ffffffff8020d8c1 <CreateThread+0x3c1>
ffffffff8020d8c1:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
ffffffff8020d8c5:	48 89 bd f8 fe ff ff 	mov    %rdi,-0x108(%rbp)
ffffffff8020d8cc:	e8 5f b3 ff ff       	callq  ffffffff80208c30 <new_uid>
ffffffff8020d8d1:	48 8b bd f8 fe ff ff 	mov    -0x108(%rbp),%rdi
ffffffff8020d8d8:	48 89 c6             	mov    %rax,%rsi
ffffffff8020d8db:	e8 40 f0 ff ff       	callq  ffffffff8020c920 <set_thread_ID>
ffffffff8020d8e0:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff8020d8e4:	48 8b b8 d8 01 00 00 	mov    0x1d8(%rax),%rdi
ffffffff8020d8eb:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8020d8ef:	48 89 bd f0 fe ff ff 	mov    %rdi,-0x110(%rbp)
ffffffff8020d8f6:	48 89 c7             	mov    %rax,%rdi
ffffffff8020d8f9:	e8 c2 ef ff ff       	callq  ffffffff8020c8c0 <get_thread_ID>
ffffffff8020d8fe:	48 8b bd f0 fe ff ff 	mov    -0x110(%rbp),%rdi
ffffffff8020d905:	48 89 c6             	mov    %rax,%rsi
ffffffff8020d908:	e8 a3 c2 ff ff       	callq  ffffffff80209bb0 <List_AddEntry>
ffffffff8020d90d:	48 c7 45 b8 00 00 00 	movq   $0x0,-0x48(%rbp)
ffffffff8020d914:	00 
ffffffff8020d915:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
ffffffff8020d919:	89 85 ec fe ff ff    	mov    %eax,-0x114(%rbp)
ffffffff8020d91f:	e8 4c f0 ff ff       	callq  ffffffff8020c970 <get_thread_ParentProcess>
ffffffff8020d924:	48 89 c7             	mov    %rax,%rdi
ffffffff8020d927:	e8 d4 f1 ff ff       	callq  ffffffff8020cb00 <get_proc_PageTable>
ffffffff8020d92c:	48 8d 75 b8          	lea    -0x48(%rbp),%rsi
ffffffff8020d930:	b9 00 20 00 00       	mov    $0x2000,%ecx
ffffffff8020d935:	89 cf                	mov    %ecx,%edi
ffffffff8020d937:	b9 01 00 00 00       	mov    $0x1,%ecx
ffffffff8020d93c:	ba 0c 00 00 00       	mov    $0xc,%edx
ffffffff8020d941:	41 b8 00 20 00 00    	mov    $0x2000,%r8d
ffffffff8020d947:	45 89 c1             	mov    %r8d,%r9d
ffffffff8020d94a:	4c 8d 55 b8          	lea    -0x48(%rbp),%r10
ffffffff8020d94e:	41 b8 01 00 00 00    	mov    $0x1,%r8d
ffffffff8020d954:	41 bb 0c 00 00 00    	mov    $0xc,%r11d
ffffffff8020d95a:	48 89 bd e0 fe ff ff 	mov    %rdi,-0x120(%rbp)
ffffffff8020d961:	48 89 c7             	mov    %rax,%rdi
ffffffff8020d964:	48 89 b5 d8 fe ff ff 	mov    %rsi,-0x128(%rbp)
ffffffff8020d96b:	4c 89 d6             	mov    %r10,%rsi
ffffffff8020d96e:	89 95 d4 fe ff ff    	mov    %edx,-0x12c(%rbp)
ffffffff8020d974:	4c 89 ca             	mov    %r9,%rdx
ffffffff8020d977:	89 8d d0 fe ff ff    	mov    %ecx,-0x130(%rbp)
ffffffff8020d97d:	44 89 c1             	mov    %r8d,%ecx
ffffffff8020d980:	45 89 d8             	mov    %r11d,%r8d
ffffffff8020d983:	e8 78 47 ff ff       	callq  ffffffff80202100 <FindFreeVirtualAddress>
ffffffff8020d988:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
ffffffff8020d98d:	89 85 cc fe ff ff    	mov    %eax,-0x134(%rbp)
ffffffff8020d993:	75 04                	jne    ffffffff8020d999 <CreateThread+0x499>
ffffffff8020d995:	eb 00                	jmp    ffffffff8020d997 <CreateThread+0x497>
ffffffff8020d997:	eb fe                	jmp    ffffffff8020d997 <CreateThread+0x497>
ffffffff8020d999:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
ffffffff8020d99d:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff8020d9a1:	48 05 00 20 00 00    	add    $0x2000,%rax
ffffffff8020d9a7:	48 2d 80 00 00 00    	sub    $0x80,%rax
ffffffff8020d9ad:	48 89 c6             	mov    %rax,%rsi
ffffffff8020d9b0:	e8 2b f5 ff ff       	callq  ffffffff8020cee0 <set_thread_user_stack_base>
ffffffff8020d9b5:	b9 40 00 00 00       	mov    $0x40,%ecx
ffffffff8020d9ba:	89 c8                	mov    %ecx,%eax
ffffffff8020d9bc:	b9 40 00 00 00       	mov    $0x40,%ecx
ffffffff8020d9c1:	89 cf                	mov    %ecx,%edi
ffffffff8020d9c3:	48 89 85 c0 fe ff ff 	mov    %rax,-0x140(%rbp)
ffffffff8020d9ca:	e8 31 db ff ff       	callq  ffffffff8020b500 <kmalloc>
ffffffff8020d9cf:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
ffffffff8020d9d3:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
ffffffff8020d9d7:	48 83 f8 00          	cmp    $0x0,%rax
ffffffff8020d9db:	75 04                	jne    ffffffff8020d9e1 <CreateThread+0x4e1>
ffffffff8020d9dd:	eb 00                	jmp    ffffffff8020d9df <CreateThread+0x4df>
ffffffff8020d9df:	eb fe                	jmp    ffffffff8020d9df <CreateThread+0x4df>
ffffffff8020d9e1:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
ffffffff8020d9e5:	e8 86 ef ff ff       	callq  ffffffff8020c970 <get_thread_ParentProcess>
ffffffff8020d9ea:	48 89 c7             	mov    %rax,%rdi
ffffffff8020d9ed:	e8 0e f1 ff ff       	callq  ffffffff8020cb00 <get_proc_PageTable>
ffffffff8020d9f2:	48 8b 75 b0          	mov    -0x50(%rbp),%rsi
ffffffff8020d9f6:	bf 02 00 00 00       	mov    $0x2,%edi
ffffffff8020d9fb:	48 89 85 b8 fe ff ff 	mov    %rax,-0x148(%rbp)
ffffffff8020da02:	48 89 b5 b0 fe ff ff 	mov    %rsi,-0x150(%rbp)
ffffffff8020da09:	e8 a2 49 ff ff       	callq  ffffffff802023b0 <AllocatePhysicalPageCont>
ffffffff8020da0e:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
ffffffff8020da12:	48 89 e6             	mov    %rsp,%rsi
ffffffff8020da15:	c7 46 08 0c 00 00 00 	movl   $0xc,0x8(%rsi)
ffffffff8020da1c:	c7 06 01 00 00 00    	movl   $0x1,(%rsi)
ffffffff8020da22:	bf 00 20 00 00       	mov    $0x2000,%edi
ffffffff8020da27:	41 89 f8             	mov    %edi,%r8d
ffffffff8020da2a:	45 31 c9             	xor    %r9d,%r9d
ffffffff8020da2d:	48 8b bd b8 fe ff ff 	mov    -0x148(%rbp),%rdi
ffffffff8020da34:	48 8b b5 b0 fe ff ff 	mov    -0x150(%rbp),%rsi
ffffffff8020da3b:	48 89 c2             	mov    %rax,%rdx
ffffffff8020da3e:	e8 ad 44 ff ff       	callq  ffffffff80201ef0 <MapPage>
ffffffff8020da43:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
ffffffff8020da47:	89 85 ac fe ff ff    	mov    %eax,-0x154(%rbp)
ffffffff8020da4d:	e8 1e ef ff ff       	callq  ffffffff8020c970 <get_thread_ParentProcess>
ffffffff8020da52:	48 89 c7             	mov    %rax,%rdi
ffffffff8020da55:	e8 16 f1 ff ff       	callq  ffffffff8020cb70 <get_proc_AllocationMap>
ffffffff8020da5a:	48 8b 40 38          	mov    0x38(%rax),%rax
ffffffff8020da5e:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
ffffffff8020da62:	48 89 41 38          	mov    %rax,0x38(%rcx)
ffffffff8020da66:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
ffffffff8020da6a:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
ffffffff8020da6e:	48 89 85 a0 fe ff ff 	mov    %rax,-0x160(%rbp)
ffffffff8020da75:	e8 f6 ee ff ff       	callq  ffffffff8020c970 <get_thread_ParentProcess>
ffffffff8020da7a:	48 89 c7             	mov    %rax,%rdi
ffffffff8020da7d:	e8 ee f0 ff ff       	callq  ffffffff8020cb70 <get_proc_AllocationMap>
ffffffff8020da82:	48 8b 8d a0 fe ff ff 	mov    -0x160(%rbp),%rcx
ffffffff8020da89:	48 89 48 38          	mov    %rcx,0x38(%rax)
ffffffff8020da8d:	48 8b 3c 25 78 ce e8 	mov    0xffffffff80e8ce78,%rdi
ffffffff8020da94:	80 
ffffffff8020da95:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
ffffffff8020da99:	e8 12 c1 ff ff       	callq  ffffffff80209bb0 <List_AddEntry>
ffffffff8020da9e:	48 8b 3c 25 98 ce e8 	mov    0xffffffff80e8ce98,%rdi
ffffffff8020daa5:	80 
ffffffff8020daa6:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
ffffffff8020daaa:	48 89 ce             	mov    %rcx,%rsi
ffffffff8020daad:	89 85 9c fe ff ff    	mov    %eax,-0x164(%rbp)
ffffffff8020dab3:	e8 f8 c0 ff ff       	callq  ffffffff80209bb0 <List_AddEntry>
ffffffff8020dab8:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
ffffffff8020dabc:	89 85 98 fe ff ff    	mov    %eax,-0x168(%rbp)
ffffffff8020dac2:	e8 f9 ed ff ff       	callq  ffffffff8020c8c0 <get_thread_ID>
ffffffff8020dac7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff8020dacb:	eb 21                	jmp    ffffffff8020daee <CreateThread+0x5ee>
ffffffff8020dacd:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8020dad1:	48 8b 78 70          	mov    0x70(%rax),%rdi
ffffffff8020dad5:	e8 a6 4b ff ff       	callq  ffffffff80202680 <FreeSpinlock>
ffffffff8020dada:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8020dade:	48 89 c7             	mov    %rax,%rdi
ffffffff8020dae1:	e8 aa dc ff ff       	callq  ffffffff8020b790 <kfree>
ffffffff8020dae6:	48 c7 45 f8 ff ff ff 	movq   $0xffffffffffffffff,-0x8(%rbp)
ffffffff8020daed:	ff 
ffffffff8020daee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8020daf2:	48 81 c4 80 01 00 00 	add    $0x180,%rsp
ffffffff8020daf9:	5d                   	pop    %rbp
ffffffff8020dafa:	c3                   	retq   
ffffffff8020dafb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

ffffffff8020db00 <SetThreadState>:
ffffffff8020db00:	55                   	push   %rbp
ffffffff8020db01:	48 89 e5             	mov    %rsp,%rbp
ffffffff8020db04:	48 83 ec 30          	sub    $0x30,%rsp
ffffffff8020db08:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8020db0c:	89 75 f4             	mov    %esi,-0xc(%rbp)
ffffffff8020db0f:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
ffffffff8020db13:	48 8b 04 25 58 ce e8 	mov    0xffffffff80e8ce58,%rax
ffffffff8020db1a:	80 
ffffffff8020db1b:	48 8b 00             	mov    (%rax),%rax
ffffffff8020db1e:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
ffffffff8020db22:	48 89 c7             	mov    %rax,%rdi
ffffffff8020db25:	e8 96 ed ff ff       	callq  ffffffff8020c8c0 <get_thread_ID>
ffffffff8020db2a:	48 8b 7d d8          	mov    -0x28(%rbp),%rdi
ffffffff8020db2e:	48 39 c7             	cmp    %rax,%rdi
ffffffff8020db31:	75 15                	jne    ffffffff8020db48 <SetThreadState+0x48>
ffffffff8020db33:	48 8b 04 25 58 ce e8 	mov    0xffffffff80e8ce58,%rax
ffffffff8020db3a:	80 
ffffffff8020db3b:	48 8b 38             	mov    (%rax),%rdi
ffffffff8020db3e:	8b 75 f4             	mov    -0xc(%rbp),%esi
ffffffff8020db41:	e8 aa f1 ff ff       	callq  ffffffff8020ccf0 <set_thread_state>
ffffffff8020db46:	eb 68                	jmp    ffffffff8020dbb0 <SetThreadState+0xb0>
ffffffff8020db48:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
ffffffff8020db4f:	00 
ffffffff8020db50:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8020db54:	48 8b 3c 25 98 ce e8 	mov    0xffffffff80e8ce98,%rdi
ffffffff8020db5b:	80 
ffffffff8020db5c:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
ffffffff8020db60:	e8 5b c1 ff ff       	callq  ffffffff80209cc0 <List_Length>
ffffffff8020db65:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
ffffffff8020db69:	48 39 c7             	cmp    %rax,%rdi
ffffffff8020db6c:	73 42                	jae    ffffffff8020dbb0 <SetThreadState+0xb0>
ffffffff8020db6e:	48 8b 3c 25 98 ce e8 	mov    0xffffffff80e8ce98,%rdi
ffffffff8020db75:	80 
ffffffff8020db76:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
ffffffff8020db7a:	e8 f1 c2 ff ff       	callq  ffffffff80209e70 <List_EntryAt>
ffffffff8020db7f:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
ffffffff8020db83:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
ffffffff8020db87:	e8 34 ed ff ff       	callq  ffffffff8020c8c0 <get_thread_ID>
ffffffff8020db8c:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
ffffffff8020db90:	75 0e                	jne    ffffffff8020dba0 <SetThreadState+0xa0>
ffffffff8020db92:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
ffffffff8020db96:	8b 75 f4             	mov    -0xc(%rbp),%esi
ffffffff8020db99:	e8 52 f1 ff ff       	callq  ffffffff8020ccf0 <set_thread_state>
ffffffff8020db9e:	eb 10                	jmp    ffffffff8020dbb0 <SetThreadState+0xb0>
ffffffff8020dba0:	eb 00                	jmp    ffffffff8020dba2 <SetThreadState+0xa2>
ffffffff8020dba2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8020dba6:	48 83 c0 01          	add    $0x1,%rax
ffffffff8020dbaa:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff8020dbae:	eb a0                	jmp    ffffffff8020db50 <SetThreadState+0x50>
ffffffff8020dbb0:	48 83 c4 30          	add    $0x30,%rsp
ffffffff8020dbb4:	5d                   	pop    %rbp
ffffffff8020dbb5:	c3                   	retq   
ffffffff8020dbb6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8020dbbd:	00 00 00 

ffffffff8020dbc0 <SleepThread>:
ffffffff8020dbc0:	55                   	push   %rbp
ffffffff8020dbc1:	48 89 e5             	mov    %rsp,%rbp
ffffffff8020dbc4:	48 83 ec 40          	sub    $0x40,%rsp
ffffffff8020dbc8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8020dbcc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff8020dbd0:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
ffffffff8020dbd4:	48 8b 3c 25 58 ce e8 	mov    0xffffffff80e8ce58,%rdi
ffffffff8020dbdb:	80 
ffffffff8020dbdc:	48 8b 3f             	mov    (%rdi),%rdi
ffffffff8020dbdf:	48 89 75 d8          	mov    %rsi,-0x28(%rbp)
ffffffff8020dbe3:	e8 d8 ec ff ff       	callq  ffffffff8020c8c0 <get_thread_ID>
ffffffff8020dbe8:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
ffffffff8020dbec:	48 39 c6             	cmp    %rax,%rsi
ffffffff8020dbef:	75 2b                	jne    ffffffff8020dc1c <SleepThread+0x5c>
ffffffff8020dbf1:	48 8b 04 25 58 ce e8 	mov    0xffffffff80e8ce58,%rax
ffffffff8020dbf8:	80 
ffffffff8020dbf9:	48 8b 38             	mov    (%rax),%rdi
ffffffff8020dbfc:	be 03 00 00 00       	mov    $0x3,%esi
ffffffff8020dc01:	e8 ea f0 ff ff       	callq  ffffffff8020ccf0 <set_thread_state>
ffffffff8020dc06:	48 8b 04 25 58 ce e8 	mov    0xffffffff80e8ce58,%rax
ffffffff8020dc0d:	80 
ffffffff8020dc0e:	48 8b 38             	mov    (%rax),%rdi
ffffffff8020dc11:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
ffffffff8020dc15:	e8 26 f6 ff ff       	callq  ffffffff8020d240 <set_thread_sleep_duration_ms>
ffffffff8020dc1a:	eb 7f                	jmp    ffffffff8020dc9b <SleepThread+0xdb>
ffffffff8020dc1c:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
ffffffff8020dc23:	00 
ffffffff8020dc24:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8020dc28:	48 8b 3c 25 98 ce e8 	mov    0xffffffff80e8ce98,%rdi
ffffffff8020dc2f:	80 
ffffffff8020dc30:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
ffffffff8020dc34:	e8 87 c0 ff ff       	callq  ffffffff80209cc0 <List_Length>
ffffffff8020dc39:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
ffffffff8020dc3d:	48 39 c7             	cmp    %rax,%rdi
ffffffff8020dc40:	73 59                	jae    ffffffff8020dc9b <SleepThread+0xdb>
ffffffff8020dc42:	48 8b 3c 25 98 ce e8 	mov    0xffffffff80e8ce98,%rdi
ffffffff8020dc49:	80 
ffffffff8020dc4a:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
ffffffff8020dc4e:	e8 1d c2 ff ff       	callq  ffffffff80209e70 <List_EntryAt>
ffffffff8020dc53:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
ffffffff8020dc57:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
ffffffff8020dc5b:	e8 60 ec ff ff       	callq  ffffffff8020c8c0 <get_thread_ID>
ffffffff8020dc60:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
ffffffff8020dc64:	75 25                	jne    ffffffff8020dc8b <SleepThread+0xcb>
ffffffff8020dc66:	b8 03 00 00 00       	mov    $0x3,%eax
ffffffff8020dc6b:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
ffffffff8020dc6f:	be 03 00 00 00       	mov    $0x3,%esi
ffffffff8020dc74:	89 45 cc             	mov    %eax,-0x34(%rbp)
ffffffff8020dc77:	e8 74 f0 ff ff       	callq  ffffffff8020ccf0 <set_thread_state>
ffffffff8020dc7c:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
ffffffff8020dc80:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
ffffffff8020dc84:	e8 b7 f5 ff ff       	callq  ffffffff8020d240 <set_thread_sleep_duration_ms>
ffffffff8020dc89:	eb 10                	jmp    ffffffff8020dc9b <SleepThread+0xdb>
ffffffff8020dc8b:	eb 00                	jmp    ffffffff8020dc8d <SleepThread+0xcd>
ffffffff8020dc8d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8020dc91:	48 83 c0 01          	add    $0x1,%rax
ffffffff8020dc95:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff8020dc99:	eb 89                	jmp    ffffffff8020dc24 <SleepThread+0x64>
ffffffff8020dc9b:	48 83 c4 40          	add    $0x40,%rsp
ffffffff8020dc9f:	5d                   	pop    %rbp
ffffffff8020dca0:	c3                   	retq   
ffffffff8020dca1:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
ffffffff8020dca6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8020dcad:	00 00 00 

ffffffff8020dcb0 <GetThreadState>:
ffffffff8020dcb0:	55                   	push   %rbp
ffffffff8020dcb1:	48 89 e5             	mov    %rsp,%rbp
ffffffff8020dcb4:	48 83 ec 30          	sub    $0x30,%rsp
ffffffff8020dcb8:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
ffffffff8020dcbc:	48 8b 04 25 58 ce e8 	mov    0xffffffff80e8ce58,%rax
ffffffff8020dcc3:	80 
ffffffff8020dcc4:	48 8b 00             	mov    (%rax),%rax
ffffffff8020dcc7:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
ffffffff8020dccb:	48 89 c7             	mov    %rax,%rdi
ffffffff8020dcce:	e8 ed eb ff ff       	callq  ffffffff8020c8c0 <get_thread_ID>
ffffffff8020dcd3:	48 8b 7d d8          	mov    -0x28(%rbp),%rdi
ffffffff8020dcd7:	48 39 c7             	cmp    %rax,%rdi
ffffffff8020dcda:	75 15                	jne    ffffffff8020dcf1 <GetThreadState+0x41>
ffffffff8020dcdc:	48 8b 04 25 58 ce e8 	mov    0xffffffff80e8ce58,%rax
ffffffff8020dce3:	80 
ffffffff8020dce4:	48 8b 38             	mov    (%rax),%rdi
ffffffff8020dce7:	e8 a4 ef ff ff       	callq  ffffffff8020cc90 <get_thread_state>
ffffffff8020dcec:	89 45 fc             	mov    %eax,-0x4(%rbp)
ffffffff8020dcef:	eb 6f                	jmp    ffffffff8020dd60 <GetThreadState+0xb0>
ffffffff8020dcf1:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
ffffffff8020dcf8:	00 
ffffffff8020dcf9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8020dcfd:	48 8b 3c 25 98 ce e8 	mov    0xffffffff80e8ce98,%rdi
ffffffff8020dd04:	80 
ffffffff8020dd05:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
ffffffff8020dd09:	e8 b2 bf ff ff       	callq  ffffffff80209cc0 <List_Length>
ffffffff8020dd0e:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
ffffffff8020dd12:	48 39 c7             	cmp    %rax,%rdi
ffffffff8020dd15:	73 42                	jae    ffffffff8020dd59 <GetThreadState+0xa9>
ffffffff8020dd17:	48 8b 3c 25 98 ce e8 	mov    0xffffffff80e8ce98,%rdi
ffffffff8020dd1e:	80 
ffffffff8020dd1f:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
ffffffff8020dd23:	e8 48 c1 ff ff       	callq  ffffffff80209e70 <List_EntryAt>
ffffffff8020dd28:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
ffffffff8020dd2c:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
ffffffff8020dd30:	e8 8b eb ff ff       	callq  ffffffff8020c8c0 <get_thread_ID>
ffffffff8020dd35:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
ffffffff8020dd39:	75 0e                	jne    ffffffff8020dd49 <GetThreadState+0x99>
ffffffff8020dd3b:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
ffffffff8020dd3f:	e8 4c ef ff ff       	callq  ffffffff8020cc90 <get_thread_state>
ffffffff8020dd44:	89 45 fc             	mov    %eax,-0x4(%rbp)
ffffffff8020dd47:	eb 17                	jmp    ffffffff8020dd60 <GetThreadState+0xb0>
ffffffff8020dd49:	eb 00                	jmp    ffffffff8020dd4b <GetThreadState+0x9b>
ffffffff8020dd4b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8020dd4f:	48 83 c0 01          	add    $0x1,%rax
ffffffff8020dd53:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff8020dd57:	eb a0                	jmp    ffffffff8020dcf9 <GetThreadState+0x49>
ffffffff8020dd59:	c7 45 fc ff ff ff ff 	movl   $0xffffffff,-0x4(%rbp)
ffffffff8020dd60:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff8020dd63:	48 83 c4 30          	add    $0x30,%rsp
ffffffff8020dd67:	5d                   	pop    %rbp
ffffffff8020dd68:	c3                   	retq   
ffffffff8020dd69:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

ffffffff8020dd70 <GetThreadUserStack>:
ffffffff8020dd70:	55                   	push   %rbp
ffffffff8020dd71:	48 89 e5             	mov    %rsp,%rbp
ffffffff8020dd74:	48 83 ec 30          	sub    $0x30,%rsp
ffffffff8020dd78:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
ffffffff8020dd7c:	48 8b 04 25 58 ce e8 	mov    0xffffffff80e8ce58,%rax
ffffffff8020dd83:	80 
ffffffff8020dd84:	48 8b 00             	mov    (%rax),%rax
ffffffff8020dd87:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
ffffffff8020dd8b:	48 89 c7             	mov    %rax,%rdi
ffffffff8020dd8e:	e8 2d eb ff ff       	callq  ffffffff8020c8c0 <get_thread_ID>
ffffffff8020dd93:	48 8b 7d d8          	mov    -0x28(%rbp),%rdi
ffffffff8020dd97:	48 39 c7             	cmp    %rax,%rdi
ffffffff8020dd9a:	75 16                	jne    ffffffff8020ddb2 <GetThreadUserStack+0x42>
ffffffff8020dd9c:	48 8b 04 25 58 ce e8 	mov    0xffffffff80e8ce58,%rax
ffffffff8020dda3:	80 
ffffffff8020dda4:	48 8b 38             	mov    (%rax),%rdi
ffffffff8020dda7:	e8 d4 f0 ff ff       	callq  ffffffff8020ce80 <get_thread_user_stack_base>
ffffffff8020ddac:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff8020ddb0:	eb 71                	jmp    ffffffff8020de23 <GetThreadUserStack+0xb3>
ffffffff8020ddb2:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
ffffffff8020ddb9:	00 
ffffffff8020ddba:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8020ddbe:	48 8b 3c 25 98 ce e8 	mov    0xffffffff80e8ce98,%rdi
ffffffff8020ddc5:	80 
ffffffff8020ddc6:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
ffffffff8020ddca:	e8 f1 be ff ff       	callq  ffffffff80209cc0 <List_Length>
ffffffff8020ddcf:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
ffffffff8020ddd3:	48 39 c7             	cmp    %rax,%rdi
ffffffff8020ddd6:	73 43                	jae    ffffffff8020de1b <GetThreadUserStack+0xab>
ffffffff8020ddd8:	48 8b 3c 25 98 ce e8 	mov    0xffffffff80e8ce98,%rdi
ffffffff8020dddf:	80 
ffffffff8020dde0:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
ffffffff8020dde4:	e8 87 c0 ff ff       	callq  ffffffff80209e70 <List_EntryAt>
ffffffff8020dde9:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
ffffffff8020dded:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
ffffffff8020ddf1:	e8 ca ea ff ff       	callq  ffffffff8020c8c0 <get_thread_ID>
ffffffff8020ddf6:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
ffffffff8020ddfa:	75 0f                	jne    ffffffff8020de0b <GetThreadUserStack+0x9b>
ffffffff8020ddfc:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
ffffffff8020de00:	e8 7b f0 ff ff       	callq  ffffffff8020ce80 <get_thread_user_stack_base>
ffffffff8020de05:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff8020de09:	eb 18                	jmp    ffffffff8020de23 <GetThreadUserStack+0xb3>
ffffffff8020de0b:	eb 00                	jmp    ffffffff8020de0d <GetThreadUserStack+0x9d>
ffffffff8020de0d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8020de11:	48 83 c0 01          	add    $0x1,%rax
ffffffff8020de15:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff8020de19:	eb 9f                	jmp    ffffffff8020ddba <GetThreadUserStack+0x4a>
ffffffff8020de1b:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
ffffffff8020de22:	00 
ffffffff8020de23:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8020de27:	48 83 c4 30          	add    $0x30,%rsp
ffffffff8020de2b:	5d                   	pop    %rbp
ffffffff8020de2c:	c3                   	retq   
ffffffff8020de2d:	0f 1f 00             	nopl   (%rax)

ffffffff8020de30 <GetThreadKernelStack>:
ffffffff8020de30:	55                   	push   %rbp
ffffffff8020de31:	48 89 e5             	mov    %rsp,%rbp
ffffffff8020de34:	48 83 ec 30          	sub    $0x30,%rsp
ffffffff8020de38:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
ffffffff8020de3c:	48 8b 04 25 58 ce e8 	mov    0xffffffff80e8ce58,%rax
ffffffff8020de43:	80 
ffffffff8020de44:	48 8b 00             	mov    (%rax),%rax
ffffffff8020de47:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
ffffffff8020de4b:	48 89 c7             	mov    %rax,%rdi
ffffffff8020de4e:	e8 6d ea ff ff       	callq  ffffffff8020c8c0 <get_thread_ID>
ffffffff8020de53:	48 8b 7d d8          	mov    -0x28(%rbp),%rdi
ffffffff8020de57:	48 39 c7             	cmp    %rax,%rdi
ffffffff8020de5a:	75 16                	jne    ffffffff8020de72 <GetThreadKernelStack+0x42>
ffffffff8020de5c:	48 8b 04 25 58 ce e8 	mov    0xffffffff80e8ce58,%rax
ffffffff8020de63:	80 
ffffffff8020de64:	48 8b 38             	mov    (%rax),%rdi
ffffffff8020de67:	e8 c4 f0 ff ff       	callq  ffffffff8020cf30 <get_thread_kernel_stack_base>
ffffffff8020de6c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff8020de70:	eb 71                	jmp    ffffffff8020dee3 <GetThreadKernelStack+0xb3>
ffffffff8020de72:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
ffffffff8020de79:	00 
ffffffff8020de7a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8020de7e:	48 8b 3c 25 98 ce e8 	mov    0xffffffff80e8ce98,%rdi
ffffffff8020de85:	80 
ffffffff8020de86:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
ffffffff8020de8a:	e8 31 be ff ff       	callq  ffffffff80209cc0 <List_Length>
ffffffff8020de8f:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
ffffffff8020de93:	48 39 c7             	cmp    %rax,%rdi
ffffffff8020de96:	73 43                	jae    ffffffff8020dedb <GetThreadKernelStack+0xab>
ffffffff8020de98:	48 8b 3c 25 98 ce e8 	mov    0xffffffff80e8ce98,%rdi
ffffffff8020de9f:	80 
ffffffff8020dea0:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
ffffffff8020dea4:	e8 c7 bf ff ff       	callq  ffffffff80209e70 <List_EntryAt>
ffffffff8020dea9:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
ffffffff8020dead:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
ffffffff8020deb1:	e8 0a ea ff ff       	callq  ffffffff8020c8c0 <get_thread_ID>
ffffffff8020deb6:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
ffffffff8020deba:	75 0f                	jne    ffffffff8020decb <GetThreadKernelStack+0x9b>
ffffffff8020debc:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
ffffffff8020dec0:	e8 6b f0 ff ff       	callq  ffffffff8020cf30 <get_thread_kernel_stack_base>
ffffffff8020dec5:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff8020dec9:	eb 18                	jmp    ffffffff8020dee3 <GetThreadKernelStack+0xb3>
ffffffff8020decb:	eb 00                	jmp    ffffffff8020decd <GetThreadKernelStack+0x9d>
ffffffff8020decd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8020ded1:	48 83 c0 01          	add    $0x1,%rax
ffffffff8020ded5:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff8020ded9:	eb 9f                	jmp    ffffffff8020de7a <GetThreadKernelStack+0x4a>
ffffffff8020dedb:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
ffffffff8020dee2:	00 
ffffffff8020dee3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8020dee7:	48 83 c4 30          	add    $0x30,%rsp
ffffffff8020deeb:	5d                   	pop    %rbp
ffffffff8020deec:	c3                   	retq   
ffffffff8020deed:	0f 1f 00             	nopl   (%rax)

ffffffff8020def0 <SetThreadBasePriority>:
ffffffff8020def0:	55                   	push   %rbp
ffffffff8020def1:	48 89 e5             	mov    %rsp,%rbp
ffffffff8020def4:	48 83 ec 30          	sub    $0x30,%rsp
ffffffff8020def8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8020defc:	89 75 f4             	mov    %esi,-0xc(%rbp)
ffffffff8020deff:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
ffffffff8020df03:	48 8b 04 25 58 ce e8 	mov    0xffffffff80e8ce58,%rax
ffffffff8020df0a:	80 
ffffffff8020df0b:	48 8b 00             	mov    (%rax),%rax
ffffffff8020df0e:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
ffffffff8020df12:	48 89 c7             	mov    %rax,%rdi
ffffffff8020df15:	e8 a6 e9 ff ff       	callq  ffffffff8020c8c0 <get_thread_ID>
ffffffff8020df1a:	48 8b 7d d8          	mov    -0x28(%rbp),%rdi
ffffffff8020df1e:	48 39 c7             	cmp    %rax,%rdi
ffffffff8020df21:	75 15                	jne    ffffffff8020df38 <SetThreadBasePriority+0x48>
ffffffff8020df23:	48 8b 04 25 58 ce e8 	mov    0xffffffff80e8ce58,%rax
ffffffff8020df2a:	80 
ffffffff8020df2b:	48 8b 38             	mov    (%rax),%rdi
ffffffff8020df2e:	8b 75 f4             	mov    -0xc(%rbp),%esi
ffffffff8020df31:	e8 5a ee ff ff       	callq  ffffffff8020cd90 <set_thread_priority>
ffffffff8020df36:	eb 68                	jmp    ffffffff8020dfa0 <SetThreadBasePriority+0xb0>
ffffffff8020df38:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
ffffffff8020df3f:	00 
ffffffff8020df40:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8020df44:	48 8b 3c 25 98 ce e8 	mov    0xffffffff80e8ce98,%rdi
ffffffff8020df4b:	80 
ffffffff8020df4c:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
ffffffff8020df50:	e8 6b bd ff ff       	callq  ffffffff80209cc0 <List_Length>
ffffffff8020df55:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
ffffffff8020df59:	48 39 c7             	cmp    %rax,%rdi
ffffffff8020df5c:	73 42                	jae    ffffffff8020dfa0 <SetThreadBasePriority+0xb0>
ffffffff8020df5e:	48 8b 3c 25 98 ce e8 	mov    0xffffffff80e8ce98,%rdi
ffffffff8020df65:	80 
ffffffff8020df66:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
ffffffff8020df6a:	e8 01 bf ff ff       	callq  ffffffff80209e70 <List_EntryAt>
ffffffff8020df6f:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
ffffffff8020df73:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
ffffffff8020df77:	e8 44 e9 ff ff       	callq  ffffffff8020c8c0 <get_thread_ID>
ffffffff8020df7c:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
ffffffff8020df80:	75 0e                	jne    ffffffff8020df90 <SetThreadBasePriority+0xa0>
ffffffff8020df82:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
ffffffff8020df86:	8b 75 f4             	mov    -0xc(%rbp),%esi
ffffffff8020df89:	e8 02 ee ff ff       	callq  ffffffff8020cd90 <set_thread_priority>
ffffffff8020df8e:	eb 10                	jmp    ffffffff8020dfa0 <SetThreadBasePriority+0xb0>
ffffffff8020df90:	eb 00                	jmp    ffffffff8020df92 <SetThreadBasePriority+0xa2>
ffffffff8020df92:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8020df96:	48 83 c0 01          	add    $0x1,%rax
ffffffff8020df9a:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff8020df9e:	eb a0                	jmp    ffffffff8020df40 <SetThreadBasePriority+0x50>
ffffffff8020dfa0:	48 83 c4 30          	add    $0x30,%rsp
ffffffff8020dfa4:	5d                   	pop    %rbp
ffffffff8020dfa5:	c3                   	retq   
ffffffff8020dfa6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8020dfad:	00 00 00 

ffffffff8020dfb0 <GetThreadPriority>:
ffffffff8020dfb0:	55                   	push   %rbp
ffffffff8020dfb1:	48 89 e5             	mov    %rsp,%rbp
ffffffff8020dfb4:	48 83 ec 30          	sub    $0x30,%rsp
ffffffff8020dfb8:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
ffffffff8020dfbc:	48 8b 04 25 58 ce e8 	mov    0xffffffff80e8ce58,%rax
ffffffff8020dfc3:	80 
ffffffff8020dfc4:	48 8b 00             	mov    (%rax),%rax
ffffffff8020dfc7:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
ffffffff8020dfcb:	48 89 c7             	mov    %rax,%rdi
ffffffff8020dfce:	e8 ed e8 ff ff       	callq  ffffffff8020c8c0 <get_thread_ID>
ffffffff8020dfd3:	48 8b 7d d8          	mov    -0x28(%rbp),%rdi
ffffffff8020dfd7:	48 39 c7             	cmp    %rax,%rdi
ffffffff8020dfda:	75 15                	jne    ffffffff8020dff1 <GetThreadPriority+0x41>
ffffffff8020dfdc:	48 8b 04 25 58 ce e8 	mov    0xffffffff80e8ce58,%rax
ffffffff8020dfe3:	80 
ffffffff8020dfe4:	48 8b 38             	mov    (%rax),%rdi
ffffffff8020dfe7:	e8 44 ed ff ff       	callq  ffffffff8020cd30 <get_thread_priority>
ffffffff8020dfec:	89 45 fc             	mov    %eax,-0x4(%rbp)
ffffffff8020dfef:	eb 6f                	jmp    ffffffff8020e060 <GetThreadPriority+0xb0>
ffffffff8020dff1:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
ffffffff8020dff8:	00 
ffffffff8020dff9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8020dffd:	48 8b 3c 25 98 ce e8 	mov    0xffffffff80e8ce98,%rdi
ffffffff8020e004:	80 
ffffffff8020e005:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
ffffffff8020e009:	e8 b2 bc ff ff       	callq  ffffffff80209cc0 <List_Length>
ffffffff8020e00e:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
ffffffff8020e012:	48 39 c7             	cmp    %rax,%rdi
ffffffff8020e015:	73 42                	jae    ffffffff8020e059 <GetThreadPriority+0xa9>
ffffffff8020e017:	48 8b 3c 25 98 ce e8 	mov    0xffffffff80e8ce98,%rdi
ffffffff8020e01e:	80 
ffffffff8020e01f:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
ffffffff8020e023:	e8 48 be ff ff       	callq  ffffffff80209e70 <List_EntryAt>
ffffffff8020e028:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
ffffffff8020e02c:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
ffffffff8020e030:	e8 8b e8 ff ff       	callq  ffffffff8020c8c0 <get_thread_ID>
ffffffff8020e035:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
ffffffff8020e039:	75 0e                	jne    ffffffff8020e049 <GetThreadPriority+0x99>
ffffffff8020e03b:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
ffffffff8020e03f:	e8 ec ec ff ff       	callq  ffffffff8020cd30 <get_thread_priority>
ffffffff8020e044:	89 45 fc             	mov    %eax,-0x4(%rbp)
ffffffff8020e047:	eb 17                	jmp    ffffffff8020e060 <GetThreadPriority+0xb0>
ffffffff8020e049:	eb 00                	jmp    ffffffff8020e04b <GetThreadPriority+0x9b>
ffffffff8020e04b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8020e04f:	48 83 c0 01          	add    $0x1,%rax
ffffffff8020e053:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff8020e057:	eb a0                	jmp    ffffffff8020dff9 <GetThreadPriority+0x49>
ffffffff8020e059:	c7 45 fc ff ff ff ff 	movl   $0xffffffff,-0x4(%rbp)
ffffffff8020e060:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff8020e063:	48 83 c4 30          	add    $0x30,%rsp
ffffffff8020e067:	5d                   	pop    %rbp
ffffffff8020e068:	c3                   	retq   
ffffffff8020e069:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

ffffffff8020e070 <SetThreadCoreAffinity>:
ffffffff8020e070:	55                   	push   %rbp
ffffffff8020e071:	48 89 e5             	mov    %rsp,%rbp
ffffffff8020e074:	48 83 ec 30          	sub    $0x30,%rsp
ffffffff8020e078:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8020e07c:	89 75 f4             	mov    %esi,-0xc(%rbp)
ffffffff8020e07f:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
ffffffff8020e083:	48 8b 04 25 58 ce e8 	mov    0xffffffff80e8ce58,%rax
ffffffff8020e08a:	80 
ffffffff8020e08b:	48 8b 00             	mov    (%rax),%rax
ffffffff8020e08e:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
ffffffff8020e092:	48 89 c7             	mov    %rax,%rdi
ffffffff8020e095:	e8 26 e8 ff ff       	callq  ffffffff8020c8c0 <get_thread_ID>
ffffffff8020e09a:	48 8b 7d d8          	mov    -0x28(%rbp),%rdi
ffffffff8020e09e:	48 39 c7             	cmp    %rax,%rdi
ffffffff8020e0a1:	75 15                	jne    ffffffff8020e0b8 <SetThreadCoreAffinity+0x48>
ffffffff8020e0a3:	48 8b 04 25 58 ce e8 	mov    0xffffffff80e8ce58,%rax
ffffffff8020e0aa:	80 
ffffffff8020e0ab:	48 8b 38             	mov    (%rax),%rdi
ffffffff8020e0ae:	8b 75 f4             	mov    -0xc(%rbp),%esi
ffffffff8020e0b1:	e8 ea f0 ff ff       	callq  ffffffff8020d1a0 <set_thread_core_affinity>
ffffffff8020e0b6:	eb 68                	jmp    ffffffff8020e120 <SetThreadCoreAffinity+0xb0>
ffffffff8020e0b8:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
ffffffff8020e0bf:	00 
ffffffff8020e0c0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8020e0c4:	48 8b 3c 25 98 ce e8 	mov    0xffffffff80e8ce98,%rdi
ffffffff8020e0cb:	80 
ffffffff8020e0cc:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
ffffffff8020e0d0:	e8 eb bb ff ff       	callq  ffffffff80209cc0 <List_Length>
ffffffff8020e0d5:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
ffffffff8020e0d9:	48 39 c7             	cmp    %rax,%rdi
ffffffff8020e0dc:	73 42                	jae    ffffffff8020e120 <SetThreadCoreAffinity+0xb0>
ffffffff8020e0de:	48 8b 3c 25 98 ce e8 	mov    0xffffffff80e8ce98,%rdi
ffffffff8020e0e5:	80 
ffffffff8020e0e6:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
ffffffff8020e0ea:	e8 81 bd ff ff       	callq  ffffffff80209e70 <List_EntryAt>
ffffffff8020e0ef:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
ffffffff8020e0f3:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
ffffffff8020e0f7:	e8 c4 e7 ff ff       	callq  ffffffff8020c8c0 <get_thread_ID>
ffffffff8020e0fc:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
ffffffff8020e100:	75 0e                	jne    ffffffff8020e110 <SetThreadCoreAffinity+0xa0>
ffffffff8020e102:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
ffffffff8020e106:	8b 75 f4             	mov    -0xc(%rbp),%esi
ffffffff8020e109:	e8 92 f0 ff ff       	callq  ffffffff8020d1a0 <set_thread_core_affinity>
ffffffff8020e10e:	eb 10                	jmp    ffffffff8020e120 <SetThreadCoreAffinity+0xb0>
ffffffff8020e110:	eb 00                	jmp    ffffffff8020e112 <SetThreadCoreAffinity+0xa2>
ffffffff8020e112:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8020e116:	48 83 c0 01          	add    $0x1,%rax
ffffffff8020e11a:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff8020e11e:	eb a0                	jmp    ffffffff8020e0c0 <SetThreadCoreAffinity+0x50>
ffffffff8020e120:	48 83 c4 30          	add    $0x30,%rsp
ffffffff8020e124:	5d                   	pop    %rbp
ffffffff8020e125:	c3                   	retq   
ffffffff8020e126:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8020e12d:	00 00 00 

ffffffff8020e130 <GetThreadCoreAffinity>:
ffffffff8020e130:	55                   	push   %rbp
ffffffff8020e131:	48 89 e5             	mov    %rsp,%rbp
ffffffff8020e134:	48 83 ec 30          	sub    $0x30,%rsp
ffffffff8020e138:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
ffffffff8020e13c:	48 8b 04 25 58 ce e8 	mov    0xffffffff80e8ce58,%rax
ffffffff8020e143:	80 
ffffffff8020e144:	48 8b 00             	mov    (%rax),%rax
ffffffff8020e147:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
ffffffff8020e14b:	48 89 c7             	mov    %rax,%rdi
ffffffff8020e14e:	e8 6d e7 ff ff       	callq  ffffffff8020c8c0 <get_thread_ID>
ffffffff8020e153:	48 8b 7d d8          	mov    -0x28(%rbp),%rdi
ffffffff8020e157:	48 39 c7             	cmp    %rax,%rdi
ffffffff8020e15a:	75 15                	jne    ffffffff8020e171 <GetThreadCoreAffinity+0x41>
ffffffff8020e15c:	48 8b 04 25 58 ce e8 	mov    0xffffffff80e8ce58,%rax
ffffffff8020e163:	80 
ffffffff8020e164:	48 8b 38             	mov    (%rax),%rdi
ffffffff8020e167:	e8 d4 ef ff ff       	callq  ffffffff8020d140 <get_thread_core_affinity>
ffffffff8020e16c:	89 45 fc             	mov    %eax,-0x4(%rbp)
ffffffff8020e16f:	eb 6f                	jmp    ffffffff8020e1e0 <GetThreadCoreAffinity+0xb0>
ffffffff8020e171:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
ffffffff8020e178:	00 
ffffffff8020e179:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8020e17d:	48 8b 3c 25 98 ce e8 	mov    0xffffffff80e8ce98,%rdi
ffffffff8020e184:	80 
ffffffff8020e185:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
ffffffff8020e189:	e8 32 bb ff ff       	callq  ffffffff80209cc0 <List_Length>
ffffffff8020e18e:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
ffffffff8020e192:	48 39 c7             	cmp    %rax,%rdi
ffffffff8020e195:	73 42                	jae    ffffffff8020e1d9 <GetThreadCoreAffinity+0xa9>
ffffffff8020e197:	48 8b 3c 25 98 ce e8 	mov    0xffffffff80e8ce98,%rdi
ffffffff8020e19e:	80 
ffffffff8020e19f:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
ffffffff8020e1a3:	e8 c8 bc ff ff       	callq  ffffffff80209e70 <List_EntryAt>
ffffffff8020e1a8:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
ffffffff8020e1ac:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
ffffffff8020e1b0:	e8 0b e7 ff ff       	callq  ffffffff8020c8c0 <get_thread_ID>
ffffffff8020e1b5:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
ffffffff8020e1b9:	75 0e                	jne    ffffffff8020e1c9 <GetThreadCoreAffinity+0x99>
ffffffff8020e1bb:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
ffffffff8020e1bf:	e8 7c ef ff ff       	callq  ffffffff8020d140 <get_thread_core_affinity>
ffffffff8020e1c4:	89 45 fc             	mov    %eax,-0x4(%rbp)
ffffffff8020e1c7:	eb 17                	jmp    ffffffff8020e1e0 <GetThreadCoreAffinity+0xb0>
ffffffff8020e1c9:	eb 00                	jmp    ffffffff8020e1cb <GetThreadCoreAffinity+0x9b>
ffffffff8020e1cb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8020e1cf:	48 83 c0 01          	add    $0x1,%rax
ffffffff8020e1d3:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff8020e1d7:	eb a0                	jmp    ffffffff8020e179 <GetThreadCoreAffinity+0x49>
ffffffff8020e1d9:	c7 45 fc ff ff ff ff 	movl   $0xffffffff,-0x4(%rbp)
ffffffff8020e1e0:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff8020e1e3:	48 83 c4 30          	add    $0x30,%rsp
ffffffff8020e1e7:	5d                   	pop    %rbp
ffffffff8020e1e8:	c3                   	retq   
ffffffff8020e1e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

ffffffff8020e1f0 <FreeThread>:
ffffffff8020e1f0:	55                   	push   %rbp
ffffffff8020e1f1:	48 89 e5             	mov    %rsp,%rbp
ffffffff8020e1f4:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff8020e1f8:	b8 04 00 00 00       	mov    $0x4,%eax
ffffffff8020e1fd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8020e201:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
ffffffff8020e205:	be 04 00 00 00       	mov    $0x4,%esi
ffffffff8020e20a:	89 45 f4             	mov    %eax,-0xc(%rbp)
ffffffff8020e20d:	e8 ee f8 ff ff       	callq  ffffffff8020db00 <SetThreadState>
ffffffff8020e212:	48 83 c4 10          	add    $0x10,%rsp
ffffffff8020e216:	5d                   	pop    %rbp
ffffffff8020e217:	c3                   	retq   
ffffffff8020e218:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff8020e21f:	00 

ffffffff8020e220 <YieldThread>:
ffffffff8020e220:	55                   	push   %rbp
ffffffff8020e221:	48 89 e5             	mov    %rsp,%rbp
ffffffff8020e224:	8b 3c 25 b0 ce e8 80 	mov    0xffffffff80e8ceb0,%edi
ffffffff8020e22b:	e8 e0 48 ff ff       	callq  ffffffff80202b10 <RaiseInterrupt>
ffffffff8020e230:	5d                   	pop    %rbp
ffffffff8020e231:	c3                   	retq   
ffffffff8020e232:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff8020e236:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8020e23d:	00 00 00 

ffffffff8020e240 <GetNextThread>:
ffffffff8020e240:	55                   	push   %rbp
ffffffff8020e241:	48 89 e5             	mov    %rsp,%rbp
ffffffff8020e244:	48 81 ec d0 00 00 00 	sub    $0xd0,%rsp
ffffffff8020e24b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8020e24f:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
ffffffff8020e254:	74 22                	je     ffffffff8020e278 <GetNextThread+0x38>
ffffffff8020e256:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
ffffffff8020e25a:	31 f6                	xor    %esi,%esi
ffffffff8020e25c:	e8 8f f0 ff ff       	callq  ffffffff8020d2f0 <set_thread_cur_executing>
ffffffff8020e261:	48 8b 3c 25 98 ce e8 	mov    0xffffffff80e8ce98,%rdi
ffffffff8020e268:	80 
ffffffff8020e269:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
ffffffff8020e26d:	48 89 c6             	mov    %rax,%rsi
ffffffff8020e270:	e8 3b b9 ff ff       	callq  ffffffff80209bb0 <List_AddEntry>
ffffffff8020e275:	89 45 c4             	mov    %eax,-0x3c(%rbp)
ffffffff8020e278:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
ffffffff8020e27f:	00 
ffffffff8020e280:	c6 45 ef 00          	movb   $0x0,-0x11(%rbp)
ffffffff8020e284:	80 7d ef 00          	cmpb   $0x0,-0x11(%rbp)
ffffffff8020e288:	0f 95 c0             	setne  %al
ffffffff8020e28b:	34 ff                	xor    $0xff,%al
ffffffff8020e28d:	a8 01                	test   $0x1,%al
ffffffff8020e28f:	75 05                	jne    ffffffff8020e296 <GetNextThread+0x56>
ffffffff8020e291:	e9 e7 03 00 00       	jmpq   ffffffff8020e67d <GetNextThread+0x43d>
ffffffff8020e296:	31 c0                	xor    %eax,%eax
ffffffff8020e298:	89 c1                	mov    %eax,%ecx
ffffffff8020e29a:	48 8b 3c 25 a8 ce e8 	mov    0xffffffff80e8cea8,%rdi
ffffffff8020e2a1:	80 
ffffffff8020e2a2:	48 89 4d b8          	mov    %rcx,-0x48(%rbp)
ffffffff8020e2a6:	e8 b5 42 ff ff       	callq  ffffffff80202560 <LockSpinlock>
ffffffff8020e2ab:	48 8b 3c 25 98 ce e8 	mov    0xffffffff80e8ce98,%rdi
ffffffff8020e2b2:	80 
ffffffff8020e2b3:	31 d2                	xor    %edx,%edx
ffffffff8020e2b5:	89 d6                	mov    %edx,%esi
ffffffff8020e2b7:	88 45 b7             	mov    %al,-0x49(%rbp)
ffffffff8020e2ba:	e8 b1 bb ff ff       	callq  ffffffff80209e70 <List_EntryAt>
ffffffff8020e2bf:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff8020e2c3:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
ffffffff8020e2c8:	74 19                	je     ffffffff8020e2e3 <GetNextThread+0xa3>
ffffffff8020e2ca:	31 c0                	xor    %eax,%eax
ffffffff8020e2cc:	89 c1                	mov    %eax,%ecx
ffffffff8020e2ce:	48 8b 3c 25 98 ce e8 	mov    0xffffffff80e8ce98,%rdi
ffffffff8020e2d5:	80 
ffffffff8020e2d6:	31 c0                	xor    %eax,%eax
ffffffff8020e2d8:	89 c6                	mov    %eax,%esi
ffffffff8020e2da:	48 89 4d a8          	mov    %rcx,-0x58(%rbp)
ffffffff8020e2de:	e8 2d ba ff ff       	callq  ffffffff80209d10 <List_Remove>
ffffffff8020e2e3:	48 8b 3c 25 a8 ce e8 	mov    0xffffffff80e8cea8,%rdi
ffffffff8020e2ea:	80 
ffffffff8020e2eb:	e8 40 43 ff ff       	callq  ffffffff80202630 <UnlockSpinlock>
ffffffff8020e2f0:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
ffffffff8020e2f5:	88 45 a7             	mov    %al,-0x59(%rbp)
ffffffff8020e2f8:	75 02                	jne    ffffffff8020e2fc <GetNextThread+0xbc>
ffffffff8020e2fa:	eb 88                	jmp    ffffffff8020e284 <GetNextThread+0x44>
ffffffff8020e2fc:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
ffffffff8020e300:	e8 8b e9 ff ff       	callq  ffffffff8020cc90 <get_thread_state>
ffffffff8020e305:	89 c1                	mov    %eax,%ecx
ffffffff8020e307:	83 e8 02             	sub    $0x2,%eax
ffffffff8020e30a:	89 4d a0             	mov    %ecx,-0x60(%rbp)
ffffffff8020e30d:	89 45 9c             	mov    %eax,-0x64(%rbp)
ffffffff8020e310:	0f 84 59 02 00 00    	je     ffffffff8020e56f <GetNextThread+0x32f>
ffffffff8020e316:	eb 00                	jmp    ffffffff8020e318 <GetNextThread+0xd8>
ffffffff8020e318:	8b 45 a0             	mov    -0x60(%rbp),%eax
ffffffff8020e31b:	83 e8 03             	sub    $0x3,%eax
ffffffff8020e31e:	89 45 98             	mov    %eax,-0x68(%rbp)
ffffffff8020e321:	0f 84 4d 02 00 00    	je     ffffffff8020e574 <GetNextThread+0x334>
ffffffff8020e327:	eb 00                	jmp    ffffffff8020e329 <GetNextThread+0xe9>
ffffffff8020e329:	8b 45 a0             	mov    -0x60(%rbp),%eax
ffffffff8020e32c:	83 e8 04             	sub    $0x4,%eax
ffffffff8020e32f:	89 45 94             	mov    %eax,-0x6c(%rbp)
ffffffff8020e332:	0f 85 23 03 00 00    	jne    ffffffff8020e65b <GetNextThread+0x41b>
ffffffff8020e338:	eb 00                	jmp    ffffffff8020e33a <GetNextThread+0xfa>
ffffffff8020e33a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8020e33e:	48 8b 78 70          	mov    0x70(%rax),%rdi
ffffffff8020e342:	e8 99 42 ff ff       	callq  ffffffff802025e0 <GetSpinlockContenderCount>
ffffffff8020e347:	48 83 f8 00          	cmp    $0x0,%rax
ffffffff8020e34b:	0f 85 ff 01 00 00    	jne    ffffffff8020e550 <GetNextThread+0x310>
ffffffff8020e351:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8020e355:	48 8b 78 70          	mov    0x70(%rax),%rdi
ffffffff8020e359:	e8 02 42 ff ff       	callq  ffffffff80202560 <LockSpinlock>
ffffffff8020e35e:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
ffffffff8020e362:	48 8b 7f 30          	mov    0x30(%rdi),%rdi
ffffffff8020e366:	48 81 c7 80 00 00 00 	add    $0x80,%rdi
ffffffff8020e36d:	48 81 ef 00 20 00 00 	sub    $0x2000,%rdi
ffffffff8020e374:	88 45 93             	mov    %al,-0x6d(%rbp)
ffffffff8020e377:	e8 14 d4 ff ff       	callq  ffffffff8020b790 <kfree>
ffffffff8020e37c:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
ffffffff8020e380:	48 8b 7f 28          	mov    0x28(%rdi),%rdi
ffffffff8020e384:	48 81 c7 80 00 00 00 	add    $0x80,%rdi
ffffffff8020e38b:	48 81 ef 00 20 00 00 	sub    $0x2000,%rdi
ffffffff8020e392:	e8 f9 d3 ff ff       	callq  ffffffff8020b790 <kfree>
ffffffff8020e397:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
ffffffff8020e39b:	48 8b 7f 38          	mov    0x38(%rdi),%rdi
ffffffff8020e39f:	48 81 c7 80 00 00 00 	add    $0x80,%rdi
ffffffff8020e3a6:	48 81 ef 00 20 00 00 	sub    $0x2000,%rdi
ffffffff8020e3ad:	e8 ae 39 ff ff       	callq  ffffffff80201d60 <GetPhysicalAddress>
ffffffff8020e3b2:	b9 02 00 00 00       	mov    $0x2,%ecx
ffffffff8020e3b7:	be 02 00 00 00       	mov    $0x2,%esi
ffffffff8020e3bc:	48 89 c7             	mov    %rax,%rdi
ffffffff8020e3bf:	89 4d 8c             	mov    %ecx,-0x74(%rbp)
ffffffff8020e3c2:	e8 39 40 ff ff       	callq  ffffffff80202400 <FreePhysicalPageCont>
ffffffff8020e3c7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8020e3cb:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff8020e3cf:	48 8b b8 e8 01 00 00 	mov    0x1e8(%rax),%rdi
ffffffff8020e3d6:	e8 85 41 ff ff       	callq  ffffffff80202560 <LockSpinlock>
ffffffff8020e3db:	b9 00 20 00 00       	mov    $0x2000,%ecx
ffffffff8020e3e0:	89 cf                	mov    %ecx,%edi
ffffffff8020e3e2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff8020e3e6:	48 8b 52 10          	mov    0x10(%rdx),%rdx
ffffffff8020e3ea:	48 8b 92 c8 01 00 00 	mov    0x1c8(%rdx),%rdx
ffffffff8020e3f1:	4c 8b 45 f0          	mov    -0x10(%rbp),%r8
ffffffff8020e3f5:	4d 8b 40 38          	mov    0x38(%r8),%r8
ffffffff8020e3f9:	49 81 c0 80 00 00 00 	add    $0x80,%r8
ffffffff8020e400:	49 81 e8 00 20 00 00 	sub    $0x2000,%r8
ffffffff8020e407:	b9 00 20 00 00       	mov    $0x2000,%ecx
ffffffff8020e40c:	41 89 c9             	mov    %ecx,%r9d
ffffffff8020e40f:	48 89 7d 80          	mov    %rdi,-0x80(%rbp)
ffffffff8020e413:	48 89 d7             	mov    %rdx,%rdi
ffffffff8020e416:	4c 89 c6             	mov    %r8,%rsi
ffffffff8020e419:	4c 89 ca             	mov    %r9,%rdx
ffffffff8020e41c:	88 85 7f ff ff ff    	mov    %al,-0x81(%rbp)
ffffffff8020e422:	e8 89 3c ff ff       	callq  ffffffff802020b0 <UnmapPage>
ffffffff8020e427:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
ffffffff8020e42e:	00 
ffffffff8020e42f:	89 85 78 ff ff ff    	mov    %eax,-0x88(%rbp)
ffffffff8020e435:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8020e439:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
ffffffff8020e43d:	48 8b 49 10          	mov    0x10(%rcx),%rcx
ffffffff8020e441:	48 8b b9 d8 01 00 00 	mov    0x1d8(%rcx),%rdi
ffffffff8020e448:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
ffffffff8020e44f:	e8 6c b8 ff ff       	callq  ffffffff80209cc0 <List_Length>
ffffffff8020e454:	48 8b 8d 70 ff ff ff 	mov    -0x90(%rbp),%rcx
ffffffff8020e45b:	48 39 c1             	cmp    %rax,%rcx
ffffffff8020e45e:	73 4a                	jae    ffffffff8020e4aa <GetNextThread+0x26a>
ffffffff8020e460:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8020e464:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff8020e468:	48 8b b8 d8 01 00 00 	mov    0x1d8(%rax),%rdi
ffffffff8020e46f:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
ffffffff8020e473:	e8 f8 b9 ff ff       	callq  ffffffff80209e70 <List_EntryAt>
ffffffff8020e478:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
ffffffff8020e47c:	48 3b 46 08          	cmp    0x8(%rsi),%rax
ffffffff8020e480:	75 18                	jne    ffffffff8020e49a <GetNextThread+0x25a>
ffffffff8020e482:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8020e486:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff8020e48a:	48 8b b8 d8 01 00 00 	mov    0x1d8(%rax),%rdi
ffffffff8020e491:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
ffffffff8020e495:	e8 76 b8 ff ff       	callq  ffffffff80209d10 <List_Remove>
ffffffff8020e49a:	eb 00                	jmp    ffffffff8020e49c <GetNextThread+0x25c>
ffffffff8020e49c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8020e4a0:	48 83 c0 01          	add    $0x1,%rax
ffffffff8020e4a4:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
ffffffff8020e4a8:	eb 8b                	jmp    ffffffff8020e435 <GetNextThread+0x1f5>
ffffffff8020e4aa:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8020e4ae:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff8020e4b2:	48 8b b8 d8 01 00 00 	mov    0x1d8(%rax),%rdi
ffffffff8020e4b9:	e8 02 b8 ff ff       	callq  ffffffff80209cc0 <List_Length>
ffffffff8020e4be:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
ffffffff8020e4c2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8020e4c6:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff8020e4ca:	8b 88 08 01 00 00    	mov    0x108(%rax),%ecx
ffffffff8020e4d0:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
ffffffff8020e4d3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8020e4d7:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff8020e4db:	48 8b 00             	mov    (%rax),%rax
ffffffff8020e4de:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
ffffffff8020e4e2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8020e4e6:	48 8b 40 10          	mov    0x10(%rax),%rax
ffffffff8020e4ea:	48 8b b8 e8 01 00 00 	mov    0x1e8(%rax),%rdi
ffffffff8020e4f1:	e8 3a 41 ff ff       	callq  ffffffff80202630 <UnlockSpinlock>
ffffffff8020e4f6:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
ffffffff8020e4fb:	0f 94 c2             	sete   %dl
ffffffff8020e4fe:	80 e2 01             	and    $0x1,%dl
ffffffff8020e501:	0f b6 ca             	movzbl %dl,%ecx
ffffffff8020e504:	83 7d d4 02          	cmpl   $0x2,-0x2c(%rbp)
ffffffff8020e508:	0f 94 c2             	sete   %dl
ffffffff8020e50b:	80 e2 01             	and    $0x1,%dl
ffffffff8020e50e:	0f b6 f2             	movzbl %dl,%esi
ffffffff8020e511:	09 f1                	or     %esi,%ecx
ffffffff8020e513:	83 f9 00             	cmp    $0x0,%ecx
ffffffff8020e516:	88 85 6f ff ff ff    	mov    %al,-0x91(%rbp)
ffffffff8020e51c:	74 0f                	je     ffffffff8020e52d <GetNextThread+0x2ed>
ffffffff8020e51e:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
ffffffff8020e522:	e8 e9 dc ff ff       	callq  ffffffff8020c210 <KillProcess>
ffffffff8020e527:	89 85 68 ff ff ff    	mov    %eax,-0x98(%rbp)
ffffffff8020e52d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8020e531:	48 8b 78 70          	mov    0x70(%rax),%rdi
ffffffff8020e535:	e8 46 41 ff ff       	callq  ffffffff80202680 <FreeSpinlock>
ffffffff8020e53a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8020e53e:	48 89 c7             	mov    %rax,%rdi
ffffffff8020e541:	e8 4a d2 ff ff       	callq  ffffffff8020b790 <kfree>
ffffffff8020e546:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
ffffffff8020e54d:	00 
ffffffff8020e54e:	eb 1a                	jmp    ffffffff8020e56a <GetNextThread+0x32a>
ffffffff8020e550:	48 8b 3c 25 98 ce e8 	mov    0xffffffff80e8ce98,%rdi
ffffffff8020e557:	80 
ffffffff8020e558:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8020e55c:	48 89 c6             	mov    %rax,%rsi
ffffffff8020e55f:	e8 4c b6 ff ff       	callq  ffffffff80209bb0 <List_AddEntry>
ffffffff8020e564:	89 85 64 ff ff ff    	mov    %eax,-0x9c(%rbp)
ffffffff8020e56a:	e9 09 01 00 00       	jmpq   ffffffff8020e678 <GetNextThread+0x438>
ffffffff8020e56f:	e9 04 01 00 00       	jmpq   ffffffff8020e678 <GetNextThread+0x438>
ffffffff8020e574:	b8 e8 03 00 00       	mov    $0x3e8,%eax
ffffffff8020e579:	89 c1                	mov    %eax,%ecx
ffffffff8020e57b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff8020e57f:	48 8b 7a 70          	mov    0x70(%rdx),%rdi
ffffffff8020e583:	48 89 8d 58 ff ff ff 	mov    %rcx,-0xa8(%rbp)
ffffffff8020e58a:	e8 d1 3f ff ff       	callq  ffffffff80202560 <LockSpinlock>
ffffffff8020e58f:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
ffffffff8020e593:	48 8b 49 58          	mov    0x58(%rcx),%rcx
ffffffff8020e597:	48 8b 14 25 b8 ce e8 	mov    0xffffffff80e8ceb8,%rdx
ffffffff8020e59e:	80 
ffffffff8020e59f:	88 85 57 ff ff ff    	mov    %al,-0xa9(%rbp)
ffffffff8020e5a5:	48 89 d0             	mov    %rdx,%rax
ffffffff8020e5a8:	31 f6                	xor    %esi,%esi
ffffffff8020e5aa:	89 f2                	mov    %esi,%edx
ffffffff8020e5ac:	48 8b bd 58 ff ff ff 	mov    -0xa8(%rbp),%rdi
ffffffff8020e5b3:	48 f7 f7             	div    %rdi
ffffffff8020e5b6:	48 39 c1             	cmp    %rax,%rcx
ffffffff8020e5b9:	76 1d                	jbe    ffffffff8020e5d8 <GetNextThread+0x398>
ffffffff8020e5bb:	b8 e8 03 00 00       	mov    $0x3e8,%eax
ffffffff8020e5c0:	89 c1                	mov    %eax,%ecx
ffffffff8020e5c2:	48 8b 04 25 b8 ce e8 	mov    0xffffffff80e8ceb8,%rax
ffffffff8020e5c9:	80 
ffffffff8020e5ca:	31 d2                	xor    %edx,%edx
ffffffff8020e5cc:	48 f7 f1             	div    %rcx
ffffffff8020e5cf:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
ffffffff8020e5d6:	eb 0f                	jmp    ffffffff8020e5e7 <GetNextThread+0x3a7>
ffffffff8020e5d8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8020e5dc:	48 8b 40 58          	mov    0x58(%rax),%rax
ffffffff8020e5e0:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
ffffffff8020e5e7:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
ffffffff8020e5ee:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
ffffffff8020e5f2:	48 8b 51 58          	mov    0x58(%rcx),%rdx
ffffffff8020e5f6:	48 29 c2             	sub    %rax,%rdx
ffffffff8020e5f9:	48 89 51 58          	mov    %rdx,0x58(%rcx)
ffffffff8020e5fd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8020e601:	48 83 78 58 00       	cmpq   $0x0,0x58(%rax)
ffffffff8020e606:	75 24                	jne    ffffffff8020e62c <GetNextThread+0x3ec>
ffffffff8020e608:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8020e60c:	c7 40 20 01 00 00 00 	movl   $0x1,0x20(%rax)
ffffffff8020e613:	c6 45 ef 01          	movb   $0x1,-0x11(%rbp)
ffffffff8020e617:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8020e61b:	48 8b 78 70          	mov    0x70(%rax),%rdi
ffffffff8020e61f:	e8 0c 40 ff ff       	callq  ffffffff80202630 <UnlockSpinlock>
ffffffff8020e624:	88 85 47 ff ff ff    	mov    %al,-0xb9(%rbp)
ffffffff8020e62a:	eb 2d                	jmp    ffffffff8020e659 <GetNextThread+0x419>
ffffffff8020e62c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8020e630:	48 8b 78 70          	mov    0x70(%rax),%rdi
ffffffff8020e634:	e8 f7 3f ff ff       	callq  ffffffff80202630 <UnlockSpinlock>
ffffffff8020e639:	48 8b 3c 25 98 ce e8 	mov    0xffffffff80e8ce98,%rdi
ffffffff8020e640:	80 
ffffffff8020e641:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
ffffffff8020e645:	48 89 ce             	mov    %rcx,%rsi
ffffffff8020e648:	88 85 46 ff ff ff    	mov    %al,-0xba(%rbp)
ffffffff8020e64e:	e8 5d b5 ff ff       	callq  ffffffff80209bb0 <List_AddEntry>
ffffffff8020e653:	89 85 40 ff ff ff    	mov    %eax,-0xc0(%rbp)
ffffffff8020e659:	eb 1d                	jmp    ffffffff8020e678 <GetNextThread+0x438>
ffffffff8020e65b:	b8 01 00 00 00       	mov    $0x1,%eax
ffffffff8020e660:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
ffffffff8020e664:	be 01 00 00 00       	mov    $0x1,%esi
ffffffff8020e669:	89 85 3c ff ff ff    	mov    %eax,-0xc4(%rbp)
ffffffff8020e66f:	e8 7c ec ff ff       	callq  ffffffff8020d2f0 <set_thread_cur_executing>
ffffffff8020e674:	c6 45 ef 01          	movb   $0x1,-0x11(%rbp)
ffffffff8020e678:	e9 07 fc ff ff       	jmpq   ffffffff8020e284 <GetNextThread+0x44>
ffffffff8020e67d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8020e681:	48 81 c4 d0 00 00 00 	add    $0xd0,%rsp
ffffffff8020e688:	5d                   	pop    %rbp
ffffffff8020e689:	c3                   	retq   
ffffffff8020e68a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

ffffffff8020e690 <SetPeriodicPreemptVector>:
ffffffff8020e690:	55                   	push   %rbp
ffffffff8020e691:	48 89 e5             	mov    %rsp,%rbp
ffffffff8020e694:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff8020e698:	89 7d fc             	mov    %edi,-0x4(%rbp)
ffffffff8020e69b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff8020e69f:	8b 7d fc             	mov    -0x4(%rbp),%edi
ffffffff8020e6a2:	48 c7 c6 d0 e6 20 80 	mov    $0xffffffff8020e6d0,%rsi
ffffffff8020e6a9:	e8 32 43 ff ff       	callq  ffffffff802029e0 <RegisterInterruptHandler>
ffffffff8020e6ae:	8b 7d fc             	mov    -0x4(%rbp),%edi
ffffffff8020e6b1:	89 3c 25 b0 ce e8 80 	mov    %edi,0xffffffff80e8ceb0
ffffffff8020e6b8:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
ffffffff8020e6bc:	48 89 34 25 b8 ce e8 	mov    %rsi,0xffffffff80e8ceb8
ffffffff8020e6c3:	80 
ffffffff8020e6c4:	89 45 ec             	mov    %eax,-0x14(%rbp)
ffffffff8020e6c7:	48 83 c4 20          	add    $0x20,%rsp
ffffffff8020e6cb:	5d                   	pop    %rbp
ffffffff8020e6cc:	c3                   	retq   
ffffffff8020e6cd:	0f 1f 00             	nopl   (%rax)

ffffffff8020e6d0 <TaskSwitch>:
ffffffff8020e6d0:	55                   	push   %rbp
ffffffff8020e6d1:	48 89 e5             	mov    %rsp,%rbp
ffffffff8020e6d4:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff8020e6d8:	89 7d fc             	mov    %edi,-0x4(%rbp)
ffffffff8020e6db:	89 75 f8             	mov    %esi,-0x8(%rbp)
ffffffff8020e6de:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
ffffffff8020e6e5:	48 8b 04 25 58 ce e8 	mov    0xffffffff80e8ce58,%rax
ffffffff8020e6ec:	80 
ffffffff8020e6ed:	48 8b 38             	mov    (%rax),%rdi
ffffffff8020e6f0:	e8 eb 3f ff ff       	callq  ffffffff802026e0 <SavePreviousThread>
ffffffff8020e6f5:	48 8b 3c 25 98 ce e8 	mov    0xffffffff80e8ce98,%rdi
ffffffff8020e6fc:	80 
ffffffff8020e6fd:	e8 be b5 ff ff       	callq  ffffffff80209cc0 <List_Length>
ffffffff8020e702:	48 83 f8 00          	cmp    $0x0,%rax
ffffffff8020e706:	76 1b                	jbe    ffffffff8020e723 <TaskSwitch+0x53>
ffffffff8020e708:	48 8b 04 25 58 ce e8 	mov    0xffffffff80e8ce58,%rax
ffffffff8020e70f:	80 
ffffffff8020e710:	48 8b 38             	mov    (%rax),%rdi
ffffffff8020e713:	e8 28 fb ff ff       	callq  ffffffff8020e240 <GetNextThread>
ffffffff8020e718:	48 8b 3c 25 58 ce e8 	mov    0xffffffff80e8ce58,%rdi
ffffffff8020e71f:	80 
ffffffff8020e720:	48 89 07             	mov    %rax,(%rdi)
ffffffff8020e723:	48 8b 04 25 58 ce e8 	mov    0xffffffff80e8ce58,%rax
ffffffff8020e72a:	80 
ffffffff8020e72b:	48 8b 00             	mov    (%rax),%rax
ffffffff8020e72e:	48 8b 78 28          	mov    0x28(%rax),%rdi
ffffffff8020e732:	e8 f9 22 ff ff       	callq  ffffffff80200a30 <SetInterruptStack>
ffffffff8020e737:	48 8b 04 25 58 ce e8 	mov    0xffffffff80e8ce58,%rax
ffffffff8020e73e:	80 
ffffffff8020e73f:	48 8b 00             	mov    (%rax),%rax
ffffffff8020e742:	48 8b 78 30          	mov    0x30(%rax),%rdi
ffffffff8020e746:	e8 65 44 ff ff       	callq  ffffffff80202bb0 <SetKernelStack>
ffffffff8020e74b:	48 8b 04 25 58 ce e8 	mov    0xffffffff80e8ce58,%rax
ffffffff8020e752:	80 
ffffffff8020e753:	48 8b 38             	mov    (%rax),%rdi
ffffffff8020e756:	e8 15 e2 ff ff       	callq  ffffffff8020c970 <get_thread_ParentProcess>
ffffffff8020e75b:	48 89 c7             	mov    %rax,%rdi
ffffffff8020e75e:	e8 9d e3 ff ff       	callq  ffffffff8020cb00 <get_proc_PageTable>
ffffffff8020e763:	48 89 c7             	mov    %rax,%rdi
ffffffff8020e766:	e8 35 37 ff ff       	callq  ffffffff80201ea0 <SetActiveVirtualMemoryInstance>
ffffffff8020e76b:	8b 7d fc             	mov    -0x4(%rbp),%edi
ffffffff8020e76e:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff8020e772:	e8 09 42 ff ff       	callq  ffffffff80202980 <HandleInterruptNoReturn>
ffffffff8020e777:	48 8b 04 25 58 ce e8 	mov    0xffffffff80e8ce58,%rax
ffffffff8020e77e:	80 
ffffffff8020e77f:	48 8b 38             	mov    (%rax),%rdi
ffffffff8020e782:	e8 09 e5 ff ff       	callq  ffffffff8020cc90 <get_thread_state>
ffffffff8020e787:	83 f8 01             	cmp    $0x1,%eax
ffffffff8020e78a:	75 12                	jne    ffffffff8020e79e <TaskSwitch+0xce>
ffffffff8020e78c:	48 8b 04 25 58 ce e8 	mov    0xffffffff80e8ce58,%rax
ffffffff8020e793:	80 
ffffffff8020e794:	48 8b 38             	mov    (%rax),%rdi
ffffffff8020e797:	e8 a4 3f ff ff       	callq  ffffffff80202740 <SwitchToThread>
ffffffff8020e79c:	eb 3c                	jmp    ffffffff8020e7da <TaskSwitch+0x10a>
ffffffff8020e79e:	48 8b 04 25 58 ce e8 	mov    0xffffffff80e8ce58,%rax
ffffffff8020e7a5:	80 
ffffffff8020e7a6:	48 8b 38             	mov    (%rax),%rdi
ffffffff8020e7a9:	e8 e2 e4 ff ff       	callq  ffffffff8020cc90 <get_thread_state>
ffffffff8020e7ae:	83 f8 00             	cmp    $0x0,%eax
ffffffff8020e7b1:	75 25                	jne    ffffffff8020e7d8 <TaskSwitch+0x108>
ffffffff8020e7b3:	48 8b 04 25 58 ce e8 	mov    0xffffffff80e8ce58,%rax
ffffffff8020e7ba:	80 
ffffffff8020e7bb:	48 8b 38             	mov    (%rax),%rdi
ffffffff8020e7be:	be 01 00 00 00       	mov    $0x1,%esi
ffffffff8020e7c3:	e8 28 e5 ff ff       	callq  ffffffff8020ccf0 <set_thread_state>
ffffffff8020e7c8:	48 8b 04 25 58 ce e8 	mov    0xffffffff80e8ce58,%rax
ffffffff8020e7cf:	80 
ffffffff8020e7d0:	48 8b 38             	mov    (%rax),%rdi
ffffffff8020e7d3:	e8 d8 3e ff ff       	callq  ffffffff802026b0 <SwitchAndInitializeThread>
ffffffff8020e7d8:	eb 00                	jmp    ffffffff8020e7da <TaskSwitch+0x10a>
ffffffff8020e7da:	48 83 c4 10          	add    $0x10,%rsp
ffffffff8020e7de:	5d                   	pop    %rbp
ffffffff8020e7df:	c3                   	retq   

ffffffff8020e7e0 <SwitchThread>:
ffffffff8020e7e0:	55                   	push   %rbp
ffffffff8020e7e1:	48 89 e5             	mov    %rsp,%rbp
ffffffff8020e7e4:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff8020e7e8:	31 c0                	xor    %eax,%eax
ffffffff8020e7ea:	89 c7                	mov    %eax,%edi
ffffffff8020e7ec:	e8 4f fa ff ff       	callq  ffffffff8020e240 <GetNextThread>
ffffffff8020e7f1:	48 8b 3c 25 58 ce e8 	mov    0xffffffff80e8ce58,%rdi
ffffffff8020e7f8:	80 
ffffffff8020e7f9:	48 89 07             	mov    %rax,(%rdi)
ffffffff8020e7fc:	48 8b 04 25 58 ce e8 	mov    0xffffffff80e8ce58,%rax
ffffffff8020e803:	80 
ffffffff8020e804:	48 8b 00             	mov    (%rax),%rax
ffffffff8020e807:	48 8b 78 28          	mov    0x28(%rax),%rdi
ffffffff8020e80b:	e8 20 22 ff ff       	callq  ffffffff80200a30 <SetInterruptStack>
ffffffff8020e810:	48 8b 04 25 58 ce e8 	mov    0xffffffff80e8ce58,%rax
ffffffff8020e817:	80 
ffffffff8020e818:	48 8b 00             	mov    (%rax),%rax
ffffffff8020e81b:	48 8b 78 30          	mov    0x30(%rax),%rdi
ffffffff8020e81f:	e8 8c 43 ff ff       	callq  ffffffff80202bb0 <SetKernelStack>
ffffffff8020e824:	48 8b 04 25 58 ce e8 	mov    0xffffffff80e8ce58,%rax
ffffffff8020e82b:	80 
ffffffff8020e82c:	48 8b 38             	mov    (%rax),%rdi
ffffffff8020e82f:	e8 3c e1 ff ff       	callq  ffffffff8020c970 <get_thread_ParentProcess>
ffffffff8020e834:	48 89 c7             	mov    %rax,%rdi
ffffffff8020e837:	e8 c4 e2 ff ff       	callq  ffffffff8020cb00 <get_proc_PageTable>
ffffffff8020e83c:	48 89 c7             	mov    %rax,%rdi
ffffffff8020e83f:	e8 5c 36 ff ff       	callq  ffffffff80201ea0 <SetActiveVirtualMemoryInstance>
ffffffff8020e844:	48 8b 3c 25 58 ce e8 	mov    0xffffffff80e8ce58,%rdi
ffffffff8020e84b:	80 
ffffffff8020e84c:	48 8b 3f             	mov    (%rdi),%rdi
ffffffff8020e84f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff8020e853:	e8 38 e4 ff ff       	callq  ffffffff8020cc90 <get_thread_state>
ffffffff8020e858:	83 f8 00             	cmp    $0x0,%eax
ffffffff8020e85b:	75 25                	jne    ffffffff8020e882 <SwitchThread+0xa2>
ffffffff8020e85d:	48 8b 04 25 58 ce e8 	mov    0xffffffff80e8ce58,%rax
ffffffff8020e864:	80 
ffffffff8020e865:	48 8b 38             	mov    (%rax),%rdi
ffffffff8020e868:	be 01 00 00 00       	mov    $0x1,%esi
ffffffff8020e86d:	e8 7e e4 ff ff       	callq  ffffffff8020ccf0 <set_thread_state>
ffffffff8020e872:	48 8b 04 25 58 ce e8 	mov    0xffffffff80e8ce58,%rax
ffffffff8020e879:	80 
ffffffff8020e87a:	48 8b 38             	mov    (%rax),%rdi
ffffffff8020e87d:	e8 2e 3e ff ff       	callq  ffffffff802026b0 <SwitchAndInitializeThread>
ffffffff8020e882:	fa                   	cli    
ffffffff8020e883:	f4                   	hlt    
ffffffff8020e884:	48 83 c4 10          	add    $0x10,%rsp
ffffffff8020e888:	5d                   	pop    %rbp
ffffffff8020e889:	c3                   	retq   
ffffffff8020e88a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

ffffffff8020e890 <CoreUpdate>:
ffffffff8020e890:	55                   	push   %rbp
ffffffff8020e891:	48 89 e5             	mov    %rsp,%rbp
ffffffff8020e894:	eb 00                	jmp    ffffffff8020e896 <CoreUpdate+0x6>
ffffffff8020e896:	e8 45 ff ff ff       	callq  ffffffff8020e7e0 <SwitchThread>
ffffffff8020e89b:	eb f9                	jmp    ffffffff8020e896 <CoreUpdate+0x6>
ffffffff8020e89d:	0f 1f 00             	nopl   (%rax)

ffffffff8020e8a0 <RegisterCore>:
ffffffff8020e8a0:	55                   	push   %rbp
ffffffff8020e8a1:	48 89 e5             	mov    %rsp,%rbp
ffffffff8020e8a4:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff8020e8a8:	89 7d fc             	mov    %edi,-0x4(%rbp)
ffffffff8020e8ab:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff8020e8af:	bf 10 00 00 00       	mov    $0x10,%edi
ffffffff8020e8b4:	e8 47 cc ff ff       	callq  ffffffff8020b500 <kmalloc>
ffffffff8020e8b9:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff8020e8bd:	48 63 75 fc          	movslq -0x4(%rbp),%rsi
ffffffff8020e8c1:	48 89 30             	mov    %rsi,(%rax)
ffffffff8020e8c4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8020e8c8:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
ffffffff8020e8cc:	48 89 46 08          	mov    %rax,0x8(%rsi)
ffffffff8020e8d0:	48 8b 3c 25 a0 ce e8 	mov    0xffffffff80e8cea0,%rdi
ffffffff8020e8d7:	80 
ffffffff8020e8d8:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
ffffffff8020e8dc:	e8 cf b2 ff ff       	callq  ffffffff80209bb0 <List_AddEntry>
ffffffff8020e8e1:	48 8b 34 25 58 ce e8 	mov    0xffffffff80e8ce58,%rsi
ffffffff8020e8e8:	80 
ffffffff8020e8e9:	48 83 fe 00          	cmp    $0x0,%rsi
ffffffff8020e8ed:	89 45 e4             	mov    %eax,-0x1c(%rbp)
ffffffff8020e8f0:	75 14                	jne    ffffffff8020e906 <RegisterCore+0x66>
ffffffff8020e8f2:	b8 10 00 00 00       	mov    $0x10,%eax
ffffffff8020e8f7:	89 c7                	mov    %eax,%edi
ffffffff8020e8f9:	e8 52 3b ff ff       	callq  ffffffff80202450 <AllocateAPLSMemory>
ffffffff8020e8fe:	48 89 04 25 58 ce e8 	mov    %rax,0xffffffff80e8ce58
ffffffff8020e905:	80 
ffffffff8020e906:	48 8b 04 25 58 ce e8 	mov    0xffffffff80e8ce58,%rax
ffffffff8020e90d:	80 
ffffffff8020e90e:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
ffffffff8020e915:	8b 4d fc             	mov    -0x4(%rbp),%ecx
ffffffff8020e918:	48 8b 04 25 58 ce e8 	mov    0xffffffff80e8ce58,%rax
ffffffff8020e91f:	80 
ffffffff8020e920:	89 48 08             	mov    %ecx,0x8(%rax)
ffffffff8020e923:	48 83 c4 20          	add    $0x20,%rsp
ffffffff8020e927:	5d                   	pop    %rbp
ffffffff8020e928:	c3                   	retq   
ffffffff8020e929:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

ffffffff8020e930 <GetCoreLoad>:
ffffffff8020e930:	55                   	push   %rbp
ffffffff8020e931:	48 89 e5             	mov    %rsp,%rbp
ffffffff8020e934:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff8020e938:	89 7d f8             	mov    %edi,-0x8(%rbp)
ffffffff8020e93b:	48 8b 04 25 a0 ce e8 	mov    0xffffffff80e8cea0,%rax
ffffffff8020e942:	80 
ffffffff8020e943:	89 7d f4             	mov    %edi,-0xc(%rbp)
ffffffff8020e946:	48 89 c7             	mov    %rax,%rdi
ffffffff8020e949:	e8 72 b3 ff ff       	callq  ffffffff80209cc0 <List_Length>
ffffffff8020e94e:	89 c1                	mov    %eax,%ecx
ffffffff8020e950:	8b 55 f4             	mov    -0xc(%rbp),%edx
ffffffff8020e953:	39 ca                	cmp    %ecx,%edx
ffffffff8020e955:	7e 09                	jle    ffffffff8020e960 <GetCoreLoad+0x30>
ffffffff8020e957:	c7 45 fc ff ff ff ff 	movl   $0xffffffff,-0x4(%rbp)
ffffffff8020e95e:	eb 17                	jmp    ffffffff8020e977 <GetCoreLoad+0x47>
ffffffff8020e960:	48 8b 3c 25 a0 ce e8 	mov    0xffffffff80e8cea0,%rdi
ffffffff8020e967:	80 
ffffffff8020e968:	48 63 75 f8          	movslq -0x8(%rbp),%rsi
ffffffff8020e96c:	e8 ff b4 ff ff       	callq  ffffffff80209e70 <List_EntryAt>
ffffffff8020e971:	ff 50 08             	callq  *0x8(%rax)
ffffffff8020e974:	89 45 fc             	mov    %eax,-0x4(%rbp)
ffffffff8020e977:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff8020e97a:	48 83 c4 10          	add    $0x10,%rsp
ffffffff8020e97e:	5d                   	pop    %rbp
ffffffff8020e97f:	c3                   	retq   

ffffffff8020e980 <PWM_Initialize>:
ffffffff8020e980:	55                   	push   %rbp
ffffffff8020e981:	48 89 e5             	mov    %rsp,%rbp
ffffffff8020e984:	e8 27 3b ff ff       	callq  ffffffff802024b0 <CreateSpinlock>
ffffffff8020e989:	48 89 c7             	mov    %rax,%rdi
ffffffff8020e98c:	e8 7f b1 ff ff       	callq  ffffffff80209b10 <List_Create>
ffffffff8020e991:	48 89 04 25 c0 ce e8 	mov    %rax,0xffffffff80e8cec0
ffffffff8020e998:	80 
ffffffff8020e999:	5d                   	pop    %rbp
ffffffff8020e99a:	c3                   	retq   
ffffffff8020e99b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

ffffffff8020e9a0 <PWM_RegisterStateChangeHandler>:
ffffffff8020e9a0:	55                   	push   %rbp
ffffffff8020e9a1:	48 89 e5             	mov    %rsp,%rbp
ffffffff8020e9a4:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff8020e9a8:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
ffffffff8020e9ac:	48 8b 3c 25 c0 ce e8 	mov    0xffffffff80e8cec0,%rdi
ffffffff8020e9b3:	80 
ffffffff8020e9b4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8020e9b8:	48 89 c6             	mov    %rax,%rsi
ffffffff8020e9bb:	e8 f0 b1 ff ff       	callq  ffffffff80209bb0 <List_AddEntry>
ffffffff8020e9c0:	83 f8 00             	cmp    $0x0,%eax
ffffffff8020e9c3:	75 09                	jne    ffffffff8020e9ce <PWM_RegisterStateChangeHandler+0x2e>
ffffffff8020e9c5:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%rbp)
ffffffff8020e9cc:	eb 07                	jmp    ffffffff8020e9d5 <PWM_RegisterStateChangeHandler+0x35>
ffffffff8020e9ce:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
ffffffff8020e9d5:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff8020e9d8:	48 83 c4 10          	add    $0x10,%rsp
ffffffff8020e9dc:	5d                   	pop    %rbp
ffffffff8020e9dd:	c3                   	retq   
ffffffff8020e9de:	66 90                	xchg   %ax,%ax

ffffffff8020e9e0 <PWM_UnregisterHandler>:
ffffffff8020e9e0:	55                   	push   %rbp
ffffffff8020e9e1:	48 89 e5             	mov    %rsp,%rbp
ffffffff8020e9e4:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff8020e9e8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8020e9ec:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
ffffffff8020e9f3:	00 
ffffffff8020e9f4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8020e9f8:	48 8b 3c 25 c0 ce e8 	mov    0xffffffff80e8cec0,%rdi
ffffffff8020e9ff:	80 
ffffffff8020ea00:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff8020ea04:	e8 b7 b2 ff ff       	callq  ffffffff80209cc0 <List_Length>
ffffffff8020ea09:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
ffffffff8020ea0d:	48 39 c7             	cmp    %rax,%rdi
ffffffff8020ea10:	73 47                	jae    ffffffff8020ea59 <PWM_UnregisterHandler+0x79>
ffffffff8020ea12:	48 8b 3c 25 c0 ce e8 	mov    0xffffffff80e8cec0,%rdi
ffffffff8020ea19:	80 
ffffffff8020ea1a:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
ffffffff8020ea1e:	e8 4d b4 ff ff       	callq  ffffffff80209e70 <List_EntryAt>
ffffffff8020ea23:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
ffffffff8020ea27:	48 39 f0             	cmp    %rsi,%rax
ffffffff8020ea2a:	75 1d                	jne    ffffffff8020ea49 <PWM_UnregisterHandler+0x69>
ffffffff8020ea2c:	48 8b 3c 25 c0 ce e8 	mov    0xffffffff80e8cec0,%rdi
ffffffff8020ea33:	80 
ffffffff8020ea34:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
ffffffff8020ea38:	e8 d3 b2 ff ff       	callq  ffffffff80209d10 <List_Remove>
ffffffff8020ea3d:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
ffffffff8020ea41:	48 83 c6 ff          	add    $0xffffffffffffffff,%rsi
ffffffff8020ea45:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff8020ea49:	eb 00                	jmp    ffffffff8020ea4b <PWM_UnregisterHandler+0x6b>
ffffffff8020ea4b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8020ea4f:	48 83 c0 01          	add    $0x1,%rax
ffffffff8020ea53:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
ffffffff8020ea57:	eb 9b                	jmp    ffffffff8020e9f4 <PWM_UnregisterHandler+0x14>
ffffffff8020ea59:	48 83 c4 20          	add    $0x20,%rsp
ffffffff8020ea5d:	5d                   	pop    %rbp
ffffffff8020ea5e:	c3                   	retq   
ffffffff8020ea5f:	90                   	nop

ffffffff8020ea60 <DeviceManager_Initialize>:
ffffffff8020ea60:	55                   	push   %rbp
ffffffff8020ea61:	48 89 e5             	mov    %rsp,%rbp
ffffffff8020ea64:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff8020ea68:	e8 43 3a ff ff       	callq  ffffffff802024b0 <CreateSpinlock>
ffffffff8020ea6d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
ffffffff8020ea71:	48 89 c7             	mov    %rax,%rdi
ffffffff8020ea74:	e8 97 b0 ff ff       	callq  ffffffff80209b10 <List_Create>
ffffffff8020ea79:	48 89 04 25 c8 ce e8 	mov    %rax,0xffffffff80e8cec8
ffffffff8020ea80:	80 
ffffffff8020ea81:	48 83 c4 10          	add    $0x10,%rsp
ffffffff8020ea85:	5d                   	pop    %rbp
ffffffff8020ea86:	c3                   	retq   
ffffffff8020ea87:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
ffffffff8020ea8e:	00 00 

ffffffff8020ea90 <RegisterBus>:
ffffffff8020ea90:	55                   	push   %rbp
ffffffff8020ea91:	48 89 e5             	mov    %rsp,%rbp
ffffffff8020ea94:	48 83 ec 70          	sub    $0x70,%rsp
ffffffff8020ea98:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
ffffffff8020ea9c:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
ffffffff8020eaa3:	00 
ffffffff8020eaa4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8020eaa8:	48 8b 3c 25 c8 ce e8 	mov    0xffffffff80e8cec8,%rdi
ffffffff8020eaaf:	80 
ffffffff8020eab0:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
ffffffff8020eab4:	e8 07 b2 ff ff       	callq  ffffffff80209cc0 <List_Length>
ffffffff8020eab9:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
ffffffff8020eabd:	48 39 c7             	cmp    %rax,%rdi
ffffffff8020eac0:	73 62                	jae    ffffffff8020eb24 <RegisterBus+0x94>
ffffffff8020eac2:	48 8b 3c 25 c8 ce e8 	mov    0xffffffff80e8cec8,%rdi
ffffffff8020eac9:	80 
ffffffff8020eaca:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
ffffffff8020eace:	e8 9d b3 ff ff       	callq  ffffffff80209e70 <List_EntryAt>
ffffffff8020ead3:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
ffffffff8020ead7:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
ffffffff8020eadb:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
ffffffff8020eadf:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
ffffffff8020eae3:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
ffffffff8020eae7:	48 89 c7             	mov    %rax,%rdi
ffffffff8020eaea:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
ffffffff8020eaee:	e8 2d 9e ff ff       	callq  ffffffff80208920 <strlen>
ffffffff8020eaf3:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
ffffffff8020eaf7:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
ffffffff8020eafb:	48 89 c2             	mov    %rax,%rdx
ffffffff8020eafe:	e8 5d 9e ff ff       	callq  ffffffff80208960 <strncmp>
ffffffff8020eb03:	83 f8 00             	cmp    $0x0,%eax
ffffffff8020eb06:	75 0c                	jne    ffffffff8020eb14 <RegisterBus+0x84>
ffffffff8020eb08:	c7 45 fc 05 00 00 00 	movl   $0x5,-0x4(%rbp)
ffffffff8020eb0f:	e9 f3 00 00 00       	jmpq   ffffffff8020ec07 <RegisterBus+0x177>
ffffffff8020eb14:	eb 00                	jmp    ffffffff8020eb16 <RegisterBus+0x86>
ffffffff8020eb16:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
ffffffff8020eb1a:	48 83 c0 01          	add    $0x1,%rax
ffffffff8020eb1e:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
ffffffff8020eb22:	eb 80                	jmp    ffffffff8020eaa4 <RegisterBus+0x14>
ffffffff8020eb24:	b8 08 01 00 00       	mov    $0x108,%eax
ffffffff8020eb29:	89 c1                	mov    %eax,%ecx
ffffffff8020eb2b:	b8 08 01 00 00       	mov    $0x108,%eax
ffffffff8020eb30:	89 c7                	mov    %eax,%edi
ffffffff8020eb32:	48 89 4d b8          	mov    %rcx,-0x48(%rbp)
ffffffff8020eb36:	e8 c5 c9 ff ff       	callq  ffffffff8020b500 <kmalloc>
ffffffff8020eb3b:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
ffffffff8020eb3f:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
ffffffff8020eb44:	75 0c                	jne    ffffffff8020eb52 <RegisterBus+0xc2>
ffffffff8020eb46:	c7 45 fc 02 00 00 00 	movl   $0x2,-0x4(%rbp)
ffffffff8020eb4d:	e9 b5 00 00 00       	jmpq   ffffffff8020ec07 <RegisterBus+0x177>
ffffffff8020eb52:	48 8b 7d d8          	mov    -0x28(%rbp),%rdi
ffffffff8020eb56:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff8020eb5a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8020eb5e:	48 89 7d b0          	mov    %rdi,-0x50(%rbp)
ffffffff8020eb62:	48 89 c7             	mov    %rax,%rdi
ffffffff8020eb65:	48 89 55 a8          	mov    %rdx,-0x58(%rbp)
ffffffff8020eb69:	e8 b2 9d ff ff       	callq  ffffffff80208920 <strlen>
ffffffff8020eb6e:	b9 00 01 00 00       	mov    $0x100,%ecx
ffffffff8020eb73:	89 ca                	mov    %ecx,%edx
ffffffff8020eb75:	b9 00 01 00 00       	mov    $0x100,%ecx
ffffffff8020eb7a:	89 ce                	mov    %ecx,%esi
ffffffff8020eb7c:	48 8b 7d b0          	mov    -0x50(%rbp),%rdi
ffffffff8020eb80:	4c 8b 45 a8          	mov    -0x58(%rbp),%r8
ffffffff8020eb84:	48 89 55 a0          	mov    %rdx,-0x60(%rbp)
ffffffff8020eb88:	4c 89 c2             	mov    %r8,%rdx
ffffffff8020eb8b:	48 89 c1             	mov    %rax,%rcx
ffffffff8020eb8e:	e8 9d 9e ff ff       	callq  ffffffff80208a30 <strcpy_s>
ffffffff8020eb93:	48 89 45 98          	mov    %rax,-0x68(%rbp)
ffffffff8020eb97:	e8 14 39 ff ff       	callq  ffffffff802024b0 <CreateSpinlock>
ffffffff8020eb9c:	48 89 c7             	mov    %rax,%rdi
ffffffff8020eb9f:	e8 6c af ff ff       	callq  ffffffff80209b10 <List_Create>
ffffffff8020eba4:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
ffffffff8020eba8:	48 89 81 00 01 00 00 	mov    %rax,0x100(%rcx)
ffffffff8020ebaf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8020ebb3:	48 83 b8 00 01 00 00 	cmpq   $0x0,0x100(%rax)
ffffffff8020ebba:	00 
ffffffff8020ebbb:	75 15                	jne    ffffffff8020ebd2 <RegisterBus+0x142>
ffffffff8020ebbd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8020ebc1:	48 89 c7             	mov    %rax,%rdi
ffffffff8020ebc4:	e8 c7 cb ff ff       	callq  ffffffff8020b790 <kfree>
ffffffff8020ebc9:	c7 45 fc 02 00 00 00 	movl   $0x2,-0x4(%rbp)
ffffffff8020ebd0:	eb 35                	jmp    ffffffff8020ec07 <RegisterBus+0x177>
ffffffff8020ebd2:	48 8b 3c 25 c8 ce e8 	mov    0xffffffff80e8cec8,%rdi
ffffffff8020ebd9:	80 
ffffffff8020ebda:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8020ebde:	48 89 c6             	mov    %rax,%rsi
ffffffff8020ebe1:	e8 ca af ff ff       	callq  ffffffff80209bb0 <List_AddEntry>
ffffffff8020ebe6:	83 f8 00             	cmp    $0x0,%eax
ffffffff8020ebe9:	74 15                	je     ffffffff8020ec00 <RegisterBus+0x170>
ffffffff8020ebeb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
ffffffff8020ebef:	48 89 c7             	mov    %rax,%rdi
ffffffff8020ebf2:	e8 99 cb ff ff       	callq  ffffffff8020b790 <kfree>
ffffffff8020ebf7:	c7 45 fc 02 00 00 00 	movl   $0x2,-0x4(%rbp)
ffffffff8020ebfe:	eb 07                	jmp    ffffffff8020ec07 <RegisterBus+0x177>
ffffffff8020ec00:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
ffffffff8020ec07:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff8020ec0a:	48 83 c4 70          	add    $0x70,%rsp
ffffffff8020ec0e:	5d                   	pop    %rbp
ffffffff8020ec0f:	c3                   	retq   

ffffffff8020ec10 <RegisterDevice>:
ffffffff8020ec10:	55                   	push   %rbp
ffffffff8020ec11:	48 89 e5             	mov    %rsp,%rbp
ffffffff8020ec14:	48 81 ec b0 00 00 00 	sub    $0xb0,%rsp
ffffffff8020ec1b:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
ffffffff8020ec1f:	48 89 75 e8          	mov    %rsi,-0x18(%rbp)
ffffffff8020ec23:	89 55 e4             	mov    %edx,-0x1c(%rbp)
ffffffff8020ec26:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
ffffffff8020ec2a:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
ffffffff8020ec2f:	75 0c                	jne    ffffffff8020ec3d <RegisterDevice+0x2d>
ffffffff8020ec31:	c7 45 fc 03 00 00 00 	movl   $0x3,-0x4(%rbp)
ffffffff8020ec38:	e9 ff 01 00 00       	jmpq   ffffffff8020ee3c <RegisterDevice+0x22c>
ffffffff8020ec3d:	48 c7 45 d0 00 00 00 	movq   $0x0,-0x30(%rbp)
ffffffff8020ec44:	00 
ffffffff8020ec45:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff8020ec49:	48 8b 3c 25 c8 ce e8 	mov    0xffffffff80e8cec8,%rdi
ffffffff8020ec50:	80 
ffffffff8020ec51:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
ffffffff8020ec55:	e8 66 b0 ff ff       	callq  ffffffff80209cc0 <List_Length>
ffffffff8020ec5a:	48 8b 7d a8          	mov    -0x58(%rbp),%rdi
ffffffff8020ec5e:	48 39 c7             	cmp    %rax,%rdi
ffffffff8020ec61:	0f 83 ce 01 00 00    	jae    ffffffff8020ee35 <RegisterDevice+0x225>
ffffffff8020ec67:	48 8b 3c 25 c8 ce e8 	mov    0xffffffff80e8cec8,%rdi
ffffffff8020ec6e:	80 
ffffffff8020ec6f:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
ffffffff8020ec73:	e8 f8 b1 ff ff       	callq  ffffffff80209e70 <List_EntryAt>
ffffffff8020ec78:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
ffffffff8020ec7c:	48 8b 7d c8          	mov    -0x38(%rbp),%rdi
ffffffff8020ec80:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
ffffffff8020ec84:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8020ec88:	48 89 7d a0          	mov    %rdi,-0x60(%rbp)
ffffffff8020ec8c:	48 89 c7             	mov    %rax,%rdi
ffffffff8020ec8f:	48 89 75 98          	mov    %rsi,-0x68(%rbp)
ffffffff8020ec93:	e8 88 9c ff ff       	callq  ffffffff80208920 <strlen>
ffffffff8020ec98:	48 8b 7d a0          	mov    -0x60(%rbp),%rdi
ffffffff8020ec9c:	48 8b 75 98          	mov    -0x68(%rbp),%rsi
ffffffff8020eca0:	48 89 c2             	mov    %rax,%rdx
ffffffff8020eca3:	e8 b8 9c ff ff       	callq  ffffffff80208960 <strncmp>
ffffffff8020eca8:	83 f8 00             	cmp    $0x0,%eax
ffffffff8020ecab:	0f 85 71 01 00 00    	jne    ffffffff8020ee22 <RegisterDevice+0x212>
ffffffff8020ecb1:	48 c7 45 c0 00 00 00 	movq   $0x0,-0x40(%rbp)
ffffffff8020ecb8:	00 
ffffffff8020ecb9:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8020ecbd:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
ffffffff8020ecc1:	48 8b b9 00 01 00 00 	mov    0x100(%rcx),%rdi
ffffffff8020ecc8:	48 89 45 90          	mov    %rax,-0x70(%rbp)
ffffffff8020eccc:	e8 ef af ff ff       	callq  ffffffff80209cc0 <List_Length>
ffffffff8020ecd1:	48 8b 4d 90          	mov    -0x70(%rbp),%rcx
ffffffff8020ecd5:	48 39 c1             	cmp    %rax,%rcx
ffffffff8020ecd8:	73 68                	jae    ffffffff8020ed42 <RegisterDevice+0x132>
ffffffff8020ecda:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
ffffffff8020ecde:	48 8b b8 00 01 00 00 	mov    0x100(%rax),%rdi
ffffffff8020ece5:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
ffffffff8020ece9:	e8 82 b1 ff ff       	callq  ffffffff80209e70 <List_EntryAt>
ffffffff8020ecee:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
ffffffff8020ecf2:	48 8b 7d b8          	mov    -0x48(%rbp),%rdi
ffffffff8020ecf6:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
ffffffff8020ecfa:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
ffffffff8020ecfe:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
ffffffff8020ed02:	48 89 c7             	mov    %rax,%rdi
ffffffff8020ed05:	48 89 75 80          	mov    %rsi,-0x80(%rbp)
ffffffff8020ed09:	e8 12 9c ff ff       	callq  ffffffff80208920 <strlen>
ffffffff8020ed0e:	48 8b 7d 88          	mov    -0x78(%rbp),%rdi
ffffffff8020ed12:	48 8b 75 80          	mov    -0x80(%rbp),%rsi
ffffffff8020ed16:	48 89 c2             	mov    %rax,%rdx
ffffffff8020ed19:	e8 42 9c ff ff       	callq  ffffffff80208960 <strncmp>
ffffffff8020ed1e:	83 f8 00             	cmp    $0x0,%eax
ffffffff8020ed21:	75 0c                	jne    ffffffff8020ed2f <RegisterDevice+0x11f>
ffffffff8020ed23:	c7 45 fc 04 00 00 00 	movl   $0x4,-0x4(%rbp)
ffffffff8020ed2a:	e9 0d 01 00 00       	jmpq   ffffffff8020ee3c <RegisterDevice+0x22c>
ffffffff8020ed2f:	eb 00                	jmp    ffffffff8020ed31 <RegisterDevice+0x121>
ffffffff8020ed31:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
ffffffff8020ed35:	48 83 c0 01          	add    $0x1,%rax
ffffffff8020ed39:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
ffffffff8020ed3d:	e9 77 ff ff ff       	jmpq   ffffffff8020ecb9 <RegisterDevice+0xa9>
ffffffff8020ed42:	b8 10 01 00 00       	mov    $0x110,%eax
ffffffff8020ed47:	89 c1                	mov    %eax,%ecx
ffffffff8020ed49:	b8 10 01 00 00       	mov    $0x110,%eax
ffffffff8020ed4e:	89 c7                	mov    %eax,%edi
ffffffff8020ed50:	48 89 8d 78 ff ff ff 	mov    %rcx,-0x88(%rbp)
ffffffff8020ed57:	e8 a4 c7 ff ff       	callq  ffffffff8020b500 <kmalloc>
ffffffff8020ed5c:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
ffffffff8020ed60:	48 83 7d b0 00       	cmpq   $0x0,-0x50(%rbp)
ffffffff8020ed65:	75 0c                	jne    ffffffff8020ed73 <RegisterDevice+0x163>
ffffffff8020ed67:	c7 45 fc 02 00 00 00 	movl   $0x2,-0x4(%rbp)
ffffffff8020ed6e:	e9 c9 00 00 00       	jmpq   ffffffff8020ee3c <RegisterDevice+0x22c>
ffffffff8020ed73:	48 8b 7d b0          	mov    -0x50(%rbp),%rdi
ffffffff8020ed77:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
ffffffff8020ed7b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
ffffffff8020ed7f:	48 89 bd 70 ff ff ff 	mov    %rdi,-0x90(%rbp)
ffffffff8020ed86:	48 89 c7             	mov    %rax,%rdi
ffffffff8020ed89:	48 89 95 68 ff ff ff 	mov    %rdx,-0x98(%rbp)
ffffffff8020ed90:	e8 8b 9b ff ff       	callq  ffffffff80208920 <strlen>
ffffffff8020ed95:	b9 00 01 00 00       	mov    $0x100,%ecx
ffffffff8020ed9a:	89 ca                	mov    %ecx,%edx
ffffffff8020ed9c:	b9 00 01 00 00       	mov    $0x100,%ecx
ffffffff8020eda1:	89 ce                	mov    %ecx,%esi
ffffffff8020eda3:	48 8b bd 70 ff ff ff 	mov    -0x90(%rbp),%rdi
ffffffff8020edaa:	4c 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%r8
ffffffff8020edb1:	48 89 95 60 ff ff ff 	mov    %rdx,-0xa0(%rbp)
ffffffff8020edb8:	4c 89 c2             	mov    %r8,%rdx
ffffffff8020edbb:	48 89 c1             	mov    %rax,%rcx
ffffffff8020edbe:	e8 6d 9c ff ff       	callq  ffffffff80208a30 <strcpy_s>
ffffffff8020edc3:	44 8b 4d e4          	mov    -0x1c(%rbp),%r9d
ffffffff8020edc7:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
ffffffff8020edcb:	44 89 89 00 01 00 00 	mov    %r9d,0x100(%rcx)
ffffffff8020edd2:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
ffffffff8020edd6:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
ffffffff8020edda:	48 89 8a 08 01 00 00 	mov    %rcx,0x108(%rdx)
ffffffff8020ede1:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
ffffffff8020ede5:	48 8b b9 00 01 00 00 	mov    0x100(%rcx),%rdi
ffffffff8020edec:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
ffffffff8020edf0:	48 89 ce             	mov    %rcx,%rsi
ffffffff8020edf3:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
ffffffff8020edfa:	e8 b1 ad ff ff       	callq  ffffffff80209bb0 <List_AddEntry>
ffffffff8020edff:	83 f8 00             	cmp    $0x0,%eax
ffffffff8020ee02:	74 15                	je     ffffffff8020ee19 <RegisterDevice+0x209>
ffffffff8020ee04:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
ffffffff8020ee08:	48 89 c7             	mov    %rax,%rdi
ffffffff8020ee0b:	e8 80 c9 ff ff       	callq  ffffffff8020b790 <kfree>
ffffffff8020ee10:	c7 45 fc 02 00 00 00 	movl   $0x2,-0x4(%rbp)
ffffffff8020ee17:	eb 23                	jmp    ffffffff8020ee3c <RegisterDevice+0x22c>
ffffffff8020ee19:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
ffffffff8020ee20:	eb 1a                	jmp    ffffffff8020ee3c <RegisterDevice+0x22c>
ffffffff8020ee22:	eb 00                	jmp    ffffffff8020ee24 <RegisterDevice+0x214>
ffffffff8020ee24:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
ffffffff8020ee28:	48 83 c0 01          	add    $0x1,%rax
ffffffff8020ee2c:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
ffffffff8020ee30:	e9 10 fe ff ff       	jmpq   ffffffff8020ec45 <RegisterDevice+0x35>
ffffffff8020ee35:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%rbp)
ffffffff8020ee3c:	8b 45 fc             	mov    -0x4(%rbp),%eax
ffffffff8020ee3f:	48 81 c4 b0 00 00 00 	add    $0xb0,%rsp
ffffffff8020ee46:	5d                   	pop    %rbp
ffffffff8020ee47:	c3                   	retq   
ffffffff8020ee48:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
ffffffff8020ee4f:	00 

ffffffff8020ee50 <SyscallMan_Initialize>:
ffffffff8020ee50:	55                   	push   %rbp
ffffffff8020ee51:	48 89 e5             	mov    %rsp,%rbp
ffffffff8020ee54:	e8 57 36 ff ff       	callq  ffffffff802024b0 <CreateSpinlock>
ffffffff8020ee59:	48 89 04 25 d0 ce e8 	mov    %rax,0xffffffff80e8ced0
ffffffff8020ee60:	80 
ffffffff8020ee61:	5d                   	pop    %rbp
ffffffff8020ee62:	c3                   	retq   
ffffffff8020ee63:	0f 1f 00             	nopl   (%rax)
ffffffff8020ee66:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8020ee6d:	00 00 00 

ffffffff8020ee70 <SyscallReceived>:
ffffffff8020ee70:	55                   	push   %rbp
ffffffff8020ee71:	48 89 e5             	mov    %rsp,%rbp
ffffffff8020ee74:	48 83 ec 18          	sub    $0x18,%rsp
ffffffff8020ee78:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8020ee7c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff8020ee80:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
ffffffff8020ee84:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
ffffffff8020ee8b:	00 
ffffffff8020ee8c:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
ffffffff8020ee93:	00 
ffffffff8020ee94:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
ffffffff8020ee9b:	00 
ffffffff8020ee9c:	48 83 c4 18          	add    $0x18,%rsp
ffffffff8020eea0:	5d                   	pop    %rbp
ffffffff8020eea1:	c3                   	retq   
ffffffff8020eea2:	0f 1f 40 00          	nopl   0x0(%rax)
ffffffff8020eea6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
ffffffff8020eead:	00 00 00 

ffffffff8020eeb0 <AllocateSyscall>:
ffffffff8020eeb0:	55                   	push   %rbp
ffffffff8020eeb1:	48 89 e5             	mov    %rsp,%rbp
ffffffff8020eeb4:	48 83 ec 10          	sub    $0x10,%rsp
ffffffff8020eeb8:	48 8b 3c 25 d0 ce e8 	mov    0xffffffff80e8ced0,%rdi
ffffffff8020eebf:	80 
ffffffff8020eec0:	e8 9b 36 ff ff       	callq  ffffffff80202560 <LockSpinlock>
ffffffff8020eec5:	48 8b 3c 25 d8 ce e8 	mov    0xffffffff80e8ced8,%rdi
ffffffff8020eecc:	80 
ffffffff8020eecd:	48 89 f9             	mov    %rdi,%rcx
ffffffff8020eed0:	48 ff c1             	inc    %rcx
ffffffff8020eed3:	48 89 0c 25 d8 ce e8 	mov    %rcx,0xffffffff80e8ced8
ffffffff8020eeda:	80 
ffffffff8020eedb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8020eedf:	48 8b 3c 25 d0 ce e8 	mov    0xffffffff80e8ced0,%rdi
ffffffff8020eee6:	80 
ffffffff8020eee7:	88 45 f7             	mov    %al,-0x9(%rbp)
ffffffff8020eeea:	e8 41 37 ff ff       	callq  ffffffff80202630 <UnlockSpinlock>
ffffffff8020eeef:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
ffffffff8020eef3:	88 45 f6             	mov    %al,-0xa(%rbp)
ffffffff8020eef6:	48 89 c8             	mov    %rcx,%rax
ffffffff8020eef9:	48 83 c4 10          	add    $0x10,%rsp
ffffffff8020eefd:	5d                   	pop    %rbp
ffffffff8020eefe:	c3                   	retq   
ffffffff8020eeff:	90                   	nop

ffffffff8020ef00 <RegisterSyscall>:
ffffffff8020ef00:	55                   	push   %rbp
ffffffff8020ef01:	48 89 e5             	mov    %rsp,%rbp
ffffffff8020ef04:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff8020ef08:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8020ef0c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff8020ef10:	48 81 7d f8 00 01 00 	cmpq   $0x100,-0x8(%rbp)
ffffffff8020ef17:	00 
ffffffff8020ef18:	73 30                	jae    ffffffff8020ef4a <RegisterSyscall+0x4a>
ffffffff8020ef1a:	48 8b 3c 25 d0 ce e8 	mov    0xffffffff80e8ced0,%rdi
ffffffff8020ef21:	80 
ffffffff8020ef22:	e8 39 36 ff ff       	callq  ffffffff80202560 <LockSpinlock>
ffffffff8020ef27:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
ffffffff8020ef2b:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
ffffffff8020ef2f:	48 89 3c cd 20 44 28 	mov    %rdi,-0x7fd7bbe0(,%rcx,8)
ffffffff8020ef36:	80 
ffffffff8020ef37:	48 8b 3c 25 d0 ce e8 	mov    0xffffffff80e8ced0,%rdi
ffffffff8020ef3e:	80 
ffffffff8020ef3f:	88 45 ef             	mov    %al,-0x11(%rbp)
ffffffff8020ef42:	e8 e9 36 ff ff       	callq  ffffffff80202630 <UnlockSpinlock>
ffffffff8020ef47:	88 45 ee             	mov    %al,-0x12(%rbp)
ffffffff8020ef4a:	48 83 c4 20          	add    $0x20,%rsp
ffffffff8020ef4e:	5d                   	pop    %rbp
ffffffff8020ef4f:	c3                   	retq   

ffffffff8020ef50 <USB_AddController>:
ffffffff8020ef50:	55                   	push   %rbp
ffffffff8020ef51:	48 89 e5             	mov    %rsp,%rbp
ffffffff8020ef54:	48 83 ec 20          	sub    $0x20,%rsp
ffffffff8020ef58:	89 7d fc             	mov    %edi,-0x4(%rbp)
ffffffff8020ef5b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff8020ef5f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
ffffffff8020ef63:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
ffffffff8020ef67:	8b 7d fc             	mov    -0x4(%rbp),%edi
ffffffff8020ef6a:	85 ff                	test   %edi,%edi
ffffffff8020ef6c:	75 15                	jne    ffffffff8020ef83 <USB_AddController+0x33>
ffffffff8020ef6e:	eb 00                	jmp    ffffffff8020ef70 <USB_AddController+0x20>
ffffffff8020ef70:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
ffffffff8020ef74:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
ffffffff8020ef78:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
ffffffff8020ef7c:	e8 0f 00 00 00       	callq  ffffffff8020ef90 <UHCI_ControllerAdded>
ffffffff8020ef81:	eb 02                	jmp    ffffffff8020ef85 <USB_AddController+0x35>
ffffffff8020ef83:	eb 00                	jmp    ffffffff8020ef85 <USB_AddController+0x35>
ffffffff8020ef85:	48 83 c4 20          	add    $0x20,%rsp
ffffffff8020ef89:	5d                   	pop    %rbp
ffffffff8020ef8a:	c3                   	retq   
ffffffff8020ef8b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

ffffffff8020ef90 <UHCI_ControllerAdded>:
ffffffff8020ef90:	55                   	push   %rbp
ffffffff8020ef91:	48 89 e5             	mov    %rsp,%rbp
ffffffff8020ef94:	48 83 ec 18          	sub    $0x18,%rsp
ffffffff8020ef98:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
ffffffff8020ef9c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
ffffffff8020efa0:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
ffffffff8020efa4:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
ffffffff8020efab:	00 
ffffffff8020efac:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
ffffffff8020efb3:	00 
ffffffff8020efb4:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
ffffffff8020efbb:	00 
ffffffff8020efbc:	48 83 c4 18          	add    $0x18,%rsp
ffffffff8020efc0:	5d                   	pop    %rbp
ffffffff8020efc1:	c3                   	retq   
