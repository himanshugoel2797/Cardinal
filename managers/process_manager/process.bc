; ModuleID = 'managers/process_manager/process.c'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-none--elf"

%struct.ProcessInformation = type { i64, [256 x i8], i32, i32, i32, [22 x void (i32)*], i64, %struct.MemoryAllocationsMap*, %struct.List*, i32, i64* }
%struct.MemoryAllocationsMap = type { i32, i64, i64, i64, i32, i32, i64, i64, %struct.MemoryAllocationsMap* }
%struct.List = type opaque

@root = internal unnamed_addr global %struct.ProcessInformation* null, align 8
@.str = private unnamed_addr constant [13 x i8] c"Root Process\00", align 1
@processes = internal unnamed_addr global %struct.List* null, align 8

; Function Attrs: noredzone nounwind uwtable
define void @ProcessSys_Initialize(%struct.MemoryAllocationsMap* %allocMap) #0 {
  %1 = tail call i8* @kmalloc(i64 496) #3
  store i8* %1, i8** bitcast (%struct.ProcessInformation** @root to i8**), align 8, !tbaa !1
  %2 = bitcast i8* %1 to i64*
  store i64 0, i64* %2, align 8, !tbaa !5
  %3 = getelementptr inbounds i8, i8* %1, i64 8
  %4 = tail call i8* @strcpy(i8* %3, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0)) #3
  %5 = load %struct.ProcessInformation*, %struct.ProcessInformation** @root, align 8, !tbaa !1
  %6 = getelementptr inbounds %struct.ProcessInformation, %struct.ProcessInformation* %5, i64 0, i32 2
  store i32 3, i32* %6, align 4, !tbaa !8
  %7 = getelementptr inbounds %struct.ProcessInformation, %struct.ProcessInformation* %5, i64 0, i32 3
  store i32 1, i32* %7, align 4, !tbaa !9
  %8 = getelementptr inbounds %struct.ProcessInformation, %struct.ProcessInformation* %5, i64 0, i32 4
  store i32 0, i32* %8, align 4, !tbaa !10
  %9 = tail call i64 @GetActiveVirtualMemoryInstance() #3
  %10 = load %struct.ProcessInformation*, %struct.ProcessInformation** @root, align 8, !tbaa !1
  %11 = getelementptr inbounds %struct.ProcessInformation, %struct.ProcessInformation* %10, i64 0, i32 6
  store i64 %9, i64* %11, align 8, !tbaa !11
  %12 = getelementptr inbounds %struct.ProcessInformation, %struct.ProcessInformation* %10, i64 0, i32 7
  store %struct.MemoryAllocationsMap* %allocMap, %struct.MemoryAllocationsMap** %12, align 8, !tbaa !12
  %13 = tail call i64* @CreateSpinlock() #3
  %14 = tail call %struct.List* @List_Create(i64* %13) #3
  %15 = load %struct.ProcessInformation*, %struct.ProcessInformation** @root, align 8, !tbaa !1
  %16 = getelementptr inbounds %struct.ProcessInformation, %struct.ProcessInformation* %15, i64 0, i32 8
  store %struct.List* %14, %struct.List** %16, align 8, !tbaa !13
  %17 = tail call i64* @CreateSpinlock() #3
  %18 = load %struct.ProcessInformation*, %struct.ProcessInformation** @root, align 8, !tbaa !1
  %19 = getelementptr inbounds %struct.ProcessInformation, %struct.ProcessInformation* %18, i64 0, i32 10
  store i64* %17, i64** %19, align 8, !tbaa !14
  %20 = tail call i64* @CreateSpinlock() #3
  %21 = tail call %struct.List* @List_Create(i64* %20) #3
  store %struct.List* %21, %struct.List** @processes, align 8, !tbaa !1
  %22 = load i8*, i8** bitcast (%struct.ProcessInformation** @root to i8**), align 8, !tbaa !1
  %23 = tail call i32 @List_AddEntry(%struct.List* %21, i8* %22) #3
  ret void
}

; Function Attrs: noredzone
declare i8* @kmalloc(i64) #1

; Function Attrs: noredzone
declare i8* @strcpy(i8*, i8*) #1

; Function Attrs: noredzone
declare i64 @GetActiveVirtualMemoryInstance() #1

; Function Attrs: noredzone
declare %struct.List* @List_Create(i64*) #1

; Function Attrs: noredzone
declare i64* @CreateSpinlock() #1

; Function Attrs: noredzone
declare i32 @List_AddEntry(%struct.List*, i8*) #1

; Function Attrs: noredzone nounwind readonly uwtable
define zeroext i8 @ProcessSys_IsInitialized() #2 {
  %1 = load %struct.ProcessInformation*, %struct.ProcessInformation** @root, align 8, !tbaa !1
  %2 = icmp ne %struct.ProcessInformation* %1, null
  %3 = zext i1 %2 to i8
  ret i8 %3
}

; Function Attrs: noredzone nounwind uwtable
define i32 @ForkProcess(%struct.ProcessInformation* nocapture readonly %src, %struct.ProcessInformation** nocapture %dest) #0 {
  %1 = getelementptr inbounds %struct.ProcessInformation, %struct.ProcessInformation* %src, i64 0, i32 10
  %2 = load i64*, i64** %1, align 8, !tbaa !14
  %3 = tail call zeroext i8 @LockSpinlock(i64* %2) #3
  %4 = tail call i8* @kmalloc(i64 496) #3
  %5 = tail call i64 @new_uid() #3
  %6 = bitcast i8* %4 to i64*
  store i64 %5, i64* %6, align 8, !tbaa !5
  %7 = getelementptr inbounds %struct.ProcessInformation, %struct.ProcessInformation* %src, i64 0, i32 2
  %8 = load i32, i32* %7, align 4, !tbaa !8
  %9 = getelementptr inbounds i8, i8* %4, i64 264
  %10 = bitcast i8* %9 to i32*
  store i32 %8, i32* %10, align 4, !tbaa !8
  %11 = tail call i64* @CreateSpinlock() #3
  %12 = getelementptr inbounds i8, i8* %4, i64 488
  %13 = bitcast i8* %12 to i64**
  store i64* %11, i64** %13, align 8, !tbaa !14
  %14 = getelementptr inbounds %struct.ProcessInformation, %struct.ProcessInformation* %src, i64 0, i32 3
  %15 = load i32, i32* %14, align 4, !tbaa !9
  %16 = getelementptr inbounds i8, i8* %4, i64 268
  %17 = bitcast i8* %16 to i32*
  store i32 %15, i32* %17, align 4, !tbaa !9
  %18 = getelementptr inbounds %struct.ProcessInformation, %struct.ProcessInformation* %src, i64 0, i32 4
  %19 = load i32, i32* %18, align 4, !tbaa !10
  %20 = getelementptr inbounds i8, i8* %4, i64 272
  %21 = bitcast i8* %20 to i32*
  store i32 %19, i32* %21, align 4, !tbaa !10
  %22 = getelementptr inbounds i8, i8* %4, i64 280
  %23 = getelementptr inbounds %struct.ProcessInformation, %struct.ProcessInformation* %src, i64 0, i32 5, i64 0
  %24 = bitcast void (i32)** %23 to i64*
  %25 = load i64, i64* %24, align 8, !tbaa !1
  %26 = bitcast i8* %22 to i64*
  store i64 %25, i64* %26, align 8, !tbaa !1
  %27 = getelementptr inbounds %struct.ProcessInformation, %struct.ProcessInformation* %src, i64 0, i32 5, i64 1
  %28 = bitcast void (i32)** %27 to i64*
  %29 = load i64, i64* %28, align 8, !tbaa !1
  %30 = getelementptr inbounds i8, i8* %4, i64 288
  %31 = bitcast i8* %30 to i64*
  store i64 %29, i64* %31, align 8, !tbaa !1
  %32 = getelementptr inbounds %struct.ProcessInformation, %struct.ProcessInformation* %src, i64 0, i32 5, i64 2
  %33 = bitcast void (i32)** %32 to i64*
  %34 = load i64, i64* %33, align 8, !tbaa !1
  %35 = getelementptr inbounds i8, i8* %4, i64 296
  %36 = bitcast i8* %35 to i64*
  store i64 %34, i64* %36, align 8, !tbaa !1
  %37 = getelementptr inbounds %struct.ProcessInformation, %struct.ProcessInformation* %src, i64 0, i32 5, i64 3
  %38 = bitcast void (i32)** %37 to i64*
  %39 = load i64, i64* %38, align 8, !tbaa !1
  %40 = getelementptr inbounds i8, i8* %4, i64 304
  %41 = bitcast i8* %40 to i64*
  store i64 %39, i64* %41, align 8, !tbaa !1
  %42 = getelementptr inbounds %struct.ProcessInformation, %struct.ProcessInformation* %src, i64 0, i32 5, i64 4
  %43 = bitcast void (i32)** %42 to i64*
  %44 = load i64, i64* %43, align 8, !tbaa !1
  %45 = getelementptr inbounds i8, i8* %4, i64 312
  %46 = bitcast i8* %45 to i64*
  store i64 %44, i64* %46, align 8, !tbaa !1
  %47 = getelementptr inbounds %struct.ProcessInformation, %struct.ProcessInformation* %src, i64 0, i32 5, i64 5
  %48 = bitcast void (i32)** %47 to i64*
  %49 = load i64, i64* %48, align 8, !tbaa !1
  %50 = getelementptr inbounds i8, i8* %4, i64 320
  %51 = bitcast i8* %50 to i64*
  store i64 %49, i64* %51, align 8, !tbaa !1
  %52 = getelementptr inbounds %struct.ProcessInformation, %struct.ProcessInformation* %src, i64 0, i32 5, i64 6
  %53 = bitcast void (i32)** %52 to i64*
  %54 = load i64, i64* %53, align 8, !tbaa !1
  %55 = getelementptr inbounds i8, i8* %4, i64 328
  %56 = bitcast i8* %55 to i64*
  store i64 %54, i64* %56, align 8, !tbaa !1
  %57 = getelementptr inbounds %struct.ProcessInformation, %struct.ProcessInformation* %src, i64 0, i32 5, i64 7
  %58 = bitcast void (i32)** %57 to i64*
  %59 = load i64, i64* %58, align 8, !tbaa !1
  %60 = getelementptr inbounds i8, i8* %4, i64 336
  %61 = bitcast i8* %60 to i64*
  store i64 %59, i64* %61, align 8, !tbaa !1
  %62 = getelementptr inbounds %struct.ProcessInformation, %struct.ProcessInformation* %src, i64 0, i32 5, i64 8
  %63 = bitcast void (i32)** %62 to i64*
  %64 = load i64, i64* %63, align 8, !tbaa !1
  %65 = getelementptr inbounds i8, i8* %4, i64 344
  %66 = bitcast i8* %65 to i64*
  store i64 %64, i64* %66, align 8, !tbaa !1
  %67 = getelementptr inbounds %struct.ProcessInformation, %struct.ProcessInformation* %src, i64 0, i32 5, i64 9
  %68 = bitcast void (i32)** %67 to i64*
  %69 = load i64, i64* %68, align 8, !tbaa !1
  %70 = getelementptr inbounds i8, i8* %4, i64 352
  %71 = bitcast i8* %70 to i64*
  store i64 %69, i64* %71, align 8, !tbaa !1
  %72 = getelementptr inbounds %struct.ProcessInformation, %struct.ProcessInformation* %src, i64 0, i32 5, i64 10
  %73 = bitcast void (i32)** %72 to i64*
  %74 = load i64, i64* %73, align 8, !tbaa !1
  %75 = getelementptr inbounds i8, i8* %4, i64 360
  %76 = bitcast i8* %75 to i64*
  store i64 %74, i64* %76, align 8, !tbaa !1
  %77 = getelementptr inbounds %struct.ProcessInformation, %struct.ProcessInformation* %src, i64 0, i32 5, i64 11
  %78 = bitcast void (i32)** %77 to i64*
  %79 = load i64, i64* %78, align 8, !tbaa !1
  %80 = getelementptr inbounds i8, i8* %4, i64 368
  %81 = bitcast i8* %80 to i64*
  store i64 %79, i64* %81, align 8, !tbaa !1
  %82 = getelementptr inbounds %struct.ProcessInformation, %struct.ProcessInformation* %src, i64 0, i32 5, i64 12
  %83 = bitcast void (i32)** %82 to i64*
  %84 = load i64, i64* %83, align 8, !tbaa !1
  %85 = getelementptr inbounds i8, i8* %4, i64 376
  %86 = bitcast i8* %85 to i64*
  store i64 %84, i64* %86, align 8, !tbaa !1
  %87 = getelementptr inbounds %struct.ProcessInformation, %struct.ProcessInformation* %src, i64 0, i32 5, i64 13
  %88 = bitcast void (i32)** %87 to i64*
  %89 = load i64, i64* %88, align 8, !tbaa !1
  %90 = getelementptr inbounds i8, i8* %4, i64 384
  %91 = bitcast i8* %90 to i64*
  store i64 %89, i64* %91, align 8, !tbaa !1
  %92 = getelementptr inbounds %struct.ProcessInformation, %struct.ProcessInformation* %src, i64 0, i32 5, i64 14
  %93 = bitcast void (i32)** %92 to i64*
  %94 = load i64, i64* %93, align 8, !tbaa !1
  %95 = getelementptr inbounds i8, i8* %4, i64 392
  %96 = bitcast i8* %95 to i64*
  store i64 %94, i64* %96, align 8, !tbaa !1
  %97 = getelementptr inbounds %struct.ProcessInformation, %struct.ProcessInformation* %src, i64 0, i32 5, i64 15
  %98 = bitcast void (i32)** %97 to i64*
  %99 = load i64, i64* %98, align 8, !tbaa !1
  %100 = getelementptr inbounds i8, i8* %4, i64 400
  %101 = bitcast i8* %100 to i64*
  store i64 %99, i64* %101, align 8, !tbaa !1
  %102 = getelementptr inbounds %struct.ProcessInformation, %struct.ProcessInformation* %src, i64 0, i32 5, i64 16
  %103 = bitcast void (i32)** %102 to i64*
  %104 = load i64, i64* %103, align 8, !tbaa !1
  %105 = getelementptr inbounds i8, i8* %4, i64 408
  %106 = bitcast i8* %105 to i64*
  store i64 %104, i64* %106, align 8, !tbaa !1
  %107 = getelementptr inbounds %struct.ProcessInformation, %struct.ProcessInformation* %src, i64 0, i32 5, i64 17
  %108 = bitcast void (i32)** %107 to i64*
  %109 = load i64, i64* %108, align 8, !tbaa !1
  %110 = getelementptr inbounds i8, i8* %4, i64 416
  %111 = bitcast i8* %110 to i64*
  store i64 %109, i64* %111, align 8, !tbaa !1
  %112 = getelementptr inbounds %struct.ProcessInformation, %struct.ProcessInformation* %src, i64 0, i32 5, i64 18
  %113 = bitcast void (i32)** %112 to i64*
  %114 = load i64, i64* %113, align 8, !tbaa !1
  %115 = getelementptr inbounds i8, i8* %4, i64 424
  %116 = bitcast i8* %115 to i64*
  store i64 %114, i64* %116, align 8, !tbaa !1
  %117 = getelementptr inbounds %struct.ProcessInformation, %struct.ProcessInformation* %src, i64 0, i32 5, i64 19
  %118 = bitcast void (i32)** %117 to i64*
  %119 = load i64, i64* %118, align 8, !tbaa !1
  %120 = getelementptr inbounds i8, i8* %4, i64 432
  %121 = bitcast i8* %120 to i64*
  store i64 %119, i64* %121, align 8, !tbaa !1
  %122 = getelementptr inbounds %struct.ProcessInformation, %struct.ProcessInformation* %src, i64 0, i32 5, i64 20
  %123 = bitcast void (i32)** %122 to i64*
  %124 = load i64, i64* %123, align 8, !tbaa !1
  %125 = getelementptr inbounds i8, i8* %4, i64 440
  %126 = bitcast i8* %125 to i64*
  store i64 %124, i64* %126, align 8, !tbaa !1
  %127 = getelementptr inbounds %struct.ProcessInformation, %struct.ProcessInformation* %src, i64 0, i32 5, i64 21
  %128 = bitcast void (i32)** %127 to i64*
  %129 = load i64, i64* %128, align 8, !tbaa !1
  %130 = getelementptr inbounds i8, i8* %4, i64 448
  %131 = bitcast i8* %130 to i64*
  store i64 %129, i64* %131, align 8, !tbaa !1
  %132 = getelementptr inbounds %struct.ProcessInformation, %struct.ProcessInformation* %src, i64 0, i32 6
  %133 = load i64, i64* %132, align 8, !tbaa !11
  %134 = getelementptr inbounds %struct.ProcessInformation, %struct.ProcessInformation* %src, i64 0, i32 7
  %135 = load %struct.MemoryAllocationsMap*, %struct.MemoryAllocationsMap** %134, align 8, !tbaa !12
  %136 = getelementptr inbounds i8, i8* %4, i64 456
  %137 = bitcast i8* %136 to i64*
  %138 = getelementptr inbounds i8, i8* %4, i64 464
  %139 = bitcast i8* %138 to %struct.MemoryAllocationsMap**
  %140 = tail call i32 @ForkTable(i64 %133, %struct.MemoryAllocationsMap* %135, i64* %137, %struct.MemoryAllocationsMap** %139) #3
  %141 = tail call i64* @CreateSpinlock() #3
  %142 = tail call %struct.List* @List_Create(i64* %141) #3
  %143 = getelementptr inbounds i8, i8* %4, i64 472
  %144 = bitcast i8* %143 to %struct.List**
  store %struct.List* %142, %struct.List** %144, align 8, !tbaa !13
  %145 = load i64*, i64** %1, align 8, !tbaa !14
  %146 = tail call zeroext i8 @UnlockSpinlock(i64* %145) #3
  %147 = load %struct.List*, %struct.List** @processes, align 8, !tbaa !1
  %148 = tail call i32 @List_AddEntry(%struct.List* %147, i8* %4) #3
  %149 = bitcast %struct.ProcessInformation** %dest to i8**
  store i8* %4, i8** %149, align 8, !tbaa !1
  ret i32 0
}

; Function Attrs: noredzone
declare zeroext i8 @LockSpinlock(i64*) #1

; Function Attrs: noredzone
declare i64 @new_uid() #1

; Function Attrs: noredzone
declare i32 @ForkTable(i64, %struct.MemoryAllocationsMap*, i64*, %struct.MemoryAllocationsMap**) #1

; Function Attrs: noredzone
declare zeroext i8 @UnlockSpinlock(i64*) #1

; Function Attrs: noredzone nounwind uwtable
define i32 @GetProcessInformation(i64 %pid, %struct.ProcessInformation* %procInfo) #0 {
  %1 = load %struct.List*, %struct.List** @processes, align 8, !tbaa !1
  %2 = tail call i64 @List_Length(%struct.List* %1) #3
  %3 = icmp eq i64 %2, 0
  br i1 %3, label %.loopexit, label %.lr.ph.preheader

.lr.ph.preheader:                                 ; preds = %0
  br label %.lr.ph

; <label>:4                                       ; preds = %.lr.ph
  %5 = load %struct.List*, %struct.List** @processes, align 8, !tbaa !1
  %6 = tail call i64 @List_Length(%struct.List* %5) #3
  %7 = icmp ult i64 %19, %6
  br i1 %7, label %.lr.ph, label %.loopexit.loopexit

.lr.ph:                                           ; preds = %.lr.ph.preheader, %4
  %i.06 = phi i64 [ %19, %4 ], [ 0, %.lr.ph.preheader ]
  %8 = load %struct.List*, %struct.List** @processes, align 8, !tbaa !1
  %9 = tail call i8* @List_EntryAt(%struct.List* %8, i64 %i.06) #3
  %10 = getelementptr inbounds i8, i8* %9, i64 488
  %11 = bitcast i8* %10 to i64**
  %12 = load i64*, i64** %11, align 8, !tbaa !14
  %13 = tail call zeroext i8 @LockSpinlock(i64* %12) #3
  %14 = bitcast i8* %9 to i64*
  %15 = load i64, i64* %14, align 8, !tbaa !5
  %16 = load i64*, i64** %11, align 8, !tbaa !14
  %17 = tail call zeroext i8 @UnlockSpinlock(i64* %16) #3
  %18 = icmp eq i64 %15, %pid
  %19 = add i64 %i.06, 1
  br i1 %18, label %20, label %4

; <label>:20                                      ; preds = %.lr.ph
  %.lcssa20 = phi i64** [ %11, %.lr.ph ]
  %.lcssa = phi i8* [ %9, %.lr.ph ]
  %21 = load i64*, i64** %.lcssa20, align 8, !tbaa !14
  %22 = tail call zeroext i8 @LockSpinlock(i64* %21) #3
  %23 = bitcast %struct.ProcessInformation* %procInfo to i8*
  %24 = tail call i8* @memcpy(i8* %23, i8* %.lcssa, i64 496) #3
  %25 = load i64*, i64** %.lcssa20, align 8, !tbaa !14
  %26 = tail call zeroext i8 @UnlockSpinlock(i64* %25) #3
  br label %.loopexit

.loopexit.loopexit:                               ; preds = %4
  br label %.loopexit

.loopexit:                                        ; preds = %.loopexit.loopexit, %0, %20
  %.13 = phi i32 [ 0, %20 ], [ 2, %0 ], [ 2, %.loopexit.loopexit ]
  ret i32 %.13
}

; Function Attrs: noredzone
declare i64 @List_Length(%struct.List*) #1

; Function Attrs: noredzone
declare i8* @List_EntryAt(%struct.List*, i64) #1

; Function Attrs: noredzone
declare i8* @memcpy(i8*, i8*, i64) #1

; Function Attrs: noredzone nounwind uwtable
define i32 @GetProcessReference(i64 %pid, %struct.ProcessInformation** nocapture %procInfo) #0 {
  %1 = load %struct.List*, %struct.List** @processes, align 8, !tbaa !1
  %2 = tail call i64 @List_Length(%struct.List* %1) #3
  %3 = icmp eq i64 %2, 0
  br i1 %3, label %.loopexit, label %.lr.ph.preheader

.lr.ph.preheader:                                 ; preds = %0
  br label %.lr.ph

; <label>:4                                       ; preds = %.lr.ph
  %5 = load %struct.List*, %struct.List** @processes, align 8, !tbaa !1
  %6 = tail call i64 @List_Length(%struct.List* %5) #3
  %7 = icmp ult i64 %19, %6
  br i1 %7, label %.lr.ph, label %.loopexit.loopexit

.lr.ph:                                           ; preds = %.lr.ph.preheader, %4
  %i.05 = phi i64 [ %19, %4 ], [ 0, %.lr.ph.preheader ]
  %8 = load %struct.List*, %struct.List** @processes, align 8, !tbaa !1
  %9 = tail call i8* @List_EntryAt(%struct.List* %8, i64 %i.05) #3
  %10 = getelementptr inbounds i8, i8* %9, i64 488
  %11 = bitcast i8* %10 to i64**
  %12 = load i64*, i64** %11, align 8, !tbaa !14
  %13 = tail call zeroext i8 @LockSpinlock(i64* %12) #3
  %14 = bitcast i8* %9 to i64*
  %15 = load i64, i64* %14, align 8, !tbaa !5
  %16 = load i64*, i64** %11, align 8, !tbaa !14
  %17 = tail call zeroext i8 @UnlockSpinlock(i64* %16) #3
  %18 = icmp eq i64 %15, %pid
  %19 = add i64 %i.05, 1
  br i1 %18, label %20, label %4

; <label>:20                                      ; preds = %.lr.ph
  %.lcssa = phi i8* [ %9, %.lr.ph ]
  %21 = bitcast %struct.ProcessInformation** %procInfo to i8**
  store i8* %.lcssa, i8** %21, align 8, !tbaa !1
  br label %.loopexit

.loopexit.loopexit:                               ; preds = %4
  br label %.loopexit

.loopexit:                                        ; preds = %.loopexit.loopexit, %0, %20
  %.13 = phi i32 [ 0, %20 ], [ 2, %0 ], [ 2, %.loopexit.loopexit ]
  ret i32 %.13
}

; Function Attrs: noredzone nounwind uwtable
define i32 @SetProcessPermissions(i64 %pid, i32 %perms) #0 {
  %1 = load %struct.List*, %struct.List** @processes, align 8, !tbaa !1
  %2 = tail call i64 @List_Length(%struct.List* %1) #3
  %3 = icmp eq i64 %2, 0
  br i1 %3, label %.loopexit, label %.lr.ph.preheader

.lr.ph.preheader:                                 ; preds = %0
  br label %.lr.ph

; <label>:4                                       ; preds = %.lr.ph
  %5 = load %struct.List*, %struct.List** @processes, align 8, !tbaa !1
  %6 = tail call i64 @List_Length(%struct.List* %5) #3
  %7 = icmp ult i64 %19, %6
  br i1 %7, label %.lr.ph, label %.loopexit.loopexit

.lr.ph:                                           ; preds = %.lr.ph.preheader, %4
  %i.06 = phi i64 [ %19, %4 ], [ 0, %.lr.ph.preheader ]
  %8 = load %struct.List*, %struct.List** @processes, align 8, !tbaa !1
  %9 = tail call i8* @List_EntryAt(%struct.List* %8, i64 %i.06) #3
  %10 = getelementptr inbounds i8, i8* %9, i64 488
  %11 = bitcast i8* %10 to i64**
  %12 = load i64*, i64** %11, align 8, !tbaa !14
  %13 = tail call zeroext i8 @LockSpinlock(i64* %12) #3
  %14 = bitcast i8* %9 to i64*
  %15 = load i64, i64* %14, align 8, !tbaa !5
  %16 = load i64*, i64** %11, align 8, !tbaa !14
  %17 = tail call zeroext i8 @UnlockSpinlock(i64* %16) #3
  %18 = icmp eq i64 %15, %pid
  %19 = add i64 %i.06, 1
  br i1 %18, label %20, label %4

; <label>:20                                      ; preds = %.lr.ph
  %.lcssa20 = phi i64** [ %11, %.lr.ph ]
  %.lcssa = phi i8* [ %9, %.lr.ph ]
  %21 = load i64*, i64** %.lcssa20, align 8, !tbaa !14
  %22 = tail call zeroext i8 @LockSpinlock(i64* %21) #3
  %23 = getelementptr inbounds i8, i8* %.lcssa, i64 272
  %24 = bitcast i8* %23 to i32*
  store i32 %perms, i32* %24, align 4, !tbaa !10
  %25 = load i64*, i64** %.lcssa20, align 8, !tbaa !14
  %26 = tail call zeroext i8 @UnlockSpinlock(i64* %25) #3
  br label %.loopexit

.loopexit.loopexit:                               ; preds = %4
  br label %.loopexit

.loopexit:                                        ; preds = %.loopexit.loopexit, %0, %20
  %.13 = phi i32 [ 0, %20 ], [ 2, %0 ], [ 2, %.loopexit.loopexit ]
  ret i32 %.13
}

; Function Attrs: noredzone nounwind uwtable
define i32 @SetProcessSyscallStatus(i64 %pid, i32 %flags) #0 {
  %1 = load %struct.List*, %struct.List** @processes, align 8, !tbaa !1
  %2 = tail call i64 @List_Length(%struct.List* %1) #3
  %3 = icmp eq i64 %2, 0
  br i1 %3, label %.loopexit, label %.lr.ph.preheader

.lr.ph.preheader:                                 ; preds = %0
  br label %.lr.ph

; <label>:4                                       ; preds = %.lr.ph
  %5 = load %struct.List*, %struct.List** @processes, align 8, !tbaa !1
  %6 = tail call i64 @List_Length(%struct.List* %5) #3
  %7 = icmp ult i64 %19, %6
  br i1 %7, label %.lr.ph, label %.loopexit.loopexit

.lr.ph:                                           ; preds = %.lr.ph.preheader, %4
  %i.06 = phi i64 [ %19, %4 ], [ 0, %.lr.ph.preheader ]
  %8 = load %struct.List*, %struct.List** @processes, align 8, !tbaa !1
  %9 = tail call i8* @List_EntryAt(%struct.List* %8, i64 %i.06) #3
  %10 = getelementptr inbounds i8, i8* %9, i64 488
  %11 = bitcast i8* %10 to i64**
  %12 = load i64*, i64** %11, align 8, !tbaa !14
  %13 = tail call zeroext i8 @LockSpinlock(i64* %12) #3
  %14 = bitcast i8* %9 to i64*
  %15 = load i64, i64* %14, align 8, !tbaa !5
  %16 = load i64*, i64** %11, align 8, !tbaa !14
  %17 = tail call zeroext i8 @UnlockSpinlock(i64* %16) #3
  %18 = icmp eq i64 %15, %pid
  %19 = add i64 %i.06, 1
  br i1 %18, label %20, label %4

; <label>:20                                      ; preds = %.lr.ph
  %.lcssa20 = phi i64** [ %11, %.lr.ph ]
  %.lcssa = phi i8* [ %9, %.lr.ph ]
  %21 = load i64*, i64** %.lcssa20, align 8, !tbaa !14
  %22 = tail call zeroext i8 @LockSpinlock(i64* %21) #3
  %23 = getelementptr inbounds i8, i8* %.lcssa, i64 480
  %24 = bitcast i8* %23 to i32*
  store i32 %flags, i32* %24, align 4, !tbaa !15
  %25 = load i64*, i64** %.lcssa20, align 8, !tbaa !14
  %26 = tail call zeroext i8 @UnlockSpinlock(i64* %25) #3
  br label %.loopexit

.loopexit.loopexit:                               ; preds = %4
  br label %.loopexit

.loopexit:                                        ; preds = %.loopexit.loopexit, %0, %20
  %.13 = phi i32 [ 0, %20 ], [ 2, %0 ], [ 2, %.loopexit.loopexit ]
  ret i32 %.13
}

; Function Attrs: noredzone nounwind uwtable
define i32 @KillProcess(i64 %pid) #0 {
  %1 = load %struct.List*, %struct.List** @processes, align 8, !tbaa !1
  %2 = tail call i64 @List_Length(%struct.List* %1) #3
  %3 = icmp eq i64 %2, 0
  br i1 %3, label %.thread, label %.lr.ph19.preheader

.lr.ph19.preheader:                               ; preds = %0
  br label %.lr.ph19

.lr.ph19:                                         ; preds = %.lr.ph19.preheader, %70
  %i.017 = phi i64 [ %71, %70 ], [ 0, %.lr.ph19.preheader ]
  %4 = load %struct.List*, %struct.List** @processes, align 8, !tbaa !1
  %5 = tail call i8* @List_EntryAt(%struct.List* %4, i64 %i.017) #3
  %6 = getelementptr inbounds i8, i8* %5, i64 488
  %7 = bitcast i8* %6 to i64**
  %8 = load i64*, i64** %7, align 8, !tbaa !14
  %9 = tail call zeroext i8 @LockSpinlock(i64* %8) #3
  %10 = bitcast i8* %5 to i64*
  %11 = load i64, i64* %10, align 8, !tbaa !5
  %12 = load i64*, i64** %7, align 8, !tbaa !14
  %13 = tail call zeroext i8 @UnlockSpinlock(i64* %12) #3
  %14 = icmp eq i64 %11, %pid
  br i1 %14, label %15, label %70

; <label>:15                                      ; preds = %.lr.ph19
  %.lcssa38 = phi i64** [ %7, %.lr.ph19 ]
  %.lcssa = phi i8* [ %5, %.lr.ph19 ]
  %i.017.lcssa = phi i64 [ %i.017, %.lr.ph19 ]
  %16 = load i64*, i64** %.lcssa38, align 8, !tbaa !14
  %17 = tail call zeroext i8 @LockSpinlock(i64* %16) #3
  %18 = getelementptr inbounds i8, i8* %.lcssa, i64 472
  %19 = bitcast i8* %18 to %struct.List**
  %20 = load %struct.List*, %struct.List** %19, align 8, !tbaa !13
  %21 = tail call i64 @List_Length(%struct.List* %20) #3
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %38, label %23

; <label>:23                                      ; preds = %15
  %24 = getelementptr inbounds i8, i8* %.lcssa, i64 264
  %25 = bitcast i8* %24 to i32*
  store i32 2, i32* %25, align 4, !tbaa !8
  %26 = load %struct.List*, %struct.List** %19, align 8, !tbaa !13
  %27 = tail call i64 @List_Length(%struct.List* %26) #3
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %._crit_edge.16, label %.lr.ph15.preheader

.lr.ph15.preheader:                               ; preds = %23
  br label %.lr.ph15

._crit_edge.16.loopexit:                          ; preds = %.lr.ph15
  br label %._crit_edge.16

._crit_edge.16:                                   ; preds = %._crit_edge.16.loopexit, %23
  %29 = load i64*, i64** %.lcssa38, align 8, !tbaa !14
  %30 = tail call zeroext i8 @UnlockSpinlock(i64* %29) #3
  br label %.thread

.lr.ph15:                                         ; preds = %.lr.ph15.preheader, %.lr.ph15
  %j.013 = phi i64 [ %34, %.lr.ph15 ], [ 0, %.lr.ph15.preheader ]
  %31 = load %struct.List*, %struct.List** %19, align 8, !tbaa !13
  %32 = tail call i8* @List_EntryAt(%struct.List* %31, i64 %j.013) #3
  %33 = ptrtoint i8* %32 to i64
  tail call void @SetThreadState(i64 %33, i32 4) #3
  %34 = add i64 %j.013, 1
  %35 = load %struct.List*, %struct.List** %19, align 8, !tbaa !13
  %36 = tail call i64 @List_Length(%struct.List* %35) #3
  %37 = icmp ult i64 %34, %36
  br i1 %37, label %.lr.ph15, label %._crit_edge.16.loopexit

; <label>:38                                      ; preds = %15
  %39 = load i64*, i64** %.lcssa38, align 8, !tbaa !14
  %40 = tail call zeroext i8 @LockSpinlock(i64* %39) #3
  %41 = load %struct.List*, %struct.List** @processes, align 8, !tbaa !1
  tail call void @List_Remove(%struct.List* %41, i64 %i.017.lcssa) #3
  %42 = getelementptr inbounds i8, i8* %.lcssa, i64 464
  %43 = bitcast i8* %42 to %struct.MemoryAllocationsMap**
  %44 = load %struct.MemoryAllocationsMap*, %struct.MemoryAllocationsMap** %43, align 8, !tbaa !12
  %45 = icmp eq %struct.MemoryAllocationsMap* %44, null
  br i1 %45, label %._crit_edge, label %.lr.ph.preheader

.lr.ph.preheader:                                 ; preds = %38
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %58
  %c.012 = phi %struct.MemoryAllocationsMap* [ %60, %58 ], [ %44, %.lr.ph.preheader ]
  %46 = getelementptr inbounds %struct.MemoryAllocationsMap, %struct.MemoryAllocationsMap* %c.012, i64 0, i32 5
  %47 = load i32, i32* %46, align 4, !tbaa !16
  %48 = and i32 %47, 4
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %58

; <label>:50                                      ; preds = %.lr.ph
  switch i32 %47, label %51 [
    i32 36, label %58
    i32 32, label %58
    i32 20, label %58
    i32 16, label %58
    i32 12, label %58
    i32 8, label %58
  ]

; <label>:51                                      ; preds = %50
  %52 = getelementptr inbounds %struct.MemoryAllocationsMap, %struct.MemoryAllocationsMap* %c.012, i64 0, i32 2
  %53 = load i64, i64* %52, align 8, !tbaa !18
  %54 = getelementptr inbounds %struct.MemoryAllocationsMap, %struct.MemoryAllocationsMap* %c.012, i64 0, i32 3
  %55 = load i64, i64* %54, align 8, !tbaa !19
  %56 = lshr i64 %55, 12
  %57 = trunc i64 %56 to i32
  tail call void @FreePhysicalPageCont(i64 %53, i32 %57) #3
  br label %58

; <label>:58                                      ; preds = %50, %50, %50, %50, %50, %50, %51, %.lr.ph
  %59 = getelementptr inbounds %struct.MemoryAllocationsMap, %struct.MemoryAllocationsMap* %c.012, i64 0, i32 8
  %60 = load %struct.MemoryAllocationsMap*, %struct.MemoryAllocationsMap** %59, align 8, !tbaa !20
  %61 = bitcast %struct.MemoryAllocationsMap* %c.012 to i8*
  tail call void @kfree(i8* %61) #3
  %62 = icmp eq %struct.MemoryAllocationsMap* %60, null
  br i1 %62, label %._crit_edge.loopexit, label %.lr.ph

._crit_edge.loopexit:                             ; preds = %58
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %38
  %63 = getelementptr inbounds i8, i8* %.lcssa, i64 456
  %64 = bitcast i8* %63 to i64*
  %65 = load i64, i64* %64, align 8, !tbaa !11
  tail call void @FreeVirtualMemoryInstance(i64 %65) #3
  %66 = load %struct.ProcessInformation*, %struct.ProcessInformation** @root, align 8, !tbaa !1
  %67 = getelementptr inbounds %struct.ProcessInformation, %struct.ProcessInformation* %66, i64 0, i32 8
  %68 = load %struct.List*, %struct.List** %67, align 8, !tbaa !13
  tail call void @List_Free(%struct.List* %68) #3
  %69 = load i64*, i64** %.lcssa38, align 8, !tbaa !14
  tail call void @FreeSpinlock(i64* %69) #3
  tail call void @kfree(i8* %.lcssa) #3
  br label %.thread

; <label>:70                                      ; preds = %.lr.ph19
  %71 = add i64 %i.017, 1
  %72 = load %struct.List*, %struct.List** @processes, align 8, !tbaa !1
  %73 = tail call i64 @List_Length(%struct.List* %72) #3
  %74 = icmp ult i64 %71, %73
  br i1 %74, label %.lr.ph19, label %.thread.loopexit

.thread.loopexit:                                 ; preds = %70
  br label %.thread

.thread:                                          ; preds = %.thread.loopexit, %0, %._crit_edge.16, %._crit_edge
  %.16 = phi i32 [ 0, %._crit_edge ], [ 0, %._crit_edge.16 ], [ 2, %0 ], [ 2, %.thread.loopexit ]
  ret i32 %.16
}

; Function Attrs: noredzone
declare void @SetThreadState(i64, i32) #1

; Function Attrs: noredzone
declare void @List_Remove(%struct.List*, i64) #1

; Function Attrs: noredzone
declare void @FreePhysicalPageCont(i64, i32) #1

; Function Attrs: noredzone
declare void @kfree(i8*) #1

; Function Attrs: noredzone
declare void @FreeVirtualMemoryInstance(i64) #1

; Function Attrs: noredzone
declare void @List_Free(%struct.List*) #1

; Function Attrs: noredzone
declare void @FreeSpinlock(i64*) #1

; Function Attrs: noredzone nounwind uwtable
define i32 @SleepProcess(i64 %pid) #0 {
  %1 = load %struct.List*, %struct.List** @processes, align 8, !tbaa !1
  %2 = tail call i64 @List_Length(%struct.List* %1) #3
  %3 = icmp eq i64 %2, 0
  br i1 %3, label %.loopexit, label %.lr.ph.preheader

.lr.ph.preheader:                                 ; preds = %0
  br label %.lr.ph

; <label>:4                                       ; preds = %.lr.ph
  %5 = load %struct.List*, %struct.List** @processes, align 8, !tbaa !1
  %6 = tail call i64 @List_Length(%struct.List* %5) #3
  %7 = icmp ult i64 %19, %6
  br i1 %7, label %.lr.ph, label %.loopexit.loopexit

.lr.ph:                                           ; preds = %.lr.ph.preheader, %4
  %i.06 = phi i64 [ %19, %4 ], [ 0, %.lr.ph.preheader ]
  %8 = load %struct.List*, %struct.List** @processes, align 8, !tbaa !1
  %9 = tail call i8* @List_EntryAt(%struct.List* %8, i64 %i.06) #3
  %10 = getelementptr inbounds i8, i8* %9, i64 488
  %11 = bitcast i8* %10 to i64**
  %12 = load i64*, i64** %11, align 8, !tbaa !14
  %13 = tail call zeroext i8 @LockSpinlock(i64* %12) #3
  %14 = bitcast i8* %9 to i64*
  %15 = load i64, i64* %14, align 8, !tbaa !5
  %16 = load i64*, i64** %11, align 8, !tbaa !14
  %17 = tail call zeroext i8 @UnlockSpinlock(i64* %16) #3
  %18 = icmp eq i64 %15, %pid
  %19 = add i64 %i.06, 1
  br i1 %18, label %20, label %4

; <label>:20                                      ; preds = %.lr.ph
  %.lcssa20 = phi i64** [ %11, %.lr.ph ]
  %.lcssa = phi i8* [ %9, %.lr.ph ]
  %21 = load i64*, i64** %.lcssa20, align 8, !tbaa !14
  %22 = tail call zeroext i8 @LockSpinlock(i64* %21) #3
  %23 = getelementptr inbounds i8, i8* %.lcssa, i64 264
  %24 = bitcast i8* %23 to i32*
  store i32 1, i32* %24, align 4, !tbaa !8
  %25 = load i64*, i64** %.lcssa20, align 8, !tbaa !14
  %26 = tail call zeroext i8 @UnlockSpinlock(i64* %25) #3
  br label %.loopexit

.loopexit.loopexit:                               ; preds = %4
  br label %.loopexit

.loopexit:                                        ; preds = %.loopexit.loopexit, %0, %20
  %.13 = phi i32 [ 0, %20 ], [ 2, %0 ], [ 2, %.loopexit.loopexit ]
  ret i32 %.13
}

; Function Attrs: noredzone nounwind uwtable
define i32 @RegisterSignalHandler(i64 %pid, i32 %signals, void (i32)* %sigHandler) #0 {
  %1 = load %struct.List*, %struct.List** @processes, align 8, !tbaa !1
  %2 = tail call i64 @List_Length(%struct.List* %1) #3
  %3 = icmp eq i64 %2, 0
  br i1 %3, label %.thread6, label %.lr.ph.preheader

.lr.ph.preheader:                                 ; preds = %0
  br label %.lr.ph

; <label>:4                                       ; preds = %.lr.ph
  %5 = load %struct.List*, %struct.List** @processes, align 8, !tbaa !1
  %6 = tail call i64 @List_Length(%struct.List* %5) #3
  %7 = icmp ult i64 %19, %6
  br i1 %7, label %.lr.ph, label %.thread6.loopexit23

.lr.ph:                                           ; preds = %.lr.ph.preheader, %4
  %i.011 = phi i64 [ %19, %4 ], [ 0, %.lr.ph.preheader ]
  %8 = load %struct.List*, %struct.List** @processes, align 8, !tbaa !1
  %9 = tail call i8* @List_EntryAt(%struct.List* %8, i64 %i.011) #3
  %10 = getelementptr inbounds i8, i8* %9, i64 488
  %11 = bitcast i8* %10 to i64**
  %12 = load i64*, i64** %11, align 8, !tbaa !14
  %13 = tail call zeroext i8 @LockSpinlock(i64* %12) #3
  %14 = bitcast i8* %9 to i64*
  %15 = load i64, i64* %14, align 8, !tbaa !5
  %16 = load i64*, i64** %11, align 8, !tbaa !14
  %17 = tail call zeroext i8 @UnlockSpinlock(i64* %16) #3
  %18 = icmp eq i64 %15, %pid
  %19 = add i64 %i.011, 1
  br i1 %18, label %.preheader, label %4

.preheader:                                       ; preds = %.lr.ph
  %.lcssa28 = phi i64** [ %11, %.lr.ph ]
  %.lcssa = phi i8* [ %9, %.lr.ph ]
  %20 = getelementptr inbounds i8, i8* %.lcssa, i64 280
  %21 = bitcast i8* %20 to [22 x void (i32)*]*
  br label %22

; <label>:22                                      ; preds = %33, %.preheader
  %indvars.iv = phi i64 [ 0, %.preheader ], [ %indvars.iv.next, %33 ]
  %23 = trunc i64 %indvars.iv to i32
  %24 = shl i32 1, %23
  %25 = and i32 %24, %signals
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %33, label %27

; <label>:27                                      ; preds = %22
  %28 = load i64*, i64** %.lcssa28, align 8, !tbaa !14
  %29 = tail call zeroext i8 @LockSpinlock(i64* %28) #3
  %30 = getelementptr inbounds [22 x void (i32)*], [22 x void (i32)*]* %21, i64 0, i64 %indvars.iv
  store void (i32)* %sigHandler, void (i32)** %30, align 8, !tbaa !1
  %31 = load i64*, i64** %.lcssa28, align 8, !tbaa !14
  %32 = tail call zeroext i8 @UnlockSpinlock(i64* %31) #3
  br label %33

; <label>:33                                      ; preds = %22, %27
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp eq i64 %indvars.iv.next, 22
  br i1 %exitcond, label %.thread6.loopexit, label %22

.thread6.loopexit:                                ; preds = %33
  br label %.thread6

.thread6.loopexit23:                              ; preds = %4
  br label %.thread6

.thread6:                                         ; preds = %.thread6.loopexit23, %.thread6.loopexit, %0
  %.14 = phi i32 [ 2, %0 ], [ 0, %.thread6.loopexit ], [ 2, %.thread6.loopexit23 ]
  ret i32 %.14
}

attributes #0 = { noredzone nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512pf,-avx512vl,-f16c,-fma,-fma4,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { noredzone "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512pf,-avx512vl,-f16c,-fma,-fma4,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noredzone nounwind readonly uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512pf,-avx512vl,-f16c,-fma,-fma4,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin noredzone nounwind }

!llvm.ident = !{!0}

!0 = !{!"clang version 3.7.0 (tags/RELEASE_370/final)"}
!1 = !{!2, !2, i64 0}
!2 = !{!"any pointer", !3, i64 0}
!3 = !{!"omnipotent char", !4, i64 0}
!4 = !{!"Simple C/C++ TBAA"}
!5 = !{!6, !7, i64 0}
!6 = !{!"ProcessInformation", !7, i64 0, !3, i64 8, !3, i64 264, !3, i64 268, !3, i64 272, !3, i64 280, !7, i64 456, !2, i64 464, !2, i64 472, !3, i64 480, !2, i64 488}
!7 = !{!"long", !3, i64 0}
!8 = !{!6, !3, i64 264}
!9 = !{!6, !3, i64 268}
!10 = !{!6, !3, i64 272}
!11 = !{!6, !7, i64 456}
!12 = !{!6, !2, i64 464}
!13 = !{!6, !2, i64 472}
!14 = !{!6, !2, i64 488}
!15 = !{!6, !3, i64 480}
!16 = !{!17, !3, i64 36}
!17 = !{!"MemoryAllocationsMap", !3, i64 0, !7, i64 8, !7, i64 16, !7, i64 24, !3, i64 32, !3, i64 36, !7, i64 40, !7, i64 48, !2, i64 56}
!18 = !{!17, !7, i64 16}
!19 = !{!17, !7, i64 24}
!20 = !{!17, !2, i64 56}
