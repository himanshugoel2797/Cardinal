; ModuleID = 'managers/device_manager/device_manager.c'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-none--elf"

%struct.List = type opaque

@buses = internal unnamed_addr global %struct.List* null, align 8

; Function Attrs: noredzone nounwind uwtable
define void @DeviceManager_Initialize() #0 {
  %1 = tail call i64* @CreateSpinlock() #2
  %2 = tail call %struct.List* @List_Create(i64* %1) #2
  store %struct.List* %2, %struct.List** @buses, align 8, !tbaa !1
  ret void
}

; Function Attrs: noredzone
declare i64* @CreateSpinlock() #1

; Function Attrs: noredzone
declare %struct.List* @List_Create(i64*) #1

; Function Attrs: noredzone nounwind uwtable
define i32 @RegisterBus(i8* %name) #0 {
  %1 = load %struct.List*, %struct.List** @buses, align 8, !tbaa !1
  %2 = tail call i64 @List_Length(%struct.List* %1) #2
  %3 = icmp eq i64 %2, 0
  br i1 %3, label %._crit_edge, label %.lr.ph.preheader

.lr.ph.preheader:                                 ; preds = %0
  br label %.lr.ph

; <label>:4                                       ; preds = %.lr.ph
  %5 = load %struct.List*, %struct.List** @buses, align 8, !tbaa !1
  %6 = tail call i64 @List_Length(%struct.List* %5) #2
  %7 = icmp ult i64 %13, %6
  br i1 %7, label %.lr.ph, label %._crit_edge.loopexit

.lr.ph:                                           ; preds = %.lr.ph.preheader, %4
  %i.07 = phi i64 [ %13, %4 ], [ 0, %.lr.ph.preheader ]
  %8 = load %struct.List*, %struct.List** @buses, align 8, !tbaa !1
  %9 = tail call i8* @List_EntryAt(%struct.List* %8, i64 %i.07) #2
  %10 = tail call i64 @strlen(i8* %9) #2
  %11 = tail call i32 @strncmp(i8* %9, i8* %name, i64 %10) #2
  %12 = icmp eq i32 %11, 0
  %13 = add i64 %i.07, 1
  br i1 %12, label %.thread5.loopexit, label %4

._crit_edge.loopexit:                             ; preds = %4
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %0
  %14 = tail call i8* @kmalloc(i64 264) #2
  %15 = icmp eq i8* %14, null
  br i1 %15, label %.thread5, label %16

; <label>:16                                      ; preds = %._crit_edge
  %17 = tail call i64 @strlen(i8* %name) #2
  %18 = tail call i8* @strcpy_s(i8* %14, i64 256, i8* %name, i64 %17) #2
  %19 = tail call i64* @CreateSpinlock() #2
  %20 = tail call %struct.List* @List_Create(i64* %19) #2
  %21 = getelementptr inbounds i8, i8* %14, i64 256
  %22 = bitcast i8* %21 to %struct.List**
  store %struct.List* %20, %struct.List** %22, align 8, !tbaa !5
  %23 = icmp eq %struct.List* %20, null
  br i1 %23, label %24, label %25

; <label>:24                                      ; preds = %16
  tail call void @kfree(i8* %14) #2
  br label %.thread5

; <label>:25                                      ; preds = %16
  %26 = load %struct.List*, %struct.List** @buses, align 8, !tbaa !1
  %27 = tail call i32 @List_AddEntry(%struct.List* %26, i8* %14) #2
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %.thread5, label %29

; <label>:29                                      ; preds = %25
  tail call void @kfree(i8* %14) #2
  br label %.thread5

.thread5.loopexit:                                ; preds = %.lr.ph
  br label %.thread5

.thread5:                                         ; preds = %.thread5.loopexit, %24, %29, %._crit_edge, %25
  %.4 = phi i32 [ 2, %29 ], [ 2, %24 ], [ 2, %._crit_edge ], [ 0, %25 ], [ 5, %.thread5.loopexit ]
  ret i32 %.4
}

; Function Attrs: noredzone
declare i64 @List_Length(%struct.List*) #1

; Function Attrs: noredzone
declare i8* @List_EntryAt(%struct.List*, i64) #1

; Function Attrs: noredzone
declare i32 @strncmp(i8*, i8*, i64) #1

; Function Attrs: noredzone
declare i64 @strlen(i8*) #1

; Function Attrs: noredzone
declare i8* @kmalloc(i64) #1

; Function Attrs: noredzone
declare i8* @strcpy_s(i8*, i64, i8*, i64) #1

; Function Attrs: noredzone
declare void @kfree(i8*) #1

; Function Attrs: noredzone
declare i32 @List_AddEntry(%struct.List*, i8*) #1

; Function Attrs: noredzone nounwind uwtable
define i32 @RegisterDevice(i8* %name, i8* %bus_name, i32 %dev_type, void (i32)* %handler) #0 {
  %1 = icmp eq void (i32)* %handler, null
  br i1 %1, label %.thread, label %.preheader18

.preheader18:                                     ; preds = %0
  %2 = load %struct.List*, %struct.List** @buses, align 8, !tbaa !1
  %3 = tail call i64 @List_Length(%struct.List* %2) #2
  %4 = icmp eq i64 %3, 0
  br i1 %4, label %.thread, label %.lr.ph25.preheader

.lr.ph25.preheader:                               ; preds = %.preheader18
  br label %.lr.ph25

; <label>:5                                       ; preds = %.lr.ph25
  %6 = load %struct.List*, %struct.List** @buses, align 8, !tbaa !1
  %7 = tail call i64 @List_Length(%struct.List* %6) #2
  %8 = icmp ult i64 %14, %7
  br i1 %8, label %.lr.ph25, label %.thread.loopexit32

.lr.ph25:                                         ; preds = %.lr.ph25.preheader, %5
  %i.024 = phi i64 [ %14, %5 ], [ 0, %.lr.ph25.preheader ]
  %9 = load %struct.List*, %struct.List** @buses, align 8, !tbaa !1
  %10 = tail call i8* @List_EntryAt(%struct.List* %9, i64 %i.024) #2
  %11 = tail call i64 @strlen(i8* %10) #2
  %12 = tail call i32 @strncmp(i8* %10, i8* %bus_name, i64 %11) #2
  %13 = icmp eq i32 %12, 0
  %14 = add i64 %i.024, 1
  br i1 %13, label %.preheader, label %5

.preheader:                                       ; preds = %.lr.ph25
  %.lcssa = phi i8* [ %10, %.lr.ph25 ]
  %15 = getelementptr inbounds i8, i8* %.lcssa, i64 256
  %16 = bitcast i8* %15 to %struct.List**
  %17 = load %struct.List*, %struct.List** %16, align 8, !tbaa !5
  %18 = tail call i64 @List_Length(%struct.List* %17) #2
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %._crit_edge, label %.lr.ph.preheader

.lr.ph.preheader:                                 ; preds = %.preheader
  br label %.lr.ph

; <label>:20                                      ; preds = %.lr.ph
  %21 = load %struct.List*, %struct.List** %16, align 8, !tbaa !5
  %22 = tail call i64 @List_Length(%struct.List* %21) #2
  %23 = icmp ult i64 %29, %22
  br i1 %23, label %.lr.ph, label %._crit_edge.loopexit

.lr.ph:                                           ; preds = %.lr.ph.preheader, %20
  %j.022 = phi i64 [ %29, %20 ], [ 0, %.lr.ph.preheader ]
  %24 = load %struct.List*, %struct.List** %16, align 8, !tbaa !5
  %25 = tail call i8* @List_EntryAt(%struct.List* %24, i64 %j.022) #2
  %26 = tail call i64 @strlen(i8* %25) #2
  %27 = tail call i32 @strncmp(i8* %25, i8* %name, i64 %26) #2
  %28 = icmp eq i32 %27, 0
  %29 = add i64 %j.022, 1
  br i1 %28, label %.thread.loopexit, label %20

._crit_edge.loopexit:                             ; preds = %20
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %.preheader
  %30 = tail call i8* @kmalloc(i64 272) #2
  %31 = icmp eq i8* %30, null
  br i1 %31, label %.thread, label %32

; <label>:32                                      ; preds = %._crit_edge
  %33 = tail call i64 @strlen(i8* %name) #2
  %34 = tail call i8* @strcpy_s(i8* %30, i64 256, i8* %name, i64 %33) #2
  %35 = getelementptr inbounds i8, i8* %30, i64 256
  %36 = bitcast i8* %35 to i32*
  store i32 %dev_type, i32* %36, align 4, !tbaa !7
  %37 = getelementptr inbounds i8, i8* %30, i64 264
  %38 = bitcast i8* %37 to void (i32)**
  store void (i32)* %handler, void (i32)** %38, align 8, !tbaa !9
  %39 = load %struct.List*, %struct.List** %16, align 8, !tbaa !5
  %40 = tail call i32 @List_AddEntry(%struct.List* %39, i8* %30) #2
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %.thread, label %42

; <label>:42                                      ; preds = %32
  tail call void @kfree(i8* %30) #2
  br label %.thread

.thread.loopexit:                                 ; preds = %.lr.ph
  br label %.thread

.thread.loopexit32:                               ; preds = %5
  br label %.thread

.thread:                                          ; preds = %.thread.loopexit32, %.thread.loopexit, %.preheader18, %0, %42, %._crit_edge, %32
  %.410 = phi i32 [ 2, %42 ], [ 2, %._crit_edge ], [ 0, %32 ], [ 3, %0 ], [ 1, %.preheader18 ], [ 4, %.thread.loopexit ], [ 1, %.thread.loopexit32 ]
  ret i32 %.410
}

attributes #0 = { noredzone nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512pf,-avx512vl,-f16c,-fma,-fma4,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { noredzone "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512pf,-avx512vl,-f16c,-fma,-fma4,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nobuiltin noredzone nounwind }

!llvm.ident = !{!0}

!0 = !{!"clang version 3.7.0 (tags/RELEASE_370/final)"}
!1 = !{!2, !2, i64 0}
!2 = !{!"any pointer", !3, i64 0}
!3 = !{!"omnipotent char", !4, i64 0}
!4 = !{!"Simple C/C++ TBAA"}
!5 = !{!6, !2, i64 256}
!6 = !{!"BusEntry", !3, i64 0, !2, i64 256}
!7 = !{!8, !3, i64 256}
!8 = !{!"DeviceEntry", !3, i64 0, !3, i64 256, !2, i64 264}
!9 = !{!8, !2, i64 264}
